

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Aug 31 13:07:30 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   116                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   117  0000                     
   118                           ; Version 1.41
   119                           ; Generated 25/01/2017 GMT
   120                           ; 
   121                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   122                           ; All rights reserved.
   123                           ; 
   124                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   125                           ; 
   126                           ; Redistribution and use in source and binary forms, with or without modification, are
   127                           ; permitted provided that the following conditions are met:
   128                           ; 
   129                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   130                           ;        conditions and the following disclaimer.
   131                           ; 
   132                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   133                           ;        of conditions and the following disclaimer in the documentation and/or other
   134                           ;        materials provided with the distribution.
   135                           ; 
   136                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   137                           ;        software without specific prior written permission.
   138                           ; 
   139                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   140                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   141                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   142                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   143                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   144                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   145                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   146                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   147                           ; 
   148                           ; 
   149                           ; Code-generator required, PIC18F452 Definitions
   150                           ; 
   151                           ; SFR Addresses
   152  0000                     
   153                           	psect	idataCOMRAM
   154  006407                     __pidataCOMRAM:
   155                           	opt stack 0
   156                           
   157                           ;initializer for intToFloatStr@F2540
   158  006407  20                 	db	32
   159  006408  20                 	db	32
   160  006409  20                 	db	32
   161  00640A  20                 	db	32
   162                           
   163                           ;initializer for _bt_press
   164  00640B  01                 	db	1
   165                           
   166                           	psect	idataBANK0
   167  00640C                     __pidataBANK0:
   168                           	opt stack 0
   169                           
   170                           ;initializer for _pressao
   171  00640C  0062               	dw	98
   172                           
   173                           ;initializer for _dtl_posicao
   174  00640E  3C                 	db	60
   175                           
   176                           ;initializer for _status_estacionaria
   177  00640F  01                 	db	1
   178                           
   179                           ;initializer for _status_principal
   180  006410  01                 	db	1
   181                           
   182                           ;initializer for _status_jockey
   183  006411  01                 	db	1
   184                           
   185                           ;initializer for _timerVerificarSinal
   186  006412  05                 	db	5
   187                           
   188                           ;initializer for _intensidadeSinal
   189  006413  20                 	db	32
   190                           
   191                           	psect	mediumconst
   192  007AF6                     __pmediumconst:
   193                           	opt stack 0
   194  007AF6  00                 	db	0
   195  007AF7                     criarCaracteresCGRAM@F2950:
   196                           	opt stack 0
   197  007AF7  00                 	db	0
   198  007AF8  1F                 	db	31
   199  007AF9  0E                 	db	14
   200  007AFA  04                 	db	4
   201  007AFB  04                 	db	4
   202  007AFC  04                 	db	4
   203  007AFD  04                 	db	4
   204  007AFE  04                 	db	4
   205  007AFF  00                 	db	0
   206  007B00  00                 	db	0
   207  007B01  00                 	db	0
   208  007B02  00                 	db	0
   209  007B03  00                 	db	0
   210  007B04  10                 	db	16
   211  007B05  10                 	db	16
   212  007B06  10                 	db	16
   213  007B07  00                 	db	0
   214  007B08  00                 	db	0
   215  007B09  00                 	db	0
   216  007B0A  04                 	db	4
   217  007B0B  04                 	db	4
   218  007B0C  14                 	db	20
   219  007B0D  14                 	db	20
   220  007B0E  14                 	db	20
   221  007B0F  00                 	db	0
   222  007B10  01                 	db	1
   223  007B11  01                 	db	1
   224  007B12  05                 	db	5
   225  007B13  05                 	db	5
   226  007B14  15                 	db	21
   227  007B15  15                 	db	21
   228  007B16  15                 	db	21
   229  007B17  0A                 	db	10
   230  007B18  0A                 	db	10
   231  007B19  1F                 	db	31
   232  007B1A  11                 	db	17
   233  007B1B  11                 	db	17
   234  007B1C  0E                 	db	14
   235  007B1D  04                 	db	4
   236  007B1E  04                 	db	4
   237  007B1F  00                 	db	0
   238  007B20  00                 	db	0
   239  007B21  00                 	db	0
   240  007B22  00                 	db	0
   241  007B23  00                 	db	0
   242  007B24  00                 	db	0
   243  007B25  00                 	db	0
   244  007B26  00                 	db	0
   245  007B27                     __end_ofcriarCaracteresCGRAM@F2950:
   246                           	opt stack 0
   247  007B27                     _dpowers:
   248                           	opt stack 0
   249  007B27  0001               	dw	1
   250  007B29  000A               	dw	10
   251  007B2B  0064               	dw	100
   252  007B2D  03E8               	dw	1000
   253  007B2F  2710               	dw	10000
   254  007B31                     __end_of_dpowers:
   255                           	opt stack 0
   256  0000                     _SSPBUF	set	4041
   257  0000                     _SSPSTAT	set	4039
   258  0000                     _SSPADD	set	4040
   259  0000                     _SSPCON2	set	4037
   260  0000                     _SSPCON1	set	4038
   261  0000                     _RCREG	set	4014
   262  0000                     _TMR0L	set	4054
   263  0000                     _TMR0H	set	4055
   264  0000                     _PORTDbits	set	3971
   265  0000                     _PORTCbits	set	3970
   266  0000                     _PORTBbits	set	3969
   267  0000                     _PORTEbits	set	3972
   268  0000                     _TXREG	set	4013
   269  0000                     _ADRESL	set	4035
   270  0000                     _ADRESH	set	4036
   271  0000                     _ADCON0bits	set	4034
   272  0000                     _TRISEbits	set	3990
   273  0000                     _TRISBbits	set	3987
   274  0000                     _PIE1bits	set	3997
   275  0000                     _PIR1bits	set	3998
   276  0000                     _INTCONbits	set	4082
   277  0000                     _SPBRG	set	4015
   278  0000                     _RCSTAbits	set	4011
   279  0000                     _TXSTAbits	set	4012
   280  0000                     _TRISCbits	set	3988
   281  0000                     _TRISDbits	set	3989
   282  0000                     _INTCON	set	4082
   283  0000                     _T0CON	set	4053
   284  0000                     _PORTAbits	set	3968
   285  0000                     _TRISAbits	set	3986
   286  0000                     _ADCON1	set	4033
   287  0000                     _ADCON0	set	4034
   288  0000                     _ACKEN	set	32300
   289  0000                     _ACKDT	set	32301
   290  0000                     _RCEN	set	32299
   291  0000                     _PEN	set	32298
   292  0000                     _RSEN	set	32297
   293  0000                     _SEN	set	32296
   294  0000                     _RCIF	set	31989
   295  0000                     _TMR0IF	set	32658
   296  007B31                     STR_12:
   297  007B31  54                 	db	84	;'T'
   298  007B32  45                 	db	69	;'E'
   299  007B33  43                 	db	67	;'C'
   300  007B34  48                 	db	72	;'H'
   301  007B35  4E                 	db	78	;'N'
   302  007B36  4F                 	db	79	;'O'
   303  007B37  57                 	db	87	;'W'
   304  007B38  20                 	db	32
   305  007B39  53                 	db	83	;'S'
   306  007B3A  69                 	db	105	;'i'
   307  007B3B  73                 	db	115	;'s'
   308  007B3C  74                 	db	116	;'t'
   309  007B3D  65                 	db	101	;'e'
   310  007B3E  6D                 	db	109	;'m'
   311  007B3F  61                 	db	97	;'a'
   312  007B40  73                 	db	115	;'s'
   313  007B41  20                 	db	32
   314  007B42  65                 	db	101	;'e'
   315  007B43  6D                 	db	109	;'m'
   316  007B44  62                 	db	98	;'b'
   317  007B45  61                 	db	97	;'a'
   318  007B46  72                 	db	114	;'r'
   319  007B47  63                 	db	99	;'c'
   320  007B48  61                 	db	97	;'a'
   321  007B49  64                 	db	100	;'d'
   322  007B4A  6F                 	db	111	;'o'
   323  007B4B  73                 	db	115	;'s'
   324  007B4C  0D                 	db	13
   325  007B4D  0A                 	db	10
   326  007B4E  0D                 	db	13
   327  007B4F  0A                 	db	10
   328  007B50  54                 	db	84	;'T'
   329  007B51  65                 	db	101	;'e'
   330  007B52  73                 	db	115	;'s'
   331  007B53  74                 	db	116	;'t'
   332  007B54  65                 	db	101	;'e'
   333  007B55  20                 	db	32
   334  007B56  6D                 	db	109	;'m'
   335  007B57  61                 	db	97	;'a'
   336  007B58  6E                 	db	110	;'n'
   337  007B59  75                 	db	117	;'u'
   338  007B5A  61                 	db	97	;'a'
   339  007B5B  6C                 	db	108	;'l'
   340  007B5C  20                 	db	32
   341  007B5D  64                 	db	100	;'d'
   342  007B5E  65                 	db	101	;'e'
   343  007B5F  20                 	db	32
   344  007B60  63                 	db	99	;'c'
   345  007B61  6F                 	db	111	;'o'
   346  007B62  6D                 	db	109	;'m'
   347  007B63  75                 	db	117	;'u'
   348  007B64  6E                 	db	110	;'n'
   349  007B65  69                 	db	105	;'i'
   350  007B66  63                 	db	99	;'c'
   351  007B67  61                 	db	97	;'a'
   352  007B68  63                 	db	99	;'c'
   353  007B69  61                 	db	97	;'a'
   354  007B6A  6F                 	db	111	;'o'
   355  007B6B  2E                 	db	46
   356  007B6C  0D                 	db	13
   357  007B6D  0A                 	db	10
   358  007B6E  44                 	db	68	;'D'
   359  007B6F  61                 	db	97	;'a'
   360  007B70  74                 	db	116	;'t'
   361  007B71  61                 	db	97	;'a'
   362  007B72  3A                 	db	58	;':'
   363  007B73  20                 	db	32
   364  007B74  25                 	db	37
   365  007B75  30                 	db	48	;'0'
   366  007B76  32                 	db	50	;'2'
   367  007B77  64                 	db	100	;'d'
   368  007B78  2F                 	db	47
   369  007B79  25                 	db	37
   370  007B7A  30                 	db	48	;'0'
   371  007B7B  32                 	db	50	;'2'
   372  007B7C  64                 	db	100	;'d'
   373  007B7D  2F                 	db	47
   374  007B7E  25                 	db	37
   375  007B7F  30                 	db	48	;'0'
   376  007B80  32                 	db	50	;'2'
   377  007B81  64                 	db	100	;'d'
   378  007B82  20                 	db	32
   379  007B83  25                 	db	37
   380  007B84  30                 	db	48	;'0'
   381  007B85  32                 	db	50	;'2'
   382  007B86  64                 	db	100	;'d'
   383  007B87  3A                 	db	58	;':'
   384  007B88  25                 	db	37
   385  007B89  30                 	db	48	;'0'
   386  007B8A  32                 	db	50	;'2'
   387  007B8B  64                 	db	100	;'d'
   388  007B8C  3A                 	db	58	;':'
   389  007B8D  25                 	db	37
   390  007B8E  30                 	db	48	;'0'
   391  007B8F  32                 	db	50	;'2'
   392  007B90  64                 	db	100	;'d'
   393  007B91  0D                 	db	13
   394  007B92  0A                 	db	10
   395  007B93  0D                 	db	13
   396  007B94  0A                 	db	10
   397  007B95  56                 	db	86	;'V'
   398  007B96  65                 	db	101	;'e'
   399  007B97  72                 	db	114	;'r'
   400  007B98  73                 	db	115	;'s'
   401  007B99  61                 	db	97	;'a'
   402  007B9A  6F                 	db	111	;'o'
   403  007B9B  20                 	db	32
   404  007B9C  64                 	db	100	;'d'
   405  007B9D  6F                 	db	111	;'o'
   406  007B9E  20                 	db	32
   407  007B9F  73                 	db	115	;'s'
   408  007BA0  69                 	db	105	;'i'
   409  007BA1  73                 	db	115	;'s'
   410  007BA2  74                 	db	116	;'t'
   411  007BA3  65                 	db	101	;'e'
   412  007BA4  6D                 	db	109	;'m'
   413  007BA5  61                 	db	97	;'a'
   414  007BA6  3A                 	db	58	;':'
   415  007BA7  20                 	db	32
   416  007BA8  25                 	db	37
   417  007BA9  73                 	db	115	;'s'
   418  007BAA  0D                 	db	13
   419  007BAB  00                 	db	0
   420  007BAC                     STR_23:
   421  007BAC  54                 	db	84	;'T'
   422  007BAD  45                 	db	69	;'E'
   423  007BAE  53                 	db	83	;'S'
   424  007BAF  54                 	db	84	;'T'
   425  007BB0  45                 	db	69	;'E'
   426  007BB1  20                 	db	32
   427  007BB2  44                 	db	68	;'D'
   428  007BB3  45                 	db	69	;'E'
   429  007BB4  20                 	db	32
   430  007BB5  42                 	db	66	;'B'
   431  007BB6  4F                 	db	79	;'O'
   432  007BB7  4D                 	db	77	;'M'
   433  007BB8  42                 	db	66	;'B'
   434  007BB9  41                 	db	65	;'A'
   435  007BBA  53                 	db	83	;'S'
   436  007BBB  20                 	db	32
   437  007BBC  52                 	db	82	;'R'
   438  007BBD  45                 	db	69	;'E'
   439  007BBE  41                 	db	65	;'A'
   440  007BBF  4C                 	db	76	;'L'
   441  007BC0  49                 	db	73	;'I'
   442  007BC1  5A                 	db	90	;'Z'
   443  007BC2  41                 	db	65	;'A'
   444  007BC3  44                 	db	68	;'D'
   445  007BC4  4F                 	db	79	;'O'
   446  007BC5  0D                 	db	13
   447  007BC6  0A                 	db	10
   448  007BC7  45                 	db	69	;'E'
   449  007BC8  4D                 	db	77	;'M'
   450  007BC9  20                 	db	32
   451  007BCA  25                 	db	37
   452  007BCB  30                 	db	48	;'0'
   453  007BCC  32                 	db	50	;'2'
   454  007BCD  64                 	db	100	;'d'
   455  007BCE  3A                 	db	58	;':'
   456  007BCF  25                 	db	37
   457  007BD0  30                 	db	48	;'0'
   458  007BD1  32                 	db	50	;'2'
   459  007BD2  64                 	db	100	;'d'
   460  007BD3  3A                 	db	58	;':'
   461  007BD4  25                 	db	37
   462  007BD5  30                 	db	48	;'0'
   463  007BD6  32                 	db	50	;'2'
   464  007BD7  64                 	db	100	;'d'
   465  007BD8  20                 	db	32
   466  007BD9  25                 	db	37
   467  007BDA  30                 	db	48	;'0'
   468  007BDB  32                 	db	50	;'2'
   469  007BDC  64                 	db	100	;'d'
   470  007BDD  2F                 	db	47
   471  007BDE  25                 	db	37
   472  007BDF  30                 	db	48	;'0'
   473  007BE0  32                 	db	50	;'2'
   474  007BE1  64                 	db	100	;'d'
   475  007BE2  2F                 	db	47
   476  007BE3  25                 	db	37
   477  007BE4  30                 	db	48	;'0'
   478  007BE5  32                 	db	50	;'2'
   479  007BE6  64                 	db	100	;'d'
   480  007BE7  0D                 	db	13
   481  007BE8  0A                 	db	10
   482  007BE9  4A                 	db	74	;'J'
   483  007BEA  4F                 	db	79	;'O'
   484  007BEB  43                 	db	67	;'C'
   485  007BEC  4B                 	db	75	;'K'
   486  007BED  45                 	db	69	;'E'
   487  007BEE  59                 	db	89	;'Y'
   488  007BEF  3A                 	db	58	;':'
   489  007BF0  20                 	db	32
   490  007BF1  25                 	db	37
   491  007BF2  73                 	db	115	;'s'
   492  007BF3  0D                 	db	13
   493  007BF4  0A                 	db	10
   494  007BF5  50                 	db	80	;'P'
   495  007BF6  52                 	db	82	;'R'
   496  007BF7  49                 	db	73	;'I'
   497  007BF8  4E                 	db	78	;'N'
   498  007BF9  43                 	db	67	;'C'
   499  007BFA  49                 	db	73	;'I'
   500  007BFB  50                 	db	80	;'P'
   501  007BFC  41                 	db	65	;'A'
   502  007BFD  4C                 	db	76	;'L'
   503  007BFE  3A                 	db	58	;':'
   504  007BFF  20                 	db	32
   505  007C00  25                 	db	37
   506  007C01  73                 	db	115	;'s'
   507  007C02  0D                 	db	13
   508  007C03  0A                 	db	10
   509  007C04  43                 	db	67	;'C'
   510  007C05  4F                 	db	79	;'O'
   511  007C06  4D                 	db	77	;'M'
   512  007C07  42                 	db	66	;'B'
   513  007C08  55                 	db	85	;'U'
   514  007C09  53                 	db	83	;'S'
   515  007C0A  54                 	db	84	;'T'
   516  007C0B  41                 	db	65	;'A'
   517  007C0C  4F                 	db	79	;'O'
   518  007C0D  3A                 	db	58	;':'
   519  007C0E  20                 	db	32
   520  007C0F  25                 	db	37
   521  007C10  73                 	db	115	;'s'
   522  007C11  0D                 	db	13
   523  007C12  0A                 	db	10
   524  007C13  00                 	db	0
   525  007C14                     STR_22:
   526  007C14  44                 	db	68	;'D'
   527  007C15  49                 	db	73	;'I'
   528  007C16  53                 	db	83	;'S'
   529  007C17  50                 	db	80	;'P'
   530  007C18  41                 	db	65	;'A'
   531  007C19  52                 	db	82	;'R'
   532  007C1A  4F                 	db	79	;'O'
   533  007C1B  20                 	db	32
   534  007C1C  41                 	db	65	;'A'
   535  007C1D  4C                 	db	76	;'L'
   536  007C1E  41                 	db	65	;'A'
   537  007C1F  52                 	db	82	;'R'
   538  007C20  4D                 	db	77	;'M'
   539  007C21  45                 	db	69	;'E'
   540  007C22  20                 	db	32
   541  007C23  44                 	db	68	;'D'
   542  007C24  45                 	db	69	;'E'
   543  007C25  20                 	db	32
   544  007C26  49                 	db	73	;'I'
   545  007C27  4E                 	db	78	;'N'
   546  007C28  43                 	db	67	;'C'
   547  007C29  45                 	db	69	;'E'
   548  007C2A  4E                 	db	78	;'N'
   549  007C2B  44                 	db	68	;'D'
   550  007C2C  49                 	db	73	;'I'
   551  007C2D  4F                 	db	79	;'O'
   552  007C2E  0D                 	db	13
   553  007C2F  0A                 	db	10
   554  007C30  45                 	db	69	;'E'
   555  007C31  4D                 	db	77	;'M'
   556  007C32  20                 	db	32
   557  007C33  25                 	db	37
   558  007C34  30                 	db	48	;'0'
   559  007C35  32                 	db	50	;'2'
   560  007C36  64                 	db	100	;'d'
   561  007C37  3A                 	db	58	;':'
   562  007C38  25                 	db	37
   563  007C39  30                 	db	48	;'0'
   564  007C3A  32                 	db	50	;'2'
   565  007C3B  64                 	db	100	;'d'
   566  007C3C  3A                 	db	58	;':'
   567  007C3D  25                 	db	37
   568  007C3E  30                 	db	48	;'0'
   569  007C3F  32                 	db	50	;'2'
   570  007C40  64                 	db	100	;'d'
   571  007C41  20                 	db	32
   572  007C42  25                 	db	37
   573  007C43  30                 	db	48	;'0'
   574  007C44  32                 	db	50	;'2'
   575  007C45  64                 	db	100	;'d'
   576  007C46  2F                 	db	47
   577  007C47  25                 	db	37
   578  007C48  30                 	db	48	;'0'
   579  007C49  32                 	db	50	;'2'
   580  007C4A  64                 	db	100	;'d'
   581  007C4B  2F                 	db	47
   582  007C4C  25                 	db	37
   583  007C4D  30                 	db	48	;'0'
   584  007C4E  32                 	db	50	;'2'
   585  007C4F  64                 	db	100	;'d'
   586  007C50  0D                 	db	13
   587  007C51  0A                 	db	10
   588  007C52  00                 	db	0
   589  007C53                     STR_71:
   590  007C53  44                 	db	68	;'D'
   591  007C54  61                 	db	97	;'a'
   592  007C55  74                 	db	116	;'t'
   593  007C56  61                 	db	97	;'a'
   594  007C57  3A                 	db	58	;':'
   595  007C58  20                 	db	32
   596  007C59  25                 	db	37
   597  007C5A  30                 	db	48	;'0'
   598  007C5B  32                 	db	50	;'2'
   599  007C5C  64                 	db	100	;'d'
   600  007C5D  2F                 	db	47
   601  007C5E  25                 	db	37
   602  007C5F  30                 	db	48	;'0'
   603  007C60  32                 	db	50	;'2'
   604  007C61  64                 	db	100	;'d'
   605  007C62  2F                 	db	47
   606  007C63  25                 	db	37
   607  007C64  30                 	db	48	;'0'
   608  007C65  32                 	db	50	;'2'
   609  007C66  64                 	db	100	;'d'
   610  007C67  20                 	db	32
   611  007C68  25                 	db	37
   612  007C69  30                 	db	48	;'0'
   613  007C6A  32                 	db	50	;'2'
   614  007C6B  64                 	db	100	;'d'
   615  007C6C  3A                 	db	58	;':'
   616  007C6D  25                 	db	37
   617  007C6E  30                 	db	48	;'0'
   618  007C6F  32                 	db	50	;'2'
   619  007C70  64                 	db	100	;'d'
   620  007C71  00                 	db	0
   621  007C72                     STR_54:
   622  007C72  20                 	db	32
   623  007C73  25                 	db	37
   624  007C74  30                 	db	48	;'0'
   625  007C75  32                 	db	50	;'2'
   626  007C76  64                 	db	100	;'d'
   627  007C77  3A                 	db	58	;':'
   628  007C78  25                 	db	37
   629  007C79  30                 	db	48	;'0'
   630  007C7A  32                 	db	50	;'2'
   631  007C7B  64                 	db	100	;'d'
   632  007C7C  3A                 	db	58	;':'
   633  007C7D  25                 	db	37
   634  007C7E  30                 	db	48	;'0'
   635  007C7F  32                 	db	50	;'2'
   636  007C80  64                 	db	100	;'d'
   637  007C81  20                 	db	32
   638  007C82  25                 	db	37
   639  007C83  30                 	db	48	;'0'
   640  007C84  32                 	db	50	;'2'
   641  007C85  64                 	db	100	;'d'
   642  007C86  2F                 	db	47
   643  007C87  25                 	db	37
   644  007C88  30                 	db	48	;'0'
   645  007C89  32                 	db	50	;'2'
   646  007C8A  64                 	db	100	;'d'
   647  007C8B  00                 	db	0
   648  007C8C                     STR_65:
   649  007C8C  23                 	db	35
   650  007C8D  50                 	db	80	;'P'
   651  007C8E  72                 	db	114	;'r'
   652  007C8F  6F                 	db	111	;'o'
   653  007C90  78                 	db	120	;'x'
   654  007C91  69                 	db	105	;'i'
   655  007C92  6D                 	db	109	;'m'
   656  007C93  6F                 	db	111	;'o'
   657  007C94  20                 	db	32
   658  007C95  65                 	db	101	;'e'
   659  007C96  6D                 	db	109	;'m'
   660  007C97  20                 	db	32
   661  007C98  25                 	db	37
   662  007C99  32                 	db	50	;'2'
   663  007C9A  64                 	db	100	;'d'
   664  007C9B  20                 	db	32
   665  007C9C  64                 	db	100	;'d'
   666  007C9D  69                 	db	105	;'i'
   667  007C9E  61                 	db	97	;'a'
   668  007C9F  73                 	db	115	;'s'
   669  007CA0  00                 	db	0
   670  007CA1                     STR_36:
   671  007CA1  44                 	db	68	;'D'
   672  007CA2  65                 	db	101	;'e'
   673  007CA3  73                 	db	115	;'s'
   674  007CA4  70                 	db	112	;'p'
   675  007CA5  72                 	db	114	;'r'
   676  007CA6  65                 	db	101	;'e'
   677  007CA7  73                 	db	115	;'s'
   678  007CA8  73                 	db	115	;'s'
   679  007CA9  75                 	db	117	;'u'
   680  007CAA  72                 	db	114	;'r'
   681  007CAB  69                 	db	105	;'i'
   682  007CAC  7A                 	db	122	;'z'
   683  007CAD  61                 	db	97	;'a'
   684  007CAE  6E                 	db	110	;'n'
   685  007CAF  64                 	db	100	;'d'
   686  007CB0  6F                 	db	111	;'o'
   687  007CB1  2E                 	db	46
   688  007CB2  2E                 	db	46
   689  007CB3  2E                 	db	46
   690  007CB4  00                 	db	0
   691  007CB5                     STR_66:
   692  007CB5  49                 	db	73	;'I'
   693  007CB6  4E                 	db	78	;'N'
   694  007CB7  54                 	db	84	;'T'
   695  007CB8  45                 	db	69	;'E'
   696  007CB9  52                 	db	82	;'R'
   697  007CBA  56                 	db	86	;'V'
   698  007CBB  41                 	db	65	;'A'
   699  007CBC  4C                 	db	76	;'L'
   700  007CBD  4F                 	db	79	;'O'
   701  007CBE  3A                 	db	58	;':'
   702  007CBF  20                 	db	32
   703  007CC0  25                 	db	37
   704  007CC1  32                 	db	50	;'2'
   705  007CC2  64                 	db	100	;'d'
   706  007CC3  20                 	db	32
   707  007CC4  64                 	db	100	;'d'
   708  007CC5  69                 	db	105	;'i'
   709  007CC6  61                 	db	97	;'a'
   710  007CC7  73                 	db	115	;'s'
   711  007CC8  00                 	db	0
   712  007CC9                     STR_67:
   713  007CC9  48                 	db	72	;'H'
   714  007CCA  4F                 	db	79	;'O'
   715  007CCB  52                 	db	82	;'R'
   716  007CCC  41                 	db	65	;'A'
   717  007CCD  52                 	db	82	;'R'
   718  007CCE  49                 	db	73	;'I'
   719  007CCF  4F                 	db	79	;'O'
   720  007CD0  3A                 	db	58	;':'
   721  007CD1  20                 	db	32
   722  007CD2  25                 	db	37
   723  007CD3  30                 	db	48	;'0'
   724  007CD4  32                 	db	50	;'2'
   725  007CD5  64                 	db	100	;'d'
   726  007CD6  20                 	db	32
   727  007CD7  68                 	db	104	;'h'
   728  007CD8  6F                 	db	111	;'o'
   729  007CD9  72                 	db	114	;'r'
   730  007CDA  61                 	db	97	;'a'
   731  007CDB  73                 	db	115	;'s'
   732  007CDC  00                 	db	0
   733  007CDD                     STR_83:
   734  007CDD  53                 	db	83	;'S'
   735  007CDE  69                 	db	105	;'i'
   736  007CDF  73                 	db	115	;'s'
   737  007CE0  74                 	db	116	;'t'
   738  007CE1  65                 	db	101	;'e'
   739  007CE2  6D                 	db	109	;'m'
   740  007CE3  61                 	db	97	;'a'
   741  007CE4  73                 	db	115	;'s'
   742  007CE5  20                 	db	32
   743  007CE6  65                 	db	101	;'e'
   744  007CE7  6D                 	db	109	;'m'
   745  007CE8  62                 	db	98	;'b'
   746  007CE9  61                 	db	97	;'a'
   747  007CEA  72                 	db	114	;'r'
   748  007CEB  63                 	db	99	;'c'
   749  007CEC  61                 	db	97	;'a'
   750  007CED  64                 	db	100	;'d'
   751  007CEE  6F                 	db	111	;'o'
   752  007CEF  73                 	db	115	;'s'
   753  007CF0  00                 	db	0
   754  007CF1                     STR_40:
   755  007CF1  42                 	db	66	;'B'
   756  007CF2  6F                 	db	111	;'o'
   757  007CF3  6D                 	db	109	;'m'
   758  007CF4  62                 	db	98	;'b'
   759  007CF5  61                 	db	97	;'a'
   760  007CF6  20                 	db	32
   761  007CF7  50                 	db	80	;'P'
   762  007CF8  72                 	db	114	;'r'
   763  007CF9  69                 	db	105	;'i'
   764  007CFA  6E                 	db	110	;'n'
   765  007CFB  63                 	db	99	;'c'
   766  007CFC  69                 	db	105	;'i'
   767  007CFD  70                 	db	112	;'p'
   768  007CFE  61                 	db	97	;'a'
   769  007CFF  6C                 	db	108	;'l'
   770  007D00  2E                 	db	46
   771  007D01  2E                 	db	46
   772  007D02  2E                 	db	46
   773  007D03  00                 	db	0
   774  007D04                     STR_41:
   775  007D04  42                 	db	66	;'B'
   776  007D05  6F                 	db	111	;'o'
   777  007D06  6D                 	db	109	;'m'
   778  007D07  62                 	db	98	;'b'
   779  007D08  61                 	db	97	;'a'
   780  007D09  20                 	db	32
   781  007D0A  43                 	db	67	;'C'
   782  007D0B  6F                 	db	111	;'o'
   783  007D0C  6D                 	db	109	;'m'
   784  007D0D  62                 	db	98	;'b'
   785  007D0E  75                 	db	117	;'u'
   786  007D0F  73                 	db	115	;'s'
   787  007D10  74                 	db	116	;'t'
   788  007D11  61                 	db	97	;'a'
   789  007D12  6F                 	db	111	;'o'
   790  007D13  2E                 	db	46
   791  007D14  2E                 	db	46
   792  007D15  2E                 	db	46
   793  007D16  00                 	db	0
   794  007D17                     STR_97:
   795  007D17  23                 	db	35
   796  007D18  68                 	db	104	;'h'
   797  007D19  6F                 	db	111	;'o'
   798  007D1A  72                 	db	114	;'r'
   799  007D1B  69                 	db	105	;'i'
   800  007D1C  6D                 	db	109	;'m'
   801  007D1D  65                 	db	101	;'e'
   802  007D1E  74                 	db	116	;'t'
   803  007D1F  72                 	db	114	;'r'
   804  007D20  6F                 	db	111	;'o'
   805  007D21  3A                 	db	58	;':'
   806  007D22  25                 	db	37
   807  007D23  35                 	db	53	;'5'
   808  007D24  64                 	db	100	;'d'
   809  007D25  20                 	db	32
   810  007D26  6D                 	db	109	;'m'
   811  007D27  69                 	db	105	;'i'
   812  007D28  6E                 	db	110	;'n'
   813  007D29  00                 	db	0
   814  007D2A                     STR_56:
   815  007D2A  2A                 	db	42
   816  007D2B  66                 	db	102	;'f'
   817  007D2C  61                 	db	97	;'a'
   818  007D2D  6C                 	db	108	;'l'
   819  007D2E  68                 	db	104	;'h'
   820  007D2F  61                 	db	97	;'a'
   821  007D30  20                 	db	32
   822  007D31  76                 	db	118	;'v'
   823  007D32  61                 	db	97	;'a'
   824  007D33  6C                 	db	108	;'l'
   825  007D34  2E                 	db	46
   826  007D35  20                 	db	32
   827  007D36  6C                 	db	108	;'l'
   828  007D37  61                 	db	97	;'a'
   829  007D38  64                 	db	100	;'d'
   830  007D39  72                 	db	114	;'r'
   831  007D3A  61                 	db	97	;'a'
   832  007D3B  6F                 	db	111	;'o'
   833  007D3C  00                 	db	0
   834  007D3D                     STR_92:
   835  007D3D  43                 	db	67	;'C'
   836  007D3E  6F                 	db	111	;'o'
   837  007D3F  6E                 	db	110	;'n'
   838  007D40  66                 	db	102	;'f'
   839  007D41  69                 	db	105	;'i'
   840  007D42  67                 	db	103	;'g'
   841  007D43  75                 	db	117	;'u'
   842  007D44  72                 	db	114	;'r'
   843  007D45  61                 	db	97	;'a'
   844  007D46  63                 	db	99	;'c'
   845  007D47  61                 	db	97	;'a'
   846  007D48  6F                 	db	111	;'o'
   847  007D49  20                 	db	32
   848  007D4A  74                 	db	116	;'t'
   849  007D4B  65                 	db	101	;'e'
   850  007D4C  6D                 	db	109	;'m'
   851  007D4D  70                 	db	112	;'p'
   852  007D4E  6F                 	db	111	;'o'
   853  007D4F  00                 	db	0
   854  007D50                     STR_58:
   855  007D50  45                 	db	69	;'E'
   856  007D51  72                 	db	114	;'r'
   857  007D52  72                 	db	114	;'r'
   858  007D53  6F                 	db	111	;'o'
   859  007D54  20                 	db	32
   860  007D55  6E                 	db	110	;'n'
   861  007D56  6F                 	db	111	;'o'
   862  007D57  20                 	db	32
   863  007D58  54                 	db	84	;'T'
   864  007D59  72                 	db	114	;'r'
   865  007D5A  61                 	db	97	;'a'
   866  007D5B  6E                 	db	110	;'n'
   867  007D5C  73                 	db	115	;'s'
   868  007D5D  64                 	db	100	;'d'
   869  007D5E  75                 	db	117	;'u'
   870  007D5F  74                 	db	116	;'t'
   871  007D60  6F                 	db	111	;'o'
   872  007D61  72                 	db	114	;'r'
   873  007D62  00                 	db	0
   874  007D63                     STR_60:
   875  007D63  50                 	db	80	;'P'
   876  007D64  72                 	db	114	;'r'
   877  007D65  65                 	db	101	;'e'
   878  007D66  73                 	db	115	;'s'
   879  007D67  73                 	db	115	;'s'
   880  007D68  20                 	db	32
   881  007D69  45                 	db	69	;'E'
   882  007D6A  53                 	db	83	;'S'
   883  007D6B  43                 	db	67	;'C'
   884  007D6C  20                 	db	32
   885  007D6D  70                 	db	112	;'p'
   886  007D6E  2F                 	db	47
   887  007D6F  20                 	db	32
   888  007D70  52                 	db	82	;'R'
   889  007D71  65                 	db	101	;'e'
   890  007D72  73                 	db	115	;'s'
   891  007D73  65                 	db	101	;'e'
   892  007D74  74                 	db	116	;'t'
   893  007D75  00                 	db	0
   894  007D76                     STR_11:
   895  007D76  41                 	db	65	;'A'
   896  007D77  54                 	db	84	;'T'
   897  007D78  2B                 	db	43
   898  007D79  43                 	db	67	;'C'
   899  007D7A  4D                 	db	77	;'M'
   900  007D7B  47                 	db	71	;'G'
   901  007D7C  53                 	db	83	;'S'
   902  007D7D  3D                 	db	61	;'='
   903  007D7E  22                 	db	34
   904  007D7F  2B                 	db	43
   905  007D80  35                 	db	53	;'5'
   906  007D81  35                 	db	53	;'5'
   907  007D82  25                 	db	37
   908  007D83  73                 	db	115	;'s'
   909  007D84  22                 	db	34
   910  007D85  0D                 	db	13
   911  007D86  0A                 	db	10
   912  007D87  00                 	db	0
   913  007D88                     STR_108:
   914  007D88  50                 	db	80	;'P'
   915  007D89  41                 	db	65	;'A'
   916  007D8A  52                 	db	82	;'R'
   917  007D8B  54                 	db	84	;'T'
   918  007D8C  49                 	db	73	;'I'
   919  007D8D  44                 	db	68	;'D'
   920  007D8E  41                 	db	65	;'A'
   921  007D8F  20                 	db	32
   922  007D90  43                 	db	67	;'C'
   923  007D91  4F                 	db	79	;'O'
   924  007D92  4D                 	db	77	;'M'
   925  007D93  42                 	db	66	;'B'
   926  007D94  55                 	db	85	;'U'
   927  007D95  53                 	db	83	;'S'
   928  007D96  54                 	db	84	;'T'
   929  007D97  41                 	db	65	;'A'
   930  007D98  4F                 	db	79	;'O'
   931  007D99  00                 	db	0
   932  007D9A                     STR_110:
   933  007D9A  50                 	db	80	;'P'
   934  007D9B  45                 	db	69	;'E'
   935  007D9C  52                 	db	82	;'R'
   936  007D9D  49                 	db	73	;'I'
   937  007D9E  4F                 	db	79	;'O'
   938  007D9F  44                 	db	68	;'D'
   939  007DA0  4F                 	db	79	;'O'
   940  007DA1  20                 	db	32
   941  007DA2  44                 	db	68	;'D'
   942  007DA3  45                 	db	69	;'E'
   943  007DA4  20                 	db	32
   944  007DA5  54                 	db	84	;'T'
   945  007DA6  45                 	db	69	;'E'
   946  007DA7  53                 	db	83	;'S'
   947  007DA8  54                 	db	84	;'T'
   948  007DA9  45                 	db	69	;'E'
   949  007DAA  53                 	db	83	;'S'
   950  007DAB  00                 	db	0
   951  007DAC                     STR_55:
   952  007DAC  2A                 	db	42
   953  007DAD  66                 	db	102	;'f'
   954  007DAE  61                 	db	97	;'a'
   955  007DAF  6C                 	db	108	;'l'
   956  007DB0  74                 	db	116	;'t'
   957  007DB1  61                 	db	97	;'a'
   958  007DB2  20                 	db	32
   959  007DB3  64                 	db	100	;'d'
   960  007DB4  65                 	db	101	;'e'
   961  007DB5  20                 	db	32
   962  007DB6  65                 	db	101	;'e'
   963  007DB7  6E                 	db	110	;'n'
   964  007DB8  65                 	db	101	;'e'
   965  007DB9  72                 	db	114	;'r'
   966  007DBA  67                 	db	103	;'g'
   967  007DBB  69                 	db	105	;'i'
   968  007DBC  61                 	db	97	;'a'
   969  007DBD  00                 	db	0
   970  007DBE                     STR_43:
   971  007DBE  54                 	db	84	;'T'
   972  007DBF  65                 	db	101	;'e'
   973  007DC0  73                 	db	115	;'s'
   974  007DC1  74                 	db	116	;'t'
   975  007DC2  65                 	db	101	;'e'
   976  007DC3  20                 	db	32
   977  007DC4  43                 	db	67	;'C'
   978  007DC5  6F                 	db	111	;'o'
   979  007DC6  6E                 	db	110	;'n'
   980  007DC7  63                 	db	99	;'c'
   981  007DC8  6C                 	db	108	;'l'
   982  007DC9  75                 	db	117	;'u'
   983  007DCA  69                 	db	105	;'i'
   984  007DCB  64                 	db	100	;'d'
   985  007DCC  6F                 	db	111	;'o'
   986  007DCD  21                 	db	33
   987  007DCE  00                 	db	0
   988  007DCF                     STR_84:
   989  007DCF  20                 	db	32
   990  007DD0  20                 	db	32
   991  007DD1  20                 	db	32
   992  007DD2  34                 	db	52	;'4'
   993  007DD3  38                 	db	56	;'8'
   994  007DD4  20                 	db	32
   995  007DD5  39                 	db	57	;'9'
   996  007DD6  39                 	db	57	;'9'
   997  007DD7  39                 	db	57	;'9'
   998  007DD8  30                 	db	48	;'0'
   999  007DD9  36                 	db	54	;'6'
  1000  007DDA  2D                 	db	45
  1001  007DDB  35                 	db	53	;'5'
  1002  007DDC  36                 	db	54	;'6'
  1003  007DDD  35                 	db	53	;'5'
  1004  007DDE  31                 	db	49	;'1'
  1005  007DDF  00                 	db	0
  1006  007DE0                     STR_91:
  1007  007DE0  45                 	db	69	;'E'
  1008  007DE1  6E                 	db	110	;'n'
  1009  007DE2  76                 	db	118	;'v'
  1010  007DE3  69                 	db	105	;'i'
  1011  007DE4  61                 	db	97	;'a'
  1012  007DE5  72                 	db	114	;'r'
  1013  007DE6  20                 	db	32
  1014  007DE7  73                 	db	115	;'s'
  1015  007DE8  6D                 	db	109	;'m'
  1016  007DE9  73                 	db	115	;'s'
  1017  007DEA  20                 	db	32
  1018  007DEB  74                 	db	116	;'t'
  1019  007DEC  65                 	db	101	;'e'
  1020  007DED  73                 	db	115	;'s'
  1021  007DEE  74                 	db	116	;'t'
  1022  007DEF  65                 	db	101	;'e'
  1023  007DF0  00                 	db	0
  1024  007DF1                     STR_53:
  1025  007DF1  65                 	db	101	;'e'
  1026  007DF2  6E                 	db	110	;'n'
  1027  007DF3  76                 	db	118	;'v'
  1028  007DF4  69                 	db	105	;'i'
  1029  007DF5  61                 	db	97	;'a'
  1030  007DF6  6E                 	db	110	;'n'
  1031  007DF7  64                 	db	100	;'d'
  1032  007DF8  6F                 	db	111	;'o'
  1033  007DF9  20                 	db	32
  1034  007DFA  53                 	db	83	;'S'
  1035  007DFB  4D                 	db	77	;'M'
  1036  007DFC  53                 	db	83	;'S'
  1037  007DFD  2E                 	db	46
  1038  007DFE  2E                 	db	46
  1039  007DFF  2E                 	db	46
  1040  007E00  00                 	db	0
  1041  007E01                     STR_42:
  1042  007E01  42                 	db	66	;'B'
  1043  007E02  6F                 	db	111	;'o'
  1044  007E03  6D                 	db	109	;'m'
  1045  007E04  62                 	db	98	;'b'
  1046  007E05  61                 	db	97	;'a'
  1047  007E06  20                 	db	32
  1048  007E07  4C                 	db	76	;'L'
  1049  007E08  69                 	db	105	;'i'
  1050  007E09  67                 	db	103	;'g'
  1051  007E0A  61                 	db	97	;'a'
  1052  007E0B  64                 	db	100	;'d'
  1053  007E0C  61                 	db	97	;'a'
  1054  007E0D  2E                 	db	46
  1055  007E0E  2E                 	db	46
  1056  007E0F  2E                 	db	46
  1057  007E10  00                 	db	0
  1058  007E11                     STR_39:
  1059  007E11  42                 	db	66	;'B'
  1060  007E12  6F                 	db	111	;'o'
  1061  007E13  6D                 	db	109	;'m'
  1062  007E14  62                 	db	98	;'b'
  1063  007E15  61                 	db	97	;'a'
  1064  007E16  20                 	db	32
  1065  007E17  4A                 	db	74	;'J'
  1066  007E18  6F                 	db	111	;'o'
  1067  007E19  63                 	db	99	;'c'
  1068  007E1A  6B                 	db	107	;'k'
  1069  007E1B  65                 	db	101	;'e'
  1070  007E1C  79                 	db	121	;'y'
  1071  007E1D  2E                 	db	46
  1072  007E1E  2E                 	db	46
  1073  007E1F  2E                 	db	46
  1074  007E20  00                 	db	0
  1075  007E21                     STR_107:
  1076  007E21  50                 	db	80	;'P'
  1077  007E22  52                 	db	82	;'R'
  1078  007E23  45                 	db	69	;'E'
  1079  007E24  53                 	db	83	;'S'
  1080  007E25  53                 	db	83	;'S'
  1081  007E26  41                 	db	65	;'A'
  1082  007E27  4F                 	db	79	;'O'
  1083  007E28  20                 	db	32
  1084  007E29  44                 	db	68	;'D'
  1085  007E2A  41                 	db	65	;'A'
  1086  007E2B  20                 	db	32
  1087  007E2C  52                 	db	82	;'R'
  1088  007E2D  45                 	db	69	;'E'
  1089  007E2E  44                 	db	68	;'D'
  1090  007E2F  45                 	db	69	;'E'
  1091  007E30  00                 	db	0
  1092  007E31                     STR_38:
  1093  007E31  50                 	db	80	;'P'
  1094  007E32  72                 	db	114	;'r'
  1095  007E33  65                 	db	101	;'e'
  1096  007E34  73                 	db	115	;'s'
  1097  007E35  73                 	db	115	;'s'
  1098  007E36  61                 	db	97	;'a'
  1099  007E37  6F                 	db	111	;'o'
  1100  007E38  20                 	db	32
  1101  007E39  25                 	db	37
  1102  007E3A  73                 	db	115	;'s'
  1103  007E3B  20                 	db	32
  1104  007E3C  42                 	db	66	;'B'
  1105  007E3D  41                 	db	65	;'A'
  1106  007E3E  52                 	db	82	;'R'
  1107  007E3F  00                 	db	0
  1108  007E40                     STR_62:
  1109  007E40  25                 	db	37
  1110  007E41  30                 	db	48	;'0'
  1111  007E42  32                 	db	50	;'2'
  1112  007E43  64                 	db	100	;'d'
  1113  007E44  2F                 	db	47
  1114  007E45  25                 	db	37
  1115  007E46  30                 	db	48	;'0'
  1116  007E47  32                 	db	50	;'2'
  1117  007E48  64                 	db	100	;'d'
  1118  007E49  2F                 	db	47
  1119  007E4A  25                 	db	37
  1120  007E4B  30                 	db	48	;'0'
  1121  007E4C  32                 	db	50	;'2'
  1122  007E4D  64                 	db	100	;'d'
  1123  007E4E  00                 	db	0
  1124  007E4F                     STR_64:
  1125  007E4F  25                 	db	37
  1126  007E50  30                 	db	48	;'0'
  1127  007E51  32                 	db	50	;'2'
  1128  007E52  64                 	db	100	;'d'
  1129  007E53  3A                 	db	58	;':'
  1130  007E54  25                 	db	37
  1131  007E55  30                 	db	48	;'0'
  1132  007E56  32                 	db	50	;'2'
  1133  007E57  64                 	db	100	;'d'
  1134  007E58  3A                 	db	58	;':'
  1135  007E59  25                 	db	37
  1136  007E5A  30                 	db	48	;'0'
  1137  007E5B  32                 	db	50	;'2'
  1138  007E5C  64                 	db	100	;'d'
  1139  007E5D  00                 	db	0
  1140  007E5E                     STR_47:
  1141  007E5E  50                 	db	80	;'P'
  1142  007E5F  52                 	db	82	;'R'
  1143  007E60  49                 	db	73	;'I'
  1144  007E61  4E                 	db	78	;'N'
  1145  007E62  43                 	db	67	;'C'
  1146  007E63  49                 	db	73	;'I'
  1147  007E64  50                 	db	80	;'P'
  1148  007E65  41                 	db	65	;'A'
  1149  007E66  4C                 	db	76	;'L'
  1150  007E67  20                 	db	32
  1151  007E68  3A                 	db	58	;':'
  1152  007E69  20                 	db	32
  1153  007E6A  25                 	db	37
  1154  007E6B  73                 	db	115	;'s'
  1155  007E6C  00                 	db	0
  1156  007E6D                     STR_50:
  1157  007E6D  43                 	db	67	;'C'
  1158  007E6E  4F                 	db	79	;'O'
  1159  007E6F  4D                 	db	77	;'M'
  1160  007E70  42                 	db	66	;'B'
  1161  007E71  55                 	db	85	;'U'
  1162  007E72  53                 	db	83	;'S'
  1163  007E73  54                 	db	84	;'T'
  1164  007E74  41                 	db	65	;'A'
  1165  007E75  4F                 	db	79	;'O'
  1166  007E76  20                 	db	32
  1167  007E77  3A                 	db	58	;':'
  1168  007E78  20                 	db	32
  1169  007E79  25                 	db	37
  1170  007E7A  73                 	db	115	;'s'
  1171  007E7B  00                 	db	0
  1172  007E7C                     STR_37:
  1173  007E7C  41                 	db	65	;'A'
  1174  007E7D  67                 	db	103	;'g'
  1175  007E7E  75                 	db	117	;'u'
  1176  007E7F  61                 	db	97	;'a'
  1177  007E80  72                 	db	114	;'r'
  1178  007E81  64                 	db	100	;'d'
  1179  007E82  65                 	db	101	;'e'
  1180  007E83  2E                 	db	46
  1181  007E84  2E                 	db	46
  1182  007E85  2E                 	db	46
  1183  007E86  20                 	db	32
  1184  007E87  25                 	db	37
  1185  007E88  64                 	db	100	;'d'
  1186  007E89  73                 	db	115	;'s'
  1187  007E8A  00                 	db	0
  1188  007E8B                     STR_113:
  1189  007E8B  49                 	db	73	;'I'
  1190  007E8C  6E                 	db	110	;'n'
  1191  007E8D  69                 	db	105	;'i'
  1192  007E8E  63                 	db	99	;'c'
  1193  007E8F  69                 	db	105	;'i'
  1194  007E90  61                 	db	97	;'a'
  1195  007E91  72                 	db	114	;'r'
  1196  007E92  20                 	db	32
  1197  007E93  54                 	db	84	;'T'
  1198  007E94  65                 	db	101	;'e'
  1199  007E95  73                 	db	115	;'s'
  1200  007E96  74                 	db	116	;'t'
  1201  007E97  65                 	db	101	;'e'
  1202  007E98  73                 	db	115	;'s'
  1203  007E99  00                 	db	0
  1204  007E9A                     STR_93:
  1205  007E9A  4D                 	db	77	;'M'
  1206  007E9B  61                 	db	97	;'a'
  1207  007E9C  78                 	db	120	;'x'
  1208  007E9D  2E                 	db	46
  1209  007E9E  20                 	db	32
  1210  007E9F  50                 	db	80	;'P'
  1211  007EA0  41                 	db	65	;'A'
  1212  007EA1  52                 	db	82	;'R'
  1213  007EA2  54                 	db	84	;'T'
  1214  007EA3  49                 	db	73	;'I'
  1215  007EA4  44                 	db	68	;'D'
  1216  007EA5  41                 	db	65	;'A'
  1217  007EA6  3A                 	db	58	;':'
  1218  007EA7  00                 	db	0
  1219  007EA8                     STR_76:
  1220  007EA8  50                 	db	80	;'P'
  1221  007EA9  72                 	db	114	;'r'
  1222  007EAA  69                 	db	105	;'i'
  1223  007EAB  6E                 	db	110	;'n'
  1224  007EAC  63                 	db	99	;'c'
  1225  007EAD  69                 	db	105	;'i'
  1226  007EAE  70                 	db	112	;'p'
  1227  007EAF  61                 	db	97	;'a'
  1228  007EB0  6C                 	db	108	;'l'
  1229  007EB1  3A                 	db	58	;':'
  1230  007EB2  20                 	db	32
  1231  007EB3  25                 	db	37
  1232  007EB4  73                 	db	115	;'s'
  1233  007EB5  00                 	db	0
  1234  007EB6                     STR_79:
  1235  007EB6  43                 	db	67	;'C'
  1236  007EB7  6F                 	db	111	;'o'
  1237  007EB8  6D                 	db	109	;'m'
  1238  007EB9  62                 	db	98	;'b'
  1239  007EBA  75                 	db	117	;'u'
  1240  007EBB  73                 	db	115	;'s'
  1241  007EBC  74                 	db	116	;'t'
  1242  007EBD  61                 	db	97	;'a'
  1243  007EBE  6F                 	db	111	;'o'
  1244  007EBF  3A                 	db	58	;':'
  1245  007EC0  20                 	db	32
  1246  007EC1  25                 	db	37
  1247  007EC2  73                 	db	115	;'s'
  1248  007EC3  00                 	db	0
  1249  007EC4                     STR_90:
  1250  007EC4  20                 	db	32
  1251  007EC5  61                 	db	97	;'a'
  1252  007EC6  67                 	db	103	;'g'
  1253  007EC7  75                 	db	117	;'u'
  1254  007EC8  61                 	db	97	;'a'
  1255  007EC9  72                 	db	114	;'r'
  1256  007ECA  64                 	db	100	;'d'
  1257  007ECB  65                 	db	101	;'e'
  1258  007ECC  2E                 	db	46
  1259  007ECD  2E                 	db	46
  1260  007ECE  2E                 	db	46
  1261  007ECF  20                 	db	32
  1262  007ED0  00                 	db	0
  1263  007ED1                     STR_10:
  1264  007ED1  41                 	db	65	;'A'
  1265  007ED2  54                 	db	84	;'T'
  1266  007ED3  2B                 	db	43
  1267  007ED4  43                 	db	67	;'C'
  1268  007ED5  4D                 	db	77	;'M'
  1269  007ED6  47                 	db	71	;'G'
  1270  007ED7  46                 	db	70	;'F'
  1271  007ED8  3D                 	db	61	;'='
  1272  007ED9  31                 	db	49	;'1'
  1273  007EDA  0D                 	db	13
  1274  007EDB  0A                 	db	10
  1275  007EDC  00                 	db	0
  1276  007EDD                     STR_13:
  1277  007EDD  41                 	db	65	;'A'
  1278  007EDE  75                 	db	117	;'u'
  1279  007EDF  67                 	db	103	;'g'
  1280  007EE0  20                 	db	32
  1281  007EE1  33                 	db	51	;'3'
  1282  007EE2  31                 	db	49	;'1'
  1283  007EE3  20                 	db	32
  1284  007EE4  32                 	db	50	;'2'
  1285  007EE5  30                 	db	48	;'0'
  1286  007EE6  31                 	db	49	;'1'
  1287  007EE7  39                 	db	57	;'9'
  1288  007EE8  00                 	db	0
  1289  007EE9                     STR_95:
  1290  007EE9  4D                 	db	77	;'M'
  1291  007EEA  61                 	db	97	;'a'
  1292  007EEB  78                 	db	120	;'x'
  1293  007EEC  2E                 	db	46
  1294  007EED  20                 	db	32
  1295  007EEE  54                 	db	84	;'T'
  1296  007EEF  45                 	db	69	;'E'
  1297  007EF0  53                 	db	83	;'S'
  1298  007EF1  54                 	db	84	;'T'
  1299  007EF2  45                 	db	69	;'E'
  1300  007EF3  3A                 	db	58	;':'
  1301  007EF4  00                 	db	0
  1302  007EF5                     STR_112:
  1303  007EF5  49                 	db	73	;'I'
  1304  007EF6  4E                 	db	78	;'N'
  1305  007EF7  46                 	db	70	;'F'
  1306  007EF8  4F                 	db	79	;'O'
  1307  007EF9  20                 	db	32
  1308  007EFA  56                 	db	86	;'V'
  1309  007EFB  45                 	db	69	;'E'
  1310  007EFC  52                 	db	82	;'R'
  1311  007EFD  53                 	db	83	;'S'
  1312  007EFE  41                 	db	65	;'A'
  1313  007EFF  4F                 	db	79	;'O'
  1314  007F00  00                 	db	0
  1315  007F01                     STR_85:
  1316  007F01  76                 	db	118	;'v'
  1317  007F02  65                 	db	101	;'e'
  1318  007F03  72                 	db	114	;'r'
  1319  007F04  73                 	db	115	;'s'
  1320  007F05  61                 	db	97	;'a'
  1321  007F06  6F                 	db	111	;'o'
  1322  007F07  20                 	db	32
  1323  007F08  2D                 	db	45
  1324  007F09  20                 	db	32
  1325  007F0A  25                 	db	37
  1326  007F0B  73                 	db	115	;'s'
  1327  007F0C  00                 	db	0
  1328  007F0D                     STR_33:
  1329  007F0D  41                 	db	65	;'A'
  1330  007F0E  54                 	db	84	;'T'
  1331  007F0F  44                 	db	68	;'D'
  1332  007F10  20                 	db	32
  1333  007F11  30                 	db	48	;'0'
  1334  007F12  25                 	db	37
  1335  007F13  73                 	db	115	;'s'
  1336  007F14  3B                 	db	59	;';'
  1337  007F15  0D                 	db	13
  1338  007F16  0A                 	db	10
  1339  007F17  00                 	db	0
  1340  007F18  74                 	db	116	;'t'
  1341  007F19  65                 	db	101	;'e'
  1342  007F1A  74                 	db	116	;'t'
  1343  007F1B  61                 	db	97	;'a'
  1344  007F1C  70                 	db	112	;'p'
  1345  007F1D  61                 	db	97	;'a'
  1346  007F1E  20                 	db	32
  1347  007F1F  25                 	db	37
  1348  007F20  64                 	db	100	;'d'
  1349  007F21  20                 	db	32
  1350  007F22  00                 	db	0
  1351  007F23                     STR_75:
  1352  007F23  23                 	db	35
  1353  007F24  25                 	db	37
  1354  007F25  30                 	db	48	;'0'
  1355  007F26  32                 	db	50	;'2'
  1356  007F27  64                 	db	100	;'d'
  1357  007F28  2F                 	db	47
  1358  007F29  25                 	db	37
  1359  007F2A  30                 	db	48	;'0'
  1360  007F2B  32                 	db	50	;'2'
  1361  007F2C  64                 	db	100	;'d'
  1362  007F2D  00                 	db	0
  1363  007F2E                     STR_98:
  1364  007F2E  47                 	db	71	;'G'
  1365  007F2F  45                 	db	69	;'E'
  1366  007F30  52                 	db	82	;'R'
  1367  007F31  41                 	db	65	;'A'
  1368  007F32  4C                 	db	76	;'L'
  1369  007F33  20                 	db	32
  1370  007F34  3A                 	db	58	;':'
  1371  007F35  20                 	db	32
  1372  007F36  25                 	db	37
  1373  007F37  73                 	db	115	;'s'
  1374  007F38  00                 	db	0
  1375  007F39                     STR_44:
  1376  007F39  4A                 	db	74	;'J'
  1377  007F3A  4F                 	db	79	;'O'
  1378  007F3B  4B                 	db	75	;'K'
  1379  007F3C  45                 	db	69	;'E'
  1380  007F3D  59                 	db	89	;'Y'
  1381  007F3E  20                 	db	32
  1382  007F3F  3A                 	db	58	;':'
  1383  007F40  20                 	db	32
  1384  007F41  25                 	db	37
  1385  007F42  73                 	db	115	;'s'
  1386  007F43  00                 	db	0
  1387  007F44                     STR_68:
  1388  007F44  41                 	db	65	;'A'
  1389  007F45  54                 	db	84	;'T'
  1390  007F46  49                 	db	73	;'I'
  1391  007F47  56                 	db	86	;'V'
  1392  007F48  41                 	db	65	;'A'
  1393  007F49  52                 	db	82	;'R'
  1394  007F4A  3A                 	db	58	;':'
  1395  007F4B  20                 	db	32
  1396  007F4C  25                 	db	37
  1397  007F4D  73                 	db	115	;'s'
  1398  007F4E  00                 	db	0
  1399  007F4F                     STR_106:
  1400  007F4F  44                 	db	68	;'D'
  1401  007F50  41                 	db	65	;'A'
  1402  007F51  54                 	db	84	;'T'
  1403  007F52  41                 	db	65	;'A'
  1404  007F53  2F                 	db	47
  1405  007F54  48                 	db	72	;'H'
  1406  007F55  4F                 	db	79	;'O'
  1407  007F56  52                 	db	82	;'R'
  1408  007F57  41                 	db	65	;'A'
  1409  007F58  00                 	db	0
  1410  007F59                     STR_111:
  1411  007F59  44                 	db	68	;'D'
  1412  007F5A  41                 	db	65	;'A'
  1413  007F5B  54                 	db	84	;'T'
  1414  007F5C  41                 	db	65	;'A'
  1415  007F5D  4C                 	db	76	;'L'
  1416  007F5E  4F                 	db	79	;'O'
  1417  007F5F  47                 	db	71	;'G'
  1418  007F60  45                 	db	69	;'E'
  1419  007F61  52                 	db	82	;'R'
  1420  007F62  00                 	db	0
  1421  007F63                     STR_109:
  1422  007F63  54                 	db	84	;'T'
  1423  007F64  45                 	db	69	;'E'
  1424  007F65  4C                 	db	76	;'L'
  1425  007F66  45                 	db	69	;'E'
  1426  007F67  46                 	db	70	;'F'
  1427  007F68  4F                 	db	79	;'O'
  1428  007F69  4E                 	db	78	;'N'
  1429  007F6A  45                 	db	69	;'E'
  1430  007F6B  53                 	db	83	;'S'
  1431  007F6C  00                 	db	0
  1432  007F6D  74                 	db	116	;'t'
  1433  007F6E  73                 	db	115	;'s'
  1434  007F6F  69                 	db	105	;'i'
  1435  007F70  6E                 	db	110	;'n'
  1436  007F71  61                 	db	97	;'a'
  1437  007F72  6C                 	db	108	;'l'
  1438  007F73  20                 	db	32
  1439  007F74  25                 	db	37
  1440  007F75  64                 	db	100	;'d'
  1441  007F76  00                 	db	0
  1442  007F77                     STR_72:
  1443  007F77  4A                 	db	74	;'J'
  1444  007F78  6F                 	db	111	;'o'
  1445  007F79  6B                 	db	107	;'k'
  1446  007F7A  65                 	db	101	;'e'
  1447  007F7B  79                 	db	121	;'y'
  1448  007F7C  3A                 	db	58	;':'
  1449  007F7D  20                 	db	32
  1450  007F7E  25                 	db	37
  1451  007F7F  73                 	db	115	;'s'
  1452  007F80  00                 	db	0
  1453  007F81                     STR_3:
  1454  007F81  41                 	db	65	;'A'
  1455  007F82  54                 	db	84	;'T'
  1456  007F83  2B                 	db	43
  1457  007F84  43                 	db	67	;'C'
  1458  007F85  53                 	db	83	;'S'
  1459  007F86  51                 	db	81	;'Q'
  1460  007F87  0D                 	db	13
  1461  007F88  0A                 	db	10
  1462  007F89  00                 	db	0
  1463  007F8A  65                 	db	101	;'e'
  1464  007F8B  74                 	db	116	;'t'
  1465  007F8C  61                 	db	97	;'a'
  1466  007F8D  70                 	db	112	;'p'
  1467  007F8E  61                 	db	97	;'a'
  1468  007F8F  20                 	db	32
  1469  007F90  25                 	db	37
  1470  007F91  64                 	db	100	;'d'
  1471  007F92  00                 	db	0
  1472  007F93                     STR_82:
  1473  007F93  54                 	db	84	;'T'
  1474  007F94  45                 	db	69	;'E'
  1475  007F95  43                 	db	67	;'C'
  1476  007F96  48                 	db	72	;'H'
  1477  007F97  4E                 	db	78	;'N'
  1478  007F98  4F                 	db	79	;'O'
  1479  007F99  57                 	db	87	;'W'
  1480  007F9A  00                 	db	0
  1481  007F9B                     STR_114:
  1482  007F9B  28                 	db	40
  1483  007F9C  6E                 	db	110	;'n'
  1484  007F9D  75                 	db	117	;'u'
  1485  007F9E  6C                 	db	108	;'l'
  1486  007F9F  6C                 	db	108	;'l'
  1487  007FA0  29                 	db	41
  1488  007FA1  00                 	db	0
  1489  007FA2                     STR_20:
  1490  007FA2  41                 	db	65	;'A'
  1491  007FA3  54                 	db	84	;'T'
  1492  007FA4  48                 	db	72	;'H'
  1493  007FA5  30                 	db	48	;'0'
  1494  007FA6  0D                 	db	13
  1495  007FA7  0A                 	db	10
  1496  007FA8  00                 	db	0
  1497  007FA9                     STR_6:
  1498  007FA9  2B                 	db	43
  1499  007FAA  43                 	db	67	;'C'
  1500  007FAB  53                 	db	83	;'S'
  1501  007FAC  51                 	db	81	;'Q'
  1502  007FAD  3A                 	db	58	;':'
  1503  007FAE  20                 	db	32
  1504  007FAF  00                 	db	0
  1505  007FB0                     STR_15:
  1506  007FB0  2B                 	db	43
  1507  007FB1  43                 	db	67	;'C'
  1508  007FB2  4D                 	db	77	;'M'
  1509  007FB3  47                 	db	71	;'G'
  1510  007FB4  53                 	db	83	;'S'
  1511  007FB5  3A                 	db	58	;':'
  1512  007FB6  00                 	db	0
  1513  007FB7                     STR_87:
  1514  007FB7  54                 	db	84	;'T'
  1515  007FB8  31                 	db	49	;'1'
  1516  007FB9  3A                 	db	58	;':'
  1517  007FBA  20                 	db	32
  1518  007FBB  25                 	db	37
  1519  007FBC  73                 	db	115	;'s'
  1520  007FBD  00                 	db	0
  1521  007FBE                     STR_88:
  1522  007FBE  54                 	db	84	;'T'
  1523  007FBF  32                 	db	50	;'2'
  1524  007FC0  3A                 	db	58	;':'
  1525  007FC1  20                 	db	32
  1526  007FC2  25                 	db	37
  1527  007FC3  73                 	db	115	;'s'
  1528  007FC4  00                 	db	0
  1529  007FC5                     STR_63:
  1530  007FC5  48                 	db	72	;'H'
  1531  007FC6  4F                 	db	79	;'O'
  1532  007FC7  52                 	db	82	;'R'
  1533  007FC8  41                 	db	65	;'A'
  1534  007FC9  3A                 	db	58	;':'
  1535  007FCA  00                 	db	0
  1536  007FCB                     STR_61:
  1537  007FCB  44                 	db	68	;'D'
  1538  007FCC  41                 	db	65	;'A'
  1539  007FCD  54                 	db	84	;'T'
  1540  007FCE  41                 	db	65	;'A'
  1541  007FCF  3A                 	db	58	;':'
  1542  007FD0  00                 	db	0
  1543  007FD1                     STR_25:
  1544  007FD1  46                 	db	70	;'F'
  1545  007FD2  41                 	db	65	;'A'
  1546  007FD3  4C                 	db	76	;'L'
  1547  007FD4  48                 	db	72	;'H'
  1548  007FD5  41                 	db	65	;'A'
  1549  007FD6  00                 	db	0
  1550  007FD7                     STR_16:
  1551  007FD7  45                 	db	69	;'E'
  1552  007FD8  52                 	db	82	;'R'
  1553  007FD9  52                 	db	82	;'R'
  1554  007FDA  4F                 	db	79	;'O'
  1555  007FDB  52                 	db	82	;'R'
  1556  007FDC  00                 	db	0
  1557  007FDD                     STR_4:
  1558  007FDD  41                 	db	65	;'A'
  1559  007FDE  54                 	db	84	;'T'
  1560  007FDF  0D                 	db	13
  1561  007FE0  0A                 	db	10
  1562  007FE1  00                 	db	0
  1563  007FE2                     STR_46:
  1564  007FE2  45                 	db	69	;'E'
  1565  007FE3  52                 	db	82	;'R'
  1566  007FE4  52                 	db	82	;'R'
  1567  007FE5  4F                 	db	79	;'O'
  1568  007FE6  00                 	db	0
  1569  007FE7                     STR_1:
  1570  007FE7  25                 	db	37
  1571  007FE8  73                 	db	115	;'s'
  1572  007FE9  25                 	db	37
  1573  007FEA  63                 	db	99	;'c'
  1574  007FEB  00                 	db	0
  1575  007FEC                     STR_94:
  1576  007FEC  25                 	db	37
  1577  007FED  33                 	db	51	;'3'
  1578  007FEE  64                 	db	100	;'d'
  1579  007FEF  73                 	db	115	;'s'
  1580  007FF0  00                 	db	0
  1581  007FF1                     STR_70:
  1582  007FF1  53                 	db	83	;'S'
  1583  007FF2  69                 	db	105	;'i'
  1584  007FF3  6D                 	db	109	;'m'
  1585  007FF4  00                 	db	0
  1586  007FF5                     STR_69:
  1587  007FF5  4E                 	db	78	;'N'
  1588  007FF6  61                 	db	97	;'a'
  1589  007FF7  6F                 	db	111	;'o'
  1590  007FF8  00                 	db	0
  1591  007FF9                     STR_5:
  1592  007FF9  4F                 	db	79	;'O'
  1593  007FFA  4B                 	db	75	;'K'
  1594  007FFB  00                 	db	0
  1595  007FFC                     STR_34:
  1596  007FFC  4E                 	db	78	;'N'
  1597  007FFD  4F                 	db	79	;'O'
  1598  007FFE  00                 	db	0
  1599  0000                     
  1600                           ; #config settings
  1601  007FFF  00                 	db	0	; dummy byte at the end
  1602  0000                     
  1603                           	psect	cinit
  1604  006E92                     __pcinit:
  1605                           	opt stack 0
  1606  006E92                     start_initialization:
  1607                           	opt stack 0
  1608  006E92                     __initialization:
  1609                           	opt stack 0
  1610                           
  1611                           ; Initialize objects allocated to BANK0 (8 bytes)
  1612                           ; load TBLPTR registers with __pidataBANK0
  1613  006E92  0E0C               	movlw	low __pidataBANK0
  1614  006E94  6EF6               	movwf	tblptrl,c
  1615  006E96  0E64               	movlw	high __pidataBANK0
  1616  006E98  6EF7               	movwf	tblptrh,c
  1617  006E9A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1618  006E9C  6EF8               	movwf	tblptru,c
  1619  006E9E  EE00  F0F8         	lfsr	0,__pdataBANK0
  1620  006EA2  EE10 F008          	lfsr	1,8
  1621  006EA6                     copy_data0:
  1622  006EA6  0009               	tblrd		*+
  1623  006EA8  CFF5 FFEE          	movff	tablat,postinc0
  1624  006EAC  50E5               	movf	postdec1,w,c
  1625  006EAE  50E1               	movf	fsr1l,w,c
  1626  006EB0  E1FA               	bnz	copy_data0
  1627                           
  1628                           ; Initialize objects allocated to COMRAM (5 bytes)
  1629                           ; load TBLPTR registers with __pidataCOMRAM
  1630  006EB2  0E07               	movlw	low __pidataCOMRAM
  1631  006EB4  6EF6               	movwf	tblptrl,c
  1632  006EB6  0E64               	movlw	high __pidataCOMRAM
  1633  006EB8  6EF7               	movwf	tblptrh,c
  1634  006EBA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1635  006EBC  6EF8               	movwf	tblptru,c
  1636  006EBE  EE00  F076         	lfsr	0,__pdataCOMRAM
  1637  006EC2  EE10 F005          	lfsr	1,5
  1638  006EC6                     copy_data1:
  1639  006EC6  0009               	tblrd		*+
  1640  006EC8  CFF5 FFEE          	movff	tablat,postinc0
  1641  006ECC  50E5               	movf	postdec1,w,c
  1642  006ECE  50E1               	movf	fsr1l,w,c
  1643  006ED0  E1FA               	bnz	copy_data1
  1644                           
  1645                           ; Clear objects allocated to BANK1 (188 bytes)
  1646  006ED2  EE01  F000         	lfsr	0,__pbssBANK1
  1647  006ED6  0EBC               	movlw	188
  1648  006ED8                     clear_0:
  1649  006ED8  6AEE               	clrf	postinc0,c
  1650  006EDA  06E8               	decf	wreg,f,c
  1651  006EDC  E1FD               	bnz	clear_0
  1652                           
  1653                           ; Clear objects allocated to BANK0 (31 bytes)
  1654  006EDE  EE00  F0D9         	lfsr	0,__pbssBANK0
  1655  006EE2  0E1F               	movlw	31
  1656  006EE4                     clear_1:
  1657  006EE4  6AEE               	clrf	postinc0,c
  1658  006EE6  06E8               	decf	wreg,f,c
  1659  006EE8  E1FD               	bnz	clear_1
  1660                           
  1661                           ; Clear objects allocated to COMRAM (54 bytes)
  1662  006EEA  EE00  F040         	lfsr	0,__pbssCOMRAM
  1663  006EEE  0E36               	movlw	54
  1664  006EF0                     clear_2:
  1665  006EF0  6AEE               	clrf	postinc0,c
  1666  006EF2  06E8               	decf	wreg,f,c
  1667  006EF4  E1FD               	bnz	clear_2
  1668  006EF6                     end_of_initialization:
  1669                           	opt stack 0
  1670  006EF6                     __end_of__initialization:
  1671                           	opt stack 0
  1672  006EF6  907B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1673  006EF8  927B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1674  006EFA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1675  006EFC  6EF8               	movwf	tblptru,c
  1676  006EFE  0100               	movlb	0
  1677  006F00  EFCB  F007         	goto	_main	;jump to C main() function
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           postdec1	equ	0xFE5
  1685                           fsr1l	equ	0xFE1
  1686                           
  1687                           	psect	bssCOMRAM
  1688  000040                     __pbssCOMRAM:
  1689                           	opt stack 0
  1690  000040                     _shift:
  1691                           	opt stack 0
  1692  000040                     	ds	8
  1693  000048                     __tensao:
  1694                           	opt stack 0
  1695  000048                     	ds	3
  1696  00004B                     _horimetro:
  1697                           	opt stack 0
  1698  00004B                     	ds	2
  1699  00004D                     _etapaComunicacao:
  1700                           	opt stack 0
  1701  00004D                     	ds	2
  1702  00004F                     _dtl_posi_visualizar:
  1703                           	opt stack 0
  1704  00004F                     	ds	1
  1705  000050                     _totalLogs:
  1706                           	opt stack 0
  1707  000050                     	ds	1
  1708  000051                     _dtl_carregar_log:
  1709                           	opt stack 0
  1710  000051                     	ds	1
  1711  000052                     _dtl_estacionaria:
  1712                           	opt stack 0
  1713  000052                     	ds	1
  1714  000053                     _dtl_principal:
  1715                           	opt stack 0
  1716  000053                     	ds	1
  1717  000054                     _dtl_jockey:
  1718                           	opt stack 0
  1719  000054                     	ds	1
  1720  000055                     _dtl_min:
  1721                           	opt stack 0
  1722  000055                     	ds	1
  1723  000056                     _dtl_hora:
  1724                           	opt stack 0
  1725  000056                     	ds	1
  1726  000057                     _dtl_ano:
  1727                           	opt stack 0
  1728  000057                     	ds	1
  1729  000058                     _dtl_mes:
  1730                           	opt stack 0
  1731  000058                     	ds	1
  1732  000059                     _dtl_dia:
  1733                           	opt stack 0
  1734  000059                     	ds	1
  1735  00005A                     __b_ok:
  1736                           	opt stack 0
  1737  00005A                     	ds	1
  1738  00005B                     _flag_b_ok:
  1739                           	opt stack 0
  1740  00005B                     	ds	1
  1741  00005C                     __b_mais:
  1742                           	opt stack 0
  1743  00005C                     	ds	1
  1744  00005D                     _flag_b_mais:
  1745                           	opt stack 0
  1746  00005D                     	ds	1
  1747  00005E                     __b_menos:
  1748                           	opt stack 0
  1749  00005E                     	ds	1
  1750  00005F                     _flag_b_menos:
  1751                           	opt stack 0
  1752  00005F                     	ds	1
  1753  000060                     __b_esc:
  1754                           	opt stack 0
  1755  000060                     	ds	1
  1756  000061                     _flag_b_esc:
  1757                           	opt stack 0
  1758  000061                     	ds	1
  1759  000062                     _cbf:
  1760                           	opt stack 0
  1761  000062                     	ds	1
  1762  000063                     _ajst_rtc:
  1763                           	opt stack 0
  1764  000063                     	ds	1
  1765  000064                     _tela_menu_posi:
  1766                           	opt stack 0
  1767  000064                     	ds	1
  1768  000065                     _sub_menu_posi:
  1769                           	opt stack 0
  1770  000065                     	ds	1
  1771  000066                     _tel_selecionado:
  1772                           	opt stack 0
  1773  000066                     	ds	1
  1774  000067                     _tempo_limite_partida:
  1775                           	opt stack 0
  1776  000067                     	ds	1
  1777  000068                     _tempo_partida:
  1778                           	opt stack 0
  1779  000068                     	ds	1
  1780  000069                     _qtd_leitura:
  1781                           	opt stack 0
  1782  000069                     	ds	1
  1783  00006A                     __sec_aux:
  1784                           	opt stack 0
  1785  00006A                     	ds	1
  1786  00006B                     __sec_partida:
  1787                           	opt stack 0
  1788  00006B                     	ds	1
  1789  00006C                     _base_sec:
  1790                           	opt stack 0
  1791  00006C                     	ds	1
  1792  00006D                     _etapaTesteBombas:
  1793                           	opt stack 0
  1794  00006D                     	ds	1
  1795  00006E                     _codigoErro:
  1796                           	opt stack 0
  1797  00006E                     	ds	1
  1798  00006F                     _rtc:
  1799                           	opt stack 0
  1800  00006F                     	ds	7
  1801                           tblptru	equ	0xFF8
  1802                           tblptrh	equ	0xFF7
  1803                           tblptrl	equ	0xFF6
  1804                           tablat	equ	0xFF5
  1805                           postinc0	equ	0xFEE
  1806                           wreg	equ	0xFE8
  1807                           postdec1	equ	0xFE5
  1808                           fsr1l	equ	0xFE1
  1809                           
  1810                           	psect	dataCOMRAM
  1811  000076                     __pdataCOMRAM:
  1812                           	opt stack 0
  1813  000076                     intToFloatStr@F2540:
  1814                           	opt stack 0
  1815  000076                     	ds	4
  1816  00007A                     _bt_press:
  1817                           	opt stack 0
  1818  00007A                     	ds	1
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           postinc0	equ	0xFEE
  1824                           wreg	equ	0xFE8
  1825                           postdec1	equ	0xFE5
  1826                           fsr1l	equ	0xFE1
  1827                           
  1828                           	psect	bssBANK0
  1829  0000D9                     __pbssBANK0:
  1830                           	opt stack 0
  1831  0000D9                     _timerTesteBombas:
  1832                           	opt stack 0
  1833  0000D9                     	ds	2
  1834  0000DB                     _blinkk:
  1835                           	opt stack 0
  1836  0000DB                     	ds	1
  1837  0000DC                     _ajust_tel:
  1838                           	opt stack 0
  1839  0000DC                     	ds	1
  1840  0000DD                     _tel_posi:
  1841                           	opt stack 0
  1842  0000DD                     	ds	1
  1843  0000DE                     __menu_posi:
  1844                           	opt stack 0
  1845  0000DE                     	ds	1
  1846  0000DF                     _menu_posi:
  1847                           	opt stack 0
  1848  0000DF                     	ds	1
  1849  0000E0                     _option_posi:
  1850                           	opt stack 0
  1851  0000E0                     	ds	1
  1852  0000E1                     _sp_estacionaria:
  1853                           	opt stack 0
  1854  0000E1                     	ds	1
  1855  0000E2                     _sp_principal:
  1856                           	opt stack 0
  1857  0000E2                     	ds	1
  1858  0000E3                     _sp_jockey:
  1859                           	opt stack 0
  1860  0000E3                     	ds	1
  1861  0000E4                     _sp_pressao_rede:
  1862                           	opt stack 0
  1863  0000E4                     	ds	1
  1864  0000E5                     _tempo_limite_teste_estacionaria:
  1865                           	opt stack 0
  1866  0000E5                     	ds	1
  1867  0000E6                     _tempo_limite_estacionaria:
  1868                           	opt stack 0
  1869  0000E6                     	ds	1
  1870  0000E7                     _horario_de_teste:
  1871                           	opt stack 0
  1872  0000E7                     	ds	1
  1873  0000E8                     _dias_restante_teste:
  1874                           	opt stack 0
  1875  0000E8                     	ds	1
  1876  0000E9                     _intervalo_teste_dia:
  1877                           	opt stack 0
  1878  0000E9                     	ds	1
  1879  0000EA                     __ano:
  1880                           	opt stack 0
  1881  0000EA                     	ds	1
  1882  0000EB                     __mes:
  1883                           	opt stack 0
  1884  0000EB                     	ds	1
  1885  0000EC                     __dia:
  1886                           	opt stack 0
  1887  0000EC                     	ds	1
  1888  0000ED                     __hor:
  1889                           	opt stack 0
  1890  0000ED                     	ds	1
  1891  0000EE                     __min:
  1892                           	opt stack 0
  1893  0000EE                     	ds	1
  1894  0000EF                     __sec:
  1895                           	opt stack 0
  1896  0000EF                     	ds	1
  1897  0000F0                     _habilitaTesteAutomatico:
  1898                           	opt stack 0
  1899  0000F0                     	ds	1
  1900  0000F1                     _flagEstacionariaLigada:
  1901                           	opt stack 0
  1902  0000F1                     	ds	1
  1903  0000F2                     _executandoTeste:
  1904                           	opt stack 0
  1905  0000F2                     	ds	1
  1906  0000F3                     _ocorrendoIncendio:
  1907                           	opt stack 0
  1908  0000F3                     	ds	1
  1909  0000F4                     _gsmOcupado:
  1910                           	opt stack 0
  1911  0000F4                     	ds	1
  1912  0000F5                     _timerEtapaComunicacao:
  1913                           	opt stack 0
  1914  0000F5                     	ds	1
  1915  0000F6                     _timerReenvioSMS:
  1916                           	opt stack 0
  1917  0000F6                     	ds	1
  1918  0000F7                     _telefoneSelecionado:
  1919                           	opt stack 0
  1920  0000F7                     	ds	1
  1921                           tblptru	equ	0xFF8
  1922                           tblptrh	equ	0xFF7
  1923                           tblptrl	equ	0xFF6
  1924                           tablat	equ	0xFF5
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           postdec1	equ	0xFE5
  1928                           fsr1l	equ	0xFE1
  1929                           
  1930                           	psect	dataBANK0
  1931  0000F8                     __pdataBANK0:
  1932                           	opt stack 0
  1933  0000F8                     _pressao:
  1934                           	opt stack 0
  1935  0000F8                     	ds	2
  1936  0000FA                     _dtl_posicao:
  1937                           	opt stack 0
  1938  0000FA                     	ds	1
  1939  0000FB                     _status_estacionaria:
  1940                           	opt stack 0
  1941  0000FB                     	ds	1
  1942  0000FC                     _status_principal:
  1943                           	opt stack 0
  1944  0000FC                     	ds	1
  1945  0000FD                     _status_jockey:
  1946                           	opt stack 0
  1947  0000FD                     	ds	1
  1948  0000FE                     _timerVerificarSinal:
  1949                           	opt stack 0
  1950  0000FE                     	ds	1
  1951  0000FF                     _intensidadeSinal:
  1952                           	opt stack 0
  1953  0000FF                     	ds	1
  1954                           tblptru	equ	0xFF8
  1955                           tblptrh	equ	0xFF7
  1956                           tblptrl	equ	0xFF6
  1957                           tablat	equ	0xFF5
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           postdec1	equ	0xFE5
  1961                           fsr1l	equ	0xFE1
  1962                           
  1963                           	psect	bssBANK1
  1964  000100                     __pbssBANK1:
  1965                           	opt stack 0
  1966  000100                     _bufferSerial:
  1967                           	opt stack 0
  1968  000100                     	ds	60
  1969  00013C                     _line4:
  1970                           	opt stack 0
  1971  00013C                     	ds	21
  1972  000151                     _line3:
  1973                           	opt stack 0
  1974  000151                     	ds	21
  1975  000166                     _line2:
  1976                           	opt stack 0
  1977  000166                     	ds	21
  1978  00017B                     _line1:
  1979                           	opt stack 0
  1980  00017B                     	ds	21
  1981  000190                     _bufferAUX:
  1982                           	opt stack 0
  1983  000190                     	ds	20
  1984  0001A4                     _tel2:
  1985                           	opt stack 0
  1986  0001A4                     	ds	12
  1987  0001B0                     _tel1:
  1988                           	opt stack 0
  1989  0001B0                     	ds	12
  1990                           tblptru	equ	0xFF8
  1991                           tblptrh	equ	0xFF7
  1992                           tblptrl	equ	0xFF6
  1993                           tablat	equ	0xFF5
  1994                           postinc0	equ	0xFEE
  1995                           wreg	equ	0xFE8
  1996                           postdec1	equ	0xFE5
  1997                           fsr1l	equ	0xFE1
  1998                           
  1999                           	psect	cstackBANK0
  2000  000080                     __pcstackBANK0:
  2001                           	opt stack 0
  2002  000080                     ??_isdigit:
  2003  000080                     ??_setShiftREG:
  2004  000080                     ??_I2C_Wait:
  2005  000080                     ?_strlen:
  2006                           	opt stack 0
  2007  000080                     ?_strchr:
  2008                           	opt stack 0
  2009  000080                     ?___wmul:
  2010                           	opt stack 0
  2011  000080                     ?___awdiv:
  2012                           	opt stack 0
  2013  000080                     ?___awmod:
  2014                           	opt stack 0
  2015  000080                     ?___lwdiv:
  2016                           	opt stack 0
  2017  000080                     ?___lldiv:
  2018                           	opt stack 0
  2019  000080                     putch@c:
  2020                           	opt stack 0
  2021  000080                     clearShiftREG@i:
  2022                           	opt stack 0
  2023  000080                     btPress@bt:
  2024                           	opt stack 0
  2025  000080                     Lcd_Port@a:
  2026                           	opt stack 0
  2027  000080                     BCDtoDEC@val:
  2028                           	opt stack 0
  2029  000080                     writeChar@hex:
  2030                           	opt stack 0
  2031  000080                     blink@line:
  2032                           	opt stack 0
  2033  000080                     delay@x:
  2034                           	opt stack 0
  2035  000080                     ___wmul@multiplier:
  2036                           	opt stack 0
  2037  000080                     ___awdiv@dividend:
  2038                           	opt stack 0
  2039  000080                     ___awmod@dividend:
  2040                           	opt stack 0
  2041  000080                     ___lwdiv@dividend:
  2042                           	opt stack 0
  2043  000080                     memset@p1:
  2044                           	opt stack 0
  2045  000080                     strlen@s:
  2046                           	opt stack 0
  2047  000080                     strchr@ptr:
  2048                           	opt stack 0
  2049  000080                     ___lldiv@dividend:
  2050                           	opt stack 0
  2051                           
  2052                           ; 4 bytes @ 0x0
  2053  000080                     	ds	1
  2054  000081                     ??_Lcd_Cmd:
  2055  000081                     ?_I2C_Read:
  2056                           	opt stack 0
  2057  000081                     setShiftREG@i:
  2058                           	opt stack 0
  2059  000081                     Lcd_Write_Char@tempp:
  2060                           	opt stack 0
  2061  000081                     _isdigit$1844:
  2062                           	opt stack 0
  2063  000081                     I2C_Read@a:
  2064                           	opt stack 0
  2065                           
  2066                           ; 2 bytes @ 0x1
  2067  000081                     	ds	1
  2068  000082                     ??_delay:
  2069  000082                     ??_strlen:
  2070  000082                     Lcd_Cmd@a:
  2071                           	opt stack 0
  2072  000082                     Lcd_Write_Char@y:
  2073                           	opt stack 0
  2074  000082                     blink@start:
  2075                           	opt stack 0
  2076  000082                     isdigit@c:
  2077                           	opt stack 0
  2078  000082                     ___wmul@multiplicand:
  2079                           	opt stack 0
  2080  000082                     ___awdiv@divisor:
  2081                           	opt stack 0
  2082  000082                     ___awmod@divisor:
  2083                           	opt stack 0
  2084  000082                     ___lwdiv@divisor:
  2085                           	opt stack 0
  2086  000082                     memset@c:
  2087                           	opt stack 0
  2088  000082                     strchr@chr:
  2089                           	opt stack 0
  2090                           
  2091                           ; 2 bytes @ 0x2
  2092  000082                     	ds	1
  2093  000083                     ??_Lcd_Init:
  2094  000083                     partidaBombaEstacionaria@acao:
  2095                           	opt stack 0
  2096  000083                     Lcd_Set_Cursor@b:
  2097                           	opt stack 0
  2098  000083                     Lcd_Write_Char@a:
  2099                           	opt stack 0
  2100  000083                     blink@end:
  2101                           	opt stack 0
  2102  000083                     I2C_Read@temp:
  2103                           	opt stack 0
  2104                           
  2105                           ; 2 bytes @ 0x3
  2106  000083                     	ds	1
  2107  000084                     ??_criarCaracteresCGRAM:
  2108  000084                     Lcd_Set_Cursor@a:
  2109                           	opt stack 0
  2110  000084                     blink@i:
  2111                           	opt stack 0
  2112  000084                     ___awdiv@counter:
  2113                           	opt stack 0
  2114  000084                     ___awmod@counter:
  2115                           	opt stack 0
  2116  000084                     ___lwdiv@counter:
  2117                           	opt stack 0
  2118  000084                     Lcd_Write_String@a:
  2119                           	opt stack 0
  2120  000084                     ___wmul@product:
  2121                           	opt stack 0
  2122  000084                     memset@n:
  2123                           	opt stack 0
  2124  000084                     strlen@cp:
  2125                           	opt stack 0
  2126  000084                     ___lldiv@divisor:
  2127                           	opt stack 0
  2128                           
  2129                           ; 4 bytes @ 0x4
  2130  000084                     	ds	1
  2131  000085                     Lcd_Set_Cursor@z:
  2132                           	opt stack 0
  2133  000085                     ___awdiv@sign:
  2134                           	opt stack 0
  2135  000085                     ___awmod@sign:
  2136                           	opt stack 0
  2137  000085                     ___lwdiv@quotient:
  2138                           	opt stack 0
  2139                           
  2140                           ; 2 bytes @ 0x5
  2141  000085                     	ds	1
  2142  000086                     ?_strncmp:
  2143                           	opt stack 0
  2144  000086                     Lcd_Set_Cursor@y:
  2145                           	opt stack 0
  2146  000086                     Lcd_Write_String@i:
  2147                           	opt stack 0
  2148  000086                     ___awdiv@quotient:
  2149                           	opt stack 0
  2150  000086                     memset@p:
  2151                           	opt stack 0
  2152  000086                     strncmp@s1:
  2153                           	opt stack 0
  2154                           
  2155                           ; 2 bytes @ 0x6
  2156  000086                     	ds	1
  2157  000087                     ?___lwmod:
  2158                           	opt stack 0
  2159  000087                     Lcd_Set_Cursor@temp:
  2160                           	opt stack 0
  2161  000087                     ___lwmod@dividend:
  2162                           	opt stack 0
  2163  000087                     criarCaracteresCGRAM@character:
  2164                           	opt stack 0
  2165                           
  2166                           ; 48 bytes @ 0x7
  2167  000087                     	ds	1
  2168  000088                     DECtoBCD@val:
  2169                           	opt stack 0
  2170  000088                     atualizarLCD@line1:
  2171                           	opt stack 0
  2172  000088                     strncmp@s2:
  2173                           	opt stack 0
  2174  000088                     ___lldiv@quotient:
  2175                           	opt stack 0
  2176                           
  2177                           ; 4 bytes @ 0x8
  2178  000088                     	ds	1
  2179  000089                     DECtoBCD@res:
  2180                           	opt stack 0
  2181  000089                     ___lwmod@divisor:
  2182                           	opt stack 0
  2183                           
  2184                           ; 2 bytes @ 0x9
  2185  000089                     	ds	1
  2186  00008A                     atualizarLCD@line2:
  2187                           	opt stack 0
  2188  00008A                     I2C_Write@d:
  2189                           	opt stack 0
  2190  00008A                     strncmp@len:
  2191                           	opt stack 0
  2192                           
  2193                           ; 2 bytes @ 0xA
  2194  00008A                     	ds	1
  2195  00008B                     ___lwmod@counter:
  2196                           	opt stack 0
  2197                           
  2198                           ; 1 bytes @ 0xB
  2199  00008B                     	ds	1
  2200  00008C                     ??_strncmp:
  2201  00008C                     ?__doprnt:
  2202                           	opt stack 0
  2203  00008C                     writeEEPROM_ext@data:
  2204                           	opt stack 0
  2205  00008C                     readEEPROM_ext@adress:
  2206                           	opt stack 0
  2207  00008C                     ___lldiv@counter:
  2208                           	opt stack 0
  2209  00008C                     setDS1307TimeDate@ptrToUserVal:
  2210                           	opt stack 0
  2211  00008C                     getDS1307TimeDate@ptrToUserVal:
  2212                           	opt stack 0
  2213  00008C                     atualizarLCD@line3:
  2214                           	opt stack 0
  2215  00008C                     __doprnt@pb:
  2216                           	opt stack 0
  2217                           
  2218                           ; 2 bytes @ 0xC
  2219  00008C                     	ds	1
  2220  00008D                     writeEEPROM_ext@adress:
  2221                           	opt stack 0
  2222  00008D                     readEEPROM_ext@data:
  2223                           	opt stack 0
  2224  00008D                     I2C_Master_Init@c:
  2225                           	opt stack 0
  2226                           
  2227                           ; 4 bytes @ 0xD
  2228  00008D                     	ds	1
  2229  00008E                     ??_setDS1307TimeDate:
  2230  00008E                     ??_salvarLOG:
  2231  00008E                     ?_readEEPROM16_ext:
  2232                           	opt stack 0
  2233  00008E                     atualizarLCD@line4:
  2234                           	opt stack 0
  2235  00008E                     __doprnt@f:
  2236                           	opt stack 0
  2237                           
  2238                           ; 2 bytes @ 0xE
  2239  00008E                     	ds	1
  2240  00008F                     ?_strstr:
  2241                           	opt stack 0
  2242  00008F                     salvarLOG@ultimoLogSalvo:
  2243                           	opt stack 0
  2244  00008F                     strstr@s1:
  2245                           	opt stack 0
  2246                           
  2247                           ; 2 bytes @ 0xF
  2248  00008F                     	ds	1
  2249  000090                     ??_readEEPROM16_ext:
  2250  000090                     atualizarLCD@i:
  2251                           	opt stack 0
  2252  000090                     __doprnt@ap:
  2253                           	opt stack 0
  2254                           
  2255                           ; 2 bytes @ 0x10
  2256  000090                     	ds	1
  2257  000091                     ??_I2C_Master_Init:
  2258  000091                     readEEPROM16_ext@data:
  2259                           	opt stack 0
  2260  000091                     strstr@s2:
  2261                           	opt stack 0
  2262                           
  2263                           ; 2 bytes @ 0x11
  2264  000091                     	ds	1
  2265  000092                     ??__doprnt:
  2266                           
  2267                           ; 1 bytes @ 0x12
  2268  000092                     	ds	1
  2269  000093                     readEEPROM16_ext@adress:
  2270                           	opt stack 0
  2271  000093                     aguardaBuffer@str:
  2272                           	opt stack 0
  2273                           
  2274                           ; 2 bytes @ 0x13
  2275  000093                     	ds	1
  2276  000094                     lerParametros@verifica_memoria_nova:
  2277                           	opt stack 0
  2278                           
  2279                           ; 1 bytes @ 0x14
  2280  000094                     	ds	1
  2281  000095                     lerParametros@i:
  2282                           	opt stack 0
  2283                           
  2284                           ; 1 bytes @ 0x15
  2285  000095                     	ds	1
  2286  000096                     __doprnt@prec:
  2287                           	opt stack 0
  2288                           
  2289                           ; 1 bytes @ 0x16
  2290  000096                     	ds	1
  2291  000097                     __doprnt@val:
  2292                           	opt stack 0
  2293                           
  2294                           ; 2 bytes @ 0x17
  2295  000097                     	ds	2
  2296  000099                     __doprnt@len:
  2297                           	opt stack 0
  2298                           
  2299                           ; 2 bytes @ 0x19
  2300  000099                     	ds	2
  2301  00009B                     __doprnt@flag:
  2302                           	opt stack 0
  2303                           
  2304                           ; 1 bytes @ 0x1B
  2305  00009B                     	ds	1
  2306  00009C                     __doprnt@cp:
  2307                           	opt stack 0
  2308                           
  2309                           ; 2 bytes @ 0x1C
  2310  00009C                     	ds	2
  2311  00009E                     __doprnt@width:
  2312                           	opt stack 0
  2313                           
  2314                           ; 2 bytes @ 0x1E
  2315  00009E                     	ds	2
  2316  0000A0                     __doprnt@c:
  2317                           	opt stack 0
  2318                           
  2319                           ; 1 bytes @ 0x20
  2320  0000A0                     	ds	1
  2321  0000A1                     ?_sprintf:
  2322                           	opt stack 0
  2323  0000A1                     ?_printf:
  2324                           	opt stack 0
  2325  0000A1                     printf@f:
  2326                           	opt stack 0
  2327  0000A1                     sprintf@wh:
  2328                           	opt stack 0
  2329                           
  2330                           ; 2 bytes @ 0x21
  2331  0000A1                     	ds	2
  2332  0000A3                     sprintf@f:
  2333                           	opt stack 0
  2334                           
  2335                           ; 2 bytes @ 0x23
  2336  0000A3                     	ds	12
  2337  0000AF                     sprintf@ap:
  2338                           	opt stack 0
  2339                           
  2340                           ; 2 bytes @ 0x2F
  2341  0000AF                     	ds	2
  2342  0000B1                     sprintf@pb:
  2343                           	opt stack 0
  2344                           
  2345                           ; 4 bytes @ 0x31
  2346  0000B1                     	ds	4
  2347  0000B5                     ??_tela_testeBombas:
  2348  0000B5                     ??_dataLoger:
  2349  0000B5                     ?_intToFloatStr:
  2350                           	opt stack 0
  2351  0000B5                     ?_getSerial:
  2352                           	opt stack 0
  2353  0000B5                     getSerial@str:
  2354                           	opt stack 0
  2355  0000B5                     printf@ap:
  2356                           	opt stack 0
  2357                           
  2358                           ; 2 bytes @ 0x35
  2359  0000B5                     	ds	2
  2360  0000B7                     getSerial@end:
  2361                           	opt stack 0
  2362  0000B7                     _criarCaracteresCGRAM$1377:
  2363                           	opt stack 0
  2364  0000B7                     _tela_testeBombas$1409:
  2365                           	opt stack 0
  2366  0000B7                     intToFloatStr@end:
  2367                           	opt stack 0
  2368  0000B7                     printf@pb:
  2369                           	opt stack 0
  2370                           
  2371                           ; 4 bytes @ 0x37
  2372  0000B7                     	ds	1
  2373  0000B8                     ??_getSerial:
  2374                           
  2375                           ; 1 bytes @ 0x38
  2376  0000B8                     	ds	1
  2377  0000B9                     criarCaracteresCGRAM@k:
  2378                           	opt stack 0
  2379                           
  2380                           ; 1 bytes @ 0x39
  2381  0000B9                     	ds	1
  2382  0000BA                     criarCaracteresCGRAM@j:
  2383                           	opt stack 0
  2384  0000BA                     dataLoger@logs:
  2385                           	opt stack 0
  2386  0000BA                     getSerial@length:
  2387                           	opt stack 0
  2388                           
  2389                           ; 2 bytes @ 0x3A
  2390  0000BA                     	ds	1
  2391  0000BB                     ??_comunicarTeste:
  2392  0000BB                     ??_enviaSMS:
  2393  0000BB                     criarCaracteresCGRAM@i:
  2394                           	opt stack 0
  2395  0000BB                     _dataLoger$1428:
  2396                           	opt stack 0
  2397  0000BB                     intToFloatStr@conv:
  2398                           	opt stack 0
  2399                           
  2400                           ; 4 bytes @ 0x3B
  2401  0000BB                     	ds	1
  2402  0000BC                     getSerial@i:
  2403                           	opt stack 0
  2404                           
  2405                           ; 1 bytes @ 0x3C
  2406  0000BC                     	ds	1
  2407  0000BD                     getSerial@ret:
  2408                           	opt stack 0
  2409  0000BD                     _comunicarTeste$1187:
  2410                           	opt stack 0
  2411  0000BD                     _enviaSMS$1201:
  2412                           	opt stack 0
  2413  0000BD                     _dataLoger$1434:
  2414                           	opt stack 0
  2415                           
  2416                           ; 2 bytes @ 0x3D
  2417  0000BD                     	ds	2
  2418  0000BF                     ??_configuraTelefones:
  2419  0000BF                     ?_atoi:
  2420                           	opt stack 0
  2421  0000BF                     intToFloatStr@valor:
  2422                           	opt stack 0
  2423  0000BF                     _enviaSMS$1213:
  2424                           	opt stack 0
  2425  0000BF                     _dataLoger$1439:
  2426                           	opt stack 0
  2427  0000BF                     atoi@s:
  2428                           	opt stack 0
  2429                           
  2430                           ; 2 bytes @ 0x3F
  2431  0000BF                     	ds	1
  2432  0000C0                     intToFloatStr@pr:
  2433                           	opt stack 0
  2434                           
  2435                           ; 2 bytes @ 0x40
  2436  0000C0                     	ds	1
  2437  0000C1                     ??_atoi:
  2438  0000C1                     _enviaSMS$1214:
  2439                           	opt stack 0
  2440  0000C1                     _configuraTelefones$1454:
  2441                           	opt stack 0
  2442                           
  2443                           ; 2 bytes @ 0x41
  2444  0000C1                     	ds	1
  2445  0000C2                     _telaPrincipal$2347:
  2446                           	opt stack 0
  2447  0000C2                     _ajusteSP_Bombas$2348:
  2448                           	opt stack 0
  2449                           
  2450                           ; 2 bytes @ 0x42
  2451  0000C2                     	ds	1
  2452  0000C3                     configuraTelefones@i:
  2453                           	opt stack 0
  2454  0000C3                     atoi@sign:
  2455                           	opt stack 0
  2456  0000C3                     _enviaSMS$1215:
  2457                           	opt stack 0
  2458                           
  2459                           ; 2 bytes @ 0x43
  2460  0000C3                     	ds	1
  2461  0000C4                     atoi@a:
  2462                           	opt stack 0
  2463                           
  2464                           ; 2 bytes @ 0x44
  2465  0000C4                     	ds	1
  2466  0000C5                     _enviaSMS$1221:
  2467                           	opt stack 0
  2468                           
  2469                           ; 2 bytes @ 0x45
  2470  0000C5                     	ds	1
  2471  0000C6                     ??_getSinalSIM800L:
  2472                           
  2473                           ; 1 bytes @ 0x46
  2474  0000C6                     	ds	1
  2475  0000C7                     enviaSMS@tipo:
  2476                           	opt stack 0
  2477                           
  2478                           ; 1 bytes @ 0x47
  2479  0000C7                     	ds	1
  2480  0000C8                     ??_acaoBombas:
  2481  0000C8                     ??_acaoTesteBombas:
  2482  0000C8                     getSinalSIM800L@sinal:
  2483                           	opt stack 0
  2484                           
  2485                           ; 2 bytes @ 0x48
  2486  0000C8                     	ds	5
  2487  0000CD                     _acaoTesteBombas$2346:
  2488                           	opt stack 0
  2489                           
  2490                           ; 2 bytes @ 0x4D
  2491  0000CD                     	ds	2
  2492  0000CF                     _acaoTesteBombas$1295:
  2493                           	opt stack 0
  2494                           
  2495                           ; 2 bytes @ 0x4F
  2496  0000CF                     	ds	2
  2497  0000D1                     _acaoTesteBombas$1311:
  2498                           	opt stack 0
  2499                           
  2500                           ; 2 bytes @ 0x51
  2501  0000D1                     	ds	2
  2502  0000D3                     _acaoTesteBombas$1316:
  2503                           	opt stack 0
  2504                           
  2505                           ; 2 bytes @ 0x53
  2506  0000D3                     	ds	2
  2507  0000D5                     _acaoTesteBombas$1321:
  2508                           	opt stack 0
  2509                           
  2510                           ; 2 bytes @ 0x55
  2511  0000D5                     	ds	2
  2512  0000D7                     acaoTesteBombas@intervalo:
  2513                           	opt stack 0
  2514                           
  2515                           ; 1 bytes @ 0x57
  2516  0000D7                     	ds	1
  2517  0000D8                     acaoTesteBombas@i:
  2518                           	opt stack 0
  2519                           
  2520                           ; 1 bytes @ 0x58
  2521  0000D8                     	ds	1
  2522  0000D9                     tblptru	equ	0xFF8
  2523                           tblptrh	equ	0xFF7
  2524                           tblptrl	equ	0xFF6
  2525                           tablat	equ	0xFF5
  2526                           postinc0	equ	0xFEE
  2527                           wreg	equ	0xFE8
  2528                           postdec1	equ	0xFE5
  2529                           fsr1l	equ	0xFE1
  2530                           
  2531                           ; 1 bytes @ 0x59
  2532                           
  2533                           	psect	cstackCOMRAM
  2534  000001                     __pcstackCOMRAM:
  2535                           	opt stack 0
  2536  000001                     ??i2_I2C_Wait:
  2537  000001                     ?_readADC:
  2538                           	opt stack 0
  2539  000001                     ?___ftpack:
  2540                           	opt stack 0
  2541  000001                     i2BCDtoDEC@val:
  2542                           	opt stack 0
  2543  000001                     i2delay@x:
  2544                           	opt stack 0
  2545  000001                     ___ftpack@arg:
  2546                           	opt stack 0
  2547  000001                     ___ftge@ff1:
  2548                           	opt stack 0
  2549                           
  2550                           ; 3 bytes @ 0x0
  2551  000001                     	ds	1
  2552  000002                     ?i2_I2C_Read:
  2553                           	opt stack 0
  2554  000002                     i2I2C_Write@d:
  2555                           	opt stack 0
  2556  000002                     i2I2C_Read@a:
  2557                           	opt stack 0
  2558                           
  2559                           ; 2 bytes @ 0x1
  2560  000002                     	ds	1
  2561  000003                     ??_readADC:
  2562  000003                     ??i2_delay:
  2563                           
  2564                           ; 1 bytes @ 0x2
  2565  000003                     	ds	1
  2566  000004                     ___ftpack@exp:
  2567                           	opt stack 0
  2568  000004                     i2writeEEPROM_ext@data:
  2569                           	opt stack 0
  2570  000004                     i2I2C_Read@temp:
  2571                           	opt stack 0
  2572  000004                     ___ftge@ff2:
  2573                           	opt stack 0
  2574                           
  2575                           ; 3 bytes @ 0x3
  2576  000004                     	ds	1
  2577  000005                     ___ftpack@sign:
  2578                           	opt stack 0
  2579  000005                     i2writeEEPROM_ext@adress:
  2580                           	opt stack 0
  2581                           
  2582                           ; 1 bytes @ 0x4
  2583  000005                     	ds	1
  2584  000006                     ??___ftpack:
  2585  000006                     writeEEPROM16_ext@data:
  2586                           	opt stack 0
  2587  000006                     i2getDS1307TimeDate@ptrToUserVal:
  2588                           	opt stack 0
  2589                           
  2590                           ; 2 bytes @ 0x5
  2591  000006                     	ds	1
  2592  000007                     ??___ftge:
  2593                           
  2594                           ; 1 bytes @ 0x6
  2595  000007                     	ds	1
  2596  000008                     writeEEPROM16_ext@adress:
  2597                           	opt stack 0
  2598                           
  2599                           ; 1 bytes @ 0x7
  2600  000008                     	ds	1
  2601  000009                     ?___lwtoft:
  2602                           	opt stack 0
  2603  000009                     _timer$1324:
  2604                           	opt stack 0
  2605  000009                     ___lwtoft@c:
  2606                           	opt stack 0
  2607                           
  2608                           ; 2 bytes @ 0x8
  2609  000009                     	ds	2
  2610  00000B                     _timer$1325:
  2611                           	opt stack 0
  2612                           
  2613                           ; 2 bytes @ 0xA
  2614  00000B                     	ds	1
  2615  00000C                     ?___ftmul:
  2616                           	opt stack 0
  2617  00000C                     ___ftmul@f1:
  2618                           	opt stack 0
  2619                           
  2620                           ; 3 bytes @ 0xB
  2621  00000C                     	ds	1
  2622  00000D                     _timer$1326:
  2623                           	opt stack 0
  2624                           
  2625                           ; 2 bytes @ 0xC
  2626  00000D                     	ds	2
  2627  00000F                     ___ftmul@f2:
  2628                           	opt stack 0
  2629                           
  2630                           ; 3 bytes @ 0xE
  2631  00000F                     	ds	3
  2632  000012                     ??___ftmul:
  2633                           
  2634                           ; 1 bytes @ 0x11
  2635  000012                     	ds	3
  2636  000015                     ___ftmul@exp:
  2637                           	opt stack 0
  2638                           
  2639                           ; 1 bytes @ 0x14
  2640  000015                     	ds	1
  2641  000016                     ___ftmul@f3_as_product:
  2642                           	opt stack 0
  2643                           
  2644                           ; 3 bytes @ 0x15
  2645  000016                     	ds	3
  2646  000019                     ___ftmul@cntr:
  2647                           	opt stack 0
  2648                           
  2649                           ; 1 bytes @ 0x18
  2650  000019                     	ds	1
  2651  00001A                     ___ftmul@sign:
  2652                           	opt stack 0
  2653                           
  2654                           ; 1 bytes @ 0x19
  2655  00001A                     	ds	1
  2656  00001B                     ?___ftadd:
  2657                           	opt stack 0
  2658  00001B                     ?___ftdiv:
  2659                           	opt stack 0
  2660  00001B                     ?___fttol:
  2661                           	opt stack 0
  2662  00001B                     ___ftadd@f1:
  2663                           	opt stack 0
  2664  00001B                     ___ftdiv@f1:
  2665                           	opt stack 0
  2666  00001B                     ___fttol@f1:
  2667                           	opt stack 0
  2668                           
  2669                           ; 3 bytes @ 0x1A
  2670  00001B                     	ds	3
  2671  00001E                     ___ftadd@f2:
  2672                           	opt stack 0
  2673  00001E                     ___ftdiv@f2:
  2674                           	opt stack 0
  2675                           
  2676                           ; 3 bytes @ 0x1D
  2677  00001E                     	ds	1
  2678  00001F                     ??___fttol:
  2679                           
  2680                           ; 1 bytes @ 0x1E
  2681  00001F                     	ds	2
  2682  000021                     ??___ftadd:
  2683  000021                     ??___ftdiv:
  2684                           
  2685                           ; 1 bytes @ 0x20
  2686  000021                     	ds	3
  2687  000024                     ___ftadd@sign:
  2688                           	opt stack 0
  2689  000024                     ___ftdiv@cntr:
  2690                           	opt stack 0
  2691  000024                     ___fttol@sign1:
  2692                           	opt stack 0
  2693                           
  2694                           ; 1 bytes @ 0x23
  2695  000024                     	ds	1
  2696  000025                     ___ftadd@exp2:
  2697                           	opt stack 0
  2698  000025                     ___ftdiv@f3:
  2699                           	opt stack 0
  2700  000025                     ___fttol@lval:
  2701                           	opt stack 0
  2702                           
  2703                           ; 4 bytes @ 0x24
  2704  000025                     	ds	1
  2705  000026                     ___ftadd@exp1:
  2706                           	opt stack 0
  2707                           
  2708                           ; 1 bytes @ 0x25
  2709  000026                     	ds	2
  2710  000028                     ___ftdiv@exp:
  2711                           	opt stack 0
  2712                           
  2713                           ; 1 bytes @ 0x27
  2714  000028                     	ds	1
  2715  000029                     ___ftdiv@sign:
  2716                           	opt stack 0
  2717  000029                     ___fttol@exp1:
  2718                           	opt stack 0
  2719                           
  2720                           ; 1 bytes @ 0x28
  2721  000029                     	ds	1
  2722  00002A                     lerTransdutor@i:
  2723                           	opt stack 0
  2724                           
  2725                           ; 1 bytes @ 0x29
  2726  00002A                     	ds	1
  2727  00002B                     lerTransdutor@_pressao:
  2728                           	opt stack 0
  2729                           
  2730                           ; 3 bytes @ 0x2A
  2731  00002B                     	ds	3
  2732  00002E                     lerTransdutor@tensao:
  2733                           	opt stack 0
  2734                           
  2735                           ; 3 bytes @ 0x2D
  2736  00002E                     	ds	3
  2737  000031                     ??_TIMER:
  2738                           
  2739                           ; 1 bytes @ 0x30
  2740  000031                     	ds	14
  2741  00003F                     TIMER@c:
  2742                           	opt stack 0
  2743                           
  2744                           ; 1 bytes @ 0x3E
  2745  00003F                     	ds	1
  2746                           tblptru	equ	0xFF8
  2747                           tblptrh	equ	0xFF7
  2748                           tblptrl	equ	0xFF6
  2749                           tablat	equ	0xFF5
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           postdec1	equ	0xFE5
  2753                           fsr1l	equ	0xFE1
  2754                           
  2755 ;;
  2756 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2757 ;;
  2758 ;; *************** function _main *****************
  2759 ;; Defined at:
  2760 ;;		line 66 in file "Main.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2774 ;;      Params:         0       0       0       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0       0       0
  2777 ;;      Totals:         0       0       0       0       0       0       0
  2778 ;;Total ram usage:        0 bytes
  2779 ;; Hardware stack levels required when called:   11
  2780 ;; This function calls:
  2781 ;;		_I2C_Master_Init
  2782 ;;		_Lcd_Clear
  2783 ;;		_Lcd_Init
  2784 ;;		_RTC_Init
  2785 ;;		_acaoBombas
  2786 ;;		_acaoTesteBombas
  2787 ;;		_ajusteSP_Bombas
  2788 ;;		_atualizarLCD
  2789 ;;		_btPress
  2790 ;;		_configuraRegistradores
  2791 ;;		_configuraTelefones
  2792 ;;		_configurarEstacionaria
  2793 ;;		_criarCaracteresCGRAM
  2794 ;;		_dataLoger
  2795 ;;		_delay
  2796 ;;		_getDS1307TimeDate
  2797 ;;		_getSinalSIM800L
  2798 ;;		_informacoes
  2799 ;;		_lerParametros
  2800 ;;		_setShiftREG
  2801 ;;		_sprintf
  2802 ;;		_telaPrincipal
  2803 ;;		_tela_ajusteRTC
  2804 ;;		_tela_testeBombas
  2805 ;;		_verificarIntervaloTesteBombas
  2806 ;; This function is called by:
  2807 ;;		Startup code after reset
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text0
  2812  000F96                     __ptext0:
  2813                           	opt stack 0
  2814  000F96                     _main:
  2815                           	opt stack 0
  2816  000F96  FFFF               	dw	65535	; assembler added errata NOP
  2817                           
  2818                           ;Main.c: 68: configuraRegistradores();
  2819                           
  2820                           ;incstack = 0
  2821  000F98  EC50  F036         	call	_configuraRegistradores	;wreg free
  2822                           
  2823                           ;Main.c: 69: I2C_Master_Init(100000);
  2824  000F9C  0EA0               	movlw	160
  2825  000F9E  0100               	movlb	0	; () banked
  2826  000FA0  6F8D               	movwf	I2C_Master_Init@c& (0+255),b
  2827  000FA2  0E86               	movlw	134
  2828  000FA4  6F8E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  2829  000FA6  0E01               	movlw	1
  2830  000FA8  6F8F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  2831  000FAA  0E00               	movlw	0
  2832  000FAC  6F90               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  2833  000FAE  ECA8  F036         	call	_I2C_Master_Init	;wreg free
  2834                           
  2835                           ;Main.c: 70: delay(200);
  2836  000FB2  0E00               	movlw	0
  2837  000FB4  0100               	movlb	0	; () banked
  2838  000FB6  6F81               	movwf	(delay@x+1)& (0+255),b
  2839  000FB8  0EC8               	movlw	200
  2840  000FBA  6F80               	movwf	delay@x& (0+255),b
  2841  000FBC  EC5B  F033         	call	_delay	;wreg free
  2842                           
  2843                           ;Main.c: 71: RTC_Init();
  2844  000FC0  EC3F  F033         	call	_RTC_Init	;wreg free
  2845                           
  2846                           ;Main.c: 72: delay(100);
  2847  000FC4  0E00               	movlw	0
  2848  000FC6  0100               	movlb	0	; () banked
  2849  000FC8  6F81               	movwf	(delay@x+1)& (0+255),b
  2850  000FCA  0E64               	movlw	100
  2851  000FCC  6F80               	movwf	delay@x& (0+255),b
  2852  000FCE  EC5B  F033         	call	_delay	;wreg free
  2853                           
  2854                           ;Main.c: 73: getDS1307TimeDate(&rtc);
  2855  000FD2  0E6F               	movlw	low _rtc
  2856  000FD4  0100               	movlb	0	; () banked
  2857  000FD6  6F8C               	movwf	getDS1307TimeDate@ptrToUserVal& (0+255),b
  2858  000FD8  0E00               	movlw	high _rtc
  2859  000FDA  0100               	movlb	0	; () banked
  2860  000FDC  6F8D               	movwf	(getDS1307TimeDate@ptrToUserVal+1)& (0+255),b
  2861  000FDE  EC9F  F01B         	call	_getDS1307TimeDate	;wreg free
  2862                           
  2863                           ;Main.c: 74: Lcd_Init();
  2864  000FE2  EC40  F038         	call	_Lcd_Init	;wreg free
  2865                           
  2866                           ;Main.c: 75: Lcd_Clear();
  2867  000FE6  EC44  F032         	call	_Lcd_Clear	;wreg free
  2868                           
  2869                           ;Main.c: 76: criarCaracteresCGRAM();
  2870  000FEA  EC62  F01E         	call	_criarCaracteresCGRAM	;wreg free
  2871                           
  2872                           ;Main.c: 77: delay(100);
  2873  000FEE  0E00               	movlw	0
  2874  000FF0  0100               	movlb	0	; () banked
  2875  000FF2  6F81               	movwf	(delay@x+1)& (0+255),b
  2876  000FF4  0E64               	movlw	100
  2877  000FF6  6F80               	movwf	delay@x& (0+255),b
  2878  000FF8  EC5B  F033         	call	_delay	;wreg free
  2879                           
  2880                           ;Main.c: 78: lerParametros();
  2881  000FFC  ECFD  F01A         	call	_lerParametros	;wreg free
  2882                           
  2883                           ;Main.c: 79: delay(50);
  2884  001000  0E00               	movlw	0
  2885  001002  0100               	movlb	0	; () banked
  2886  001004  6F81               	movwf	(delay@x+1)& (0+255),b
  2887  001006  0E32               	movlw	50
  2888  001008  6F80               	movwf	delay@x& (0+255),b
  2889  00100A  EC5B  F033         	call	_delay	;wreg free
  2890  00100E                     l878:
  2891  00100E  FFFF               	dw	65535	; assembler added errata NOP
  2892  001010  0004               	clrwdt		;# 
  2893                           
  2894                           ;Main.c: 85: if (!executandoTeste || pressao > 99 || pressao < 0) {
  2895  001012  0100               	movlb	0	; () banked
  2896  001014  51F2               	movf	_executandoTeste& (0+255),w,b
  2897  001016  B4D8               	btfsc	status,2,c
  2898  001018  D00F               	goto	l9960
  2899                           
  2900                           ; BSR set to: 0
  2901  00101A  0100               	movlb	0	; () banked
  2902  00101C  BFF9               	btfsc	(_pressao+1)& (0+255),7,b
  2903  00101E  D008               	goto	l9958
  2904  001020  0100               	movlb	0	; () banked
  2905  001022  51F9               	movf	(_pressao+1)& (0+255),w,b
  2906  001024  E109               	bnz	l9960
  2907  001026  0E64               	movlw	100
  2908  001028  0100               	movlb	0	; () banked
  2909  00102A  5DF8               	subwf	_pressao& (0+255),w,b
  2910  00102C  B0D8               	btfsc	status,0,c
  2911  00102E  D004               	goto	l9960
  2912  001030                     l9958:
  2913  001030  FFFF               	dw	65535	; assembler added errata NOP
  2914                           
  2915                           ; BSR set to: 0
  2916  001032  0100               	movlb	0	; () banked
  2917  001034  AFF9               	btfss	(_pressao+1)& (0+255),7,b
  2918  001036  D003               	bra	L43
  2919  001038                     l9960:
  2920  001038  FFFF               	dw	65535	; assembler added errata NOP
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;Main.c: 86: acaoBombas();
  2924  00103A  ECCD  F018         	call	_acaoBombas	;wreg free
  2925  00103E                     L43:
  2926                           
  2927                           ;Main.c: 87: }
  2928                           ;Main.c: 89: verificarIntervaloTesteBombas();
  2929  00103E  ECFD  F035         	call	_verificarIntervaloTesteBombas	;wreg free
  2930                           
  2931                           ;Main.c: 91: setShiftREG();
  2932  001042  EC7B  F036         	call	_setShiftREG	;wreg free
  2933                           
  2934                           ;Main.c: 92: getSinalSIM800L();
  2935  001046  EC1C  F016         	call	_getSinalSIM800L	;wreg free
  2936                           
  2937                           ;Main.c: 95: switch (menu_posi) {
  2938  00104A  D09D               	goto	l9994
  2939  00104C                     l9968:
  2940  00104C  FFFF               	dw	65535	; assembler added errata NOP
  2941                           
  2942                           ;Main.c: 97: telaPrincipal();
  2943  00104E  EC1D  F015         	call	_telaPrincipal	;wreg free
  2944                           
  2945                           ;Main.c: 99: break;
  2946  001052  D0BE               	goto	l9996
  2947  001054                     l9970:
  2948  001054  FFFF               	dw	65535	; assembler added errata NOP
  2949                           
  2950                           ;Main.c: 101: sprintf(&line1[1], "DATA/HORA");
  2951  001056  0E7C               	movlw	low (_line1+1)
  2952  001058  0100               	movlb	0	; () banked
  2953  00105A  6FA1               	movwf	sprintf@wh& (0+255),b
  2954  00105C  0E01               	movlw	high (_line1+1)
  2955  00105E  0100               	movlb	0	; () banked
  2956  001060  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  2957  001062  0E4F               	movlw	low STR_106
  2958  001064  0100               	movlb	0	; () banked
  2959  001066  6FA3               	movwf	sprintf@f& (0+255),b
  2960  001068  0E7F               	movlw	high STR_106
  2961  00106A  0100               	movlb	0	; () banked
  2962  00106C  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  2963  00106E  EC25  F036         	call	_sprintf	;wreg free
  2964                           
  2965                           ;Main.c: 102: sprintf(&line2[1], "PRESSAO DA REDE");
  2966  001072  0E67               	movlw	low (_line2+1)
  2967  001074  0100               	movlb	0	; () banked
  2968  001076  6FA1               	movwf	sprintf@wh& (0+255),b
  2969  001078  0E01               	movlw	high (_line2+1)
  2970  00107A  0100               	movlb	0	; () banked
  2971  00107C  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  2972  00107E  0E21               	movlw	low STR_107
  2973  001080  0100               	movlb	0	; () banked
  2974  001082  6FA3               	movwf	sprintf@f& (0+255),b
  2975  001084  0E7E               	movlw	high STR_107
  2976  001086  0100               	movlb	0	; () banked
  2977  001088  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  2978  00108A  EC25  F036         	call	_sprintf	;wreg free
  2979                           
  2980                           ;Main.c: 103: sprintf(&line3[1], "PARTIDA COMBUSTAO");
  2981  00108E  0E52               	movlw	low (_line3+1)
  2982  001090  0100               	movlb	0	; () banked
  2983  001092  6FA1               	movwf	sprintf@wh& (0+255),b
  2984  001094  0E01               	movlw	high (_line3+1)
  2985  001096  0100               	movlb	0	; () banked
  2986  001098  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  2987  00109A  0E88               	movlw	low STR_108
  2988  00109C  0100               	movlb	0	; () banked
  2989  00109E  6FA3               	movwf	sprintf@f& (0+255),b
  2990  0010A0  0E7D               	movlw	high STR_108
  2991  0010A2  0100               	movlb	0	; () banked
  2992  0010A4  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  2993  0010A6  EC25  F036         	call	_sprintf	;wreg free
  2994                           
  2995                           ;Main.c: 104: sprintf(&line4[1], "TELEFONES");
  2996  0010AA  0E3D               	movlw	low (_line4+1)
  2997  0010AC  0100               	movlb	0	; () banked
  2998  0010AE  6FA1               	movwf	sprintf@wh& (0+255),b
  2999  0010B0  0E01               	movlw	high (_line4+1)
  3000  0010B2  0100               	movlb	0	; () banked
  3001  0010B4  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  3002  0010B6  0E63               	movlw	low STR_109
  3003  0010B8  0100               	movlb	0	; () banked
  3004  0010BA  6FA3               	movwf	sprintf@f& (0+255),b
  3005  0010BC  0E7F               	movlw	high STR_109
  3006  0010BE  0100               	movlb	0	; () banked
  3007  0010C0  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  3008  0010C2  EC25  F036         	call	_sprintf	;wreg free
  3009                           
  3010                           ;Main.c: 105: break;
  3011  0010C6  D084               	goto	l9996
  3012  0010C8                     l9972:
  3013  0010C8  FFFF               	dw	65535	; assembler added errata NOP
  3014                           
  3015                           ;Main.c: 107: sprintf(&line1[1], "PERIODO DE TESTES");
  3016  0010CA  0E7C               	movlw	low (_line1+1)
  3017  0010CC  0100               	movlb	0	; () banked
  3018  0010CE  6FA1               	movwf	sprintf@wh& (0+255),b
  3019  0010D0  0E01               	movlw	high (_line1+1)
  3020  0010D2  0100               	movlb	0	; () banked
  3021  0010D4  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  3022  0010D6  0E9A               	movlw	low STR_110
  3023  0010D8  0100               	movlb	0	; () banked
  3024  0010DA  6FA3               	movwf	sprintf@f& (0+255),b
  3025  0010DC  0E7D               	movlw	high STR_110
  3026  0010DE  0100               	movlb	0	; () banked
  3027  0010E0  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  3028  0010E2  EC25  F036         	call	_sprintf	;wreg free
  3029                           
  3030                           ;Main.c: 108: sprintf(&line2[1], "DATALOGER");
  3031  0010E6  0E67               	movlw	low (_line2+1)
  3032  0010E8  0100               	movlb	0	; () banked
  3033  0010EA  6FA1               	movwf	sprintf@wh& (0+255),b
  3034  0010EC  0E01               	movlw	high (_line2+1)
  3035  0010EE  0100               	movlb	0	; () banked
  3036  0010F0  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  3037  0010F2  0E59               	movlw	low STR_111
  3038  0010F4  0100               	movlb	0	; () banked
  3039  0010F6  6FA3               	movwf	sprintf@f& (0+255),b
  3040  0010F8  0E7F               	movlw	high STR_111
  3041  0010FA  0100               	movlb	0	; () banked
  3042  0010FC  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  3043  0010FE  EC25  F036         	call	_sprintf	;wreg free
  3044                           
  3045                           ;Main.c: 109: sprintf(&line3[1], "INFO VERSAO");
  3046  001102  0E52               	movlw	low (_line3+1)
  3047  001104  0100               	movlb	0	; () banked
  3048  001106  6FA1               	movwf	sprintf@wh& (0+255),b
  3049  001108  0E01               	movlw	high (_line3+1)
  3050  00110A  0100               	movlb	0	; () banked
  3051  00110C  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  3052  00110E  0EF5               	movlw	low STR_112
  3053  001110  0100               	movlb	0	; () banked
  3054  001112  6FA3               	movwf	sprintf@f& (0+255),b
  3055  001114  0E7E               	movlw	high STR_112
  3056  001116  0100               	movlb	0	; () banked
  3057  001118  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  3058  00111A  EC25  F036         	call	_sprintf	;wreg free
  3059                           
  3060                           ;Main.c: 110: sprintf(&line4[1], "Iniciar Testes");
  3061  00111E  0E3D               	movlw	low (_line4+1)
  3062  001120  0100               	movlb	0	; () banked
  3063  001122  6FA1               	movwf	sprintf@wh& (0+255),b
  3064  001124  0E01               	movlw	high (_line4+1)
  3065  001126  0100               	movlb	0	; () banked
  3066  001128  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  3067  00112A  0E8B               	movlw	low STR_113
  3068  00112C  0100               	movlb	0	; () banked
  3069  00112E  6FA3               	movwf	sprintf@f& (0+255),b
  3070  001130  0E7E               	movlw	high STR_113
  3071  001132  0100               	movlb	0	; () banked
  3072  001134  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  3073  001136  EC25  F036         	call	_sprintf	;wreg free
  3074                           
  3075                           ;Main.c: 111: break;
  3076  00113A  D04A               	goto	l9996
  3077  00113C                     l9974:
  3078  00113C  FFFF               	dw	65535	; assembler added errata NOP
  3079                           
  3080                           ;Main.c: 113: tela_ajusteRTC();
  3081  00113E  EC92  F010         	call	_tela_ajusteRTC	;wreg free
  3082                           
  3083                           ;Main.c: 114: break;
  3084  001142  D046               	goto	l9996
  3085  001144                     l9976:
  3086  001144  FFFF               	dw	65535	; assembler added errata NOP
  3087                           
  3088                           ;Main.c: 116: ajusteSP_Bombas();
  3089  001146  ECF7  F00D         	call	_ajusteSP_Bombas	;wreg free
  3090                           
  3091                           ;Main.c: 117: break;
  3092  00114A  D042               	goto	l9996
  3093  00114C                     l9978:
  3094  00114C  FFFF               	dw	65535	; assembler added errata NOP
  3095                           
  3096                           ;Main.c: 119: configurarEstacionaria();
  3097  00114E  ECF9  F017         	call	_configurarEstacionaria	;wreg free
  3098                           
  3099                           ;Main.c: 120: break;
  3100  001152  D03E               	goto	l9996
  3101  001154                     l9980:
  3102  001154  FFFF               	dw	65535	; assembler added errata NOP
  3103                           
  3104                           ;Main.c: 122: configuraTelefones();
  3105  001156  ECF3  F009         	call	_configuraTelefones	;wreg free
  3106                           
  3107                           ;Main.c: 123: break;
  3108  00115A  D03A               	goto	l9996
  3109  00115C                     l9982:
  3110  00115C  FFFF               	dw	65535	; assembler added errata NOP
  3111                           
  3112                           ;Main.c: 125: tela_testeBombas();
  3113  00115E  EC0D  F014         	call	_tela_testeBombas	;wreg free
  3114                           
  3115                           ;Main.c: 126: break;
  3116  001162  D036               	goto	l9996
  3117  001164                     l9984:
  3118  001164  FFFF               	dw	65535	; assembler added errata NOP
  3119                           
  3120                           ;Main.c: 128: dataLoger();
  3121  001166  EC45  F00F         	call	_dataLoger	;wreg free
  3122                           
  3123                           ;Main.c: 129: break;
  3124  00116A  D032               	goto	l9996
  3125  00116C                     l9986:
  3126  00116C  FFFF               	dw	65535	; assembler added errata NOP
  3127                           
  3128                           ;Main.c: 131: informacoes();
  3129  00116E  EC84  F038         	call	_informacoes	;wreg free
  3130                           
  3131                           ;Main.c: 132: break;
  3132  001172  D02E               	goto	l9996
  3133  001174                     l9988:
  3134  001174  FFFF               	dw	65535	; assembler added errata NOP
  3135                           
  3136                           ;Main.c: 134: acaoTesteBombas();
  3137  001176  ECE8  F004         	call	_acaoTesteBombas	;wreg free
  3138                           
  3139                           ;Main.c: 135: break;
  3140  00117A  D02A               	goto	l9996
  3141  00117C                     l9990:
  3142  00117C  FFFF               	dw	65535	; assembler added errata NOP
  3143  00117E  0E00               	movlw	0
  3144  001180  0100               	movlb	0	; () banked
  3145  001182  6FDF               	movwf	_menu_posi& (0+255),b
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;Main.c: 139: }
  3149                           
  3150                           ;Main.c: 138: break;
  3151  001184  D025               	goto	l9996
  3152  001186                     l9994:
  3153  001186  FFFF               	dw	65535	; assembler added errata NOP
  3154  001188  0100               	movlb	0	; () banked
  3155  00118A  51DF               	movf	_menu_posi& (0+255),w,b
  3156                           
  3157                           ; Switch size 1, requested type "space"
  3158                           ; Number of cases is 11, Range of values is 0 to 28
  3159                           ; switch strategies available:
  3160                           ; Name         Instructions Cycles
  3161                           ; simple_byte           34    18 (average)
  3162                           ;	Chosen strategy is simple_byte
  3163  00118C  0A00               	xorlw	0	; case 0
  3164  00118E  B4D8               	btfsc	status,2,c
  3165  001190  D75D               	goto	l9968
  3166  001192  0A01               	xorlw	1	; case 1
  3167  001194  B4D8               	btfsc	status,2,c
  3168  001196  D75E               	goto	l9970
  3169  001198  0A03               	xorlw	3	; case 2
  3170  00119A  B4D8               	btfsc	status,2,c
  3171  00119C  D795               	goto	l9972
  3172  00119E  0A16               	xorlw	22	; case 20
  3173  0011A0  B4D8               	btfsc	status,2,c
  3174  0011A2  D7CC               	goto	l9974
  3175  0011A4  0A01               	xorlw	1	; case 21
  3176  0011A6  B4D8               	btfsc	status,2,c
  3177  0011A8  D7CD               	goto	l9976
  3178  0011AA  0A03               	xorlw	3	; case 22
  3179  0011AC  B4D8               	btfsc	status,2,c
  3180  0011AE  D7CE               	goto	l9978
  3181  0011B0  0A01               	xorlw	1	; case 23
  3182  0011B2  B4D8               	btfsc	status,2,c
  3183  0011B4  D7CF               	goto	l9980
  3184  0011B6  0A0F               	xorlw	15	; case 24
  3185  0011B8  B4D8               	btfsc	status,2,c
  3186  0011BA  D7D0               	goto	l9982
  3187  0011BC  0A01               	xorlw	1	; case 25
  3188  0011BE  B4D8               	btfsc	status,2,c
  3189  0011C0  D7D1               	goto	l9984
  3190  0011C2  0A02               	xorlw	2	; case 27
  3191  0011C4  B4D8               	btfsc	status,2,c
  3192  0011C6  D7D2               	goto	l9986
  3193  0011C8  0A07               	xorlw	7	; case 28
  3194  0011CA  B4D8               	btfsc	status,2,c
  3195  0011CC  D7D3               	goto	l9988
  3196  0011CE  D7D6               	goto	l9990
  3197  0011D0                     l9996:
  3198  0011D0  FFFF               	dw	65535	; assembler added errata NOP
  3199                           
  3200                           ;Main.c: 141: if (menu_posi == 1 | menu_posi == 2) {
  3201  0011D2  0100               	movlb	0	; () banked
  3202  0011D4  05DF               	decf	_menu_posi& (0+255),w,b
  3203  0011D6  B4D8               	btfsc	status,2,c
  3204  0011D8  D0A3               	goto	l10068
  3205                           
  3206                           ; BSR set to: 0
  3207  0011DA  0E02               	movlw	2
  3208  0011DC  0100               	movlb	0	; () banked
  3209  0011DE  19DF               	xorwf	_menu_posi& (0+255),w,b
  3210  0011E0  B4D8               	btfsc	status,2,c
  3211  0011E2  D09E               	goto	l10068
  3212  0011E4  D0D9               	goto	l10082
  3213  0011E6                     l10000:
  3214  0011E6  FFFF               	dw	65535	; assembler added errata NOP
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;Main.c: 145: menu_posi = 1;
  3218  0011E8  0E01               	movlw	1
  3219  0011EA  0100               	movlb	0	; () banked
  3220  0011EC  6FDF               	movwf	_menu_posi& (0+255),b
  3221                           
  3222                           ;Main.c: 146: line1[0] = '>';
  3223  0011EE  0E3E               	movlw	62
  3224  0011F0  0101               	movlb	1	; () banked
  3225  0011F2  6F7B               	movwf	_line1& (0+255),b
  3226                           
  3227                           ; BSR set to: 1
  3228                           ;Main.c: 147: if (btPress(4)) {
  3229  0011F4  0E04               	movlw	4
  3230  0011F6  EC82  F037         	call	_btPress
  3231  0011FA  0900               	iorlw	0
  3232  0011FC  B4D8               	btfsc	status,2,c
  3233  0011FE  D0AB               	goto	l10070
  3234                           
  3235                           ;Main.c: 148: _menu_posi = menu_posi;
  3236  001200  C0DF  F0DE         	movff	_menu_posi,__menu_posi
  3237                           
  3238                           ;Main.c: 149: menu_posi = 20;
  3239  001204  0E14               	movlw	20
  3240  001206  D088               	goto	L6
  3241  001208                     l10008:
  3242  001208  FFFF               	dw	65535	; assembler added errata NOP
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;Main.c: 153: menu_posi = 1;
  3246  00120A  0E01               	movlw	1
  3247  00120C  0100               	movlb	0	; () banked
  3248  00120E  6FDF               	movwf	_menu_posi& (0+255),b
  3249                           
  3250                           ;Main.c: 154: line2[0] = '>';
  3251  001210  0E3E               	movlw	62
  3252  001212  0101               	movlb	1	; () banked
  3253  001214  6F66               	movwf	_line2& (0+255),b
  3254                           
  3255                           ; BSR set to: 1
  3256                           ;Main.c: 155: if (btPress(4)) {
  3257  001216  0E04               	movlw	4
  3258  001218  EC82  F037         	call	_btPress
  3259  00121C  0900               	iorlw	0
  3260  00121E  B4D8               	btfsc	status,2,c
  3261  001220  D09A               	goto	l10070
  3262                           
  3263                           ;Main.c: 156: _menu_posi = menu_posi;
  3264  001222  C0DF  F0DE         	movff	_menu_posi,__menu_posi
  3265                           
  3266                           ;Main.c: 157: menu_posi = 21;
  3267  001226  0E15               	movlw	21
  3268  001228  D077               	goto	L6
  3269  00122A                     l10016:
  3270  00122A  FFFF               	dw	65535	; assembler added errata NOP
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;Main.c: 161: menu_posi = 1;
  3274  00122C  0E01               	movlw	1
  3275  00122E  0100               	movlb	0	; () banked
  3276  001230  6FDF               	movwf	_menu_posi& (0+255),b
  3277                           
  3278                           ;Main.c: 162: line3[0] = '>';
  3279  001232  0E3E               	movlw	62
  3280  001234  0101               	movlb	1	; () banked
  3281  001236  6F51               	movwf	_line3& (0+255),b
  3282                           
  3283                           ; BSR set to: 1
  3284                           ;Main.c: 163: if (btPress(4)) {
  3285  001238  0E04               	movlw	4
  3286  00123A  EC82  F037         	call	_btPress
  3287  00123E  0900               	iorlw	0
  3288  001240  B4D8               	btfsc	status,2,c
  3289  001242  D089               	goto	l10070
  3290                           
  3291                           ;Main.c: 164: _menu_posi = menu_posi;
  3292  001244  C0DF  F0DE         	movff	_menu_posi,__menu_posi
  3293                           
  3294                           ;Main.c: 165: menu_posi = 22;
  3295  001248  0E16               	movlw	22
  3296  00124A  D066               	goto	L6
  3297  00124C                     l10024:
  3298  00124C  FFFF               	dw	65535	; assembler added errata NOP
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;Main.c: 169: menu_posi = 1;
  3302  00124E  0E01               	movlw	1
  3303  001250  0100               	movlb	0	; () banked
  3304  001252  6FDF               	movwf	_menu_posi& (0+255),b
  3305                           
  3306                           ;Main.c: 170: line4[0] = '>';
  3307  001254  0E3E               	movlw	62
  3308  001256  0101               	movlb	1	; () banked
  3309  001258  6F3C               	movwf	_line4& (0+255),b
  3310                           
  3311                           ; BSR set to: 1
  3312                           ;Main.c: 171: if (btPress(4)) {
  3313  00125A  0E04               	movlw	4
  3314  00125C  EC82  F037         	call	_btPress
  3315  001260  0900               	iorlw	0
  3316  001262  B4D8               	btfsc	status,2,c
  3317  001264  D078               	goto	l10070
  3318                           
  3319                           ;Main.c: 172: _menu_posi = menu_posi;
  3320  001266  C0DF  F0DE         	movff	_menu_posi,__menu_posi
  3321                           
  3322                           ;Main.c: 173: menu_posi = 23;
  3323  00126A  0E17               	movlw	23
  3324  00126C  D055               	goto	L6
  3325  00126E                     l10032:
  3326  00126E  FFFF               	dw	65535	; assembler added errata NOP
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;Main.c: 177: menu_posi = 2;
  3330  001270  0E02               	movlw	2
  3331  001272  0100               	movlb	0	; () banked
  3332  001274  6FDF               	movwf	_menu_posi& (0+255),b
  3333                           
  3334                           ;Main.c: 178: line1[0] = '>';
  3335  001276  0E3E               	movlw	62
  3336  001278  0101               	movlb	1	; () banked
  3337  00127A  6F7B               	movwf	_line1& (0+255),b
  3338                           
  3339                           ; BSR set to: 1
  3340                           ;Main.c: 179: if (btPress(4)) {
  3341  00127C  0E04               	movlw	4
  3342  00127E  EC82  F037         	call	_btPress
  3343  001282  0900               	iorlw	0
  3344  001284  B4D8               	btfsc	status,2,c
  3345  001286  D067               	goto	l10070
  3346                           
  3347                           ;Main.c: 180: _menu_posi = menu_posi;
  3348  001288  C0DF  F0DE         	movff	_menu_posi,__menu_posi
  3349                           
  3350                           ;Main.c: 181: menu_posi = 24;
  3351  00128C  0E18               	movlw	24
  3352  00128E  D044               	goto	L6
  3353  001290                     l10040:
  3354  001290  FFFF               	dw	65535	; assembler added errata NOP
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;Main.c: 185: line2[0] = '>';
  3358  001292  0E3E               	movlw	62
  3359  001294  0101               	movlb	1	; () banked
  3360  001296  6F66               	movwf	_line2& (0+255),b
  3361                           
  3362                           ;Main.c: 186: menu_posi = 2;
  3363  001298  0E02               	movlw	2
  3364  00129A  0100               	movlb	0	; () banked
  3365  00129C  6FDF               	movwf	_menu_posi& (0+255),b
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;Main.c: 187: if (btPress(4)) {
  3369  00129E  0E04               	movlw	4
  3370  0012A0  EC82  F037         	call	_btPress
  3371  0012A4  0900               	iorlw	0
  3372  0012A6  B4D8               	btfsc	status,2,c
  3373  0012A8  D056               	goto	l10070
  3374                           
  3375                           ;Main.c: 188: _menu_posi = menu_posi;
  3376  0012AA  C0DF  F0DE         	movff	_menu_posi,__menu_posi
  3377                           
  3378                           ;Main.c: 189: menu_posi = 25;
  3379  0012AE  0E19               	movlw	25
  3380  0012B0  0100               	movlb	0	; () banked
  3381  0012B2  6FDF               	movwf	_menu_posi& (0+255),b
  3382                           
  3383                           ;Main.c: 190: dtl_carregar_log = 1;
  3384  0012B4  0E01               	movlw	1
  3385  0012B6  6E51               	movwf	_dtl_carregar_log,c
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;Main.c: 191: }
  3389                           ;Main.c: 192: break;
  3390  0012B8  D04E               	goto	l10070
  3391  0012BA                     l10048:
  3392  0012BA  FFFF               	dw	65535	; assembler added errata NOP
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;Main.c: 194: line3[0] = '>';
  3396  0012BC  0E3E               	movlw	62
  3397  0012BE  0101               	movlb	1	; () banked
  3398  0012C0  6F51               	movwf	_line3& (0+255),b
  3399                           
  3400                           ;Main.c: 195: menu_posi = 2;
  3401  0012C2  0E02               	movlw	2
  3402  0012C4  0100               	movlb	0	; () banked
  3403  0012C6  6FDF               	movwf	_menu_posi& (0+255),b
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;Main.c: 196: if (btPress(4)) {
  3407  0012C8  0E04               	movlw	4
  3408  0012CA  EC82  F037         	call	_btPress
  3409  0012CE  0900               	iorlw	0
  3410  0012D0  B4D8               	btfsc	status,2,c
  3411  0012D2  D041               	goto	l10070
  3412                           
  3413                           ;Main.c: 197: _menu_posi = menu_posi;
  3414  0012D4  C0DF  F0DE         	movff	_menu_posi,__menu_posi
  3415                           
  3416                           ;Main.c: 198: menu_posi = 27;
  3417  0012D8  0E1B               	movlw	27
  3418  0012DA  D01E               	goto	L6
  3419  0012DC                     l10056:
  3420  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;Main.c: 202: line4[0] = '>';
  3424  0012DE  0E3E               	movlw	62
  3425  0012E0  0101               	movlb	1	; () banked
  3426  0012E2  6F3C               	movwf	_line4& (0+255),b
  3427                           
  3428                           ;Main.c: 203: menu_posi = 2;
  3429  0012E4  0E02               	movlw	2
  3430  0012E6  0100               	movlb	0	; () banked
  3431  0012E8  6FDF               	movwf	_menu_posi& (0+255),b
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;Main.c: 204: if (btPress(4)) {
  3435  0012EA  0E04               	movlw	4
  3436  0012EC  EC82  F037         	call	_btPress
  3437  0012F0  0900               	iorlw	0
  3438  0012F2  B4D8               	btfsc	status,2,c
  3439  0012F4  D030               	goto	l10070
  3440                           
  3441                           ;Main.c: 205: if (!ocorrendoIncendio) {
  3442  0012F6  0100               	movlb	0	; () banked
  3443  0012F8  51F3               	movf	_ocorrendoIncendio& (0+255),w,b
  3444  0012FA  A4D8               	btfss	status,2,c
  3445  0012FC  D02C               	goto	l10070
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;Main.c: 206: menu_posi = 28;
  3449  0012FE  0E1C               	movlw	28
  3450  001300  0100               	movlb	0	; () banked
  3451  001302  6FDF               	movwf	_menu_posi& (0+255),b
  3452                           
  3453                           ;Main.c: 207: executandoTeste = 1;
  3454  001304  0E01               	movlw	1
  3455  001306  0100               	movlb	0	; () banked
  3456  001308  6FF2               	movwf	_executandoTeste& (0+255),b
  3457                           
  3458                           ;Main.c: 208: etapaTesteBombas = 0;
  3459  00130A  0E00               	movlw	0
  3460  00130C  6E6D               	movwf	_etapaTesteBombas,c
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;Main.c: 209: }
  3464                           ;Main.c: 210: }
  3465                           ;Main.c: 211: break;
  3466                           
  3467                           ; BSR set to: 0
  3468  00130E  D023               	goto	l10070
  3469  001310                     l10064:
  3470  001310  FFFF               	dw	65535	; assembler added errata NOP
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;Main.c: 213: sub_menu_posi = 1;
  3474  001312  0E01               	movlw	1
  3475  001314  6E65               	movwf	_sub_menu_posi,c
  3476                           
  3477                           ;Main.c: 214: menu_posi = 1;
  3478  001316  0E01               	movlw	1
  3479  001318                     L6:
  3480  001318  FFFF               	dw	65535	; assembler added errata NOP
  3481  00131A  0100               	movlb	0	; () banked
  3482  00131C  6FDF               	movwf	_menu_posi& (0+255),b
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;Main.c: 216: }
  3486                           
  3487                           ;Main.c: 215: break;
  3488  00131E  D01B               	goto	l10070
  3489  001320                     l10068:
  3490  001320  FFFF               	dw	65535	; assembler added errata NOP
  3491                           
  3492                           ; BSR set to: 0
  3493  001322  5065               	movf	_sub_menu_posi,w,c
  3494                           
  3495                           ; Switch size 1, requested type "space"
  3496                           ; Number of cases is 8, Range of values is 1 to 8
  3497                           ; switch strategies available:
  3498                           ; Name         Instructions Cycles
  3499                           ; simple_byte           25    13 (average)
  3500                           ;	Chosen strategy is simple_byte
  3501  001324  0A01               	xorlw	1	; case 1
  3502  001326  B4D8               	btfsc	status,2,c
  3503  001328  D75E               	goto	l10000
  3504  00132A  0A03               	xorlw	3	; case 2
  3505  00132C  B4D8               	btfsc	status,2,c
  3506  00132E  D76C               	goto	l10008
  3507  001330  0A01               	xorlw	1	; case 3
  3508  001332  B4D8               	btfsc	status,2,c
  3509  001334  D77A               	goto	l10016
  3510  001336  0A07               	xorlw	7	; case 4
  3511  001338  B4D8               	btfsc	status,2,c
  3512  00133A  D788               	goto	l10024
  3513  00133C  0A01               	xorlw	1	; case 5
  3514  00133E  B4D8               	btfsc	status,2,c
  3515  001340  D796               	goto	l10032
  3516  001342  0A03               	xorlw	3	; case 6
  3517  001344  B4D8               	btfsc	status,2,c
  3518  001346  D7A4               	goto	l10040
  3519  001348  0A01               	xorlw	1	; case 7
  3520  00134A  B4D8               	btfsc	status,2,c
  3521  00134C  D7B6               	goto	l10048
  3522  00134E  0A0F               	xorlw	15	; case 8
  3523  001350  B4D8               	btfsc	status,2,c
  3524  001352  D7C4               	goto	l10056
  3525  001354  D7DD               	goto	l10064
  3526  001356                     l10070:
  3527  001356  FFFF               	dw	65535	; assembler added errata NOP
  3528                           
  3529                           ;Main.c: 218: if (btPress(3)) {
  3530  001358  0E03               	movlw	3
  3531  00135A  EC82  F037         	call	_btPress
  3532  00135E  0900               	iorlw	0
  3533  001360  B4D8               	btfsc	status,2,c
  3534  001362  D002               	goto	l10074
  3535                           
  3536                           ;Main.c: 219: sub_menu_posi--;
  3537  001364  0665               	decf	_sub_menu_posi,f,c
  3538                           
  3539                           ;Main.c: 220: } else if (btPress(2)) {
  3540  001366  D018               	goto	l10082
  3541  001368                     l10074:
  3542  001368  FFFF               	dw	65535	; assembler added errata NOP
  3543  00136A  0E02               	movlw	2
  3544  00136C  EC82  F037         	call	_btPress
  3545  001370  0900               	iorlw	0
  3546  001372  B4D8               	btfsc	status,2,c
  3547  001374  D002               	goto	l10078
  3548                           
  3549                           ;Main.c: 221: sub_menu_posi++;
  3550  001376  2A65               	incf	_sub_menu_posi,f,c
  3551                           
  3552                           ;Main.c: 222: } else if (btPress(1)) {
  3553  001378  D00F               	goto	l10082
  3554  00137A                     l10078:
  3555  00137A  FFFF               	dw	65535	; assembler added errata NOP
  3556  00137C  0E01               	movlw	1
  3557  00137E  EC82  F037         	call	_btPress
  3558  001382  0900               	iorlw	0
  3559  001384  B4D8               	btfsc	status,2,c
  3560  001386  D008               	goto	l10082
  3561                           
  3562                           ;Main.c: 223: menu_posi = 0;
  3563  001388  0E00               	movlw	0
  3564  00138A  0100               	movlb	0	; () banked
  3565  00138C  6FDF               	movwf	_menu_posi& (0+255),b
  3566                           
  3567                           ;Main.c: 224: option_posi = 0;
  3568  00138E  0E00               	movlw	0
  3569  001390  0100               	movlb	0	; () banked
  3570  001392  6FE0               	movwf	_option_posi& (0+255),b
  3571                           
  3572                           ;Main.c: 225: sub_menu_posi = 1;
  3573  001394  0E01               	movlw	1
  3574  001396  6E65               	movwf	_sub_menu_posi,c
  3575  001398                     l10082:
  3576  001398  FFFF               	dw	65535	; assembler added errata NOP
  3577                           
  3578                           ;Main.c: 226: }
  3579                           ;Main.c: 227: }
  3580                           ;Main.c: 229: if (menu_posi != 28) {
  3581  00139A  0E1C               	movlw	28
  3582  00139C  0100               	movlb	0	; () banked
  3583  00139E  19DF               	xorwf	_menu_posi& (0+255),w,b
  3584  0013A0  B4D8               	btfsc	status,2,c
  3585  0013A2  D005               	goto	l10086
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;Main.c: 230: executandoTeste = 0;
  3589  0013A4  0E00               	movlw	0
  3590  0013A6  0100               	movlb	0	; () banked
  3591  0013A8  6FF2               	movwf	_executandoTeste& (0+255),b
  3592                           
  3593                           ;Main.c: 231: shift[2] = 0;
  3594  0013AA  0E00               	movlw	0
  3595  0013AC  6E42               	movwf	_shift+2,c
  3596  0013AE                     l10086:
  3597  0013AE  FFFF               	dw	65535	; assembler added errata NOP
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;Main.c: 232: }
  3601                           ;Main.c: 233: atualizarLCD(line1, line2, line3, line4);
  3602  0013B0  0E7B               	movlw	low _line1
  3603  0013B2  0100               	movlb	0	; () banked
  3604  0013B4  6F88               	movwf	atualizarLCD@line1& (0+255),b
  3605  0013B6  0E01               	movlw	high _line1
  3606  0013B8  0100               	movlb	0	; () banked
  3607  0013BA  6F89               	movwf	(atualizarLCD@line1+1)& (0+255),b
  3608  0013BC  0E66               	movlw	low _line2
  3609  0013BE  0100               	movlb	0	; () banked
  3610  0013C0  6F8A               	movwf	atualizarLCD@line2& (0+255),b
  3611  0013C2  0E01               	movlw	high _line2
  3612  0013C4  0100               	movlb	0	; () banked
  3613  0013C6  6F8B               	movwf	(atualizarLCD@line2+1)& (0+255),b
  3614  0013C8  0E51               	movlw	low _line3
  3615  0013CA  0100               	movlb	0	; () banked
  3616  0013CC  6F8C               	movwf	atualizarLCD@line3& (0+255),b
  3617  0013CE  0E01               	movlw	high _line3
  3618  0013D0  0100               	movlb	0	; () banked
  3619  0013D2  6F8D               	movwf	(atualizarLCD@line3+1)& (0+255),b
  3620  0013D4  0E3C               	movlw	low _line4
  3621  0013D6  0100               	movlb	0	; () banked
  3622  0013D8  6F8E               	movwf	atualizarLCD@line4& (0+255),b
  3623  0013DA  0E01               	movlw	high _line4
  3624  0013DC  0100               	movlb	0	; () banked
  3625  0013DE  6F8F               	movwf	(atualizarLCD@line4+1)& (0+255),b
  3626  0013E0  EC03  F03D         	call	_atualizarLCD	;wreg free
  3627  0013E4  D614               	goto	l878
  3628  0013E6                     __end_of_main:
  3629                           	opt stack 0
  3630                           tblptru	equ	0xFF8
  3631                           tblptrh	equ	0xFF7
  3632                           tblptrl	equ	0xFF6
  3633                           tablat	equ	0xFF5
  3634                           postinc0	equ	0xFEE
  3635                           wreg	equ	0xFE8
  3636                           postdec1	equ	0xFE5
  3637                           fsr1l	equ	0xFE1
  3638                           status	equ	0xFD8
  3639                           
  3640 ;; *************** function _verificarIntervaloTesteBombas *****************
  3641 ;; Defined at:
  3642 ;;		line 114 in file "controle.h"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3656 ;;      Params:         0       0       0       0       0       0       0
  3657 ;;      Locals:         0       0       0       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0
  3659 ;;      Totals:         0       0       0       0       0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    9
  3663 ;; This function calls:
  3664 ;;		_writeEEPROM_ext
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text1
  3671  006BFA                     __ptext1:
  3672                           	opt stack 0
  3673  006BFA                     _verificarIntervaloTesteBombas:
  3674                           	opt stack 0
  3675  006BFA  FFFF               	dw	65535	; assembler added errata NOP
  3676                           
  3677                           ;controle.h: 115: if (dias_restante_teste >= intervalo_teste_dia && habilitaTesteAutomat
      +                          ico == 1 && !executandoTeste) {
  3678                           
  3679                           ;incstack = 0
  3680  006BFC  0100               	movlb	0	; () banked
  3681  006BFE  51E9               	movf	_intervalo_teste_dia& (0+255),w,b
  3682  006C00  0100               	movlb	0	; () banked
  3683  006C02  5DE8               	subwf	_dias_restante_teste& (0+255),w,b
  3684  006C04  A0D8               	btfss	status,0,c
  3685  006C06  D01E               	goto	l504
  3686                           
  3687                           ; BSR set to: 0
  3688  006C08  0100               	movlb	0	; () banked
  3689  006C0A  05F0               	decf	_habilitaTesteAutomatico& (0+255),w,b
  3690  006C0C  A4D8               	btfss	status,2,c
  3691  006C0E  D01A               	goto	l504
  3692                           
  3693                           ; BSR set to: 0
  3694  006C10  0100               	movlb	0	; () banked
  3695  006C12  51F2               	movf	_executandoTeste& (0+255),w,b
  3696  006C14  A4D8               	btfss	status,2,c
  3697  006C16  D016               	goto	l504
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;controle.h: 116: if (_hor == horario_de_teste) {
  3701  006C18  0100               	movlb	0	; () banked
  3702  006C1A  51E7               	movf	_horario_de_teste& (0+255),w,b
  3703  006C1C  0100               	movlb	0	; () banked
  3704  006C1E  19ED               	xorwf	__hor& (0+255),w,b
  3705  006C20  A4D8               	btfss	status,2,c
  3706  006C22  D010               	goto	l504
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;controle.h: 117: dias_restante_teste = 0;
  3710  006C24  0E00               	movlw	0
  3711  006C26  0100               	movlb	0	; () banked
  3712  006C28  6FE8               	movwf	_dias_restante_teste& (0+255),b
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;controle.h: 118: writeEEPROM_ext(10, dias_restante_teste);
  3716  006C2A  C0E8  F08C         	movff	_dias_restante_teste,writeEEPROM_ext@data
  3717  006C2E  0E0A               	movlw	10
  3718  006C30  ECCF  F034         	call	_writeEEPROM_ext
  3719                           
  3720                           ;controle.h: 119: etapaTesteBombas = 0;
  3721  006C34  0E00               	movlw	0
  3722  006C36  6E6D               	movwf	_etapaTesteBombas,c
  3723                           
  3724                           ;controle.h: 120: executandoTeste = 1;
  3725  006C38  0E01               	movlw	1
  3726  006C3A  0100               	movlb	0	; () banked
  3727  006C3C  6FF2               	movwf	_executandoTeste& (0+255),b
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;controle.h: 121: menu_posi = 28;
  3731  006C3E  0E1C               	movlw	28
  3732  006C40  0100               	movlb	0	; () banked
  3733  006C42  6FDF               	movwf	_menu_posi& (0+255),b
  3734  006C44                     l504:
  3735  006C44  FFFF               	dw	65535	; assembler added errata NOP
  3736                           
  3737                           ; BSR set to: 0
  3738  006C46  0012               	return		;funcret
  3739  006C48  FFFF               	dw	65535	; errata NOP
  3740  006C4A                     __end_of_verificarIntervaloTesteBombas:
  3741                           	opt stack 0
  3742                           tblptru	equ	0xFF8
  3743                           tblptrh	equ	0xFF7
  3744                           tblptrl	equ	0xFF6
  3745                           tablat	equ	0xFF5
  3746                           postinc0	equ	0xFEE
  3747                           wreg	equ	0xFE8
  3748                           postdec1	equ	0xFE5
  3749                           fsr1l	equ	0xFE1
  3750                           status	equ	0xFD8
  3751                           
  3752 ;; *************** function _tela_testeBombas *****************
  3753 ;; Defined at:
  3754 ;;		line 8 in file "tela_TESTE_BOMBAS.h"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3768 ;;      Params:         0       0       0       0       0       0       0
  3769 ;;      Locals:         0       2       0       0       0       0       0
  3770 ;;      Temps:          0       2       0       0       0       0       0
  3771 ;;      Totals:         0       4       0       0       0       0       0
  3772 ;;Total ram usage:        4 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    9
  3775 ;; This function calls:
  3776 ;;		_blink
  3777 ;;		_btPress
  3778 ;;		_sprintf
  3779 ;;		_writeEEPROM_ext
  3780 ;; This function is called by:
  3781 ;;		_main
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text2
  3786  00281A                     __ptext2:
  3787                           	opt stack 0
  3788  00281A                     _tela_testeBombas:
  3789                           	opt stack 0
  3790  00281A  FFFF               	dw	65535	; assembler added errata NOP
  3791                           
  3792                           ;tela_TESTE_BOMBAS.h: 10: sprintf(line1, "#Proximo em %2d dias", (intervalo_teste_dia - 
      +                          dias_restante_teste));
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;incstack = 0
  3796  00281C  0E7B               	movlw	low _line1
  3797  00281E  0100               	movlb	0	; () banked
  3798  002820  6FA1               	movwf	sprintf@wh& (0+255),b
  3799  002822  0E01               	movlw	high _line1
  3800  002824  0100               	movlb	0	; () banked
  3801  002826  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  3802  002828  0E8C               	movlw	low STR_65
  3803  00282A  0100               	movlb	0	; () banked
  3804  00282C  6FA3               	movwf	sprintf@f& (0+255),b
  3805  00282E  0E7C               	movlw	high STR_65
  3806  002830  0100               	movlb	0	; () banked
  3807  002832  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  3808  002834  0100               	movlb	0	; () banked
  3809  002836  51E8               	movf	_dias_restante_teste& (0+255),w,b
  3810  002838  0100               	movlb	0	; () banked
  3811  00283A  6FB5               	movwf	??_tela_testeBombas& (0+255),b
  3812  00283C  6BB6               	clrf	(??_tela_testeBombas+1)& (0+255),b
  3813  00283E  0100               	movlb	0	; () banked
  3814  002840  1FB5               	comf	??_tela_testeBombas& (0+255),f,b
  3815  002842  1FB6               	comf	(??_tela_testeBombas+1)& (0+255),f,b
  3816  002844  4BB5               	infsnz	??_tela_testeBombas& (0+255),f,b
  3817  002846  2BB6               	incf	(??_tela_testeBombas+1)& (0+255),f,b
  3818  002848  0100               	movlb	0	; () banked
  3819  00284A  51E9               	movf	_intervalo_teste_dia& (0+255),w,b
  3820  00284C  0100               	movlb	0	; () banked
  3821  00284E  25B5               	addwf	??_tela_testeBombas& (0+255),w,b
  3822  002850  0100               	movlb	0	; () banked
  3823  002852  6FA5               	movwf	(?_sprintf+4)& (0+255),b
  3824  002854  0E00               	movlw	0
  3825  002856  0100               	movlb	0	; () banked
  3826  002858  21B6               	addwfc	(??_tela_testeBombas+1)& (0+255),w,b
  3827  00285A  0100               	movlb	0	; () banked
  3828  00285C  6FA6               	movwf	(?_sprintf+5)& (0+255),b
  3829  00285E  EC25  F036         	call	_sprintf	;wreg free
  3830                           
  3831                           ;tela_TESTE_BOMBAS.h: 11: sprintf(line2, "INTERVALO: %2d dias", intervalo_teste_dia);
  3832  002862  0E66               	movlw	low _line2
  3833  002864  0100               	movlb	0	; () banked
  3834  002866  6FA1               	movwf	sprintf@wh& (0+255),b
  3835  002868  0E01               	movlw	high _line2
  3836  00286A  0100               	movlb	0	; () banked
  3837  00286C  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  3838  00286E  0EB5               	movlw	low STR_66
  3839  002870  0100               	movlb	0	; () banked
  3840  002872  6FA3               	movwf	sprintf@f& (0+255),b
  3841  002874  0E7C               	movlw	high STR_66
  3842  002876  0100               	movlb	0	; () banked
  3843  002878  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  3844  00287A  C0E9  F0A5         	movff	_intervalo_teste_dia,?_sprintf+4
  3845  00287E  0100               	movlb	0	; () banked
  3846  002880  6BA6               	clrf	(?_sprintf+5)& (0+255),b
  3847  002882  EC25  F036         	call	_sprintf	;wreg free
  3848                           
  3849                           ;tela_TESTE_BOMBAS.h: 12: sprintf(line3, "HORARIO: %02d horas", horario_de_teste);
  3850  002886  0E51               	movlw	low _line3
  3851  002888  0100               	movlb	0	; () banked
  3852  00288A  6FA1               	movwf	sprintf@wh& (0+255),b
  3853  00288C  0E01               	movlw	high _line3
  3854  00288E  0100               	movlb	0	; () banked
  3855  002890  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  3856  002892  0EC9               	movlw	low STR_67
  3857  002894  0100               	movlb	0	; () banked
  3858  002896  6FA3               	movwf	sprintf@f& (0+255),b
  3859  002898  0E7C               	movlw	high STR_67
  3860  00289A  0100               	movlb	0	; () banked
  3861  00289C  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  3862  00289E  C0E7  F0A5         	movff	_horario_de_teste,?_sprintf+4
  3863  0028A2  0100               	movlb	0	; () banked
  3864  0028A4  6BA6               	clrf	(?_sprintf+5)& (0+255),b
  3865  0028A6  EC25  F036         	call	_sprintf	;wreg free
  3866                           
  3867                           ;tela_TESTE_BOMBAS.h: 13: sprintf(line4, "ATIVAR: %s", habilitaTesteAutomatico == 0 ? "N
      +                          ao" : "Sim");
  3868  0028AA  0100               	movlb	0	; () banked
  3869  0028AC  51F0               	movf	_habilitaTesteAutomatico& (0+255),w,b
  3870  0028AE  B4D8               	btfsc	status,2,c
  3871  0028B0  D005               	goto	l9530
  3872                           
  3873                           ; BSR set to: 0
  3874  0028B2  0EF1               	movlw	low STR_70
  3875  0028B4  0100               	movlb	0	; () banked
  3876  0028B6  6FB7               	movwf	_tela_testeBombas$1409& (0+255),b
  3877  0028B8  0E7F               	movlw	high STR_70
  3878  0028BA  D005               	goto	L7
  3879  0028BC                     l9530:
  3880  0028BC  FFFF               	dw	65535	; assembler added errata NOP
  3881                           
  3882                           ; BSR set to: 0
  3883  0028BE  0EF5               	movlw	low STR_69
  3884  0028C0  0100               	movlb	0	; () banked
  3885  0028C2  6FB7               	movwf	_tela_testeBombas$1409& (0+255),b
  3886  0028C4  0E7F               	movlw	high STR_69
  3887  0028C6                     L7:
  3888  0028C6  FFFF               	dw	65535	; assembler added errata NOP
  3889  0028C8  0100               	movlb	0	; () banked
  3890  0028CA  6FB8               	movwf	(_tela_testeBombas$1409+1)& (0+255),b
  3891                           
  3892                           ; BSR set to: 0
  3893                           
  3894                           ; BSR set to: 0
  3895  0028CC  0E3C               	movlw	low _line4
  3896  0028CE  0100               	movlb	0	; () banked
  3897  0028D0  6FA1               	movwf	sprintf@wh& (0+255),b
  3898  0028D2  0E01               	movlw	high _line4
  3899  0028D4  0100               	movlb	0	; () banked
  3900  0028D6  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  3901  0028D8  0E44               	movlw	low STR_68
  3902  0028DA  0100               	movlb	0	; () banked
  3903  0028DC  6FA3               	movwf	sprintf@f& (0+255),b
  3904  0028DE  0E7F               	movlw	high STR_68
  3905  0028E0  0100               	movlb	0	; () banked
  3906  0028E2  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  3907  0028E4  C0B7  F0A5         	movff	_tela_testeBombas$1409,?_sprintf+4
  3908  0028E8  C0B8  F0A6         	movff	_tela_testeBombas$1409+1,?_sprintf+5
  3909  0028EC  EC25  F036         	call	_sprintf	;wreg free
  3910                           
  3911                           ;tela_TESTE_BOMBAS.h: 15: if (btPress(1)) {
  3912  0028F0  0E01               	movlw	1
  3913  0028F2  EC82  F037         	call	_btPress
  3914  0028F6  0900               	iorlw	0
  3915  0028F8  B4D8               	btfsc	status,2,c
  3916  0028FA  D011               	goto	l715
  3917                           
  3918                           ;tela_TESTE_BOMBAS.h: 16: writeEEPROM_ext(6, intervalo_teste_dia);
  3919  0028FC  C0E9  F08C         	movff	_intervalo_teste_dia,writeEEPROM_ext@data
  3920  002900  0E06               	movlw	6
  3921  002902  ECCF  F034         	call	_writeEEPROM_ext
  3922                           
  3923                           ;tela_TESTE_BOMBAS.h: 17: writeEEPROM_ext(11, horario_de_teste);
  3924  002906  C0E7  F08C         	movff	_horario_de_teste,writeEEPROM_ext@data
  3925  00290A  0E0B               	movlw	11
  3926  00290C  ECCF  F034         	call	_writeEEPROM_ext
  3927                           
  3928                           ;tela_TESTE_BOMBAS.h: 18: writeEEPROM_ext(15, habilitaTesteAutomatico);
  3929  002910  C0F0  F08C         	movff	_habilitaTesteAutomatico,writeEEPROM_ext@data
  3930  002914  0E0F               	movlw	15
  3931  002916  ECCF  F034         	call	_writeEEPROM_ext
  3932                           
  3933                           ;tela_TESTE_BOMBAS.h: 19: menu_posi = _menu_posi;
  3934  00291A  C0DE  F0DF         	movff	__menu_posi,_menu_posi
  3935  00291E                     l715:
  3936  00291E  FFFF               	dw	65535	; assembler added errata NOP
  3937                           
  3938                           ;tela_TESTE_BOMBAS.h: 20: }
  3939                           ;tela_TESTE_BOMBAS.h: 21: if (btPress(4)) {
  3940  002920  0E04               	movlw	4
  3941  002922  EC82  F037         	call	_btPress
  3942  002926  0900               	iorlw	0
  3943  002928  B4D8               	btfsc	status,2,c
  3944  00292A  D077               	goto	l9582
  3945                           
  3946                           ;tela_TESTE_BOMBAS.h: 22: option_posi++;
  3947  00292C  0100               	movlb	0	; () banked
  3948  00292E  2BE0               	incf	_option_posi& (0+255),f,b
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;tela_TESTE_BOMBAS.h: 23: }
  3952                           ;tela_TESTE_BOMBAS.h: 24: switch (option_posi) {
  3953  002930  D074               	goto	l9582
  3954  002932                     l9542:
  3955  002932  FFFF               	dw	65535	; assembler added errata NOP
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;tela_TESTE_BOMBAS.h: 26: blink(line2, 11, 14);
  3959  002934  0E66               	movlw	low _line2
  3960  002936  0100               	movlb	0	; () banked
  3961  002938  6F80               	movwf	blink@line& (0+255),b
  3962  00293A  0E01               	movlw	high _line2
  3963  00293C  0100               	movlb	0	; () banked
  3964  00293E  6F81               	movwf	(blink@line+1)& (0+255),b
  3965  002940  0E0B               	movlw	11
  3966  002942  0100               	movlb	0	; () banked
  3967  002944  6F82               	movwf	blink@start& (0+255),b
  3968  002946  0E0E               	movlw	14
  3969  002948  0100               	movlb	0	; () banked
  3970  00294A  6F83               	movwf	blink@end& (0+255),b
  3971  00294C  EC87  F035         	call	_blink	;wreg free
  3972                           
  3973                           ;tela_TESTE_BOMBAS.h: 27: if (btPress(3)) {
  3974  002950  0E03               	movlw	3
  3975  002952  EC82  F037         	call	_btPress
  3976  002956  0900               	iorlw	0
  3977  002958  B4D8               	btfsc	status,2,c
  3978  00295A  D002               	goto	l9548
  3979                           
  3980                           ;tela_TESTE_BOMBAS.h: 28: intervalo_teste_dia++;
  3981  00295C  0100               	movlb	0	; () banked
  3982  00295E  2BE9               	incf	_intervalo_teste_dia& (0+255),f,b
  3983  002960                     l9548:
  3984  002960  FFFF               	dw	65535	; assembler added errata NOP
  3985                           
  3986                           ;tela_TESTE_BOMBAS.h: 29: }
  3987                           ;tela_TESTE_BOMBAS.h: 30: if (btPress(2)) {
  3988  002962  0E02               	movlw	2
  3989  002964  EC82  F037         	call	_btPress
  3990  002968  0900               	iorlw	0
  3991  00296A  B4D8               	btfsc	status,2,c
  3992  00296C  D063               	goto	l732
  3993                           
  3994                           ;tela_TESTE_BOMBAS.h: 31: intervalo_teste_dia--;
  3995  00296E  0100               	movlb	0	; () banked
  3996  002970  07E9               	decf	_intervalo_teste_dia& (0+255),f,b
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;tela_TESTE_BOMBAS.h: 32: }
  4000                           ;tela_TESTE_BOMBAS.h: 33: break;
  4001  002972  D060               	goto	l732
  4002  002974                     l9552:
  4003  002974  FFFF               	dw	65535	; assembler added errata NOP
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;tela_TESTE_BOMBAS.h: 35: blink(line3, 9, 11);
  4007  002976  0E51               	movlw	low _line3
  4008  002978  0100               	movlb	0	; () banked
  4009  00297A  6F80               	movwf	blink@line& (0+255),b
  4010  00297C  0E01               	movlw	high _line3
  4011  00297E  0100               	movlb	0	; () banked
  4012  002980  6F81               	movwf	(blink@line+1)& (0+255),b
  4013  002982  0E09               	movlw	9
  4014  002984  0100               	movlb	0	; () banked
  4015  002986  6F82               	movwf	blink@start& (0+255),b
  4016  002988  0E0B               	movlw	11
  4017  00298A  0100               	movlb	0	; () banked
  4018  00298C  6F83               	movwf	blink@end& (0+255),b
  4019  00298E  EC87  F035         	call	_blink	;wreg free
  4020                           
  4021                           ;tela_TESTE_BOMBAS.h: 36: if (btPress(3)) {
  4022  002992  0E03               	movlw	3
  4023  002994  EC82  F037         	call	_btPress
  4024  002998  0900               	iorlw	0
  4025  00299A  B4D8               	btfsc	status,2,c
  4026  00299C  D002               	goto	l9558
  4027                           
  4028                           ;tela_TESTE_BOMBAS.h: 37: horario_de_teste++;
  4029  00299E  0100               	movlb	0	; () banked
  4030  0029A0  2BE7               	incf	_horario_de_teste& (0+255),f,b
  4031  0029A2                     l9558:
  4032  0029A2  FFFF               	dw	65535	; assembler added errata NOP
  4033                           
  4034                           ;tela_TESTE_BOMBAS.h: 38: }
  4035                           ;tela_TESTE_BOMBAS.h: 39: if (btPress(2)) {
  4036  0029A4  0E02               	movlw	2
  4037  0029A6  EC82  F037         	call	_btPress
  4038  0029AA  0900               	iorlw	0
  4039  0029AC  B4D8               	btfsc	status,2,c
  4040  0029AE  D002               	goto	l9562
  4041                           
  4042                           ;tela_TESTE_BOMBAS.h: 40: horario_de_teste--;
  4043  0029B0  0100               	movlb	0	; () banked
  4044  0029B2  07E7               	decf	_horario_de_teste& (0+255),f,b
  4045  0029B4                     l9562:
  4046  0029B4  FFFF               	dw	65535	; assembler added errata NOP
  4047                           
  4048                           ;tela_TESTE_BOMBAS.h: 41: }
  4049                           ;tela_TESTE_BOMBAS.h: 42: if (horario_de_teste > 23 || horario_de_teste < 0) {
  4050  0029B6  0E18               	movlw	24
  4051  0029B8  0100               	movlb	0	; () banked
  4052  0029BA  61E7               	cpfslt	_horario_de_teste& (0+255),b
  4053  0029BC  D001               	goto	l9566
  4054  0029BE  D03A               	goto	l732
  4055  0029C0                     l9566:
  4056  0029C0  FFFF               	dw	65535	; assembler added errata NOP
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;tela_TESTE_BOMBAS.h: 43: horario_de_teste = 0;
  4060  0029C2  0E00               	movlw	0
  4061  0029C4  0100               	movlb	0	; () banked
  4062  0029C6  6FE7               	movwf	_horario_de_teste& (0+255),b
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;tela_TESTE_BOMBAS.h: 44: }
  4066                           ;tela_TESTE_BOMBAS.h: 45: break;
  4067  0029C8  D035               	goto	l732
  4068  0029CA                     l9568:
  4069  0029CA  FFFF               	dw	65535	; assembler added errata NOP
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;tela_TESTE_BOMBAS.h: 47: blink(line4, 9, 11);
  4073  0029CC  0E3C               	movlw	low _line4
  4074  0029CE  0100               	movlb	0	; () banked
  4075  0029D0  6F80               	movwf	blink@line& (0+255),b
  4076  0029D2  0E01               	movlw	high _line4
  4077  0029D4  0100               	movlb	0	; () banked
  4078  0029D6  6F81               	movwf	(blink@line+1)& (0+255),b
  4079  0029D8  0E09               	movlw	9
  4080  0029DA  0100               	movlb	0	; () banked
  4081  0029DC  6F82               	movwf	blink@start& (0+255),b
  4082  0029DE  0E0B               	movlw	11
  4083  0029E0  0100               	movlb	0	; () banked
  4084  0029E2  6F83               	movwf	blink@end& (0+255),b
  4085  0029E4  EC87  F035         	call	_blink	;wreg free
  4086                           
  4087                           ;tela_TESTE_BOMBAS.h: 48: if (btPress(3)) {
  4088  0029E8  0E03               	movlw	3
  4089  0029EA  EC82  F037         	call	_btPress
  4090  0029EE  0900               	iorlw	0
  4091  0029F0  B4D8               	btfsc	status,2,c
  4092  0029F2  D003               	goto	l9574
  4093                           
  4094                           ;tela_TESTE_BOMBAS.h: 49: habilitaTesteAutomatico = 1;
  4095  0029F4  0E01               	movlw	1
  4096  0029F6  0100               	movlb	0	; () banked
  4097  0029F8  6FF0               	movwf	_habilitaTesteAutomatico& (0+255),b
  4098  0029FA                     l9574:
  4099  0029FA  FFFF               	dw	65535	; assembler added errata NOP
  4100                           
  4101                           ;tela_TESTE_BOMBAS.h: 50: }
  4102                           ;tela_TESTE_BOMBAS.h: 51: if (btPress(2)) {
  4103  0029FC  0E02               	movlw	2
  4104  0029FE  EC82  F037         	call	_btPress
  4105  002A02  0900               	iorlw	0
  4106  002A04  B4D8               	btfsc	status,2,c
  4107  002A06  D016               	goto	l732
  4108                           
  4109                           ;tela_TESTE_BOMBAS.h: 52: habilitaTesteAutomatico = 0;
  4110  002A08  0E00               	movlw	0
  4111  002A0A  0100               	movlb	0	; () banked
  4112  002A0C  6FF0               	movwf	_habilitaTesteAutomatico& (0+255),b
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;tela_TESTE_BOMBAS.h: 53: }
  4116                           ;tela_TESTE_BOMBAS.h: 54: break;
  4117  002A0E  D012               	goto	l732
  4118  002A10                     l9578:
  4119  002A10  FFFF               	dw	65535	; assembler added errata NOP
  4120                           
  4121                           ; BSR set to: 0
  4122  002A12  0E00               	movlw	0
  4123  002A14  0100               	movlb	0	; () banked
  4124  002A16  6FE0               	movwf	_option_posi& (0+255),b
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;tela_TESTE_BOMBAS.h: 57: }
  4128                           
  4129                           ;tela_TESTE_BOMBAS.h: 56: break;
  4130  002A18  D00D               	goto	l732
  4131  002A1A                     l9582:
  4132  002A1A  FFFF               	dw	65535	; assembler added errata NOP
  4133  002A1C  0100               	movlb	0	; () banked
  4134  002A1E  51E0               	movf	_option_posi& (0+255),w,b
  4135                           
  4136                           ; Switch size 1, requested type "space"
  4137                           ; Number of cases is 3, Range of values is 0 to 2
  4138                           ; switch strategies available:
  4139                           ; Name         Instructions Cycles
  4140                           ; simple_byte           10     6 (average)
  4141                           ;	Chosen strategy is simple_byte
  4142  002A20  0A00               	xorlw	0	; case 0
  4143  002A22  B4D8               	btfsc	status,2,c
  4144  002A24  D786               	goto	l9542
  4145  002A26  0A01               	xorlw	1	; case 1
  4146  002A28  B4D8               	btfsc	status,2,c
  4147  002A2A  D7A4               	goto	l9552
  4148  002A2C  0A03               	xorlw	3	; case 2
  4149  002A2E  B4D8               	btfsc	status,2,c
  4150  002A30  D7CC               	goto	l9568
  4151  002A32  D7EE               	goto	l9578
  4152  002A34                     l732:
  4153  002A34  FFFF               	dw	65535	; assembler added errata NOP
  4154  002A36  0012               	return		;funcret
  4155  002A38  FFFF               	dw	65535	; errata NOP
  4156  002A3A                     __end_of_tela_testeBombas:
  4157                           	opt stack 0
  4158                           tblptru	equ	0xFF8
  4159                           tblptrh	equ	0xFF7
  4160                           tblptrl	equ	0xFF6
  4161                           tablat	equ	0xFF5
  4162                           postinc0	equ	0xFEE
  4163                           wreg	equ	0xFE8
  4164                           postdec1	equ	0xFE5
  4165                           fsr1l	equ	0xFE1
  4166                           status	equ	0xFD8
  4167                           
  4168 ;; *************** function _tela_ajusteRTC *****************
  4169 ;; Defined at:
  4170 ;;		line 11 in file "tela_RELOGIO.h"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4184 ;;      Params:         0       0       0       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0       0       0
  4187 ;;      Totals:         0       0       0       0       0       0       0
  4188 ;;Total ram usage:        0 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    9
  4191 ;; This function calls:
  4192 ;;		_blink
  4193 ;;		_btPress
  4194 ;;		_setDS1307TimeDate
  4195 ;;		_sprintf
  4196 ;;		_validaRTC
  4197 ;; This function is called by:
  4198 ;;		_main
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text3
  4203  002124                     __ptext3:
  4204                           	opt stack 0
  4205  002124                     _tela_ajusteRTC:
  4206                           	opt stack 0
  4207  002124  FFFF               	dw	65535	; assembler added errata NOP
  4208                           
  4209                           ;tela_RELOGIO.h: 12: sprintf(line1, "DATA:");
  4210                           
  4211                           ;incstack = 0
  4212  002126  0E7B               	movlw	low _line1
  4213  002128  0100               	movlb	0	; () banked
  4214  00212A  6FA1               	movwf	sprintf@wh& (0+255),b
  4215  00212C  0E01               	movlw	high _line1
  4216  00212E  0100               	movlb	0	; () banked
  4217  002130  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  4218  002132  0ECB               	movlw	low STR_61
  4219  002134  0100               	movlb	0	; () banked
  4220  002136  6FA3               	movwf	sprintf@f& (0+255),b
  4221  002138  0E7F               	movlw	high STR_61
  4222  00213A  0100               	movlb	0	; () banked
  4223  00213C  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  4224  00213E  EC25  F036         	call	_sprintf	;wreg free
  4225                           
  4226                           ;tela_RELOGIO.h: 13: sprintf(line2, "%02d/%02d/%02d", rtc.date, rtc.month, rtc.year);
  4227  002142  0E66               	movlw	low _line2
  4228  002144  0100               	movlb	0	; () banked
  4229  002146  6FA1               	movwf	sprintf@wh& (0+255),b
  4230  002148  0E01               	movlw	high _line2
  4231  00214A  0100               	movlb	0	; () banked
  4232  00214C  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  4233  00214E  0E40               	movlw	low STR_62
  4234  002150  0100               	movlb	0	; () banked
  4235  002152  6FA3               	movwf	sprintf@f& (0+255),b
  4236  002154  0E7E               	movlw	high STR_62
  4237  002156  0100               	movlb	0	; () banked
  4238  002158  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  4239  00215A  C073  F0A5         	movff	_rtc+4,?_sprintf+4
  4240  00215E  0100               	movlb	0	; () banked
  4241  002160  6BA6               	clrf	(?_sprintf+5)& (0+255),b
  4242  002162  C074  F0A7         	movff	_rtc+5,?_sprintf+6
  4243  002166  0100               	movlb	0	; () banked
  4244  002168  6BA8               	clrf	(?_sprintf+7)& (0+255),b
  4245  00216A  C075  F0A9         	movff	_rtc+6,?_sprintf+8
  4246  00216E  0100               	movlb	0	; () banked
  4247  002170  6BAA               	clrf	(?_sprintf+9)& (0+255),b
  4248  002172  EC25  F036         	call	_sprintf	;wreg free
  4249                           
  4250                           ;tela_RELOGIO.h: 14: sprintf(&line1[11], "HORA:");
  4251  002176  0E86               	movlw	low (_line1+11)
  4252  002178  0100               	movlb	0	; () banked
  4253  00217A  6FA1               	movwf	sprintf@wh& (0+255),b
  4254  00217C  0E01               	movlw	high (_line1+11)
  4255  00217E  0100               	movlb	0	; () banked
  4256  002180  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  4257  002182  0EC5               	movlw	low STR_63
  4258  002184  0100               	movlb	0	; () banked
  4259  002186  6FA3               	movwf	sprintf@f& (0+255),b
  4260  002188  0E7F               	movlw	high STR_63
  4261  00218A  0100               	movlb	0	; () banked
  4262  00218C  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  4263  00218E  EC25  F036         	call	_sprintf	;wreg free
  4264                           
  4265                           ;tela_RELOGIO.h: 15: sprintf(&line2[11], "%02d:%02d:%02d", rtc.hour, rtc.min, rtc.sec);
  4266  002192  0E71               	movlw	low (_line2+11)
  4267  002194  0100               	movlb	0	; () banked
  4268  002196  6FA1               	movwf	sprintf@wh& (0+255),b
  4269  002198  0E01               	movlw	high (_line2+11)
  4270  00219A  0100               	movlb	0	; () banked
  4271  00219C  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  4272  00219E  0E4F               	movlw	low STR_64
  4273  0021A0  0100               	movlb	0	; () banked
  4274  0021A2  6FA3               	movwf	sprintf@f& (0+255),b
  4275  0021A4  0E7E               	movlw	high STR_64
  4276  0021A6  0100               	movlb	0	; () banked
  4277  0021A8  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  4278  0021AA  C072  F0A5         	movff	_rtc+3,?_sprintf+4
  4279  0021AE  0100               	movlb	0	; () banked
  4280  0021B0  6BA6               	clrf	(?_sprintf+5)& (0+255),b
  4281  0021B2  C071  F0A7         	movff	_rtc+2,?_sprintf+6
  4282  0021B6  0100               	movlb	0	; () banked
  4283  0021B8  6BA8               	clrf	(?_sprintf+7)& (0+255),b
  4284  0021BA  C070  F0A9         	movff	_rtc+1,?_sprintf+8
  4285  0021BE  0100               	movlb	0	; () banked
  4286  0021C0  6BAA               	clrf	(?_sprintf+9)& (0+255),b
  4287  0021C2  EC25  F036         	call	_sprintf	;wreg free
  4288                           
  4289                           ;tela_RELOGIO.h: 17: if (btPress(4)) {
  4290  0021C6  0E04               	movlw	4
  4291  0021C8  EC82  F037         	call	_btPress
  4292  0021CC  0900               	iorlw	0
  4293  0021CE  B4D8               	btfsc	status,2,c
  4294  0021D0  D004               	goto	l9446
  4295                           
  4296                           ;tela_RELOGIO.h: 18: ajst_rtc = 1;
  4297  0021D2  0E01               	movlw	1
  4298  0021D4  6E63               	movwf	_ajst_rtc,c
  4299                           
  4300                           ;tela_RELOGIO.h: 19: option_posi++;
  4301  0021D6  0100               	movlb	0	; () banked
  4302  0021D8  2BE0               	incf	_option_posi& (0+255),f,b
  4303  0021DA                     l9446:
  4304  0021DA  FFFF               	dw	65535	; assembler added errata NOP
  4305                           
  4306                           ;tela_RELOGIO.h: 20: }
  4307                           ;tela_RELOGIO.h: 21: if (btPress(1)) {
  4308  0021DC  0E01               	movlw	1
  4309  0021DE  EC82  F037         	call	_btPress
  4310  0021E2  0900               	iorlw	0
  4311  0021E4  B4D8               	btfsc	status,2,c
  4312  0021E6  D0C5               	goto	l9520
  4313                           
  4314                           ;tela_RELOGIO.h: 22: ajst_rtc = 0;
  4315  0021E8  0E00               	movlw	0
  4316  0021EA  6E63               	movwf	_ajst_rtc,c
  4317                           
  4318                           ;tela_RELOGIO.h: 23: option_posi = 0;
  4319  0021EC  0E00               	movlw	0
  4320  0021EE  0100               	movlb	0	; () banked
  4321  0021F0  6FE0               	movwf	_option_posi& (0+255),b
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;tela_RELOGIO.h: 24: setDS1307TimeDate(&rtc);
  4325  0021F2  0E6F               	movlw	low _rtc
  4326  0021F4  0100               	movlb	0	; () banked
  4327  0021F6  6F8C               	movwf	setDS1307TimeDate@ptrToUserVal& (0+255),b
  4328  0021F8  0E00               	movlw	high _rtc
  4329  0021FA  0100               	movlb	0	; () banked
  4330  0021FC  6F8D               	movwf	(setDS1307TimeDate@ptrToUserVal+1)& (0+255),b
  4331  0021FE  EC3F  F01C         	call	_setDS1307TimeDate	;wreg free
  4332                           
  4333                           ;tela_RELOGIO.h: 25: menu_posi = _menu_posi;
  4334  002202  C0DE  F0DF         	movff	__menu_posi,_menu_posi
  4335                           
  4336                           ;tela_RELOGIO.h: 26: _min++;
  4337  002206  0100               	movlb	0	; () banked
  4338  002208  2BEE               	incf	__min& (0+255),f,b
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;tela_RELOGIO.h: 27: }
  4342                           ;tela_RELOGIO.h: 28: switch (option_posi) {
  4343  00220A  D0B3               	goto	l9520
  4344  00220C                     l9456:
  4345  00220C  FFFF               	dw	65535	; assembler added errata NOP
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;tela_RELOGIO.h: 30: blink(line2, 1, 2);
  4349  00220E  0E66               	movlw	low _line2
  4350  002210  0100               	movlb	0	; () banked
  4351  002212  6F80               	movwf	blink@line& (0+255),b
  4352  002214  0E01               	movlw	high _line2
  4353  002216  0100               	movlb	0	; () banked
  4354  002218  6F81               	movwf	(blink@line+1)& (0+255),b
  4355  00221A  0E01               	movlw	1
  4356  00221C  0100               	movlb	0	; () banked
  4357  00221E  6F82               	movwf	blink@start& (0+255),b
  4358  002220  0E02               	movlw	2
  4359  002222  0100               	movlb	0	; () banked
  4360  002224  6F83               	movwf	blink@end& (0+255),b
  4361  002226  EC87  F035         	call	_blink	;wreg free
  4362                           
  4363                           ;tela_RELOGIO.h: 31: if (btPress(3)) {
  4364  00222A  0E03               	movlw	3
  4365  00222C  EC82  F037         	call	_btPress
  4366  002230  0900               	iorlw	0
  4367  002232  A4D8               	btfss	status,2,c
  4368                           
  4369                           ;tela_RELOGIO.h: 32: rtc.date++;
  4370  002234  2A73               	incf	_rtc+4,f,c
  4371                           
  4372                           ;tela_RELOGIO.h: 33: }
  4373                           ;tela_RELOGIO.h: 34: if (btPress(2)) {
  4374  002236  0E02               	movlw	2
  4375  002238  EC82  F037         	call	_btPress
  4376  00223C  0900               	iorlw	0
  4377  00223E  B4D8               	btfsc	status,2,c
  4378  002240  D0AE               	goto	l9522
  4379                           
  4380                           ;tela_RELOGIO.h: 35: rtc.date--;
  4381  002242  0673               	decf	_rtc+4,f,c
  4382                           
  4383                           ;tela_RELOGIO.h: 36: }
  4384                           ;tela_RELOGIO.h: 37: break;
  4385  002244  D0AC               	goto	l9522
  4386  002246                     l9466:
  4387  002246  FFFF               	dw	65535	; assembler added errata NOP
  4388                           
  4389                           ;tela_RELOGIO.h: 39: blink(line2, 4, 5);
  4390  002248  0E66               	movlw	low _line2
  4391  00224A  0100               	movlb	0	; () banked
  4392  00224C  6F80               	movwf	blink@line& (0+255),b
  4393  00224E  0E01               	movlw	high _line2
  4394  002250  0100               	movlb	0	; () banked
  4395  002252  6F81               	movwf	(blink@line+1)& (0+255),b
  4396  002254  0E04               	movlw	4
  4397  002256  0100               	movlb	0	; () banked
  4398  002258  6F82               	movwf	blink@start& (0+255),b
  4399  00225A  0E05               	movlw	5
  4400  00225C  0100               	movlb	0	; () banked
  4401  00225E  6F83               	movwf	blink@end& (0+255),b
  4402  002260  EC87  F035         	call	_blink	;wreg free
  4403                           
  4404                           ;tela_RELOGIO.h: 40: if (btPress(3)) {
  4405  002264  0E03               	movlw	3
  4406  002266  EC82  F037         	call	_btPress
  4407  00226A  0900               	iorlw	0
  4408  00226C  A4D8               	btfss	status,2,c
  4409                           
  4410                           ;tela_RELOGIO.h: 41: rtc.month++;
  4411  00226E  2A74               	incf	_rtc+5,f,c
  4412                           
  4413                           ;tela_RELOGIO.h: 42: }
  4414                           ;tela_RELOGIO.h: 43: if (btPress(2)) {
  4415  002270  0E02               	movlw	2
  4416  002272  EC82  F037         	call	_btPress
  4417  002276  0900               	iorlw	0
  4418  002278  B4D8               	btfsc	status,2,c
  4419  00227A  D091               	goto	l9522
  4420                           
  4421                           ;tela_RELOGIO.h: 44: rtc.month--;
  4422  00227C  0674               	decf	_rtc+5,f,c
  4423                           
  4424                           ;tela_RELOGIO.h: 45: }
  4425                           ;tela_RELOGIO.h: 46: break;
  4426  00227E  D08F               	goto	l9522
  4427  002280                     l9476:
  4428  002280  FFFF               	dw	65535	; assembler added errata NOP
  4429                           
  4430                           ;tela_RELOGIO.h: 48: blink(line2, 7, 8);
  4431  002282  0E66               	movlw	low _line2
  4432  002284  0100               	movlb	0	; () banked
  4433  002286  6F80               	movwf	blink@line& (0+255),b
  4434  002288  0E01               	movlw	high _line2
  4435  00228A  0100               	movlb	0	; () banked
  4436  00228C  6F81               	movwf	(blink@line+1)& (0+255),b
  4437  00228E  0E07               	movlw	7
  4438  002290  0100               	movlb	0	; () banked
  4439  002292  6F82               	movwf	blink@start& (0+255),b
  4440  002294  0E08               	movlw	8
  4441  002296  0100               	movlb	0	; () banked
  4442  002298  6F83               	movwf	blink@end& (0+255),b
  4443  00229A  EC87  F035         	call	_blink	;wreg free
  4444                           
  4445                           ;tela_RELOGIO.h: 49: if (btPress(3)) {
  4446  00229E  0E03               	movlw	3
  4447  0022A0  EC82  F037         	call	_btPress
  4448  0022A4  0900               	iorlw	0
  4449  0022A6  A4D8               	btfss	status,2,c
  4450                           
  4451                           ;tela_RELOGIO.h: 50: rtc.year++;
  4452  0022A8  2A75               	incf	_rtc+6,f,c
  4453                           
  4454                           ;tela_RELOGIO.h: 51: }
  4455                           ;tela_RELOGIO.h: 52: if (btPress(2)) {
  4456  0022AA  0E02               	movlw	2
  4457  0022AC  EC82  F037         	call	_btPress
  4458  0022B0  0900               	iorlw	0
  4459  0022B2  B4D8               	btfsc	status,2,c
  4460  0022B4  D074               	goto	l9522
  4461                           
  4462                           ;tela_RELOGIO.h: 53: rtc.year--;
  4463  0022B6  0675               	decf	_rtc+6,f,c
  4464                           
  4465                           ;tela_RELOGIO.h: 54: }
  4466                           ;tela_RELOGIO.h: 55: break;
  4467  0022B8  D072               	goto	l9522
  4468  0022BA                     l9486:
  4469  0022BA  FFFF               	dw	65535	; assembler added errata NOP
  4470                           
  4471                           ;tela_RELOGIO.h: 57: blink(line2, 12, 13);
  4472  0022BC  0E66               	movlw	low _line2
  4473  0022BE  0100               	movlb	0	; () banked
  4474  0022C0  6F80               	movwf	blink@line& (0+255),b
  4475  0022C2  0E01               	movlw	high _line2
  4476  0022C4  0100               	movlb	0	; () banked
  4477  0022C6  6F81               	movwf	(blink@line+1)& (0+255),b
  4478  0022C8  0E0C               	movlw	12
  4479  0022CA  0100               	movlb	0	; () banked
  4480  0022CC  6F82               	movwf	blink@start& (0+255),b
  4481  0022CE  0E0D               	movlw	13
  4482  0022D0  0100               	movlb	0	; () banked
  4483  0022D2  6F83               	movwf	blink@end& (0+255),b
  4484  0022D4  EC87  F035         	call	_blink	;wreg free
  4485                           
  4486                           ;tela_RELOGIO.h: 58: if (btPress(3)) {
  4487  0022D8  0E03               	movlw	3
  4488  0022DA  EC82  F037         	call	_btPress
  4489  0022DE  0900               	iorlw	0
  4490  0022E0  A4D8               	btfss	status,2,c
  4491                           
  4492                           ;tela_RELOGIO.h: 59: rtc.hour++;
  4493  0022E2  2A72               	incf	_rtc+3,f,c
  4494                           
  4495                           ;tela_RELOGIO.h: 60: }
  4496                           ;tela_RELOGIO.h: 61: if (btPress(2)) {
  4497  0022E4  0E02               	movlw	2
  4498  0022E6  EC82  F037         	call	_btPress
  4499  0022EA  0900               	iorlw	0
  4500  0022EC  B4D8               	btfsc	status,2,c
  4501  0022EE  D057               	goto	l9522
  4502                           
  4503                           ;tela_RELOGIO.h: 62: rtc.hour--;
  4504  0022F0  0672               	decf	_rtc+3,f,c
  4505                           
  4506                           ;tela_RELOGIO.h: 63: }
  4507                           ;tela_RELOGIO.h: 64: break;
  4508  0022F2  D055               	goto	l9522
  4509  0022F4                     l9496:
  4510  0022F4  FFFF               	dw	65535	; assembler added errata NOP
  4511                           
  4512                           ;tela_RELOGIO.h: 66: blink(line2, 15, 16);
  4513  0022F6  0E66               	movlw	low _line2
  4514  0022F8  0100               	movlb	0	; () banked
  4515  0022FA  6F80               	movwf	blink@line& (0+255),b
  4516  0022FC  0E01               	movlw	high _line2
  4517  0022FE  0100               	movlb	0	; () banked
  4518  002300  6F81               	movwf	(blink@line+1)& (0+255),b
  4519  002302  0E0F               	movlw	15
  4520  002304  0100               	movlb	0	; () banked
  4521  002306  6F82               	movwf	blink@start& (0+255),b
  4522  002308  0E10               	movlw	16
  4523  00230A  0100               	movlb	0	; () banked
  4524  00230C  6F83               	movwf	blink@end& (0+255),b
  4525  00230E  EC87  F035         	call	_blink	;wreg free
  4526                           
  4527                           ;tela_RELOGIO.h: 67: if (btPress(3)) {
  4528  002312  0E03               	movlw	3
  4529  002314  EC82  F037         	call	_btPress
  4530  002318  0900               	iorlw	0
  4531  00231A  A4D8               	btfss	status,2,c
  4532                           
  4533                           ;tela_RELOGIO.h: 68: rtc.min++;
  4534  00231C  2A71               	incf	_rtc+2,f,c
  4535                           
  4536                           ;tela_RELOGIO.h: 69: }
  4537                           ;tela_RELOGIO.h: 70: if (btPress(2)) {
  4538  00231E  0E02               	movlw	2
  4539  002320  EC82  F037         	call	_btPress
  4540  002324  0900               	iorlw	0
  4541  002326  B4D8               	btfsc	status,2,c
  4542  002328  D03A               	goto	l9522
  4543                           
  4544                           ;tela_RELOGIO.h: 71: rtc.min--;
  4545  00232A  0671               	decf	_rtc+2,f,c
  4546                           
  4547                           ;tela_RELOGIO.h: 72: }
  4548                           ;tela_RELOGIO.h: 73: break;
  4549  00232C  D038               	goto	l9522
  4550  00232E                     l9506:
  4551  00232E  FFFF               	dw	65535	; assembler added errata NOP
  4552                           
  4553                           ;tela_RELOGIO.h: 75: blink(line2, 18, 19);
  4554  002330  0E66               	movlw	low _line2
  4555  002332  0100               	movlb	0	; () banked
  4556  002334  6F80               	movwf	blink@line& (0+255),b
  4557  002336  0E01               	movlw	high _line2
  4558  002338  0100               	movlb	0	; () banked
  4559  00233A  6F81               	movwf	(blink@line+1)& (0+255),b
  4560  00233C  0E12               	movlw	18
  4561  00233E  0100               	movlb	0	; () banked
  4562  002340  6F82               	movwf	blink@start& (0+255),b
  4563  002342  0E13               	movlw	19
  4564  002344  0100               	movlb	0	; () banked
  4565  002346  6F83               	movwf	blink@end& (0+255),b
  4566  002348  EC87  F035         	call	_blink	;wreg free
  4567                           
  4568                           ;tela_RELOGIO.h: 76: if (btPress(3)) {
  4569  00234C  0E03               	movlw	3
  4570  00234E  EC82  F037         	call	_btPress
  4571  002352  0900               	iorlw	0
  4572  002354  A4D8               	btfss	status,2,c
  4573                           
  4574                           ;tela_RELOGIO.h: 77: rtc.sec++;
  4575  002356  2A70               	incf	_rtc+1,f,c
  4576                           
  4577                           ;tela_RELOGIO.h: 78: }
  4578                           ;tela_RELOGIO.h: 79: if (btPress(2)) {
  4579  002358  0E02               	movlw	2
  4580  00235A  EC82  F037         	call	_btPress
  4581  00235E  0900               	iorlw	0
  4582  002360  B4D8               	btfsc	status,2,c
  4583  002362  D01D               	goto	l9522
  4584                           
  4585                           ;tela_RELOGIO.h: 80: rtc.sec--;
  4586  002364  0670               	decf	_rtc+1,f,c
  4587                           
  4588                           ;tela_RELOGIO.h: 81: }
  4589                           ;tela_RELOGIO.h: 82: break;
  4590  002366  D01B               	goto	l9522
  4591  002368                     l9516:
  4592  002368  FFFF               	dw	65535	; assembler added errata NOP
  4593  00236A  0E01               	movlw	1
  4594  00236C  0100               	movlb	0	; () banked
  4595  00236E  6FE0               	movwf	_option_posi& (0+255),b
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;tela_RELOGIO.h: 85: }
  4599                           
  4600                           ;tela_RELOGIO.h: 84: break;
  4601  002370  D016               	goto	l9522
  4602  002372                     l9520:
  4603  002372  FFFF               	dw	65535	; assembler added errata NOP
  4604  002374  0100               	movlb	0	; () banked
  4605  002376  51E0               	movf	_option_posi& (0+255),w,b
  4606                           
  4607                           ; Switch size 1, requested type "space"
  4608                           ; Number of cases is 6, Range of values is 1 to 6
  4609                           ; switch strategies available:
  4610                           ; Name         Instructions Cycles
  4611                           ; simple_byte           19    10 (average)
  4612                           ;	Chosen strategy is simple_byte
  4613  002378  0A01               	xorlw	1	; case 1
  4614  00237A  B4D8               	btfsc	status,2,c
  4615  00237C  D747               	goto	l9456
  4616  00237E  0A03               	xorlw	3	; case 2
  4617  002380  B4D8               	btfsc	status,2,c
  4618  002382  D761               	goto	l9466
  4619  002384  0A01               	xorlw	1	; case 3
  4620  002386  B4D8               	btfsc	status,2,c
  4621  002388  D77B               	goto	l9476
  4622  00238A  0A07               	xorlw	7	; case 4
  4623  00238C  B4D8               	btfsc	status,2,c
  4624  00238E  D795               	goto	l9486
  4625  002390  0A01               	xorlw	1	; case 5
  4626  002392  B4D8               	btfsc	status,2,c
  4627  002394  D7AF               	goto	l9496
  4628  002396  0A03               	xorlw	3	; case 6
  4629  002398  B4D8               	btfsc	status,2,c
  4630  00239A  D7C9               	goto	l9506
  4631  00239C  D7E5               	goto	l9516
  4632  00239E                     l9522:
  4633  00239E  FFFF               	dw	65535	; assembler added errata NOP
  4634                           
  4635                           ;tela_RELOGIO.h: 86: validaRTC();
  4636  0023A0  ECAE  F035         	call	_validaRTC	;wreg free
  4637  0023A4  0012               	return		;funcret
  4638  0023A6  FFFF               	dw	65535	; errata NOP
  4639  0023A8                     __end_of_tela_ajusteRTC:
  4640                           	opt stack 0
  4641                           tblptru	equ	0xFF8
  4642                           tblptrh	equ	0xFF7
  4643                           tblptrl	equ	0xFF6
  4644                           tablat	equ	0xFF5
  4645                           postinc0	equ	0xFEE
  4646                           wreg	equ	0xFE8
  4647                           postdec1	equ	0xFE5
  4648                           fsr1l	equ	0xFE1
  4649                           status	equ	0xFD8
  4650                           
  4651 ;; *************** function _validaRTC *****************
  4652 ;; Defined at:
  4653 ;;		line 108 in file "ds1307.h"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;		None
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  2  284[None  ] int 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2, status,0
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4667 ;;      Params:         0       0       0       0       0       0       0
  4668 ;;      Locals:         0       0       0       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0
  4670 ;;      Totals:         0       0       0       0       0       0       0
  4671 ;;Total ram usage:        0 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    6
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_tela_ajusteRTC
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text4
  4682  006B5C                     __ptext4:
  4683                           	opt stack 0
  4684  006B5C                     _validaRTC:
  4685                           	opt stack 0
  4686  006B5C  FFFF               	dw	65535	; assembler added errata NOP
  4687                           
  4688                           ;ds1307.h: 109: if (rtc.date > 31) rtc.date = 0;
  4689                           
  4690                           ;incstack = 0
  4691  006B5E  0E1F               	movlw	31
  4692  006B60  6473               	cpfsgt	_rtc+4,c
  4693  006B62  D002               	goto	l8324
  4694  006B64  0E00               	movlw	0
  4695  006B66  6E73               	movwf	_rtc+4,c
  4696  006B68                     l8324:
  4697  006B68  FFFF               	dw	65535	; assembler added errata NOP
  4698                           
  4699                           ;ds1307.h: 110: if (rtc.hour > 23) rtc.hour = 0;
  4700  006B6A  0E17               	movlw	23
  4701  006B6C  6472               	cpfsgt	_rtc+3,c
  4702  006B6E  D002               	goto	l8328
  4703  006B70  0E00               	movlw	0
  4704  006B72  6E72               	movwf	_rtc+3,c
  4705  006B74                     l8328:
  4706  006B74  FFFF               	dw	65535	; assembler added errata NOP
  4707                           
  4708                           ;ds1307.h: 111: if (rtc.min > 59) rtc.min = 0;
  4709  006B76  0E3B               	movlw	59
  4710  006B78  6471               	cpfsgt	_rtc+2,c
  4711  006B7A  D002               	goto	l8332
  4712  006B7C  0E00               	movlw	0
  4713  006B7E  6E71               	movwf	_rtc+2,c
  4714  006B80                     l8332:
  4715  006B80  FFFF               	dw	65535	; assembler added errata NOP
  4716                           
  4717                           ;ds1307.h: 112: if (rtc.month > 12) rtc.month = 0;
  4718  006B82  0E0C               	movlw	12
  4719  006B84  6474               	cpfsgt	_rtc+5,c
  4720  006B86  D002               	goto	l8336
  4721  006B88  0E00               	movlw	0
  4722  006B8A  6E74               	movwf	_rtc+5,c
  4723  006B8C                     l8336:
  4724  006B8C  FFFF               	dw	65535	; assembler added errata NOP
  4725                           
  4726                           ;ds1307.h: 113: if (rtc.sec > 59) rtc.sec = 0;
  4727  006B8E  0E3B               	movlw	59
  4728  006B90  6470               	cpfsgt	_rtc+1,c
  4729  006B92  D002               	goto	l8340
  4730  006B94  0E00               	movlw	0
  4731  006B96  6E70               	movwf	_rtc+1,c
  4732  006B98                     l8340:
  4733  006B98  FFFF               	dw	65535	; assembler added errata NOP
  4734                           
  4735                           ;ds1307.h: 114: if (rtc.year > 99) rtc.year = 0;
  4736  006B9A  0E63               	movlw	99
  4737  006B9C  6475               	cpfsgt	_rtc+6,c
  4738  006B9E  D002               	goto	l291
  4739  006BA0  0E00               	movlw	0
  4740  006BA2  6E75               	movwf	_rtc+6,c
  4741  006BA4                     l291:
  4742  006BA4  FFFF               	dw	65535	; assembler added errata NOP
  4743  006BA6  0012               	return		;funcret
  4744  006BA8  FFFF               	dw	65535	; errata NOP
  4745  006BAA                     __end_of_validaRTC:
  4746                           	opt stack 0
  4747                           tblptru	equ	0xFF8
  4748                           tblptrh	equ	0xFF7
  4749                           tblptrl	equ	0xFF6
  4750                           tablat	equ	0xFF5
  4751                           postinc0	equ	0xFEE
  4752                           wreg	equ	0xFE8
  4753                           postdec1	equ	0xFE5
  4754                           fsr1l	equ	0xFE1
  4755                           status	equ	0xFD8
  4756                           
  4757 ;; *************** function _setDS1307TimeDate *****************
  4758 ;; Defined at:
  4759 ;;		line 36 in file "ds1307.h"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  ptrToUserVal    2   12[BANK0 ] PTR struct .
  4762 ;;		 -> rtc(7), 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4774 ;;      Params:         0       2       0       0       0       0       0
  4775 ;;      Locals:         0       0       0       0       0       0       0
  4776 ;;      Temps:          0       1       0       0       0       0       0
  4777 ;;      Totals:         0       3       0       0       0       0       0
  4778 ;;Total ram usage:        3 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    8
  4781 ;; This function calls:
  4782 ;;		_DECtoBCD
  4783 ;;		_I2C_Start
  4784 ;;		_I2C_Stop
  4785 ;;		_I2C_Write
  4786 ;; This function is called by:
  4787 ;;		_tela_ajusteRTC
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text5
  4792  00387E                     __ptext5:
  4793                           	opt stack 0
  4794  00387E                     _setDS1307TimeDate:
  4795                           	opt stack 0
  4796  00387E  FFFF               	dw	65535	; assembler added errata NOP
  4797                           
  4798                           ;ds1307.h: 38: I2C_Start();
  4799                           
  4800                           ;incstack = 0
  4801  003880  EC1C  F032         	call	_I2C_Start	;wreg free
  4802                           
  4803                           ;ds1307.h: 39: I2C_Write(0xD0);
  4804  003884  0E00               	movlw	0
  4805  003886  0100               	movlb	0	; () banked
  4806  003888  6F8B               	movwf	(I2C_Write@d+1)& (0+255),b
  4807  00388A  0ED0               	movlw	208
  4808  00388C  6F8A               	movwf	I2C_Write@d& (0+255),b
  4809  00388E  EC35  F032         	call	_I2C_Write	;wreg free
  4810                           
  4811                           ;ds1307.h: 40: I2C_Write(0x00);
  4812  003892  0E00               	movlw	0
  4813  003894  0100               	movlb	0	; () banked
  4814  003896  6F8B               	movwf	(I2C_Write@d+1)& (0+255),b
  4815  003898  0E00               	movlw	0
  4816  00389A  6F8A               	movwf	I2C_Write@d& (0+255),b
  4817  00389C  EC35  F032         	call	_I2C_Write	;wreg free
  4818                           
  4819                           ;ds1307.h: 41: I2C_Write(DECtoBCD(ptrToUserVal-> sec));
  4820  0038A0  0100               	movlb	0	; () banked
  4821  0038A2  EE20 F001          	lfsr	2,1
  4822  0038A6  518C               	movf	setDS1307TimeDate@ptrToUserVal& (0+255),w,b
  4823  0038A8  26D9               	addwf	fsr2l,f,c
  4824  0038AA  518D               	movf	(setDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  4825  0038AC  22DA               	addwfc	fsr2h,f,c
  4826  0038AE  50DF               	movf	indf2,w,c
  4827  0038B0  ECD5  F035         	call	_DECtoBCD
  4828  0038B4  0100               	movlb	0	; () banked
  4829  0038B6  6F8E               	movwf	??_setDS1307TimeDate& (0+255),b
  4830  0038B8  0100               	movlb	0	; () banked
  4831  0038BA  518E               	movf	??_setDS1307TimeDate& (0+255),w,b
  4832  0038BC  0100               	movlb	0	; () banked
  4833  0038BE  6F8A               	movwf	I2C_Write@d& (0+255),b
  4834  0038C0  6B8B               	clrf	(I2C_Write@d+1)& (0+255),b
  4835  0038C2  EC35  F032         	call	_I2C_Write	;wreg free
  4836                           
  4837                           ;ds1307.h: 42: I2C_Write(DECtoBCD(ptrToUserVal-> min));
  4838  0038C6  0100               	movlb	0	; () banked
  4839  0038C8  EE20 F002          	lfsr	2,2
  4840  0038CC  518C               	movf	setDS1307TimeDate@ptrToUserVal& (0+255),w,b
  4841  0038CE  26D9               	addwf	fsr2l,f,c
  4842  0038D0  518D               	movf	(setDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  4843  0038D2  22DA               	addwfc	fsr2h,f,c
  4844  0038D4  50DF               	movf	indf2,w,c
  4845  0038D6  ECD5  F035         	call	_DECtoBCD
  4846  0038DA  0100               	movlb	0	; () banked
  4847  0038DC  6F8E               	movwf	??_setDS1307TimeDate& (0+255),b
  4848  0038DE  0100               	movlb	0	; () banked
  4849  0038E0  518E               	movf	??_setDS1307TimeDate& (0+255),w,b
  4850  0038E2  0100               	movlb	0	; () banked
  4851  0038E4  6F8A               	movwf	I2C_Write@d& (0+255),b
  4852  0038E6  6B8B               	clrf	(I2C_Write@d+1)& (0+255),b
  4853  0038E8  EC35  F032         	call	_I2C_Write	;wreg free
  4854                           
  4855                           ;ds1307.h: 43: I2C_Write(DECtoBCD(ptrToUserVal-> hour));
  4856  0038EC  0100               	movlb	0	; () banked
  4857  0038EE  EE20 F003          	lfsr	2,3
  4858  0038F2  518C               	movf	setDS1307TimeDate@ptrToUserVal& (0+255),w,b
  4859  0038F4  26D9               	addwf	fsr2l,f,c
  4860  0038F6  518D               	movf	(setDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  4861  0038F8  22DA               	addwfc	fsr2h,f,c
  4862  0038FA  50DF               	movf	indf2,w,c
  4863  0038FC  ECD5  F035         	call	_DECtoBCD
  4864  003900  0100               	movlb	0	; () banked
  4865  003902  6F8E               	movwf	??_setDS1307TimeDate& (0+255),b
  4866  003904  0100               	movlb	0	; () banked
  4867  003906  518E               	movf	??_setDS1307TimeDate& (0+255),w,b
  4868  003908  0100               	movlb	0	; () banked
  4869  00390A  6F8A               	movwf	I2C_Write@d& (0+255),b
  4870  00390C  6B8B               	clrf	(I2C_Write@d+1)& (0+255),b
  4871  00390E  EC35  F032         	call	_I2C_Write	;wreg free
  4872                           
  4873                           ;ds1307.h: 44: I2C_Write(DECtoBCD(ptrToUserVal-> day));
  4874  003912  C08C  FFD9         	movff	setDS1307TimeDate@ptrToUserVal,fsr2l
  4875  003916  C08D  FFDA         	movff	setDS1307TimeDate@ptrToUserVal+1,fsr2h
  4876  00391A  50DF               	movf	indf2,w,c
  4877  00391C  ECD5  F035         	call	_DECtoBCD
  4878  003920  0100               	movlb	0	; () banked
  4879  003922  6F8E               	movwf	??_setDS1307TimeDate& (0+255),b
  4880  003924  0100               	movlb	0	; () banked
  4881  003926  518E               	movf	??_setDS1307TimeDate& (0+255),w,b
  4882  003928  0100               	movlb	0	; () banked
  4883  00392A  6F8A               	movwf	I2C_Write@d& (0+255),b
  4884  00392C  6B8B               	clrf	(I2C_Write@d+1)& (0+255),b
  4885  00392E  EC35  F032         	call	_I2C_Write	;wreg free
  4886                           
  4887                           ;ds1307.h: 45: I2C_Write(DECtoBCD(ptrToUserVal-> date));
  4888  003932  0100               	movlb	0	; () banked
  4889  003934  EE20 F004          	lfsr	2,4
  4890  003938  518C               	movf	setDS1307TimeDate@ptrToUserVal& (0+255),w,b
  4891  00393A  26D9               	addwf	fsr2l,f,c
  4892  00393C  518D               	movf	(setDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  4893  00393E  22DA               	addwfc	fsr2h,f,c
  4894  003940  50DF               	movf	indf2,w,c
  4895  003942  ECD5  F035         	call	_DECtoBCD
  4896  003946  0100               	movlb	0	; () banked
  4897  003948  6F8E               	movwf	??_setDS1307TimeDate& (0+255),b
  4898  00394A  0100               	movlb	0	; () banked
  4899  00394C  518E               	movf	??_setDS1307TimeDate& (0+255),w,b
  4900  00394E  0100               	movlb	0	; () banked
  4901  003950  6F8A               	movwf	I2C_Write@d& (0+255),b
  4902  003952  6B8B               	clrf	(I2C_Write@d+1)& (0+255),b
  4903  003954  EC35  F032         	call	_I2C_Write	;wreg free
  4904                           
  4905                           ;ds1307.h: 46: I2C_Write(DECtoBCD(ptrToUserVal-> month));
  4906  003958  0100               	movlb	0	; () banked
  4907  00395A  EE20 F005          	lfsr	2,5
  4908  00395E  518C               	movf	setDS1307TimeDate@ptrToUserVal& (0+255),w,b
  4909  003960  26D9               	addwf	fsr2l,f,c
  4910  003962  518D               	movf	(setDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  4911  003964  22DA               	addwfc	fsr2h,f,c
  4912  003966  50DF               	movf	indf2,w,c
  4913  003968  ECD5  F035         	call	_DECtoBCD
  4914  00396C  0100               	movlb	0	; () banked
  4915  00396E  6F8E               	movwf	??_setDS1307TimeDate& (0+255),b
  4916  003970  0100               	movlb	0	; () banked
  4917  003972  518E               	movf	??_setDS1307TimeDate& (0+255),w,b
  4918  003974  0100               	movlb	0	; () banked
  4919  003976  6F8A               	movwf	I2C_Write@d& (0+255),b
  4920  003978  6B8B               	clrf	(I2C_Write@d+1)& (0+255),b
  4921  00397A  EC35  F032         	call	_I2C_Write	;wreg free
  4922                           
  4923                           ;ds1307.h: 47: I2C_Write(DECtoBCD(ptrToUserVal-> year));
  4924  00397E  0100               	movlb	0	; () banked
  4925  003980  EE20 F006          	lfsr	2,6
  4926  003984  518C               	movf	setDS1307TimeDate@ptrToUserVal& (0+255),w,b
  4927  003986  26D9               	addwf	fsr2l,f,c
  4928  003988  518D               	movf	(setDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  4929  00398A  22DA               	addwfc	fsr2h,f,c
  4930  00398C  50DF               	movf	indf2,w,c
  4931  00398E  ECD5  F035         	call	_DECtoBCD
  4932  003992  0100               	movlb	0	; () banked
  4933  003994  6F8E               	movwf	??_setDS1307TimeDate& (0+255),b
  4934  003996  0100               	movlb	0	; () banked
  4935  003998  518E               	movf	??_setDS1307TimeDate& (0+255),w,b
  4936  00399A  0100               	movlb	0	; () banked
  4937  00399C  6F8A               	movwf	I2C_Write@d& (0+255),b
  4938  00399E  6B8B               	clrf	(I2C_Write@d+1)& (0+255),b
  4939  0039A0  EC35  F032         	call	_I2C_Write	;wreg free
  4940                           
  4941                           ;ds1307.h: 48: I2C_Stop();
  4942  0039A4  EC22  F032         	call	_I2C_Stop	;wreg free
  4943  0039A8  0012               	return		;funcret
  4944  0039AA  FFFF               	dw	65535	; errata NOP
  4945  0039AC                     __end_of_setDS1307TimeDate:
  4946                           	opt stack 0
  4947                           tblptru	equ	0xFF8
  4948                           tblptrh	equ	0xFF7
  4949                           tblptrl	equ	0xFF6
  4950                           tablat	equ	0xFF5
  4951                           postinc0	equ	0xFEE
  4952                           wreg	equ	0xFE8
  4953                           postdec1	equ	0xFE5
  4954                           fsr1l	equ	0xFE1
  4955                           indf2	equ	0xFDF
  4956                           fsr2h	equ	0xFDA
  4957                           fsr2l	equ	0xFD9
  4958                           status	equ	0xFD8
  4959                           
  4960 ;; *************** function _DECtoBCD *****************
  4961 ;; Defined at:
  4962 ;;		line 25 in file "function.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  val             1    wreg     unsigned char 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  val             1    8[BANK0 ] unsigned char 
  4967 ;;  res             1    9[BANK0 ] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      unsigned char 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4977 ;;      Params:         0       0       0       0       0       0       0
  4978 ;;      Locals:         0       2       0       0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0       0       0
  4980 ;;      Totals:         0       2       0       0       0       0       0
  4981 ;;Total ram usage:        2 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    7
  4984 ;; This function calls:
  4985 ;;		___awdiv
  4986 ;;		___awmod
  4987 ;; This function is called by:
  4988 ;;		_setDS1307TimeDate
  4989 ;;		_setDS1307Time
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text6
  4994  006BAA                     __ptext6:
  4995                           	opt stack 0
  4996  006BAA                     _DECtoBCD:
  4997                           	opt stack 0
  4998  006BAA  FFFF               	dw	65535	; assembler added errata NOP
  4999                           
  5000                           ;incstack = 0
  5001                           ;DECtoBCD@val stored from wreg
  5002  006BAC  0100               	movlb	0	; () banked
  5003  006BAE  6F88               	movwf	DECtoBCD@val& (0+255),b
  5004                           
  5005                           ;function.c: 26: char res;
  5006                           ;function.c: 27: res = (val / 10) << 4;
  5007  006BB0  C088  F080         	movff	DECtoBCD@val,___awdiv@dividend
  5008  006BB4  0100               	movlb	0	; () banked
  5009  006BB6  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
  5010  006BB8  0E00               	movlw	0
  5011  006BBA  0100               	movlb	0	; () banked
  5012  006BBC  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  5013  006BBE  0E0A               	movlw	10
  5014  006BC0  6F82               	movwf	___awdiv@divisor& (0+255),b
  5015  006BC2  EC42  F03B         	call	___awdiv	;wreg free
  5016  006BC6  0100               	movlb	0	; () banked
  5017  006BC8  3980               	swapf	?___awdiv& (0+255),w,b
  5018  006BCA  0BF0               	andlw	240
  5019  006BCC  0100               	movlb	0	; () banked
  5020  006BCE  6F89               	movwf	DECtoBCD@res& (0+255),b
  5021                           
  5022                           ;function.c: 28: res = res | (val % 10);
  5023  006BD0  C088  F080         	movff	DECtoBCD@val,___awmod@dividend
  5024  006BD4  0100               	movlb	0	; () banked
  5025  006BD6  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  5026  006BD8  0E00               	movlw	0
  5027  006BDA  0100               	movlb	0	; () banked
  5028  006BDC  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  5029  006BDE  0E0A               	movlw	10
  5030  006BE0  6F82               	movwf	___awmod@divisor& (0+255),b
  5031  006BE2  EC20  F03A         	call	___awmod	;wreg free
  5032  006BE6  0100               	movlb	0	; () banked
  5033  006BE8  5180               	movf	?___awmod& (0+255),w,b
  5034  006BEA  0100               	movlb	0	; () banked
  5035  006BEC  1189               	iorwf	DECtoBCD@res& (0+255),w,b
  5036  006BEE  0100               	movlb	0	; () banked
  5037  006BF0  6F89               	movwf	DECtoBCD@res& (0+255),b
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;function.c: 29: return res;
  5041  006BF2  0100               	movlb	0	; () banked
  5042  006BF4  5189               	movf	DECtoBCD@res& (0+255),w,b
  5043                           
  5044                           ; BSR set to: 0
  5045                           
  5046                           ; BSR set to: 0
  5047  006BF6  0012               	return		;funcret
  5048  006BF8  FFFF               	dw	65535	; errata NOP
  5049  006BFA                     __end_of_DECtoBCD:
  5050                           	opt stack 0
  5051                           tblptru	equ	0xFF8
  5052                           tblptrh	equ	0xFF7
  5053                           tblptrl	equ	0xFF6
  5054                           tablat	equ	0xFF5
  5055                           postinc0	equ	0xFEE
  5056                           wreg	equ	0xFE8
  5057                           postdec1	equ	0xFE5
  5058                           fsr1l	equ	0xFE1
  5059                           indf2	equ	0xFDF
  5060                           fsr2h	equ	0xFDA
  5061                           fsr2l	equ	0xFD9
  5062                           status	equ	0xFD8
  5063                           
  5064 ;; *************** function _telaPrincipal *****************
  5065 ;; Defined at:
  5066 ;;		line 24 in file "tela_PRINCIPAL.h"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;		None
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5080 ;;      Params:         0       0       0       0       0       0       0
  5081 ;;      Locals:         0       2       0       0       0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0
  5083 ;;      Totals:         0       2       0       0       0       0       0
  5084 ;;Total ram usage:        2 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:   10
  5087 ;; This function calls:
  5088 ;;		_blink
  5089 ;;		_btPress
  5090 ;;		_clearShiftREG
  5091 ;;		_intToFloatStr
  5092 ;;		_resetParametros
  5093 ;;		_sprintf
  5094 ;; This function is called by:
  5095 ;;		_main
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text7
  5100  002A3A                     __ptext7:
  5101                           	opt stack 0
  5102  002A3A                     _telaPrincipal:
  5103                           	opt stack 0
  5104  002A3A  FFFF               	dw	65535	; assembler added errata NOP
  5105                           
  5106                           ;tela_PRINCIPAL.h: 26: sprintf(&line1[2], " %02d:%02d:%02d %02d/%02d", _hor, _min, _sec,
      +                           _dia, _mes);
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;incstack = 0
  5110  002A3C  0E7D               	movlw	low (_line1+2)
  5111  002A3E  0100               	movlb	0	; () banked
  5112  002A40  6FA1               	movwf	sprintf@wh& (0+255),b
  5113  002A42  0E01               	movlw	high (_line1+2)
  5114  002A44  0100               	movlb	0	; () banked
  5115  002A46  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  5116  002A48  0E72               	movlw	low STR_54
  5117  002A4A  0100               	movlb	0	; () banked
  5118  002A4C  6FA3               	movwf	sprintf@f& (0+255),b
  5119  002A4E  0E7C               	movlw	high STR_54
  5120  002A50  0100               	movlb	0	; () banked
  5121  002A52  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  5122  002A54  C0ED  F0A5         	movff	__hor,?_sprintf+4
  5123  002A58  0100               	movlb	0	; () banked
  5124  002A5A  6BA6               	clrf	(?_sprintf+5)& (0+255),b
  5125  002A5C  C0EE  F0A7         	movff	__min,?_sprintf+6
  5126  002A60  0100               	movlb	0	; () banked
  5127  002A62  6BA8               	clrf	(?_sprintf+7)& (0+255),b
  5128  002A64  C0EF  F0A9         	movff	__sec,?_sprintf+8
  5129  002A68  0100               	movlb	0	; () banked
  5130  002A6A  6BAA               	clrf	(?_sprintf+9)& (0+255),b
  5131  002A6C  C0EC  F0AB         	movff	__dia,?_sprintf+10
  5132  002A70  0100               	movlb	0	; () banked
  5133  002A72  6BAC               	clrf	(?_sprintf+11)& (0+255),b
  5134  002A74  C0EB  F0AD         	movff	__mes,?_sprintf+12
  5135  002A78  0100               	movlb	0	; () banked
  5136  002A7A  6BAE               	clrf	(?_sprintf+13)& (0+255),b
  5137  002A7C  EC25  F036         	call	_sprintf	;wreg free
  5138                           
  5139                           ;tela_PRINCIPAL.h: 28: line1[0] = 0x01;
  5140  002A80  0E01               	movlw	1
  5141  002A82  0101               	movlb	1	; () banked
  5142  002A84  6F7B               	movwf	_line1& (0+255),b
  5143                           
  5144                           ; BSR set to: 1
  5145                           ;tela_PRINCIPAL.h: 29: line1[1] = intensidadeSinal;
  5146  002A86  C0FF  F17C         	movff	_intensidadeSinal,_line1+1
  5147                           
  5148                           ; BSR set to: 1
  5149                           ;tela_PRINCIPAL.h: 30: line1[19] = 0x05;
  5150  002A8A  0E05               	movlw	5
  5151  002A8C  0101               	movlb	1	; () banked
  5152  002A8E  6F8E               	movwf	(_line1+19)& (0+255),b
  5153                           
  5154                           ; BSR set to: 1
  5155                           ;tela_PRINCIPAL.h: 32: if (!PORTCbits.RC0) {
  5156  002A90  B082               	btfsc	3970,0,c	;volatile
  5157  002A92  D031               	goto	l9404
  5158                           
  5159                           ; BSR set to: 1
  5160                           ;tela_PRINCIPAL.h: 33: blink(line1, 20, 20);
  5161  002A94  0E7B               	movlw	low _line1
  5162  002A96  0100               	movlb	0	; () banked
  5163  002A98  6F80               	movwf	blink@line& (0+255),b
  5164  002A9A  0E01               	movlw	high _line1
  5165  002A9C  0100               	movlb	0	; () banked
  5166  002A9E  6F81               	movwf	(blink@line+1)& (0+255),b
  5167  002AA0  0E14               	movlw	20
  5168  002AA2  0100               	movlb	0	; () banked
  5169  002AA4  6F82               	movwf	blink@start& (0+255),b
  5170  002AA6  0E14               	movlw	20
  5171  002AA8  0100               	movlb	0	; () banked
  5172  002AAA  6F83               	movwf	blink@end& (0+255),b
  5173  002AAC  EC87  F035         	call	_blink	;wreg free
  5174                           
  5175                           ;tela_PRINCIPAL.h: 35: }
  5176                           ;tela_PRINCIPAL.h: 37: switch (codigoErro) {
  5177  002AB0  D022               	goto	l9404
  5178  002AB2                     l9396:
  5179  002AB2  FFFF               	dw	65535	; assembler added errata NOP
  5180                           
  5181                           ;tela_PRINCIPAL.h: 39: sprintf(&line3[1], "*falta de energia");
  5182  002AB4  0E52               	movlw	low (_line3+1)
  5183  002AB6  0100               	movlb	0	; () banked
  5184  002AB8  6FA1               	movwf	sprintf@wh& (0+255),b
  5185  002ABA  0E01               	movlw	high (_line3+1)
  5186  002ABC  0100               	movlb	0	; () banked
  5187  002ABE  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  5188  002AC0  0EAC               	movlw	low STR_55
  5189  002AC2  0100               	movlb	0	; () banked
  5190  002AC4  6FA3               	movwf	sprintf@f& (0+255),b
  5191  002AC6  0E7D               	movlw	high STR_55
  5192  002AC8  0100               	movlb	0	; () banked
  5193  002ACA  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  5194  002ACC  EC25  F036         	call	_sprintf	;wreg free
  5195                           
  5196                           ;tela_PRINCIPAL.h: 40: codigoErro = 0;
  5197  002AD0  0E00               	movlw	0
  5198  002AD2  6E6E               	movwf	_codigoErro,c
  5199                           
  5200                           ;tela_PRINCIPAL.h: 41: break;
  5201  002AD4  D018               	goto	l9406
  5202  002AD6                     l9400:
  5203  002AD6  FFFF               	dw	65535	; assembler added errata NOP
  5204                           
  5205                           ;tela_PRINCIPAL.h: 43: sprintf(&line3[1], "*falha val. ladrao");
  5206  002AD8  0E52               	movlw	low (_line3+1)
  5207  002ADA  0100               	movlb	0	; () banked
  5208  002ADC  6FA1               	movwf	sprintf@wh& (0+255),b
  5209  002ADE  0E01               	movlw	high (_line3+1)
  5210  002AE0  0100               	movlb	0	; () banked
  5211  002AE2  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  5212  002AE4  0E2A               	movlw	low STR_56
  5213  002AE6  0100               	movlb	0	; () banked
  5214  002AE8  6FA3               	movwf	sprintf@f& (0+255),b
  5215  002AEA  0E7D               	movlw	high STR_56
  5216  002AEC  0100               	movlb	0	; () banked
  5217  002AEE  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  5218  002AF0  EC25  F036         	call	_sprintf	;wreg free
  5219                           
  5220                           ;tela_PRINCIPAL.h: 45: }
  5221                           
  5222                           ;tela_PRINCIPAL.h: 44: break;
  5223  002AF4  D008               	goto	l9406
  5224  002AF6                     l9404:
  5225  002AF6  FFFF               	dw	65535	; assembler added errata NOP
  5226  002AF8  506E               	movf	_codigoErro,w,c
  5227                           
  5228                           ; Switch size 1, requested type "space"
  5229                           ; Number of cases is 2, Range of values is 1 to 3
  5230                           ; switch strategies available:
  5231                           ; Name         Instructions Cycles
  5232                           ; simple_byte            7     4 (average)
  5233                           ;	Chosen strategy is simple_byte
  5234  002AFA  0A01               	xorlw	1	; case 1
  5235  002AFC  B4D8               	btfsc	status,2,c
  5236  002AFE  D7D9               	goto	l9396
  5237  002B00  0A02               	xorlw	2	; case 3
  5238  002B02  B4D8               	btfsc	status,2,c
  5239  002B04  D7E8               	goto	l9400
  5240  002B06                     l9406:
  5241  002B06  FFFF               	dw	65535	; assembler added errata NOP
  5242                           
  5243                           ;tela_PRINCIPAL.h: 47: if (ocorrendoIncendio) {
  5244  002B08  0100               	movlb	0	; () banked
  5245  002B0A  51F3               	movf	_ocorrendoIncendio& (0+255),w,b
  5246  002B0C  B4D8               	btfsc	status,2,c
  5247  002B0E  D01A               	goto	l9410
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;tela_PRINCIPAL.h: 49: sprintf(&line2[2], "Pressao %s BAR", intToFloatStr(pressao));
  5251  002B10  0100               	movlb	0	; () banked
  5252  002B12  51F8               	movf	_pressao& (0+255),w,b
  5253  002B14  EC6F  F039         	call	_intToFloatStr
  5254  002B18  C0B5  F0C2         	movff	?_intToFloatStr,_telaPrincipal$2347
  5255  002B1C  C0B6  F0C3         	movff	?_intToFloatStr+1,_telaPrincipal$2347+1
  5256                           
  5257                           ;tela_PRINCIPAL.h: 49: sprintf(&line2[2], "Pressao %s BAR", intToFloatStr(pressao));
  5258  002B20  0E68               	movlw	low (_line2+2)
  5259  002B22  0100               	movlb	0	; () banked
  5260  002B24  6FA1               	movwf	sprintf@wh& (0+255),b
  5261  002B26  0E01               	movlw	high (_line2+2)
  5262  002B28  0100               	movlb	0	; () banked
  5263  002B2A  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  5264  002B2C  0E31               	movlw	low STR_38
  5265  002B2E  0100               	movlb	0	; () banked
  5266  002B30  6FA3               	movwf	sprintf@f& (0+255),b
  5267  002B32  0E7E               	movlw	high STR_38
  5268  002B34  0100               	movlb	0	; () banked
  5269  002B36  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  5270  002B38  C0C2  F0A5         	movff	_telaPrincipal$2347,?_sprintf+4
  5271  002B3C  C0C3  F0A6         	movff	_telaPrincipal$2347+1,?_sprintf+5
  5272  002B40  EC25  F036         	call	_sprintf	;wreg free
  5273  002B44                     l9410:
  5274  002B44  FFFF               	dw	65535	; assembler added errata NOP
  5275                           
  5276                           ;tela_PRINCIPAL.h: 50: }
  5277                           ;tela_PRINCIPAL.h: 51: if (pressao > 99 || pressao < 0) {
  5278  002B46  0100               	movlb	0	; () banked
  5279  002B48  BFF9               	btfsc	(_pressao+1)& (0+255),7,b
  5280  002B4A  D008               	goto	l9412
  5281  002B4C  0100               	movlb	0	; () banked
  5282  002B4E  51F9               	movf	(_pressao+1)& (0+255),w,b
  5283  002B50  E109               	bnz	l9414
  5284  002B52  0E64               	movlw	100
  5285  002B54  0100               	movlb	0	; () banked
  5286  002B56  5DF8               	subwf	_pressao& (0+255),w,b
  5287  002B58  B0D8               	btfsc	status,0,c
  5288  002B5A  D004               	goto	l9414
  5289  002B5C                     l9412:
  5290  002B5C  FFFF               	dw	65535	; assembler added errata NOP
  5291                           
  5292                           ; BSR set to: 0
  5293  002B5E  0100               	movlb	0	; () banked
  5294  002B60  AFF9               	btfss	(_pressao+1)& (0+255),7,b
  5295  002B62  D012               	goto	l9418
  5296  002B64                     l9414:
  5297  002B64  FFFF               	dw	65535	; assembler added errata NOP
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;tela_PRINCIPAL.h: 52: sprintf(&line2[1], "Erro no Transdutor");
  5301  002B66  0E67               	movlw	low (_line2+1)
  5302  002B68  0100               	movlb	0	; () banked
  5303  002B6A  6FA1               	movwf	sprintf@wh& (0+255),b
  5304  002B6C  0E01               	movlw	high (_line2+1)
  5305  002B6E  0100               	movlb	0	; () banked
  5306  002B70  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  5307  002B72  0E50               	movlw	low STR_58
  5308  002B74  0100               	movlb	0	; () banked
  5309  002B76  6FA3               	movwf	sprintf@f& (0+255),b
  5310  002B78  0E7D               	movlw	high STR_58
  5311  002B7A  0100               	movlb	0	; () banked
  5312  002B7C  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  5313  002B7E  EC25  F036         	call	_sprintf	;wreg free
  5314                           
  5315                           ;tela_PRINCIPAL.h: 53: clearShiftREG();
  5316  002B82  EC2B  F034         	call	_clearShiftREG	;wreg free
  5317                           
  5318                           ;tela_PRINCIPAL.h: 54: } else {
  5319  002B86  D01B               	goto	l9420
  5320  002B88                     l9418:
  5321  002B88  FFFF               	dw	65535	; assembler added errata NOP
  5322                           
  5323                           ;tela_PRINCIPAL.h: 55: sprintf(&line2[2], "Pressao %s BAR", intToFloatStr(pressao));
  5324  002B8A  0100               	movlb	0	; () banked
  5325  002B8C  51F8               	movf	_pressao& (0+255),w,b
  5326  002B8E  EC6F  F039         	call	_intToFloatStr
  5327  002B92  C0B5  F0C2         	movff	?_intToFloatStr,_telaPrincipal$2347
  5328  002B96  C0B6  F0C3         	movff	?_intToFloatStr+1,_telaPrincipal$2347+1
  5329                           
  5330                           ;tela_PRINCIPAL.h: 55: sprintf(&line2[2], "Pressao %s BAR", intToFloatStr(pressao));
  5331  002B9A  0E68               	movlw	low (_line2+2)
  5332  002B9C  0100               	movlb	0	; () banked
  5333  002B9E  6FA1               	movwf	sprintf@wh& (0+255),b
  5334  002BA0  0E01               	movlw	high (_line2+2)
  5335  002BA2  0100               	movlb	0	; () banked
  5336  002BA4  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  5337  002BA6  0E31               	movlw	low STR_38
  5338  002BA8  0100               	movlb	0	; () banked
  5339  002BAA  6FA3               	movwf	sprintf@f& (0+255),b
  5340  002BAC  0E7E               	movlw	high STR_38
  5341  002BAE  0100               	movlb	0	; () banked
  5342  002BB0  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  5343  002BB2  C0C2  F0A5         	movff	_telaPrincipal$2347,?_sprintf+4
  5344  002BB6  C0C3  F0A6         	movff	_telaPrincipal$2347+1,?_sprintf+5
  5345  002BBA  EC25  F036         	call	_sprintf	;wreg free
  5346  002BBE                     l9420:
  5347  002BBE  FFFF               	dw	65535	; assembler added errata NOP
  5348                           
  5349                           ;tela_PRINCIPAL.h: 56: }
  5350                           ;tela_PRINCIPAL.h: 59: if (codigoErro > 1 || ocorrendoIncendio) {
  5351  002BC0  0E02               	movlw	2
  5352  002BC2  606E               	cpfslt	_codigoErro,c
  5353  002BC4  D004               	goto	l9424
  5354  002BC6  0100               	movlb	0	; () banked
  5355  002BC8  51F3               	movf	_ocorrendoIncendio& (0+255),w,b
  5356  002BCA  B4D8               	btfsc	status,2,c
  5357  002BCC  D026               	goto	l9434
  5358  002BCE                     l9424:
  5359  002BCE  FFFF               	dw	65535	; assembler added errata NOP
  5360                           
  5361                           ;tela_PRINCIPAL.h: 60: blink(line3, 1, 19);
  5362  002BD0  0E51               	movlw	low _line3
  5363  002BD2  0100               	movlb	0	; () banked
  5364  002BD4  6F80               	movwf	blink@line& (0+255),b
  5365  002BD6  0E01               	movlw	high _line3
  5366  002BD8  0100               	movlb	0	; () banked
  5367  002BDA  6F81               	movwf	(blink@line+1)& (0+255),b
  5368  002BDC  0E01               	movlw	1
  5369  002BDE  0100               	movlb	0	; () banked
  5370  002BE0  6F82               	movwf	blink@start& (0+255),b
  5371  002BE2  0E13               	movlw	19
  5372  002BE4  0100               	movlb	0	; () banked
  5373  002BE6  6F83               	movwf	blink@end& (0+255),b
  5374  002BE8  EC87  F035         	call	_blink	;wreg free
  5375                           
  5376                           ;tela_PRINCIPAL.h: 61: shift[1] = 1;
  5377  002BEC  0E01               	movlw	1
  5378  002BEE  6E41               	movwf	_shift+1,c
  5379                           
  5380                           ;tela_PRINCIPAL.h: 62: sprintf(&line4[1], "Press ESC p/ Reset");
  5381  002BF0  0E3D               	movlw	low (_line4+1)
  5382  002BF2  0100               	movlb	0	; () banked
  5383  002BF4  6FA1               	movwf	sprintf@wh& (0+255),b
  5384  002BF6  0E01               	movlw	high (_line4+1)
  5385  002BF8  0100               	movlb	0	; () banked
  5386  002BFA  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  5387  002BFC  0E63               	movlw	low STR_60
  5388  002BFE  0100               	movlb	0	; () banked
  5389  002C00  6FA3               	movwf	sprintf@f& (0+255),b
  5390  002C02  0E7D               	movlw	high STR_60
  5391  002C04  0100               	movlb	0	; () banked
  5392  002C06  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  5393  002C08  EC25  F036         	call	_sprintf	;wreg free
  5394                           
  5395                           ;tela_PRINCIPAL.h: 63: if (btPress(1)) {
  5396  002C0C  0E01               	movlw	1
  5397  002C0E  EC82  F037         	call	_btPress
  5398  002C12  0900               	iorlw	0
  5399  002C14  A4D8               	btfss	status,2,c
  5400                           
  5401                           ;tela_PRINCIPAL.h: 64: resetParametros();
  5402  002C16  EC95  F033         	call	_resetParametros	;wreg free
  5403  002C1A                     l9434:
  5404  002C1A  FFFF               	dw	65535	; assembler added errata NOP
  5405                           
  5406                           ;tela_PRINCIPAL.h: 65: }
  5407                           ;tela_PRINCIPAL.h: 66: }
  5408                           ;tela_PRINCIPAL.h: 68: if (btPress(4)) {
  5409  002C1C  0E04               	movlw	4
  5410  002C1E  EC82  F037         	call	_btPress
  5411  002C22  0900               	iorlw	0
  5412  002C24  B4D8               	btfsc	status,2,c
  5413  002C26  D005               	goto	l682
  5414                           
  5415                           ;tela_PRINCIPAL.h: 69: menu_posi = 1;
  5416  002C28  0E01               	movlw	1
  5417  002C2A  0100               	movlb	0	; () banked
  5418  002C2C  6FDF               	movwf	_menu_posi& (0+255),b
  5419                           
  5420                           ;tela_PRINCIPAL.h: 70: sub_menu_posi = 1;
  5421  002C2E  0E01               	movlw	1
  5422  002C30  6E65               	movwf	_sub_menu_posi,c
  5423  002C32                     l682:
  5424  002C32  FFFF               	dw	65535	; assembler added errata NOP
  5425  002C34  0012               	return		;funcret
  5426  002C36  FFFF               	dw	65535	; errata NOP
  5427  002C38                     __end_of_telaPrincipal:
  5428                           	opt stack 0
  5429                           tblptru	equ	0xFF8
  5430                           tblptrh	equ	0xFF7
  5431                           tblptrl	equ	0xFF6
  5432                           tablat	equ	0xFF5
  5433                           postinc0	equ	0xFEE
  5434                           wreg	equ	0xFE8
  5435                           postdec1	equ	0xFE5
  5436                           fsr1l	equ	0xFE1
  5437                           indf2	equ	0xFDF
  5438                           fsr2h	equ	0xFDA
  5439                           fsr2l	equ	0xFD9
  5440                           status	equ	0xFD8
  5441                           
  5442 ;; *************** function _resetParametros *****************
  5443 ;; Defined at:
  5444 ;;		line 11 in file "tela_PRINCIPAL.h"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      void 
  5451 ;; Registers used:
  5452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5458 ;;      Params:         0       0       0       0       0       0       0
  5459 ;;      Locals:         0       0       0       0       0       0       0
  5460 ;;      Temps:          0       0       0       0       0       0       0
  5461 ;;      Totals:         0       0       0       0       0       0       0
  5462 ;;Total ram usage:        0 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    7
  5465 ;; This function calls:
  5466 ;;		_clearShiftREG
  5467 ;; This function is called by:
  5468 ;;		_telaPrincipal
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           	psect	text8
  5473  00672A                     __ptext8:
  5474                           	opt stack 0
  5475  00672A                     _resetParametros:
  5476                           	opt stack 0
  5477  00672A  FFFF               	dw	65535	; assembler added errata NOP
  5478                           
  5479                           ;tela_PRINCIPAL.h: 12: ocorrendoIncendio = 0;
  5480                           
  5481                           ;incstack = 0
  5482  00672C  0E00               	movlw	0
  5483  00672E  0100               	movlb	0	; () banked
  5484  006730  6FF3               	movwf	_ocorrendoIncendio& (0+255),b
  5485                           
  5486                           ;tela_PRINCIPAL.h: 13: codigoErro = 0;
  5487  006732  0E00               	movlw	0
  5488  006734  6E6E               	movwf	_codigoErro,c
  5489                           
  5490                           ;tela_PRINCIPAL.h: 14: status_estacionaria = 1;
  5491  006736  0E01               	movlw	1
  5492  006738  0100               	movlb	0	; () banked
  5493  00673A  6FFB               	movwf	_status_estacionaria& (0+255),b
  5494                           
  5495                           ;tela_PRINCIPAL.h: 15: status_jockey = 1;
  5496  00673C  0E01               	movlw	1
  5497  00673E  0100               	movlb	0	; () banked
  5498  006740  6FFD               	movwf	_status_jockey& (0+255),b
  5499                           
  5500                           ;tela_PRINCIPAL.h: 16: status_principal = 1;
  5501  006742  0E01               	movlw	1
  5502  006744  0100               	movlb	0	; () banked
  5503  006746  6FFC               	movwf	_status_principal& (0+255),b
  5504                           
  5505                           ;tela_PRINCIPAL.h: 17: tempo_limite_partida = 0;
  5506  006748  0E00               	movlw	0
  5507  00674A  6E67               	movwf	_tempo_limite_partida,c
  5508                           
  5509                           ;tela_PRINCIPAL.h: 18: timerReenvioSMS = 0;
  5510  00674C  0E00               	movlw	0
  5511  00674E  0100               	movlb	0	; () banked
  5512  006750  6FF6               	movwf	_timerReenvioSMS& (0+255),b
  5513                           
  5514                           ;tela_PRINCIPAL.h: 19: tempo_partida = 0;
  5515  006752  0E00               	movlw	0
  5516  006754  6E68               	movwf	_tempo_partida,c
  5517                           
  5518                           ;tela_PRINCIPAL.h: 20: gsmOcupado = 0;
  5519  006756  0E00               	movlw	0
  5520  006758  0100               	movlb	0	; () banked
  5521  00675A  6FF4               	movwf	_gsmOcupado& (0+255),b
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;tela_PRINCIPAL.h: 21: clearShiftREG();
  5525  00675C  EC2B  F034         	call	_clearShiftREG	;wreg free
  5526  006760  0012               	return		;funcret
  5527  006762  FFFF               	dw	65535	; errata NOP
  5528  006764                     __end_of_resetParametros:
  5529                           	opt stack 0
  5530                           tblptru	equ	0xFF8
  5531                           tblptrh	equ	0xFF7
  5532                           tblptrl	equ	0xFF6
  5533                           tablat	equ	0xFF5
  5534                           postinc0	equ	0xFEE
  5535                           wreg	equ	0xFE8
  5536                           postdec1	equ	0xFE5
  5537                           fsr1l	equ	0xFE1
  5538                           indf2	equ	0xFDF
  5539                           fsr2h	equ	0xFDA
  5540                           fsr2l	equ	0xFD9
  5541                           status	equ	0xFD8
  5542                           
  5543 ;; *************** function _setShiftREG *****************
  5544 ;; Defined at:
  5545 ;;		line 37 in file "shift595.h"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;		None
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  i               1    1[BANK0 ] unsigned char 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      void 
  5552 ;; Registers used:
  5553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5559 ;;      Params:         0       0       0       0       0       0       0
  5560 ;;      Locals:         0       1       0       0       0       0       0
  5561 ;;      Temps:          0       1       0       0       0       0       0
  5562 ;;      Totals:         0       2       0       0       0       0       0
  5563 ;;Total ram usage:        2 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    6
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_main
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text9
  5574  006CF6                     __ptext9:
  5575                           	opt stack 0
  5576  006CF6                     _setShiftREG:
  5577                           	opt stack 0
  5578  006CF6  FFFF               	dw	65535	; assembler added errata NOP
  5579                           
  5580                           ;shift595.h: 38: unsigned char i = 0;
  5581                           
  5582                           ;incstack = 0
  5583  006CF8  0E00               	movlw	0
  5584  006CFA  0100               	movlb	0	; () banked
  5585  006CFC  6F81               	movwf	setShiftREG@i& (0+255),b
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;shift595.h: 39: PORTEbits.RE1 = 0;
  5589  006CFE  9284               	bcf	3972,1,c	;volatile
  5590                           
  5591                           ;shift595.h: 40: for (i = 0; i < 8; i++) {
  5592  006D00  0E00               	movlw	0
  5593  006D02  0100               	movlb	0	; () banked
  5594  006D04  6F81               	movwf	setShiftREG@i& (0+255),b
  5595  006D06                     l6448:
  5596  006D06  FFFF               	dw	65535	; assembler added errata NOP
  5597                           
  5598                           ; BSR set to: 0
  5599  006D08  0E07               	movlw	7
  5600  006D0A  0100               	movlb	0	; () banked
  5601  006D0C  6581               	cpfsgt	setShiftREG@i& (0+255),b
  5602  006D0E  D001               	goto	l424
  5603  006D10  D01B               	goto	l425
  5604  006D12                     l424:
  5605  006D12  FFFF               	dw	65535	; assembler added errata NOP
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;shift595.h: 41: PORTEbits.RE0 = 0;
  5609  006D14  9084               	bcf	3972,0,c	;volatile
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;shift595.h: 42: PORTEbits.RE2 = shift[i];
  5613  006D16  0100               	movlb	0	; () banked
  5614  006D18  5181               	movf	setShiftREG@i& (0+255),w,b
  5615  006D1A  0D01               	mullw	1
  5616  006D1C  0E40               	movlw	low _shift
  5617  006D1E  24F3               	addwf	prodl,w,c
  5618  006D20  6ED9               	movwf	fsr2l,c
  5619  006D22  0E00               	movlw	high _shift
  5620  006D24  20F4               	addwfc	prodh,w,c
  5621  006D26  6EDA               	movwf	fsr2h,c
  5622  006D28  50DF               	movf	indf2,w,c
  5623  006D2A  0100               	movlb	0	; () banked
  5624  006D2C  6F80               	movwf	??_setShiftREG& (0+255),b
  5625  006D2E  0100               	movlb	0	; () banked
  5626  006D30  4780               	rlncf	??_setShiftREG& (0+255),f,b
  5627  006D32  4780               	rlncf	??_setShiftREG& (0+255),f,b
  5628  006D34  5084               	movf	3972,w,c	;volatile
  5629  006D36  0100               	movlb	0	; () banked
  5630  006D38  1980               	xorwf	??_setShiftREG& (0+255),w,b
  5631  006D3A  0BFB               	andlw	-5
  5632  006D3C  1980               	xorwf	??_setShiftREG& (0+255),w,b
  5633  006D3E  6E84               	movwf	3972,c	;volatile
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;shift595.h: 43: PORTEbits.RE0 = 1;
  5637  006D40  8084               	bsf	3972,0,c	;volatile
  5638                           
  5639                           ; BSR set to: 0
  5640  006D42  0100               	movlb	0	; () banked
  5641  006D44  2B81               	incf	setShiftREG@i& (0+255),f,b
  5642  006D46  D7DF               	goto	l6448
  5643  006D48                     l425:
  5644  006D48  FFFF               	dw	65535	; assembler added errata NOP
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;shift595.h: 44: }
  5648                           ;shift595.h: 45: PORTEbits.RE1 = 1;
  5649  006D4A  8284               	bsf	3972,1,c	;volatile
  5650                           
  5651                           ; BSR set to: 0
  5652  006D4C  0012               	return		;funcret
  5653  006D4E  FFFF               	dw	65535	; errata NOP
  5654  006D50                     __end_of_setShiftREG:
  5655                           	opt stack 0
  5656                           tblptru	equ	0xFF8
  5657                           tblptrh	equ	0xFF7
  5658                           tblptrl	equ	0xFF6
  5659                           tablat	equ	0xFF5
  5660                           prodh	equ	0xFF4
  5661                           prodl	equ	0xFF3
  5662                           postinc0	equ	0xFEE
  5663                           wreg	equ	0xFE8
  5664                           postdec1	equ	0xFE5
  5665                           fsr1l	equ	0xFE1
  5666                           indf2	equ	0xFDF
  5667                           fsr2h	equ	0xFDA
  5668                           fsr2l	equ	0xFD9
  5669                           status	equ	0xFD8
  5670                           
  5671 ;; *************** function _lerParametros *****************
  5672 ;; Defined at:
  5673 ;;		line 9 in file "util.h"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;		None
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  i               1   21[BANK0 ] unsigned char 
  5678 ;;  verifica_mem    1   20[BANK0 ] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5688 ;;      Params:         0       0       0       0       0       0       0
  5689 ;;      Locals:         0       2       0       0       0       0       0
  5690 ;;      Temps:          0       0       0       0       0       0       0
  5691 ;;      Totals:         0       2       0       0       0       0       0
  5692 ;;Total ram usage:        2 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:   10
  5695 ;; This function calls:
  5696 ;;		_readEEPROM16_ext
  5697 ;;		_readEEPROM_ext
  5698 ;;		_writeEEPROM_ext
  5699 ;; This function is called by:
  5700 ;;		_main
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text10
  5705  0035FA                     __ptext10:
  5706                           	opt stack 0
  5707  0035FA                     _lerParametros:
  5708                           	opt stack 0
  5709  0035FA  FFFF               	dw	65535	; assembler added errata NOP
  5710                           
  5711                           ;util.h: 10: char i = 0;
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;incstack = 0
  5715  0035FC  0E00               	movlw	0
  5716  0035FE  0100               	movlb	0	; () banked
  5717  003600  6F95               	movwf	lerParametros@i& (0+255),b
  5718                           
  5719                           ;util.h: 11: char verifica_memoria_nova = 0;
  5720  003602  0E00               	movlw	0
  5721  003604  0100               	movlb	0	; () banked
  5722  003606  6F94               	movwf	lerParametros@verifica_memoria_nova& (0+255),b
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;util.h: 12: verifica_memoria_nova = readEEPROM_ext(12);
  5726  003608  0E0C               	movlw	12
  5727  00360A  ECD4  F01F         	call	_readEEPROM_ext
  5728  00360E  0100               	movlb	0	; () banked
  5729  003610  6F94               	movwf	lerParametros@verifica_memoria_nova& (0+255),b
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;util.h: 13: if (verifica_memoria_nova != 20) {
  5733  003612  0E14               	movlw	20
  5734  003614  0100               	movlb	0	; () banked
  5735  003616  1994               	xorwf	lerParametros@verifica_memoria_nova& (0+255),w,b
  5736  003618  B4D8               	btfsc	status,2,c
  5737  00361A  D01B               	goto	l590
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;util.h: 14: for (i = 0; i < 100; i++) {
  5741  00361C  0E00               	movlw	0
  5742  00361E  0100               	movlb	0	; () banked
  5743  003620  6F95               	movwf	lerParametros@i& (0+255),b
  5744  003622                     l9248:
  5745  003622  FFFF               	dw	65535	; assembler added errata NOP
  5746                           
  5747                           ; BSR set to: 0
  5748  003624  0E63               	movlw	99
  5749  003626  0100               	movlb	0	; () banked
  5750  003628  6595               	cpfsgt	lerParametros@i& (0+255),b
  5751  00362A  D001               	goto	l9252
  5752  00362C  D00B               	goto	l9258
  5753  00362E                     l9252:
  5754  00362E  FFFF               	dw	65535	; assembler added errata NOP
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;util.h: 15: writeEEPROM_ext(i, 0);
  5758  003630  0E00               	movlw	0
  5759  003632  0100               	movlb	0	; () banked
  5760  003634  6F8C               	movwf	writeEEPROM_ext@data& (0+255),b
  5761  003636  0100               	movlb	0	; () banked
  5762  003638  5195               	movf	lerParametros@i& (0+255),w,b
  5763  00363A  ECCF  F034         	call	_writeEEPROM_ext
  5764  00363E  0100               	movlb	0	; () banked
  5765  003640  2B95               	incf	lerParametros@i& (0+255),f,b
  5766  003642  D7EF               	goto	l9248
  5767  003644                     l9258:
  5768  003644  FFFF               	dw	65535	; assembler added errata NOP
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;util.h: 16: }
  5772                           ;util.h: 17: writeEEPROM_ext(12, 20);
  5773  003646  0E14               	movlw	20
  5774  003648  0100               	movlb	0	; () banked
  5775  00364A  6F8C               	movwf	writeEEPROM_ext@data& (0+255),b
  5776  00364C  0E0C               	movlw	12
  5777  00364E  ECCF  F034         	call	_writeEEPROM_ext
  5778  003652                     l590:
  5779  003652  FFFF               	dw	65535	; assembler added errata NOP
  5780                           
  5781                           ;util.h: 18: }
  5782                           ;util.h: 20: sp_jockey = readEEPROM_ext(0);
  5783  003654  0E00               	movlw	0
  5784  003656  ECD4  F01F         	call	_readEEPROM_ext
  5785  00365A  0100               	movlb	0	; () banked
  5786  00365C  6FE3               	movwf	_sp_jockey& (0+255),b
  5787                           
  5788                           ;util.h: 21: sp_principal = readEEPROM_ext(1);
  5789  00365E  0E01               	movlw	1
  5790  003660  ECD4  F01F         	call	_readEEPROM_ext
  5791  003664  0100               	movlb	0	; () banked
  5792  003666  6FE2               	movwf	_sp_principal& (0+255),b
  5793                           
  5794                           ;util.h: 22: sp_estacionaria = readEEPROM_ext(2);
  5795  003668  0E02               	movlw	2
  5796  00366A  ECD4  F01F         	call	_readEEPROM_ext
  5797  00366E  0100               	movlb	0	; () banked
  5798  003670  6FE1               	movwf	_sp_estacionaria& (0+255),b
  5799                           
  5800                           ;util.h: 23: horimetro = readEEPROM16_ext(8);
  5801  003672  0E08               	movlw	8
  5802  003674  ECAD  F034         	call	_readEEPROM16_ext
  5803  003678  C08E  F04B         	movff	?_readEEPROM16_ext,_horimetro
  5804  00367C  C08F  F04C         	movff	?_readEEPROM16_ext+1,_horimetro+1
  5805                           
  5806                           ;util.h: 24: sp_pressao_rede = readEEPROM_ext(4);
  5807  003680  0E04               	movlw	4
  5808  003682  ECD4  F01F         	call	_readEEPROM_ext
  5809  003686  0100               	movlb	0	; () banked
  5810  003688  6FE4               	movwf	_sp_pressao_rede& (0+255),b
  5811                           
  5812                           ;util.h: 25: intervalo_teste_dia = readEEPROM_ext(6);
  5813  00368A  0E06               	movlw	6
  5814  00368C  ECD4  F01F         	call	_readEEPROM_ext
  5815  003690  0100               	movlb	0	; () banked
  5816  003692  6FE9               	movwf	_intervalo_teste_dia& (0+255),b
  5817                           
  5818                           ;util.h: 26: tempo_limite_estacionaria = readEEPROM_ext(7);
  5819  003694  0E07               	movlw	7
  5820  003696  ECD4  F01F         	call	_readEEPROM_ext
  5821  00369A  0100               	movlb	0	; () banked
  5822  00369C  6FE6               	movwf	_tempo_limite_estacionaria& (0+255),b
  5823                           
  5824                           ;util.h: 27: dias_restante_teste = readEEPROM_ext(10);
  5825  00369E  0E0A               	movlw	10
  5826  0036A0  ECD4  F01F         	call	_readEEPROM_ext
  5827  0036A4  0100               	movlb	0	; () banked
  5828  0036A6  6FE8               	movwf	_dias_restante_teste& (0+255),b
  5829                           
  5830                           ;util.h: 28: horario_de_teste = readEEPROM_ext(11);
  5831  0036A8  0E0B               	movlw	11
  5832  0036AA  ECD4  F01F         	call	_readEEPROM_ext
  5833  0036AE  0100               	movlb	0	; () banked
  5834  0036B0  6FE7               	movwf	_horario_de_teste& (0+255),b
  5835                           
  5836                           ;util.h: 29: tempo_limite_teste_estacionaria = readEEPROM_ext(13);
  5837  0036B2  0E0D               	movlw	13
  5838  0036B4  ECD4  F01F         	call	_readEEPROM_ext
  5839  0036B8  0100               	movlb	0	; () banked
  5840  0036BA  6FE5               	movwf	_tempo_limite_teste_estacionaria& (0+255),b
  5841                           
  5842                           ;util.h: 31: habilitaTesteAutomatico = readEEPROM_ext(15);
  5843  0036BC  0E0F               	movlw	15
  5844  0036BE  ECD4  F01F         	call	_readEEPROM_ext
  5845  0036C2  0100               	movlb	0	; () banked
  5846  0036C4  6FF0               	movwf	_habilitaTesteAutomatico& (0+255),b
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;util.h: 33: for (i = 0; i < 11; i++) {
  5850  0036C6  0E00               	movlw	0
  5851  0036C8  0100               	movlb	0	; () banked
  5852  0036CA  6F95               	movwf	lerParametros@i& (0+255),b
  5853  0036CC                     l9262:
  5854  0036CC  FFFF               	dw	65535	; assembler added errata NOP
  5855                           
  5856                           ; BSR set to: 0
  5857  0036CE  0E0A               	movlw	10
  5858  0036D0  0100               	movlb	0	; () banked
  5859  0036D2  6595               	cpfsgt	lerParametros@i& (0+255),b
  5860  0036D4  D001               	goto	l9266
  5861  0036D6  D013               	goto	l9272
  5862  0036D8                     l9266:
  5863  0036D8  FFFF               	dw	65535	; assembler added errata NOP
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;util.h: 34: tel1[i] = readEEPROM_ext(20 + i);
  5867  0036DA  0100               	movlb	0	; () banked
  5868  0036DC  5195               	movf	lerParametros@i& (0+255),w,b
  5869  0036DE  0D01               	mullw	1
  5870  0036E0  0EB0               	movlw	low _tel1
  5871  0036E2  24F3               	addwf	prodl,w,c
  5872  0036E4  6ED9               	movwf	fsr2l,c
  5873  0036E6  0E01               	movlw	high _tel1
  5874  0036E8  20F4               	addwfc	prodh,w,c
  5875  0036EA  6EDA               	movwf	fsr2h,c
  5876  0036EC  0100               	movlb	0	; () banked
  5877  0036EE  5195               	movf	lerParametros@i& (0+255),w,b
  5878  0036F0  0F14               	addlw	20
  5879  0036F2  ECD4  F01F         	call	_readEEPROM_ext
  5880  0036F6  6EDF               	movwf	indf2,c
  5881  0036F8  0100               	movlb	0	; () banked
  5882  0036FA  2B95               	incf	lerParametros@i& (0+255),f,b
  5883  0036FC  D7E7               	goto	l9262
  5884  0036FE                     l9272:
  5885  0036FE  FFFF               	dw	65535	; assembler added errata NOP
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;util.h: 35: }
  5889                           ;util.h: 36: for (i = 0; i < 11; i++) {
  5890  003700  0E00               	movlw	0
  5891  003702  0100               	movlb	0	; () banked
  5892  003704  6F95               	movwf	lerParametros@i& (0+255),b
  5893  003706                     l9274:
  5894  003706  FFFF               	dw	65535	; assembler added errata NOP
  5895                           
  5896                           ; BSR set to: 0
  5897  003708  0E0A               	movlw	10
  5898  00370A  0100               	movlb	0	; () banked
  5899  00370C  6595               	cpfsgt	lerParametros@i& (0+255),b
  5900  00370E  D001               	goto	l9278
  5901  003710  D013               	goto	l597
  5902  003712                     l9278:
  5903  003712  FFFF               	dw	65535	; assembler added errata NOP
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;util.h: 37: tel2[i] = readEEPROM_ext(40 + i);
  5907  003714  0100               	movlb	0	; () banked
  5908  003716  5195               	movf	lerParametros@i& (0+255),w,b
  5909  003718  0D01               	mullw	1
  5910  00371A  0EA4               	movlw	low _tel2
  5911  00371C  24F3               	addwf	prodl,w,c
  5912  00371E  6ED9               	movwf	fsr2l,c
  5913  003720  0E01               	movlw	high _tel2
  5914  003722  20F4               	addwfc	prodh,w,c
  5915  003724  6EDA               	movwf	fsr2h,c
  5916  003726  0100               	movlb	0	; () banked
  5917  003728  5195               	movf	lerParametros@i& (0+255),w,b
  5918  00372A  0F28               	addlw	40
  5919  00372C  ECD4  F01F         	call	_readEEPROM_ext
  5920  003730  6EDF               	movwf	indf2,c
  5921  003732  0100               	movlb	0	; () banked
  5922  003734  2B95               	incf	lerParametros@i& (0+255),f,b
  5923  003736  D7E7               	goto	l9274
  5924  003738                     l597:
  5925  003738  FFFF               	dw	65535	; assembler added errata NOP
  5926                           
  5927                           ; BSR set to: 0
  5928  00373A  0012               	return		;funcret
  5929  00373C  FFFF               	dw	65535	; errata NOP
  5930  00373E                     __end_of_lerParametros:
  5931                           	opt stack 0
  5932                           tblptru	equ	0xFF8
  5933                           tblptrh	equ	0xFF7
  5934                           tblptrl	equ	0xFF6
  5935                           tablat	equ	0xFF5
  5936                           prodh	equ	0xFF4
  5937                           prodl	equ	0xFF3
  5938                           postinc0	equ	0xFEE
  5939                           wreg	equ	0xFE8
  5940                           postdec1	equ	0xFE5
  5941                           fsr1l	equ	0xFE1
  5942                           indf2	equ	0xFDF
  5943                           fsr2h	equ	0xFDA
  5944                           fsr2l	equ	0xFD9
  5945                           status	equ	0xFD8
  5946                           
  5947 ;; *************** function _readEEPROM16_ext *****************
  5948 ;; Defined at:
  5949 ;;		line 48 in file "eeprom.h"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  adress          1    wreg     unsigned char 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  adress          1   19[BANK0 ] unsigned char 
  5954 ;;  data            2   17[BANK0 ] unsigned int 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  2   14[BANK0 ] unsigned int 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, status,0, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5964 ;;      Params:         0       2       0       0       0       0       0
  5965 ;;      Locals:         0       3       0       0       0       0       0
  5966 ;;      Temps:          0       1       0       0       0       0       0
  5967 ;;      Totals:         0       6       0       0       0       0       0
  5968 ;;Total ram usage:        6 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    9
  5971 ;; This function calls:
  5972 ;;		_readEEPROM_ext
  5973 ;; This function is called by:
  5974 ;;		_lerParametros
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           	psect	text11
  5979  00695A                     __ptext11:
  5980                           	opt stack 0
  5981  00695A                     _readEEPROM16_ext:
  5982                           	opt stack 0
  5983  00695A  FFFF               	dw	65535	; assembler added errata NOP
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;incstack = 0
  5987                           ;readEEPROM16_ext@adress stored from wreg
  5988  00695C  0100               	movlb	0	; () banked
  5989  00695E  6F93               	movwf	readEEPROM16_ext@adress& (0+255),b
  5990                           
  5991                           ;eeprom.h: 49: unsigned int data;
  5992                           ;eeprom.h: 50: data = readEEPROM_ext(adress + 1);
  5993  006960  0100               	movlb	0	; () banked
  5994  006962  2993               	incf	readEEPROM16_ext@adress& (0+255),w,b
  5995  006964  ECD4  F01F         	call	_readEEPROM_ext
  5996  006968  0100               	movlb	0	; () banked
  5997  00696A  6F90               	movwf	??_readEEPROM16_ext& (0+255),b
  5998  00696C  0100               	movlb	0	; () banked
  5999  00696E  5190               	movf	??_readEEPROM16_ext& (0+255),w,b
  6000  006970  0100               	movlb	0	; () banked
  6001  006972  6F91               	movwf	readEEPROM16_ext@data& (0+255),b
  6002  006974  6B92               	clrf	(readEEPROM16_ext@data+1)& (0+255),b
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;eeprom.h: 51: data <<= 8;
  6006  006976  0100               	movlb	0	; () banked
  6007  006978  5191               	movf	readEEPROM16_ext@data& (0+255),w,b
  6008  00697A  6F92               	movwf	(readEEPROM16_ext@data+1)& (0+255),b
  6009  00697C  6B91               	clrf	readEEPROM16_ext@data& (0+255),b
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;eeprom.h: 52: data |= readEEPROM_ext(adress);
  6013  00697E  0100               	movlb	0	; () banked
  6014  006980  5193               	movf	readEEPROM16_ext@adress& (0+255),w,b
  6015  006982  ECD4  F01F         	call	_readEEPROM_ext
  6016  006986  0100               	movlb	0	; () banked
  6017  006988  6F90               	movwf	??_readEEPROM16_ext& (0+255),b
  6018  00698A  0100               	movlb	0	; () banked
  6019  00698C  5190               	movf	??_readEEPROM16_ext& (0+255),w,b
  6020  00698E  0100               	movlb	0	; () banked
  6021  006990  1391               	iorwf	readEEPROM16_ext@data& (0+255),f,b
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;eeprom.h: 53: return data;
  6025  006992  C091  F08E         	movff	readEEPROM16_ext@data,?_readEEPROM16_ext
  6026  006996  C092  F08F         	movff	readEEPROM16_ext@data+1,?_readEEPROM16_ext+1
  6027                           
  6028                           ; BSR set to: 0
  6029                           
  6030                           ; BSR set to: 0
  6031  00699A  0012               	return		;funcret
  6032  00699C  FFFF               	dw	65535	; errata NOP
  6033  00699E                     __end_of_readEEPROM16_ext:
  6034                           	opt stack 0
  6035                           tblptru	equ	0xFF8
  6036                           tblptrh	equ	0xFF7
  6037                           tblptrl	equ	0xFF6
  6038                           tablat	equ	0xFF5
  6039                           prodh	equ	0xFF4
  6040                           prodl	equ	0xFF3
  6041                           postinc0	equ	0xFEE
  6042                           wreg	equ	0xFE8
  6043                           postdec1	equ	0xFE5
  6044                           fsr1l	equ	0xFE1
  6045                           indf2	equ	0xFDF
  6046                           fsr2h	equ	0xFDA
  6047                           fsr2l	equ	0xFD9
  6048                           status	equ	0xFD8
  6049                           
  6050 ;; *************** function _informacoes *****************
  6051 ;; Defined at:
  6052 ;;		line 7 in file "tela_INFORMACOES.h"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6066 ;;      Params:         0       0       0       0       0       0       0
  6067 ;;      Locals:         0       0       0       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0       0       0
  6069 ;;      Totals:         0       0       0       0       0       0       0
  6070 ;;Total ram usage:        0 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    9
  6073 ;; This function calls:
  6074 ;;		_btPress
  6075 ;;		_sprintf
  6076 ;; This function is called by:
  6077 ;;		_main
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text12
  6082  007108                     __ptext12:
  6083                           	opt stack 0
  6084  007108                     _informacoes:
  6085                           	opt stack 0
  6086  007108  FFFF               	dw	65535	; assembler added errata NOP
  6087                           
  6088                           ;tela_INFORMACOES.h: 8: sprintf(line1, "TECHNOW");
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;incstack = 0
  6092  00710A  0E7B               	movlw	low _line1
  6093  00710C  0100               	movlb	0	; () banked
  6094  00710E  6FA1               	movwf	sprintf@wh& (0+255),b
  6095  007110  0E01               	movlw	high _line1
  6096  007112  0100               	movlb	0	; () banked
  6097  007114  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  6098  007116  0E93               	movlw	low STR_82
  6099  007118  0100               	movlb	0	; () banked
  6100  00711A  6FA3               	movwf	sprintf@f& (0+255),b
  6101  00711C  0E7F               	movlw	high STR_82
  6102  00711E  0100               	movlb	0	; () banked
  6103  007120  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  6104  007122  EC25  F036         	call	_sprintf	;wreg free
  6105                           
  6106                           ;tela_INFORMACOES.h: 9: sprintf(line2, "Sistemas embarcados");
  6107  007126  0E66               	movlw	low _line2
  6108  007128  0100               	movlb	0	; () banked
  6109  00712A  6FA1               	movwf	sprintf@wh& (0+255),b
  6110  00712C  0E01               	movlw	high _line2
  6111  00712E  0100               	movlb	0	; () banked
  6112  007130  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  6113  007132  0EDD               	movlw	low STR_83
  6114  007134  0100               	movlb	0	; () banked
  6115  007136  6FA3               	movwf	sprintf@f& (0+255),b
  6116  007138  0E7C               	movlw	high STR_83
  6117  00713A  0100               	movlb	0	; () banked
  6118  00713C  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  6119  00713E  EC25  F036         	call	_sprintf	;wreg free
  6120                           
  6121                           ;tela_INFORMACOES.h: 10: sprintf(line3, "   48 99906-5651");
  6122  007142  0E51               	movlw	low _line3
  6123  007144  0100               	movlb	0	; () banked
  6124  007146  6FA1               	movwf	sprintf@wh& (0+255),b
  6125  007148  0E01               	movlw	high _line3
  6126  00714A  0100               	movlb	0	; () banked
  6127  00714C  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  6128  00714E  0ECF               	movlw	low STR_84
  6129  007150  0100               	movlb	0	; () banked
  6130  007152  6FA3               	movwf	sprintf@f& (0+255),b
  6131  007154  0E7D               	movlw	high STR_84
  6132  007156  0100               	movlb	0	; () banked
  6133  007158  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  6134  00715A  EC25  F036         	call	_sprintf	;wreg free
  6135                           
  6136                           ;tela_INFORMACOES.h: 11: sprintf(line4, "versao - %s", "Aug 31 2019");
  6137  00715E  0E3C               	movlw	low _line4
  6138  007160  0100               	movlb	0	; () banked
  6139  007162  6FA1               	movwf	sprintf@wh& (0+255),b
  6140  007164  0E01               	movlw	high _line4
  6141  007166  0100               	movlb	0	; () banked
  6142  007168  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  6143  00716A  0E01               	movlw	low STR_85
  6144  00716C  0100               	movlb	0	; () banked
  6145  00716E  6FA3               	movwf	sprintf@f& (0+255),b
  6146  007170  0E7F               	movlw	high STR_85
  6147  007172  0100               	movlb	0	; () banked
  6148  007174  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  6149  007176  0EDD               	movlw	low STR_13
  6150  007178  0100               	movlb	0	; () banked
  6151  00717A  6FA5               	movwf	(?_sprintf+4)& (0+255),b
  6152  00717C  0E7E               	movlw	high STR_13
  6153  00717E  0100               	movlb	0	; () banked
  6154  007180  6FA6               	movwf	(?_sprintf+5)& (0+255),b
  6155  007182  EC25  F036         	call	_sprintf	;wreg free
  6156                           
  6157                           ;tela_INFORMACOES.h: 12: if (btPress(1)) {
  6158  007186  0E01               	movlw	1
  6159  007188  EC82  F037         	call	_btPress
  6160  00718C  0900               	iorlw	0
  6161  00718E  A4D8               	btfss	status,2,c
  6162                           
  6163                           ;tela_INFORMACOES.h: 13: menu_posi = _menu_posi;
  6164  007190  C0DE  F0DF         	movff	__menu_posi,_menu_posi
  6165  007194  0012               	return		;funcret
  6166  007196  FFFF               	dw	65535	; errata NOP
  6167  007198                     __end_of_informacoes:
  6168                           	opt stack 0
  6169                           tblptru	equ	0xFF8
  6170                           tblptrh	equ	0xFF7
  6171                           tblptrl	equ	0xFF6
  6172                           tablat	equ	0xFF5
  6173                           prodh	equ	0xFF4
  6174                           prodl	equ	0xFF3
  6175                           postinc0	equ	0xFEE
  6176                           wreg	equ	0xFE8
  6177                           postdec1	equ	0xFE5
  6178                           fsr1l	equ	0xFE1
  6179                           indf2	equ	0xFDF
  6180                           fsr2h	equ	0xFDA
  6181                           fsr2l	equ	0xFD9
  6182                           status	equ	0xFD8
  6183                           
  6184 ;; *************** function _getSinalSIM800L *****************
  6185 ;; Defined at:
  6186 ;;		line 13 in file "comunicacao.h"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;		None
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  sinal           2   72[BANK0 ] int 
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  1    wreg      void 
  6193 ;; Registers used:
  6194 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6200 ;;      Params:         0       0       0       0       0       0       0
  6201 ;;      Locals:         0       2       0       0       0       0       0
  6202 ;;      Temps:          0       2       0       0       0       0       0
  6203 ;;      Totals:         0       4       0       0       0       0       0
  6204 ;;Total ram usage:        4 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; Hardware stack levels required when called:   10
  6207 ;; This function calls:
  6208 ;;		_aguardaBuffer
  6209 ;;		_atoi
  6210 ;;		_delay
  6211 ;;		_getSerial
  6212 ;;		_limparBuffer
  6213 ;;		_printf
  6214 ;;		_writeChar
  6215 ;; This function is called by:
  6216 ;;		_main
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text13
  6221  002C38                     __ptext13:
  6222                           	opt stack 0
  6223  002C38                     _getSinalSIM800L:
  6224                           	opt stack 0
  6225  002C38  FFFF               	dw	65535	; assembler added errata NOP
  6226                           
  6227                           ;comunicacao.h: 14: if (!timerVerificarSinal) {
  6228                           
  6229                           ;incstack = 0
  6230  002C3A  0100               	movlb	0	; () banked
  6231  002C3C  51FE               	movf	_timerVerificarSinal& (0+255),w,b
  6232  002C3E  A4D8               	btfss	status,2,c
  6233  002C40  D0ED               	goto	l312
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;comunicacao.h: 15: if (!gsmOcupado) {
  6237  002C42  0100               	movlb	0	; () banked
  6238  002C44  51F4               	movf	_gsmOcupado& (0+255),w,b
  6239  002C46  B4D8               	btfsc	status,2,c
  6240  002C48  D0D6               	goto	l9000
  6241  002C4A  D0E8               	goto	l312
  6242  002C4C                     l8948:
  6243  002C4C  FFFF               	dw	65535	; assembler added errata NOP
  6244                           
  6245                           ; BSR set to: 0
  6246                           ;comunicacao.h: 18: limparBuffer();
  6247  002C4E  ECD0  F033         	call	_limparBuffer	;wreg free
  6248                           
  6249                           ;comunicacao.h: 19: printf("AT+CSQ\r\n");
  6250  002C52  0E81               	movlw	low STR_3
  6251  002C54  0100               	movlb	0	; () banked
  6252  002C56  6FA1               	movwf	printf@f& (0+255),b
  6253  002C58  0E7F               	movlw	high STR_3
  6254  002C5A  0100               	movlb	0	; () banked
  6255  002C5C  6FA2               	movwf	(printf@f+1)& (0+255),b
  6256  002C5E  EC60  F035         	call	_printf	;wreg free
  6257                           
  6258                           ;comunicacao.h: 20: timerEtapaComunicacao = 10;
  6259  002C62  0E0A               	movlw	10
  6260  002C64  0100               	movlb	0	; () banked
  6261  002C66  6FF5               	movwf	_timerEtapaComunicacao& (0+255),b
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;comunicacao.h: 21: etapaComunicacao = 1;
  6265  002C68  0E00               	movlw	0
  6266  002C6A  6E4E               	movwf	_etapaComunicacao+1,c
  6267  002C6C  0E01               	movlw	1
  6268  002C6E  D0C0               	goto	L8
  6269  002C70                     l8956:
  6270  002C70  FFFF               	dw	65535	; assembler added errata NOP
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;comunicacao.h: 24: if (!timerEtapaComunicacao) {
  6274  002C72  0100               	movlb	0	; () banked
  6275  002C74  51F5               	movf	_timerEtapaComunicacao& (0+255),w,b
  6276  002C76  A4D8               	btfss	status,2,c
  6277  002C78  D02F               	goto	l8972
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;comunicacao.h: 25: printf("AT\r\n");
  6281  002C7A  0EDD               	movlw	low STR_4
  6282  002C7C  0100               	movlb	0	; () banked
  6283  002C7E  6FA1               	movwf	printf@f& (0+255),b
  6284  002C80  0E7F               	movlw	high STR_4
  6285  002C82  0100               	movlb	0	; () banked
  6286  002C84  6FA2               	movwf	(printf@f+1)& (0+255),b
  6287  002C86  EC60  F035         	call	_printf	;wreg free
  6288                           
  6289                           ;comunicacao.h: 26: delay(100);
  6290  002C8A  0E00               	movlw	0
  6291  002C8C  0100               	movlb	0	; () banked
  6292  002C8E  6F81               	movwf	(delay@x+1)& (0+255),b
  6293  002C90  0E64               	movlw	100
  6294  002C92  6F80               	movwf	delay@x& (0+255),b
  6295  002C94  EC5B  F033         	call	_delay	;wreg free
  6296                           
  6297                           ;comunicacao.h: 27: if (aguardaBuffer("OK")) {
  6298  002C98  0EF9               	movlw	low STR_5
  6299  002C9A  0100               	movlb	0	; () banked
  6300  002C9C  6F93               	movwf	aguardaBuffer@str& (0+255),b
  6301  002C9E  0E7F               	movlw	high STR_5
  6302  002CA0  0100               	movlb	0	; () banked
  6303  002CA2  6F94               	movwf	(aguardaBuffer@str+1)& (0+255),b
  6304  002CA4  EC6A  F034         	call	_aguardaBuffer	;wreg free
  6305  002CA8  0900               	iorlw	0
  6306  002CAA  B4D8               	btfsc	status,2,c
  6307  002CAC  D005               	goto	l8966
  6308                           
  6309                           ;comunicacao.h: 28: etapaComunicacao = 0;
  6310  002CAE  0E00               	movlw	0
  6311  002CB0  6E4E               	movwf	_etapaComunicacao+1,c
  6312  002CB2  0E00               	movlw	0
  6313  002CB4  6E4D               	movwf	_etapaComunicacao,c
  6314                           
  6315                           ;comunicacao.h: 29: } else {
  6316  002CB6  D010               	goto	l8972
  6317  002CB8                     l8966:
  6318  002CB8  FFFF               	dw	65535	; assembler added errata NOP
  6319                           
  6320                           ;comunicacao.h: 30: etapaComunicacao = 0;
  6321  002CBA  0E00               	movlw	0
  6322  002CBC  6E4E               	movwf	_etapaComunicacao+1,c
  6323  002CBE  0E00               	movlw	0
  6324  002CC0  6E4D               	movwf	_etapaComunicacao,c
  6325                           
  6326                           ;comunicacao.h: 31: writeChar(0x1A);
  6327  002CC2  0E1A               	movlw	26
  6328  002CC4  0100               	movlb	0	; () banked
  6329  002CC6  6F80               	movwf	writeChar@hex& (0+255),b
  6330  002CC8  0E00               	movlw	0
  6331  002CCA  0100               	movlb	0	; () banked
  6332  002CCC  6F81               	movwf	(writeChar@hex+1)& (0+255),b
  6333  002CCE  EC3C  F032         	call	_writeChar	;wreg free
  6334                           
  6335                           ;comunicacao.h: 32: intensidadeSinal = 'x';
  6336  002CD2  0E78               	movlw	120
  6337  002CD4  0100               	movlb	0	; () banked
  6338  002CD6  6FFF               	movwf	_intensidadeSinal& (0+255),b
  6339  002CD8                     l8972:
  6340  002CD8  FFFF               	dw	65535	; assembler added errata NOP
  6341                           
  6342                           ;comunicacao.h: 33: }
  6343                           ;comunicacao.h: 34: }
  6344                           ;comunicacao.h: 35: if (aguardaBuffer("+CSQ: ")) {
  6345  002CDA  0EA9               	movlw	low STR_6
  6346  002CDC  0100               	movlb	0	; () banked
  6347  002CDE  6F93               	movwf	aguardaBuffer@str& (0+255),b
  6348  002CE0  0E7F               	movlw	high STR_6
  6349  002CE2  0100               	movlb	0	; () banked
  6350  002CE4  6F94               	movwf	(aguardaBuffer@str+1)& (0+255),b
  6351  002CE6  EC6A  F034         	call	_aguardaBuffer	;wreg free
  6352  002CEA  0900               	iorlw	0
  6353  002CEC  B4D8               	btfsc	status,2,c
  6354  002CEE  D096               	goto	l312
  6355                           
  6356                           ;comunicacao.h: 36: int sinal = atoi(getSerial("+CSQ: ", ','));
  6357  002CF0  0EA9               	movlw	low STR_6
  6358  002CF2  0100               	movlb	0	; () banked
  6359  002CF4  6FB5               	movwf	getSerial@str& (0+255),b
  6360  002CF6  0E7F               	movlw	high STR_6
  6361  002CF8  0100               	movlb	0	; () banked
  6362  002CFA  6FB6               	movwf	(getSerial@str+1)& (0+255),b
  6363  002CFC  0E2C               	movlw	44
  6364  002CFE  0100               	movlb	0	; () banked
  6365  002D00  6FB7               	movwf	getSerial@end& (0+255),b
  6366  002D02  EC4B  F01A         	call	_getSerial	;wreg free
  6367  002D06  C0B5  F0BF         	movff	?_getSerial,atoi@s
  6368  002D0A  C0B6  F0C0         	movff	?_getSerial+1,atoi@s+1
  6369  002D0E  EC5F  F01D         	call	_atoi	;wreg free
  6370  002D12  C0BF  F0C8         	movff	?_atoi,getSinalSIM800L@sinal
  6371  002D16  C0C0  F0C9         	movff	?_atoi+1,getSinalSIM800L@sinal+1
  6372                           
  6373                           ;comunicacao.h: 37: if (sinal < 10) {
  6374  002D1A  0100               	movlb	0	; () banked
  6375  002D1C  BFC9               	btfsc	(getSinalSIM800L@sinal+1)& (0+255),7,b
  6376  002D1E  D008               	goto	l8978
  6377  002D20  0100               	movlb	0	; () banked
  6378  002D22  51C9               	movf	(getSinalSIM800L@sinal+1)& (0+255),w,b
  6379  002D24  E108               	bnz	l8980
  6380  002D26  0E0A               	movlw	10
  6381  002D28  0100               	movlb	0	; () banked
  6382  002D2A  5DC8               	subwf	getSinalSIM800L@sinal& (0+255),w,b
  6383  002D2C  B0D8               	btfsc	status,0,c
  6384  002D2E  D003               	goto	l8980
  6385  002D30                     l8978:
  6386  002D30  FFFF               	dw	65535	; assembler added errata NOP
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;comunicacao.h: 38: intensidadeSinal = ' ';
  6390  002D32  0E20               	movlw	32
  6391  002D34  D04D               	goto	L11
  6392  002D36                     l8980:
  6393  002D36  FFFF               	dw	65535	; assembler added errata NOP
  6394                           
  6395                           ; BSR set to: 0
  6396  002D38  0100               	movlb	0	; () banked
  6397  002D3A  BFC9               	btfsc	(getSinalSIM800L@sinal+1)& (0+255),7,b
  6398  002D3C  D016               	goto	l8986
  6399  002D3E  0100               	movlb	0	; () banked
  6400  002D40  51C9               	movf	(getSinalSIM800L@sinal+1)& (0+255),w,b
  6401  002D42  E105               	bnz	u10460
  6402  002D44  0E0A               	movlw	10
  6403  002D46  0100               	movlb	0	; () banked
  6404  002D48  5DC8               	subwf	getSinalSIM800L@sinal& (0+255),w,b
  6405  002D4A  A0D8               	btfss	status,0,c
  6406  002D4C  D00E               	goto	l8986
  6407  002D4E                     u10460:
  6408                           
  6409                           ; BSR set to: 0
  6410  002D4E  0100               	movlb	0	; () banked
  6411  002D50  BFC9               	btfsc	(getSinalSIM800L@sinal+1)& (0+255),7,b
  6412  002D52  D008               	goto	l8984
  6413  002D54  0100               	movlb	0	; () banked
  6414  002D56  51C9               	movf	(getSinalSIM800L@sinal+1)& (0+255),w,b
  6415  002D58  E108               	bnz	l8986
  6416  002D5A  0E0F               	movlw	15
  6417  002D5C  0100               	movlb	0	; () banked
  6418  002D5E  5DC8               	subwf	getSinalSIM800L@sinal& (0+255),w,b
  6419  002D60  B0D8               	btfsc	status,0,c
  6420  002D62  D003               	goto	l8986
  6421  002D64                     l8984:
  6422  002D64  FFFF               	dw	65535	; assembler added errata NOP
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;comunicacao.h: 40: intensidadeSinal = 0x02;
  6426  002D66  0E02               	movlw	2
  6427  002D68  D033               	goto	L11
  6428  002D6A                     l8986:
  6429  002D6A  FFFF               	dw	65535	; assembler added errata NOP
  6430                           
  6431                           ; BSR set to: 0
  6432  002D6C  0100               	movlb	0	; () banked
  6433  002D6E  BFC9               	btfsc	(getSinalSIM800L@sinal+1)& (0+255),7,b
  6434  002D70  D016               	goto	l8992
  6435  002D72  0100               	movlb	0	; () banked
  6436  002D74  51C9               	movf	(getSinalSIM800L@sinal+1)& (0+255),w,b
  6437  002D76  E105               	bnz	u10480
  6438  002D78  0E10               	movlw	16
  6439  002D7A  0100               	movlb	0	; () banked
  6440  002D7C  5DC8               	subwf	getSinalSIM800L@sinal& (0+255),w,b
  6441  002D7E  A0D8               	btfss	status,0,c
  6442  002D80  D00E               	goto	l8992
  6443  002D82                     u10480:
  6444                           
  6445                           ; BSR set to: 0
  6446  002D82  0100               	movlb	0	; () banked
  6447  002D84  BFC9               	btfsc	(getSinalSIM800L@sinal+1)& (0+255),7,b
  6448  002D86  D008               	goto	l8990
  6449  002D88  0100               	movlb	0	; () banked
  6450  002D8A  51C9               	movf	(getSinalSIM800L@sinal+1)& (0+255),w,b
  6451  002D8C  E108               	bnz	l8992
  6452  002D8E  0E14               	movlw	20
  6453  002D90  0100               	movlb	0	; () banked
  6454  002D92  5DC8               	subwf	getSinalSIM800L@sinal& (0+255),w,b
  6455  002D94  B0D8               	btfsc	status,0,c
  6456  002D96  D003               	goto	l8992
  6457  002D98                     l8990:
  6458  002D98  FFFF               	dw	65535	; assembler added errata NOP
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;comunicacao.h: 42: intensidadeSinal = 0x03;
  6462  002D9A  0E03               	movlw	3
  6463  002D9C  D019               	goto	L11
  6464  002D9E                     l8992:
  6465  002D9E  FFFF               	dw	65535	; assembler added errata NOP
  6466                           
  6467                           ; BSR set to: 0
  6468  002DA0  0100               	movlb	0	; () banked
  6469  002DA2  BFC9               	btfsc	(getSinalSIM800L@sinal+1)& (0+255),7,b
  6470  002DA4  D018               	goto	l305
  6471  002DA6  0100               	movlb	0	; () banked
  6472  002DA8  51C9               	movf	(getSinalSIM800L@sinal+1)& (0+255),w,b
  6473  002DAA  E105               	bnz	u10500
  6474  002DAC  0E14               	movlw	20
  6475  002DAE  0100               	movlb	0	; () banked
  6476  002DB0  5DC8               	subwf	getSinalSIM800L@sinal& (0+255),w,b
  6477  002DB2  A0D8               	btfss	status,0,c
  6478  002DB4  D010               	goto	l305
  6479  002DB6                     u10500:
  6480                           
  6481                           ; BSR set to: 0
  6482  002DB6  0100               	movlb	0	; () banked
  6483  002DB8  BFC9               	btfsc	(getSinalSIM800L@sinal+1)& (0+255),7,b
  6484  002DBA  D008               	goto	l8996
  6485  002DBC  0100               	movlb	0	; () banked
  6486  002DBE  51C9               	movf	(getSinalSIM800L@sinal+1)& (0+255),w,b
  6487  002DC0  E10A               	bnz	l305
  6488  002DC2  0E1F               	movlw	31
  6489  002DC4  0100               	movlb	0	; () banked
  6490  002DC6  5DC8               	subwf	getSinalSIM800L@sinal& (0+255),w,b
  6491  002DC8  B0D8               	btfsc	status,0,c
  6492  002DCA  D005               	goto	l305
  6493  002DCC                     l8996:
  6494  002DCC  FFFF               	dw	65535	; assembler added errata NOP
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;comunicacao.h: 44: intensidadeSinal = 0x04;
  6498  002DCE  0E04               	movlw	4
  6499  002DD0                     L11:
  6500  002DD0  FFFF               	dw	65535	; assembler added errata NOP
  6501  002DD2  0100               	movlb	0	; () banked
  6502  002DD4  6FFF               	movwf	_intensidadeSinal& (0+255),b
  6503  002DD6                     l305:
  6504  002DD6  FFFF               	dw	65535	; assembler added errata NOP
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;comunicacao.h: 45: }
  6508                           ;comunicacao.h: 46: etapaComunicacao = 0;
  6509  002DD8  0E00               	movlw	0
  6510  002DDA  6E4E               	movwf	_etapaComunicacao+1,c
  6511  002DDC  0E00               	movlw	0
  6512  002DDE  6E4D               	movwf	_etapaComunicacao,c
  6513                           
  6514                           ;comunicacao.h: 47: timerVerificarSinal = 6;
  6515  002DE0  0E06               	movlw	6
  6516  002DE2  0100               	movlb	0	; () banked
  6517  002DE4  6FFE               	movwf	_timerVerificarSinal& (0+255),b
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;comunicacao.h: 48: }
  6521                           ;comunicacao.h: 49: break;
  6522  002DE6  D01A               	goto	l312
  6523  002DE8                     l8998:
  6524  002DE8  FFFF               	dw	65535	; assembler added errata NOP
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;comunicacao.h: 51: etapaComunicacao = 0;
  6528  002DEA  0E00               	movlw	0
  6529  002DEC  6E4E               	movwf	_etapaComunicacao+1,c
  6530  002DEE  0E00               	movlw	0
  6531  002DF0                     L8:
  6532  002DF0  FFFF               	dw	65535	; assembler added errata NOP
  6533  002DF2  6E4D               	movwf	_etapaComunicacao,c
  6534                           
  6535                           ;comunicacao.h: 52: }
  6536  002DF4  D013               	goto	l312
  6537  002DF6                     l9000:
  6538  002DF6  FFFF               	dw	65535	; assembler added errata NOP
  6539                           
  6540                           ; BSR set to: 0
  6541  002DF8  C04D  F0C6         	movff	_etapaComunicacao,??_getSinalSIM800L
  6542  002DFC  C04E  F0C7         	movff	_etapaComunicacao+1,??_getSinalSIM800L+1
  6543                           
  6544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6545                           ; Switch size 1, requested type "space"
  6546                           ; Number of cases is 1, Range of values is 0 to 0
  6547                           ; switch strategies available:
  6548                           ; Name         Instructions Cycles
  6549                           ; simple_byte            4     3 (average)
  6550                           ;	Chosen strategy is simple_byte
  6551  002E00  0100               	movlb	0	; () banked
  6552  002E02  51C7               	movf	(??_getSinalSIM800L+1)& (0+255),w,b
  6553  002E04  0A00               	xorlw	0	; case 0
  6554  002E06  A4D8               	btfss	status,2,c
  6555  002E08  D7EF               	goto	l8998
  6556                           
  6557                           ; BSR set to: 0
  6558                           ; Switch size 1, requested type "space"
  6559                           ; Number of cases is 2, Range of values is 0 to 1
  6560                           ; switch strategies available:
  6561                           ; Name         Instructions Cycles
  6562                           ; simple_byte            7     4 (average)
  6563                           ;	Chosen strategy is simple_byte
  6564  002E0A  0100               	movlb	0	; () banked
  6565  002E0C  51C6               	movf	??_getSinalSIM800L& (0+255),w,b
  6566  002E0E  0A00               	xorlw	0	; case 0
  6567  002E10  B4D8               	btfsc	status,2,c
  6568  002E12  D71C               	goto	l8948
  6569  002E14  0A01               	xorlw	1	; case 1
  6570  002E16  B4D8               	btfsc	status,2,c
  6571  002E18  D72B               	goto	l8956
  6572  002E1A  D7E6               	goto	l8998
  6573  002E1C                     l312:
  6574  002E1C  FFFF               	dw	65535	; assembler added errata NOP
  6575  002E1E  0012               	return		;funcret
  6576  002E20  FFFF               	dw	65535	; errata NOP
  6577  002E22                     __end_of_getSinalSIM800L:
  6578                           	opt stack 0
  6579                           tblptru	equ	0xFF8
  6580                           tblptrh	equ	0xFF7
  6581                           tblptrl	equ	0xFF6
  6582                           tablat	equ	0xFF5
  6583                           prodh	equ	0xFF4
  6584                           prodl	equ	0xFF3
  6585                           postinc0	equ	0xFEE
  6586                           wreg	equ	0xFE8
  6587                           postdec1	equ	0xFE5
  6588                           fsr1l	equ	0xFE1
  6589                           indf2	equ	0xFDF
  6590                           fsr2h	equ	0xFDA
  6591                           fsr2l	equ	0xFD9
  6592                           status	equ	0xFD8
  6593                           
  6594 ;; *************** function _getSerial *****************
  6595 ;; Defined at:
  6596 ;;		line 40 in file "serial.h"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  str             2   53[BANK0 ] PTR unsigned char 
  6599 ;;		 -> STR_7(7), 
  6600 ;;  end             1   55[BANK0 ] unsigned char 
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  i               1   60[BANK0 ] unsigned char 
  6603 ;;  ret             2   61[BANK0 ] PTR unsigned char 
  6604 ;;		 -> NULL(0), bufferSerial(60), 
  6605 ;;  length          2   58[BANK0 ] unsigned int 
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  2   53[BANK0 ] PTR unsigned char 
  6608 ;; Registers used:
  6609 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6615 ;;      Params:         0       3       0       0       0       0       0
  6616 ;;      Locals:         0       5       0       0       0       0       0
  6617 ;;      Temps:          0       2       0       0       0       0       0
  6618 ;;      Totals:         0      10       0       0       0       0       0
  6619 ;;Total ram usage:       10 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:    9
  6622 ;; This function calls:
  6623 ;;		_memset
  6624 ;;		_sprintf
  6625 ;;		_strlen
  6626 ;;		_strstr
  6627 ;; This function is called by:
  6628 ;;		_getSinalSIM800L
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text14
  6633  003496                     __ptext14:
  6634                           	opt stack 0
  6635  003496                     _getSerial:
  6636                           	opt stack 0
  6637  003496  FFFF               	dw	65535	; assembler added errata NOP
  6638                           
  6639                           ;serial.h: 41: memset(bufferAUX, 0, sizeof (bufferAUX));
  6640                           
  6641                           ;incstack = 0
  6642  003498  0E90               	movlw	low _bufferAUX
  6643  00349A  0100               	movlb	0	; () banked
  6644  00349C  6F80               	movwf	memset@p1& (0+255),b
  6645  00349E  0E01               	movlw	high _bufferAUX
  6646  0034A0  0100               	movlb	0	; () banked
  6647  0034A2  6F81               	movwf	(memset@p1+1)& (0+255),b
  6648  0034A4  0E00               	movlw	0
  6649  0034A6  0100               	movlb	0	; () banked
  6650  0034A8  6F83               	movwf	(memset@c+1)& (0+255),b
  6651  0034AA  0E00               	movlw	0
  6652  0034AC  6F82               	movwf	memset@c& (0+255),b
  6653  0034AE  0E00               	movlw	0
  6654  0034B0  0100               	movlb	0	; () banked
  6655  0034B2  6F85               	movwf	(memset@n+1)& (0+255),b
  6656  0034B4  0E14               	movlw	20
  6657  0034B6  6F84               	movwf	memset@n& (0+255),b
  6658  0034B8  EC0C  F034         	call	_memset	;wreg free
  6659                           
  6660                           ;serial.h: 42: unsigned int length = strlen(str);
  6661  0034BC  C0B5  F080         	movff	getSerial@str,strlen@s
  6662  0034C0  C0B6  F081         	movff	getSerial@str+1,strlen@s+1
  6663  0034C4  ECDB  F036         	call	_strlen	;wreg free
  6664  0034C8  C080  F0BA         	movff	?_strlen,getSerial@length
  6665  0034CC  C081  F0BB         	movff	?_strlen+1,getSerial@length+1
  6666                           
  6667                           ;serial.h: 43: char* ret;
  6668                           ;serial.h: 44: ret = strstr(bufferSerial, str);
  6669  0034D0  0E00               	movlw	low _bufferSerial
  6670  0034D2  0100               	movlb	0	; () banked
  6671  0034D4  6F8F               	movwf	strstr@s1& (0+255),b
  6672  0034D6  0E01               	movlw	high _bufferSerial
  6673  0034D8  0100               	movlb	0	; () banked
  6674  0034DA  6F90               	movwf	(strstr@s1+1)& (0+255),b
  6675  0034DC  C0B5  F091         	movff	getSerial@str,strstr@s2
  6676  0034E0  C0B6  F092         	movff	getSerial@str+1,strstr@s2+1
  6677  0034E4  EC1A  F039         	call	_strstr	;wreg free
  6678  0034E8  C08F  F0BD         	movff	?_strstr,getSerial@ret
  6679  0034EC  C090  F0BE         	movff	?_strstr+1,getSerial@ret+1
  6680                           
  6681                           ;serial.h: 45: if (ret) {
  6682  0034F0  0100               	movlb	0	; () banked
  6683  0034F2  51BD               	movf	getSerial@ret& (0+255),w,b
  6684  0034F4  0100               	movlb	0	; () banked
  6685  0034F6  11BE               	iorwf	(getSerial@ret+1)& (0+255),w,b
  6686  0034F8  B4D8               	btfsc	status,2,c
  6687  0034FA  D075               	goto	l8294
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;serial.h: 46: unsigned char i = 0;
  6691  0034FC  0E00               	movlw	0
  6692  0034FE  0100               	movlb	0	; () banked
  6693  003500  6FBC               	movwf	getSerial@i& (0+255),b
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;serial.h: 47: for (i = length; i < strlen(ret); i++) {
  6697  003502  C0BA  F0BC         	movff	getSerial@length,getSerial@i
  6698  003506  D059               	goto	l8292
  6699  003508                     l8280:
  6700  003508  FFFF               	dw	65535	; assembler added errata NOP
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;serial.h: 48: if (ret[i] == end) {
  6704  00350A  0100               	movlb	0	; () banked
  6705  00350C  51BC               	movf	getSerial@i& (0+255),w,b
  6706  00350E  0D01               	mullw	1
  6707  003510  50F3               	movf	prodl,w,c
  6708  003512  0100               	movlb	0	; () banked
  6709  003514  25BD               	addwf	getSerial@ret& (0+255),w,b
  6710  003516  6ED9               	movwf	fsr2l,c
  6711  003518  50F4               	movf	prodh,w,c
  6712  00351A  0100               	movlb	0	; () banked
  6713  00351C  21BE               	addwfc	(getSerial@ret+1)& (0+255),w,b
  6714  00351E  6EDA               	movwf	fsr2h,c
  6715  003520  0100               	movlb	0	; () banked
  6716  003522  51B7               	movf	getSerial@end& (0+255),w,b
  6717  003524  18DE               	xorwf	postinc2,w,c
  6718  003526  A4D8               	btfss	status,2,c
  6719  003528  D01E               	goto	l8288
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;serial.h: 49: sprintf(bufferAUX, "%s%c", bufferAUX, '\0');
  6723  00352A  0E90               	movlw	low _bufferAUX
  6724  00352C  0100               	movlb	0	; () banked
  6725  00352E  6FA1               	movwf	sprintf@wh& (0+255),b
  6726  003530  0E01               	movlw	high _bufferAUX
  6727  003532  0100               	movlb	0	; () banked
  6728  003534  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  6729  003536  0EE7               	movlw	low STR_1
  6730  003538  0100               	movlb	0	; () banked
  6731  00353A  6FA3               	movwf	sprintf@f& (0+255),b
  6732  00353C  0E7F               	movlw	high STR_1
  6733  00353E  0100               	movlb	0	; () banked
  6734  003540  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  6735  003542  0E90               	movlw	low _bufferAUX
  6736  003544  0100               	movlb	0	; () banked
  6737  003546  6FA5               	movwf	(?_sprintf+4)& (0+255),b
  6738  003548  0E01               	movlw	high _bufferAUX
  6739  00354A  0100               	movlb	0	; () banked
  6740  00354C  6FA6               	movwf	(?_sprintf+5)& (0+255),b
  6741  00354E  0E00               	movlw	0
  6742  003550  0100               	movlb	0	; () banked
  6743  003552  6FA8               	movwf	(?_sprintf+7)& (0+255),b
  6744  003554  0E00               	movlw	0
  6745  003556  6FA7               	movwf	(?_sprintf+6)& (0+255),b
  6746  003558  EC25  F036         	call	_sprintf	;wreg free
  6747                           
  6748                           ;serial.h: 50: return bufferAUX;
  6749  00355C  0E90               	movlw	low _bufferAUX
  6750  00355E  0100               	movlb	0	; () banked
  6751  003560  6FB5               	movwf	?_getSerial& (0+255),b
  6752  003562  0E01               	movlw	high _bufferAUX
  6753  003564  D045               	goto	L12
  6754  003566                     l8288:
  6755  003566  FFFF               	dw	65535	; assembler added errata NOP
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;serial.h: 51: }
  6759                           ;serial.h: 52: sprintf(bufferAUX, "%s%c", bufferAUX, ret[i]);
  6760  003568  0E90               	movlw	low _bufferAUX
  6761  00356A  0100               	movlb	0	; () banked
  6762  00356C  6FA1               	movwf	sprintf@wh& (0+255),b
  6763  00356E  0E01               	movlw	high _bufferAUX
  6764  003570  0100               	movlb	0	; () banked
  6765  003572  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  6766  003574  0EE7               	movlw	low STR_1
  6767  003576  0100               	movlb	0	; () banked
  6768  003578  6FA3               	movwf	sprintf@f& (0+255),b
  6769  00357A  0E7F               	movlw	high STR_1
  6770  00357C  0100               	movlb	0	; () banked
  6771  00357E  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  6772  003580  0E90               	movlw	low _bufferAUX
  6773  003582  0100               	movlb	0	; () banked
  6774  003584  6FA5               	movwf	(?_sprintf+4)& (0+255),b
  6775  003586  0E01               	movlw	high _bufferAUX
  6776  003588  0100               	movlb	0	; () banked
  6777  00358A  6FA6               	movwf	(?_sprintf+5)& (0+255),b
  6778  00358C  0100               	movlb	0	; () banked
  6779  00358E  51BC               	movf	getSerial@i& (0+255),w,b
  6780  003590  0D01               	mullw	1
  6781  003592  50F3               	movf	prodl,w,c
  6782  003594  0100               	movlb	0	; () banked
  6783  003596  25BD               	addwf	getSerial@ret& (0+255),w,b
  6784  003598  6ED9               	movwf	fsr2l,c
  6785  00359A  50F4               	movf	prodh,w,c
  6786  00359C  0100               	movlb	0	; () banked
  6787  00359E  21BE               	addwfc	(getSerial@ret+1)& (0+255),w,b
  6788  0035A0  6EDA               	movwf	fsr2h,c
  6789  0035A2  50DF               	movf	indf2,w,c
  6790  0035A4  0100               	movlb	0	; () banked
  6791  0035A6  6FB8               	movwf	??_getSerial& (0+255),b
  6792  0035A8  0100               	movlb	0	; () banked
  6793  0035AA  51B8               	movf	??_getSerial& (0+255),w,b
  6794  0035AC  0100               	movlb	0	; () banked
  6795  0035AE  6FA7               	movwf	(?_sprintf+6)& (0+255),b
  6796  0035B0  6BA8               	clrf	(?_sprintf+7)& (0+255),b
  6797  0035B2  EC25  F036         	call	_sprintf	;wreg free
  6798  0035B6  0100               	movlb	0	; () banked
  6799  0035B8  2BBC               	incf	getSerial@i& (0+255),f,b
  6800  0035BA                     l8292:
  6801  0035BA  FFFF               	dw	65535	; assembler added errata NOP
  6802                           
  6803                           ; BSR set to: 0
  6804  0035BC  C0BD  F080         	movff	getSerial@ret,strlen@s
  6805  0035C0  C0BE  F081         	movff	getSerial@ret+1,strlen@s+1
  6806  0035C4  ECDB  F036         	call	_strlen	;wreg free
  6807  0035C8  0100               	movlb	0	; () banked
  6808  0035CA  51BC               	movf	getSerial@i& (0+255),w,b
  6809  0035CC  0100               	movlb	0	; () banked
  6810  0035CE  6FB8               	movwf	??_getSerial& (0+255),b
  6811  0035D0  6BB9               	clrf	(??_getSerial+1)& (0+255),b
  6812  0035D2  0100               	movlb	0	; () banked
  6813  0035D4  5180               	movf	?_strlen& (0+255),w,b
  6814  0035D6  0100               	movlb	0	; () banked
  6815  0035D8  5DB8               	subwf	??_getSerial& (0+255),w,b
  6816  0035DA  0100               	movlb	0	; () banked
  6817  0035DC  5181               	movf	(?_strlen+1)& (0+255),w,b
  6818  0035DE  0100               	movlb	0	; () banked
  6819  0035E0  59B9               	subwfb	(??_getSerial+1)& (0+255),w,b
  6820  0035E2  A0D8               	btfss	status,0,c
  6821  0035E4  D791               	goto	l8280
  6822  0035E6                     l8294:
  6823  0035E6  FFFF               	dw	65535	; assembler added errata NOP
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;serial.h: 53: }
  6827                           ;serial.h: 54: }
  6828                           ;serial.h: 55: return 0;
  6829  0035E8  0E00               	movlw	0
  6830  0035EA  0100               	movlb	0	; () banked
  6831  0035EC  6FB5               	movwf	?_getSerial& (0+255),b
  6832  0035EE  0E00               	movlw	0
  6833  0035F0                     L12:
  6834  0035F0  FFFF               	dw	65535	; assembler added errata NOP
  6835  0035F2  0100               	movlb	0	; () banked
  6836  0035F4  6FB6               	movwf	(?_getSerial+1)& (0+255),b
  6837                           
  6838                           ; BSR set to: 0
  6839                           
  6840                           ; BSR set to: 0
  6841  0035F6  0012               	return		;funcret
  6842  0035F8  FFFF               	dw	65535	; errata NOP
  6843  0035FA                     __end_of_getSerial:
  6844                           	opt stack 0
  6845                           tblptru	equ	0xFF8
  6846                           tblptrh	equ	0xFF7
  6847                           tblptrl	equ	0xFF6
  6848                           tablat	equ	0xFF5
  6849                           prodh	equ	0xFF4
  6850                           prodl	equ	0xFF3
  6851                           postinc0	equ	0xFEE
  6852                           wreg	equ	0xFE8
  6853                           postdec1	equ	0xFE5
  6854                           fsr1l	equ	0xFE1
  6855                           indf2	equ	0xFDF
  6856                           postinc2	equ	0xFDE
  6857                           fsr2h	equ	0xFDA
  6858                           fsr2l	equ	0xFD9
  6859                           status	equ	0xFD8
  6860                           
  6861 ;; *************** function _atoi *****************
  6862 ;; Defined at:
  6863 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atoi.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  s               2   63[BANK0 ] PTR const unsigned char 
  6866 ;;		 -> bufferAUX(20), NULL(0), 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  a               2   68[BANK0 ] int 
  6869 ;;  sign            1   67[BANK0 ] unsigned char 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  2   63[BANK0 ] int 
  6872 ;; Registers used:
  6873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6879 ;;      Params:         0       2       0       0       0       0       0
  6880 ;;      Locals:         0       3       0       0       0       0       0
  6881 ;;      Temps:          0       2       0       0       0       0       0
  6882 ;;      Totals:         0       7       0       0       0       0       0
  6883 ;;Total ram usage:        7 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    7
  6886 ;; This function calls:
  6887 ;;		___wmul
  6888 ;;		_isdigit
  6889 ;; This function is called by:
  6890 ;;		_getSinalSIM800L
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text15
  6895  003ABE                     __ptext15:
  6896                           	opt stack 0
  6897  003ABE                     _atoi:
  6898                           	opt stack 0
  6899  003ABE  FFFF               	dw	65535	; assembler added errata NOP
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;incstack = 0
  6903  003AC0  D004               	goto	l8348
  6904  003AC2                     l8346:
  6905  003AC2  FFFF               	dw	65535	; assembler added errata NOP
  6906  003AC4  0100               	movlb	0	; () banked
  6907  003AC6  4BBF               	infsnz	atoi@s& (0+255),f,b
  6908  003AC8  2BC0               	incf	(atoi@s+1)& (0+255),f,b
  6909  003ACA                     l8348:
  6910  003ACA  FFFF               	dw	65535	; assembler added errata NOP
  6911  003ACC  C0BF  FFD9         	movff	atoi@s,fsr2l
  6912  003AD0  C0C0  FFDA         	movff	atoi@s+1,fsr2h
  6913  003AD4  0E20               	movlw	32
  6914  003AD6  18DE               	xorwf	postinc2,w,c
  6915  003AD8  B4D8               	btfsc	status,2,c
  6916  003ADA  D7F3               	goto	l8346
  6917  003ADC  C0BF  FFD9         	movff	atoi@s,fsr2l
  6918  003AE0  C0C0  FFDA         	movff	atoi@s+1,fsr2h
  6919  003AE4  0E09               	movlw	9
  6920  003AE6  18DE               	xorwf	postinc2,w,c
  6921  003AE8  B4D8               	btfsc	status,2,c
  6922  003AEA  D7EB               	goto	l8346
  6923  003AEC  0E00               	movlw	0
  6924  003AEE  0100               	movlb	0	; () banked
  6925  003AF0  6FC5               	movwf	(atoi@a+1)& (0+255),b
  6926  003AF2  0E00               	movlw	0
  6927  003AF4  6FC4               	movwf	atoi@a& (0+255),b
  6928  003AF6  0E00               	movlw	0
  6929  003AF8  0100               	movlb	0	; () banked
  6930  003AFA  6FC3               	movwf	atoi@sign& (0+255),b
  6931                           
  6932                           ; BSR set to: 0
  6933  003AFC  C0BF  FFD9         	movff	atoi@s,fsr2l
  6934  003B00  C0C0  FFDA         	movff	atoi@s+1,fsr2h
  6935  003B04  0E2D               	movlw	45
  6936  003B06  18DE               	xorwf	postinc2,w,c
  6937  003B08  A4D8               	btfss	status,2,c
  6938  003B0A  D003               	goto	l8358
  6939                           
  6940                           ; BSR set to: 0
  6941  003B0C  0100               	movlb	0	; () banked
  6942  003B0E  2BC3               	incf	atoi@sign& (0+255),f,b
  6943  003B10  D030               	goto	l8364
  6944  003B12                     l8358:
  6945  003B12  FFFF               	dw	65535	; assembler added errata NOP
  6946                           
  6947                           ; BSR set to: 0
  6948  003B14  C0BF  FFD9         	movff	atoi@s,fsr2l
  6949  003B18  C0C0  FFDA         	movff	atoi@s+1,fsr2h
  6950  003B1C  0E2B               	movlw	43
  6951  003B1E  18DE               	xorwf	postinc2,w,c
  6952  003B20  A4D8               	btfss	status,2,c
  6953  003B22  D02B               	goto	l8366
  6954  003B24  D026               	goto	l8364
  6955  003B26                     l8362:
  6956  003B26  FFFF               	dw	65535	; assembler added errata NOP
  6957  003B28  C0C4  F080         	movff	atoi@a,___wmul@multiplier
  6958  003B2C  C0C5  F081         	movff	atoi@a+1,___wmul@multiplier+1
  6959  003B30  0E00               	movlw	0
  6960  003B32  0100               	movlb	0	; () banked
  6961  003B34  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6962  003B36  0E0A               	movlw	10
  6963  003B38  6F82               	movwf	___wmul@multiplicand& (0+255),b
  6964  003B3A  EC78  F033         	call	___wmul	;wreg free
  6965  003B3E  C0BF  FFD9         	movff	atoi@s,fsr2l
  6966  003B42  C0C0  FFDA         	movff	atoi@s+1,fsr2h
  6967  003B46  50DF               	movf	indf2,w,c
  6968  003B48  0100               	movlb	0	; () banked
  6969  003B4A  6FC1               	movwf	??_atoi& (0+255),b
  6970  003B4C  6BC2               	clrf	(??_atoi+1)& (0+255),b
  6971  003B4E  0100               	movlb	0	; () banked
  6972  003B50  5180               	movf	?___wmul& (0+255),w,b
  6973  003B52  0100               	movlb	0	; () banked
  6974  003B54  27C1               	addwf	??_atoi& (0+255),f,b
  6975  003B56  0100               	movlb	0	; () banked
  6976  003B58  5181               	movf	(?___wmul+1)& (0+255),w,b
  6977  003B5A  0100               	movlb	0	; () banked
  6978  003B5C  23C2               	addwfc	(??_atoi+1)& (0+255),f,b
  6979  003B5E  0ED0               	movlw	208
  6980  003B60  0100               	movlb	0	; () banked
  6981  003B62  25C1               	addwf	??_atoi& (0+255),w,b
  6982  003B64  0100               	movlb	0	; () banked
  6983  003B66  6FC4               	movwf	atoi@a& (0+255),b
  6984  003B68  0EFF               	movlw	255
  6985  003B6A  0100               	movlb	0	; () banked
  6986  003B6C  21C2               	addwfc	(??_atoi+1)& (0+255),w,b
  6987  003B6E  0100               	movlb	0	; () banked
  6988  003B70  6FC5               	movwf	(atoi@a+1)& (0+255),b
  6989  003B72                     l8364:
  6990  003B72  FFFF               	dw	65535	; assembler added errata NOP
  6991                           
  6992                           ; BSR set to: 0
  6993  003B74  0100               	movlb	0	; () banked
  6994  003B76  4BBF               	infsnz	atoi@s& (0+255),f,b
  6995  003B78  2BC0               	incf	(atoi@s+1)& (0+255),f,b
  6996  003B7A                     l8366:
  6997  003B7A  FFFF               	dw	65535	; assembler added errata NOP
  6998                           
  6999                           ; BSR set to: 0
  7000  003B7C  C0BF  FFD9         	movff	atoi@s,fsr2l
  7001  003B80  C0C0  FFDA         	movff	atoi@s+1,fsr2h
  7002  003B84  50DF               	movf	indf2,w,c
  7003  003B86  ECDA  F032         	call	_isdigit
  7004  003B8A  B0D8               	btfsc	status,0,c
  7005  003B8C  D7CC               	goto	l8362
  7006  003B8E  0100               	movlb	0	; () banked
  7007  003B90  51C3               	movf	atoi@sign& (0+255),w,b
  7008  003B92  0100               	movlb	0	; () banked
  7009  003B94  B4D8               	btfsc	status,2,c
  7010  003B96  D00E               	goto	l1259
  7011                           
  7012                           ; BSR set to: 0
  7013  003B98  C0C4  F0C1         	movff	atoi@a,??_atoi
  7014  003B9C  C0C5  F0C2         	movff	atoi@a+1,??_atoi+1
  7015  003BA0  0100               	movlb	0	; () banked
  7016  003BA2  1FC1               	comf	??_atoi& (0+255),f,b
  7017  003BA4  1FC2               	comf	(??_atoi+1)& (0+255),f,b
  7018  003BA6  4BC1               	infsnz	??_atoi& (0+255),f,b
  7019  003BA8  2BC2               	incf	(??_atoi+1)& (0+255),f,b
  7020  003BAA  C0C1  F0BF         	movff	??_atoi,?_atoi
  7021  003BAE  C0C2  F0C0         	movff	??_atoi+1,?_atoi+1
  7022  003BB2  D005               	goto	l1260
  7023  003BB4                     l1259:
  7024  003BB4  FFFF               	dw	65535	; assembler added errata NOP
  7025                           
  7026                           ; BSR set to: 0
  7027  003BB6  C0C4  F0BF         	movff	atoi@a,?_atoi
  7028  003BBA  C0C5  F0C0         	movff	atoi@a+1,?_atoi+1
  7029  003BBE                     l1260:
  7030  003BBE  FFFF               	dw	65535	; assembler added errata NOP
  7031                           
  7032                           ; BSR set to: 0
  7033  003BC0  0012               	return		;funcret
  7034  003BC2  FFFF               	dw	65535	; errata NOP
  7035  003BC4                     __end_of_atoi:
  7036                           	opt stack 0
  7037                           tblptru	equ	0xFF8
  7038                           tblptrh	equ	0xFF7
  7039                           tblptrl	equ	0xFF6
  7040                           tablat	equ	0xFF5
  7041                           prodh	equ	0xFF4
  7042                           prodl	equ	0xFF3
  7043                           postinc0	equ	0xFEE
  7044                           wreg	equ	0xFE8
  7045                           postdec1	equ	0xFE5
  7046                           fsr1l	equ	0xFE1
  7047                           indf2	equ	0xFDF
  7048                           postinc2	equ	0xFDE
  7049                           fsr2h	equ	0xFDA
  7050                           fsr2l	equ	0xFD9
  7051                           status	equ	0xFD8
  7052                           
  7053 ;; *************** function _getDS1307TimeDate *****************
  7054 ;; Defined at:
  7055 ;;		line 52 in file "ds1307.h"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;  ptrToUserVal    2   12[BANK0 ] PTR struct .
  7058 ;;		 -> rtc(7), 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7070 ;;      Params:         0       2       0       0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0       0
  7073 ;;      Totals:         0       2       0       0       0       0       0
  7074 ;;Total ram usage:        2 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:    8
  7077 ;; This function calls:
  7078 ;;		_BCDtoDEC
  7079 ;;		_I2C_Read
  7080 ;;		_I2C_Restart
  7081 ;;		_I2C_Start
  7082 ;;		_I2C_Stop
  7083 ;;		_I2C_Write
  7084 ;; This function is called by:
  7085 ;;		_main
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text16
  7090  00373E                     __ptext16:
  7091                           	opt stack 0
  7092  00373E                     _getDS1307TimeDate:
  7093                           	opt stack 0
  7094  00373E  FFFF               	dw	65535	; assembler added errata NOP
  7095                           
  7096                           ;ds1307.h: 54: I2C_Start();
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;incstack = 0
  7100  003740  EC1C  F032         	call	_I2C_Start	;wreg free
  7101                           
  7102                           ;ds1307.h: 55: I2C_Write(0xD0);
  7103  003744  0E00               	movlw	0
  7104  003746  0100               	movlb	0	; () banked
  7105  003748  6F8B               	movwf	(I2C_Write@d+1)& (0+255),b
  7106  00374A  0ED0               	movlw	208
  7107  00374C  6F8A               	movwf	I2C_Write@d& (0+255),b
  7108  00374E  EC35  F032         	call	_I2C_Write	;wreg free
  7109                           
  7110                           ;ds1307.h: 56: I2C_Write(0x00);
  7111  003752  0E00               	movlw	0
  7112  003754  0100               	movlb	0	; () banked
  7113  003756  6F8B               	movwf	(I2C_Write@d+1)& (0+255),b
  7114  003758  0E00               	movlw	0
  7115  00375A  6F8A               	movwf	I2C_Write@d& (0+255),b
  7116  00375C  EC35  F032         	call	_I2C_Write	;wreg free
  7117                           
  7118                           ;ds1307.h: 57: I2C_Restart();
  7119  003760  EC28  F032         	call	_I2C_Restart	;wreg free
  7120                           
  7121                           ;ds1307.h: 58: I2C_Write(0xD1);
  7122  003764  0E00               	movlw	0
  7123  003766  0100               	movlb	0	; () banked
  7124  003768  6F8B               	movwf	(I2C_Write@d+1)& (0+255),b
  7125  00376A  0ED1               	movlw	209
  7126  00376C  6F8A               	movwf	I2C_Write@d& (0+255),b
  7127  00376E  EC35  F032         	call	_I2C_Write	;wreg free
  7128                           
  7129                           ;ds1307.h: 59: ptrToUserVal->sec = BCDtoDEC(I2C_Read(1));
  7130  003772  0100               	movlb	0	; () banked
  7131  003774  EE20 F001          	lfsr	2,1
  7132  003778  518C               	movf	getDS1307TimeDate@ptrToUserVal& (0+255),w,b
  7133  00377A  26D9               	addwf	fsr2l,f,c
  7134  00377C  518D               	movf	(getDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  7135  00377E  22DA               	addwfc	fsr2h,f,c
  7136  003780  0E00               	movlw	0
  7137  003782  0100               	movlb	0	; () banked
  7138  003784  6F82               	movwf	(I2C_Read@a+1)& (0+255),b
  7139  003786  0E01               	movlw	1
  7140  003788  6F81               	movwf	I2C_Read@a& (0+255),b
  7141  00378A  ECEE  F033         	call	_I2C_Read	;wreg free
  7142  00378E  0100               	movlb	0	; () banked
  7143  003790  5181               	movf	?_I2C_Read& (0+255),w,b
  7144  003792  EC7D  F032         	call	_BCDtoDEC
  7145  003796  6EDF               	movwf	indf2,c
  7146                           
  7147                           ;ds1307.h: 60: ptrToUserVal-> min = BCDtoDEC(I2C_Read(1));
  7148  003798  0100               	movlb	0	; () banked
  7149  00379A  EE20 F002          	lfsr	2,2
  7150  00379E  518C               	movf	getDS1307TimeDate@ptrToUserVal& (0+255),w,b
  7151  0037A0  26D9               	addwf	fsr2l,f,c
  7152  0037A2  518D               	movf	(getDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  7153  0037A4  22DA               	addwfc	fsr2h,f,c
  7154  0037A6  0E00               	movlw	0
  7155  0037A8  0100               	movlb	0	; () banked
  7156  0037AA  6F82               	movwf	(I2C_Read@a+1)& (0+255),b
  7157  0037AC  0E01               	movlw	1
  7158  0037AE  6F81               	movwf	I2C_Read@a& (0+255),b
  7159  0037B0  ECEE  F033         	call	_I2C_Read	;wreg free
  7160  0037B4  0100               	movlb	0	; () banked
  7161  0037B6  5181               	movf	?_I2C_Read& (0+255),w,b
  7162  0037B8  EC7D  F032         	call	_BCDtoDEC
  7163  0037BC  6EDF               	movwf	indf2,c
  7164                           
  7165                           ;ds1307.h: 61: ptrToUserVal-> hour = BCDtoDEC(I2C_Read(1));
  7166  0037BE  0100               	movlb	0	; () banked
  7167  0037C0  EE20 F003          	lfsr	2,3
  7168  0037C4  518C               	movf	getDS1307TimeDate@ptrToUserVal& (0+255),w,b
  7169  0037C6  26D9               	addwf	fsr2l,f,c
  7170  0037C8  518D               	movf	(getDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  7171  0037CA  22DA               	addwfc	fsr2h,f,c
  7172  0037CC  0E00               	movlw	0
  7173  0037CE  0100               	movlb	0	; () banked
  7174  0037D0  6F82               	movwf	(I2C_Read@a+1)& (0+255),b
  7175  0037D2  0E01               	movlw	1
  7176  0037D4  6F81               	movwf	I2C_Read@a& (0+255),b
  7177  0037D6  ECEE  F033         	call	_I2C_Read	;wreg free
  7178  0037DA  0100               	movlb	0	; () banked
  7179  0037DC  5181               	movf	?_I2C_Read& (0+255),w,b
  7180  0037DE  EC7D  F032         	call	_BCDtoDEC
  7181  0037E2  6EDF               	movwf	indf2,c
  7182                           
  7183                           ;ds1307.h: 62: ptrToUserVal-> day = BCDtoDEC(I2C_Read(1));
  7184  0037E4  0E00               	movlw	0
  7185  0037E6  0100               	movlb	0	; () banked
  7186  0037E8  6F82               	movwf	(I2C_Read@a+1)& (0+255),b
  7187  0037EA  0E01               	movlw	1
  7188  0037EC  6F81               	movwf	I2C_Read@a& (0+255),b
  7189  0037EE  ECEE  F033         	call	_I2C_Read	;wreg free
  7190  0037F2  0100               	movlb	0	; () banked
  7191  0037F4  5181               	movf	?_I2C_Read& (0+255),w,b
  7192  0037F6  EC7D  F032         	call	_BCDtoDEC
  7193  0037FA  C08C  FFD9         	movff	getDS1307TimeDate@ptrToUserVal,fsr2l
  7194  0037FE  C08D  FFDA         	movff	getDS1307TimeDate@ptrToUserVal+1,fsr2h
  7195  003802  6EDF               	movwf	indf2,c
  7196                           
  7197                           ;ds1307.h: 63: ptrToUserVal-> date = BCDtoDEC(I2C_Read(1));
  7198  003804  0100               	movlb	0	; () banked
  7199  003806  EE20 F004          	lfsr	2,4
  7200  00380A  518C               	movf	getDS1307TimeDate@ptrToUserVal& (0+255),w,b
  7201  00380C  26D9               	addwf	fsr2l,f,c
  7202  00380E  518D               	movf	(getDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  7203  003810  22DA               	addwfc	fsr2h,f,c
  7204  003812  0E00               	movlw	0
  7205  003814  0100               	movlb	0	; () banked
  7206  003816  6F82               	movwf	(I2C_Read@a+1)& (0+255),b
  7207  003818  0E01               	movlw	1
  7208  00381A  6F81               	movwf	I2C_Read@a& (0+255),b
  7209  00381C  ECEE  F033         	call	_I2C_Read	;wreg free
  7210  003820  0100               	movlb	0	; () banked
  7211  003822  5181               	movf	?_I2C_Read& (0+255),w,b
  7212  003824  EC7D  F032         	call	_BCDtoDEC
  7213  003828  6EDF               	movwf	indf2,c
  7214                           
  7215                           ;ds1307.h: 64: ptrToUserVal-> month = BCDtoDEC(I2C_Read(1));
  7216  00382A  0100               	movlb	0	; () banked
  7217  00382C  EE20 F005          	lfsr	2,5
  7218  003830  518C               	movf	getDS1307TimeDate@ptrToUserVal& (0+255),w,b
  7219  003832  26D9               	addwf	fsr2l,f,c
  7220  003834  518D               	movf	(getDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  7221  003836  22DA               	addwfc	fsr2h,f,c
  7222  003838  0E00               	movlw	0
  7223  00383A  0100               	movlb	0	; () banked
  7224  00383C  6F82               	movwf	(I2C_Read@a+1)& (0+255),b
  7225  00383E  0E01               	movlw	1
  7226  003840  6F81               	movwf	I2C_Read@a& (0+255),b
  7227  003842  ECEE  F033         	call	_I2C_Read	;wreg free
  7228  003846  0100               	movlb	0	; () banked
  7229  003848  5181               	movf	?_I2C_Read& (0+255),w,b
  7230  00384A  EC7D  F032         	call	_BCDtoDEC
  7231  00384E  6EDF               	movwf	indf2,c
  7232                           
  7233                           ;ds1307.h: 65: ptrToUserVal-> year = BCDtoDEC(I2C_Read(0));
  7234  003850  0100               	movlb	0	; () banked
  7235  003852  EE20 F006          	lfsr	2,6
  7236  003856  518C               	movf	getDS1307TimeDate@ptrToUserVal& (0+255),w,b
  7237  003858  26D9               	addwf	fsr2l,f,c
  7238  00385A  518D               	movf	(getDS1307TimeDate@ptrToUserVal+1)& (0+255),w,b
  7239  00385C  22DA               	addwfc	fsr2h,f,c
  7240  00385E  0E00               	movlw	0
  7241  003860  0100               	movlb	0	; () banked
  7242  003862  6F82               	movwf	(I2C_Read@a+1)& (0+255),b
  7243  003864  0E00               	movlw	0
  7244  003866  6F81               	movwf	I2C_Read@a& (0+255),b
  7245  003868  ECEE  F033         	call	_I2C_Read	;wreg free
  7246  00386C  0100               	movlb	0	; () banked
  7247  00386E  5181               	movf	?_I2C_Read& (0+255),w,b
  7248  003870  EC7D  F032         	call	_BCDtoDEC
  7249  003874  6EDF               	movwf	indf2,c
  7250                           
  7251                           ;ds1307.h: 66: I2C_Stop();
  7252  003876  EC22  F032         	call	_I2C_Stop	;wreg free
  7253  00387A  0012               	return		;funcret
  7254  00387C  FFFF               	dw	65535	; errata NOP
  7255  00387E                     __end_of_getDS1307TimeDate:
  7256                           	opt stack 0
  7257                           tblptru	equ	0xFF8
  7258                           tblptrh	equ	0xFF7
  7259                           tblptrl	equ	0xFF6
  7260                           tablat	equ	0xFF5
  7261                           prodh	equ	0xFF4
  7262                           prodl	equ	0xFF3
  7263                           postinc0	equ	0xFEE
  7264                           wreg	equ	0xFE8
  7265                           postdec1	equ	0xFE5
  7266                           fsr1l	equ	0xFE1
  7267                           indf2	equ	0xFDF
  7268                           postinc2	equ	0xFDE
  7269                           fsr2h	equ	0xFDA
  7270                           fsr2l	equ	0xFD9
  7271                           status	equ	0xFD8
  7272                           
  7273 ;; *************** function _BCDtoDEC *****************
  7274 ;; Defined at:
  7275 ;;		line 34 in file "function.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;  val             1    wreg     unsigned char 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;  val             1    0[BANK0 ] unsigned char 
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      unsigned char 
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0, prodl, prodh
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7289 ;;      Params:         0       0       0       0       0       0       0
  7290 ;;      Locals:         0       1       0       0       0       0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0
  7292 ;;      Totals:         0       1       0       0       0       0       0
  7293 ;;Total ram usage:        1 bytes
  7294 ;; Hardware stack levels used:    1
  7295 ;; Hardware stack levels required when called:    6
  7296 ;; This function calls:
  7297 ;;		Nothing
  7298 ;; This function is called by:
  7299 ;;		_getDS1307TimeDate
  7300 ;;		_getDS1307Time
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text17
  7305  0064FA                     __ptext17:
  7306                           	opt stack 0
  7307  0064FA                     _BCDtoDEC:
  7308                           	opt stack 0
  7309  0064FA  FFFF               	dw	65535	; assembler added errata NOP
  7310                           
  7311                           ;incstack = 0
  7312                           ;BCDtoDEC@val stored from wreg
  7313  0064FC  0100               	movlb	0	; () banked
  7314  0064FE  6F80               	movwf	BCDtoDEC@val& (0+255),b
  7315                           
  7316                           ;function.c: 35: return (val & 0x0F) + ((val & 0xF0) >> 4)*10;
  7317  006500  0100               	movlb	0	; () banked
  7318  006502  3980               	swapf	BCDtoDEC@val& (0+255),w,b
  7319  006504  0B0F               	andlw	15
  7320  006506  0B0F               	andlw	15
  7321  006508  0D0A               	mullw	10
  7322  00650A  0100               	movlb	0	; () banked
  7323  00650C  5180               	movf	BCDtoDEC@val& (0+255),w,b
  7324  00650E  0B0F               	andlw	15
  7325  006510  24F3               	addwf	prodl,w,c
  7326                           
  7327                           ; BSR set to: 0
  7328                           
  7329                           ; BSR set to: 0
  7330  006512  0012               	return		;funcret
  7331  006514  FFFF               	dw	65535	; errata NOP
  7332  006516                     __end_of_BCDtoDEC:
  7333                           	opt stack 0
  7334                           tblptru	equ	0xFF8
  7335                           tblptrh	equ	0xFF7
  7336                           tblptrl	equ	0xFF6
  7337                           tablat	equ	0xFF5
  7338                           prodh	equ	0xFF4
  7339                           prodl	equ	0xFF3
  7340                           postinc0	equ	0xFEE
  7341                           wreg	equ	0xFE8
  7342                           postdec1	equ	0xFE5
  7343                           fsr1l	equ	0xFE1
  7344                           indf2	equ	0xFDF
  7345                           postinc2	equ	0xFDE
  7346                           fsr2h	equ	0xFDA
  7347                           fsr2l	equ	0xFD9
  7348                           status	equ	0xFD8
  7349                           
  7350 ;; *************** function _dataLoger *****************
  7351 ;; Defined at:
  7352 ;;		line 12 in file "tela_DATALOGER.h"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  logs            1   58[BANK0 ] unsigned char 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      void 
  7359 ;; Registers used:
  7360 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7366 ;;      Params:         0       0       0       0       0       0       0
  7367 ;;      Locals:         0       7       0       0       0       0       0
  7368 ;;      Temps:          0       5       0       0       0       0       0
  7369 ;;      Totals:         0      12       0       0       0       0       0
  7370 ;;Total ram usage:       12 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    9
  7373 ;; This function calls:
  7374 ;;		___awdiv
  7375 ;;		_btPress
  7376 ;;		_readEEPROM_ext
  7377 ;;		_sprintf
  7378 ;; This function is called by:
  7379 ;;		_main
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text18
  7384  001E8A                     __ptext18:
  7385                           	opt stack 0
  7386  001E8A                     _dataLoger:
  7387                           	opt stack 0
  7388  001E8A  FFFF               	dw	65535	; assembler added errata NOP
  7389                           
  7390                           ;tela_DATALOGER.h: 13: sprintf(line1, "Data: %02d/%02d/%02d %02d:%02d", dtl_dia, dtl_mes
      +                          , dtl_ano, dtl_hora, dtl_min);
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;incstack = 0
  7394  001E8C  0E7B               	movlw	low _line1
  7395  001E8E  0100               	movlb	0	; () banked
  7396  001E90  6FA1               	movwf	sprintf@wh& (0+255),b
  7397  001E92  0E01               	movlw	high _line1
  7398  001E94  0100               	movlb	0	; () banked
  7399  001E96  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  7400  001E98  0E53               	movlw	low STR_71
  7401  001E9A  0100               	movlb	0	; () banked
  7402  001E9C  6FA3               	movwf	sprintf@f& (0+255),b
  7403  001E9E  0E7C               	movlw	high STR_71
  7404  001EA0  0100               	movlb	0	; () banked
  7405  001EA2  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  7406  001EA4  C059  F0A5         	movff	_dtl_dia,?_sprintf+4
  7407  001EA8  0100               	movlb	0	; () banked
  7408  001EAA  6BA6               	clrf	(?_sprintf+5)& (0+255),b
  7409  001EAC  C058  F0A7         	movff	_dtl_mes,?_sprintf+6
  7410  001EB0  0100               	movlb	0	; () banked
  7411  001EB2  6BA8               	clrf	(?_sprintf+7)& (0+255),b
  7412  001EB4  C057  F0A9         	movff	_dtl_ano,?_sprintf+8
  7413  001EB8  0100               	movlb	0	; () banked
  7414  001EBA  6BAA               	clrf	(?_sprintf+9)& (0+255),b
  7415  001EBC  C056  F0AB         	movff	_dtl_hora,?_sprintf+10
  7416  001EC0  0100               	movlb	0	; () banked
  7417  001EC2  6BAC               	clrf	(?_sprintf+11)& (0+255),b
  7418  001EC4  C055  F0AD         	movff	_dtl_min,?_sprintf+12
  7419  001EC8  0100               	movlb	0	; () banked
  7420  001ECA  6BAE               	clrf	(?_sprintf+13)& (0+255),b
  7421  001ECC  EC25  F036         	call	_sprintf	;wreg free
  7422                           
  7423                           ;tela_DATALOGER.h: 14: sprintf(line2, "Jokey: %s", dtl_jockey == 1 ? "OK" : "ERRO");
  7424  001ED0  0454               	decf	_dtl_jockey,w,c
  7425  001ED2  B4D8               	btfsc	status,2,c
  7426  001ED4  D005               	goto	l9590
  7427  001ED6  0EE2               	movlw	low STR_46
  7428  001ED8  0100               	movlb	0	; () banked
  7429  001EDA  6FBB               	movwf	_dataLoger$1428& (0+255),b
  7430  001EDC  0E7F               	movlw	high STR_46
  7431  001EDE  D005               	goto	L13
  7432  001EE0                     l9590:
  7433  001EE0  FFFF               	dw	65535	; assembler added errata NOP
  7434  001EE2  0EF9               	movlw	low STR_5
  7435  001EE4  0100               	movlb	0	; () banked
  7436  001EE6  6FBB               	movwf	_dataLoger$1428& (0+255),b
  7437  001EE8  0E7F               	movlw	high STR_5
  7438  001EEA                     L13:
  7439  001EEA  FFFF               	dw	65535	; assembler added errata NOP
  7440  001EEC  0100               	movlb	0	; () banked
  7441  001EEE  6FBC               	movwf	(_dataLoger$1428+1)& (0+255),b
  7442                           
  7443                           ; BSR set to: 0
  7444                           
  7445                           ; BSR set to: 0
  7446  001EF0  0E66               	movlw	low _line2
  7447  001EF2  0100               	movlb	0	; () banked
  7448  001EF4  6FA1               	movwf	sprintf@wh& (0+255),b
  7449  001EF6  0E01               	movlw	high _line2
  7450  001EF8  0100               	movlb	0	; () banked
  7451  001EFA  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  7452  001EFC  0E77               	movlw	low STR_72
  7453  001EFE  0100               	movlb	0	; () banked
  7454  001F00  6FA3               	movwf	sprintf@f& (0+255),b
  7455  001F02  0E7F               	movlw	high STR_72
  7456  001F04  0100               	movlb	0	; () banked
  7457  001F06  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  7458  001F08  C0BB  F0A5         	movff	_dataLoger$1428,?_sprintf+4
  7459  001F0C  C0BC  F0A6         	movff	_dataLoger$1428+1,?_sprintf+5
  7460  001F10  EC25  F036         	call	_sprintf	;wreg free
  7461                           
  7462                           ;tela_DATALOGER.h: 15: sprintf(&line2[14], "#%02d/%02d", (dtl_posi_visualizar + 1), tota
      +                          lLogs);
  7463  001F14  0E74               	movlw	low (_line2+14)
  7464  001F16  0100               	movlb	0	; () banked
  7465  001F18  6FA1               	movwf	sprintf@wh& (0+255),b
  7466  001F1A  0E01               	movlw	high (_line2+14)
  7467  001F1C  0100               	movlb	0	; () banked
  7468  001F1E  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  7469  001F20  0E23               	movlw	low STR_75
  7470  001F22  0100               	movlb	0	; () banked
  7471  001F24  6FA3               	movwf	sprintf@f& (0+255),b
  7472  001F26  0E7F               	movlw	high STR_75
  7473  001F28  0100               	movlb	0	; () banked
  7474  001F2A  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  7475  001F2C  0E01               	movlw	1
  7476  001F2E  244F               	addwf	_dtl_posi_visualizar,w,c
  7477  001F30  0100               	movlb	0	; () banked
  7478  001F32  6FA5               	movwf	(?_sprintf+4)& (0+255),b
  7479  001F34  0100               	movlb	0	; () banked
  7480  001F36  6BA6               	clrf	(?_sprintf+5)& (0+255),b
  7481  001F38  0E00               	movlw	0
  7482  001F3A  23A6               	addwfc	(?_sprintf+5)& (0+255),f,b
  7483  001F3C  C050  F0A7         	movff	_totalLogs,?_sprintf+6
  7484  001F40  0100               	movlb	0	; () banked
  7485  001F42  6BA8               	clrf	(?_sprintf+7)& (0+255),b
  7486  001F44  EC25  F036         	call	_sprintf	;wreg free
  7487                           
  7488                           ;tela_DATALOGER.h: 16: sprintf(line3, "Principal: %s", dtl_principal == 1 ? "OK" : "ERRO
      +                          ");
  7489  001F48  0453               	decf	_dtl_principal,w,c
  7490  001F4A  B4D8               	btfsc	status,2,c
  7491  001F4C  D005               	goto	l9598
  7492  001F4E  0EE2               	movlw	low STR_46
  7493  001F50  0100               	movlb	0	; () banked
  7494  001F52  6FBD               	movwf	_dataLoger$1434& (0+255),b
  7495  001F54  0E7F               	movlw	high STR_46
  7496  001F56  D005               	goto	L14
  7497  001F58                     l9598:
  7498  001F58  FFFF               	dw	65535	; assembler added errata NOP
  7499  001F5A  0EF9               	movlw	low STR_5
  7500  001F5C  0100               	movlb	0	; () banked
  7501  001F5E  6FBD               	movwf	_dataLoger$1434& (0+255),b
  7502  001F60  0E7F               	movlw	high STR_5
  7503  001F62                     L14:
  7504  001F62  FFFF               	dw	65535	; assembler added errata NOP
  7505  001F64  0100               	movlb	0	; () banked
  7506  001F66  6FBE               	movwf	(_dataLoger$1434+1)& (0+255),b
  7507                           
  7508                           ; BSR set to: 0
  7509                           
  7510                           ; BSR set to: 0
  7511  001F68  0E51               	movlw	low _line3
  7512  001F6A  0100               	movlb	0	; () banked
  7513  001F6C  6FA1               	movwf	sprintf@wh& (0+255),b
  7514  001F6E  0E01               	movlw	high _line3
  7515  001F70  0100               	movlb	0	; () banked
  7516  001F72  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  7517  001F74  0EA8               	movlw	low STR_76
  7518  001F76  0100               	movlb	0	; () banked
  7519  001F78  6FA3               	movwf	sprintf@f& (0+255),b
  7520  001F7A  0E7E               	movlw	high STR_76
  7521  001F7C  0100               	movlb	0	; () banked
  7522  001F7E  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  7523  001F80  C0BD  F0A5         	movff	_dataLoger$1434,?_sprintf+4
  7524  001F84  C0BE  F0A6         	movff	_dataLoger$1434+1,?_sprintf+5
  7525  001F88  EC25  F036         	call	_sprintf	;wreg free
  7526                           
  7527                           ;tela_DATALOGER.h: 17: sprintf(line4, "Combustao: %s", dtl_estacionaria == 1 ? "OK" : "E
      +                          RRO");
  7528  001F8C  0452               	decf	_dtl_estacionaria,w,c
  7529  001F8E  B4D8               	btfsc	status,2,c
  7530  001F90  D005               	goto	l9606
  7531  001F92  0EE2               	movlw	low STR_46
  7532  001F94  0100               	movlb	0	; () banked
  7533  001F96  6FBF               	movwf	_dataLoger$1439& (0+255),b
  7534  001F98  0E7F               	movlw	high STR_46
  7535  001F9A  D005               	goto	L15
  7536  001F9C                     l9606:
  7537  001F9C  FFFF               	dw	65535	; assembler added errata NOP
  7538  001F9E  0EF9               	movlw	low STR_5
  7539  001FA0  0100               	movlb	0	; () banked
  7540  001FA2  6FBF               	movwf	_dataLoger$1439& (0+255),b
  7541  001FA4  0E7F               	movlw	high STR_5
  7542  001FA6                     L15:
  7543  001FA6  FFFF               	dw	65535	; assembler added errata NOP
  7544  001FA8  0100               	movlb	0	; () banked
  7545  001FAA  6FC0               	movwf	(_dataLoger$1439+1)& (0+255),b
  7546                           
  7547                           ; BSR set to: 0
  7548                           
  7549                           ; BSR set to: 0
  7550  001FAC  0E3C               	movlw	low _line4
  7551  001FAE  0100               	movlb	0	; () banked
  7552  001FB0  6FA1               	movwf	sprintf@wh& (0+255),b
  7553  001FB2  0E01               	movlw	high _line4
  7554  001FB4  0100               	movlb	0	; () banked
  7555  001FB6  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  7556  001FB8  0EB6               	movlw	low STR_79
  7557  001FBA  0100               	movlb	0	; () banked
  7558  001FBC  6FA3               	movwf	sprintf@f& (0+255),b
  7559  001FBE  0E7E               	movlw	high STR_79
  7560  001FC0  0100               	movlb	0	; () banked
  7561  001FC2  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  7562  001FC4  C0BF  F0A5         	movff	_dataLoger$1439,?_sprintf+4
  7563  001FC8  C0C0  F0A6         	movff	_dataLoger$1439+1,?_sprintf+5
  7564  001FCC  EC25  F036         	call	_sprintf	;wreg free
  7565                           
  7566                           ;tela_DATALOGER.h: 19: if (btPress(1)) {
  7567  001FD0  0E01               	movlw	1
  7568  001FD2  EC82  F037         	call	_btPress
  7569  001FD6  0900               	iorlw	0
  7570  001FD8  B4D8               	btfsc	status,2,c
  7571  001FDA  D005               	goto	l9616
  7572                           
  7573                           ;tela_DATALOGER.h: 20: option_posi = 0;
  7574  001FDC  0E00               	movlw	0
  7575  001FDE  0100               	movlb	0	; () banked
  7576  001FE0  6FE0               	movwf	_option_posi& (0+255),b
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;tela_DATALOGER.h: 21: menu_posi = _menu_posi;
  7580  001FE2  C0DE  F0DF         	movff	__menu_posi,_menu_posi
  7581  001FE6                     l9616:
  7582  001FE6  FFFF               	dw	65535	; assembler added errata NOP
  7583                           
  7584                           ;tela_DATALOGER.h: 22: }
  7585                           ;tela_DATALOGER.h: 27: if (btPress(2)) {
  7586  001FE8  0E02               	movlw	2
  7587  001FEA  EC82  F037         	call	_btPress
  7588  001FEE  0900               	iorlw	0
  7589  001FF0  B4D8               	btfsc	status,2,c
  7590  001FF2  D00D               	goto	l9622
  7591                           
  7592                           ;tela_DATALOGER.h: 28: dtl_posicao -= 8;
  7593  001FF4  0E08               	movlw	8
  7594  001FF6  0100               	movlb	0	; () banked
  7595  001FF8  5FFA               	subwf	_dtl_posicao& (0+255),f,b
  7596                           
  7597                           ;tela_DATALOGER.h: 29: if (dtl_posicao < 60) {
  7598  001FFA  0E3C               	movlw	60
  7599  001FFC  0100               	movlb	0	; () banked
  7600  001FFE  61FA               	cpfslt	_dtl_posicao& (0+255),b
  7601  002000  D003               	goto	l773
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;tela_DATALOGER.h: 30: dtl_posicao = 60;
  7605  002002  0E3C               	movlw	60
  7606  002004  0100               	movlb	0	; () banked
  7607  002006  6FFA               	movwf	_dtl_posicao& (0+255),b
  7608  002008                     l773:
  7609  002008  FFFF               	dw	65535	; assembler added errata NOP
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;tela_DATALOGER.h: 31: }
  7613                           ;tela_DATALOGER.h: 32: dtl_carregar_log = 1;
  7614  00200A  0E01               	movlw	1
  7615  00200C  6E51               	movwf	_dtl_carregar_log,c
  7616  00200E                     l9622:
  7617  00200E  FFFF               	dw	65535	; assembler added errata NOP
  7618                           
  7619                           ;tela_DATALOGER.h: 33: }
  7620                           ;tela_DATALOGER.h: 34: if (btPress(3)) {
  7621  002010  0E03               	movlw	3
  7622  002012  EC82  F037         	call	_btPress
  7623  002016  0900               	iorlw	0
  7624  002018  B4D8               	btfsc	status,2,c
  7625  00201A  D022               	goto	l9632
  7626                           
  7627                           ;tela_DATALOGER.h: 35: if ((dtl_posi_visualizar + 1) >= totalLogs) {
  7628  00201C  5050               	movf	_totalLogs,w,c
  7629  00201E  0100               	movlb	0	; () banked
  7630  002020  6FB5               	movwf	??_dataLoger& (0+255),b
  7631  002022  6BB6               	clrf	(??_dataLoger+1)& (0+255),b
  7632  002024  504F               	movf	_dtl_posi_visualizar,w,c
  7633  002026  0100               	movlb	0	; () banked
  7634  002028  6FB7               	movwf	(??_dataLoger+2)& (0+255),b
  7635  00202A  6BB8               	clrf	(??_dataLoger+3)& (0+255),b
  7636  00202C  0E01               	movlw	1
  7637  00202E  0100               	movlb	0	; () banked
  7638  002030  27B7               	addwf	(??_dataLoger+2)& (0+255),f,b
  7639  002032  0E00               	movlw	0
  7640  002034  23B8               	addwfc	(??_dataLoger+3)& (0+255),f,b
  7641  002036  0100               	movlb	0	; () banked
  7642  002038  51B5               	movf	??_dataLoger& (0+255),w,b
  7643  00203A  0100               	movlb	0	; () banked
  7644  00203C  5DB7               	subwf	(??_dataLoger+2)& (0+255),w,b
  7645  00203E  0100               	movlb	0	; () banked
  7646  002040  51B8               	movf	(??_dataLoger+3)& (0+255),w,b
  7647  002042  0A80               	xorlw	128
  7648  002044  0100               	movlb	0	; () banked
  7649  002046  6FB9               	movwf	(??_dataLoger+4)& (0+255),b
  7650  002048  0100               	movlb	0	; () banked
  7651  00204A  51B6               	movf	(??_dataLoger+1)& (0+255),w,b
  7652  00204C  0A80               	xorlw	128
  7653  00204E  0100               	movlb	0	; () banked
  7654  002050  59B9               	subwfb	(??_dataLoger+4)& (0+255),w,b
  7655  002052  B0D8               	btfsc	status,0,c
  7656  002054  D064               	goto	l776
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;tela_DATALOGER.h: 37: }
  7660                           ;tela_DATALOGER.h: 38: dtl_posicao += 8;
  7661                           
  7662                           ; BSR set to: 0
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;tela_DATALOGER.h: 36: return;
  7666  002056  0E08               	movlw	8
  7667  002058  0100               	movlb	0	; () banked
  7668  00205A  27FA               	addwf	_dtl_posicao& (0+255),f,b
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;tela_DATALOGER.h: 39: dtl_carregar_log = 1;
  7672  00205C  0E01               	movlw	1
  7673  00205E  6E51               	movwf	_dtl_carregar_log,c
  7674  002060                     l9632:
  7675  002060  FFFF               	dw	65535	; assembler added errata NOP
  7676                           
  7677                           ;tela_DATALOGER.h: 40: }
  7678                           ;tela_DATALOGER.h: 42: if (dtl_carregar_log == 1) {
  7679  002062  0451               	decf	_dtl_carregar_log,w,c
  7680  002064  A4D8               	btfss	status,2,c
  7681  002066  D05B               	goto	l776
  7682                           
  7683                           ;tela_DATALOGER.h: 43: char logs = readEEPROM_ext(14);
  7684  002068  0E0E               	movlw	14
  7685  00206A  ECD4  F01F         	call	_readEEPROM_ext
  7686  00206E  0100               	movlb	0	; () banked
  7687  002070  6FBA               	movwf	dataLoger@logs& (0+255),b
  7688                           
  7689                           ;tela_DATALOGER.h: 44: totalLogs = (logs - 60) / 8;
  7690  002072  0EC4               	movlw	196
  7691  002074  0100               	movlb	0	; () banked
  7692  002076  25BA               	addwf	dataLoger@logs& (0+255),w,b
  7693  002078  0100               	movlb	0	; () banked
  7694  00207A  6F80               	movwf	___awdiv@dividend& (0+255),b
  7695  00207C  0100               	movlb	0	; () banked
  7696  00207E  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
  7697  002080  0EFF               	movlw	255
  7698  002082  2381               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
  7699  002084  0E00               	movlw	0
  7700  002086  0100               	movlb	0	; () banked
  7701  002088  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  7702  00208A  0E08               	movlw	8
  7703  00208C  6F82               	movwf	___awdiv@divisor& (0+255),b
  7704  00208E  EC42  F03B         	call	___awdiv	;wreg free
  7705  002092  0100               	movlb	0	; () banked
  7706  002094  5180               	movf	?___awdiv& (0+255),w,b
  7707  002096  6E50               	movwf	_totalLogs,c
  7708                           
  7709                           ;tela_DATALOGER.h: 46: dtl_posi_visualizar = (dtl_posicao - 60) / 8;
  7710  002098  0EC4               	movlw	196
  7711  00209A  0100               	movlb	0	; () banked
  7712  00209C  25FA               	addwf	_dtl_posicao& (0+255),w,b
  7713  00209E  0100               	movlb	0	; () banked
  7714  0020A0  6F80               	movwf	___awdiv@dividend& (0+255),b
  7715  0020A2  0100               	movlb	0	; () banked
  7716  0020A4  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
  7717  0020A6  0EFF               	movlw	255
  7718  0020A8  2381               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
  7719  0020AA  0E00               	movlw	0
  7720  0020AC  0100               	movlb	0	; () banked
  7721  0020AE  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  7722  0020B0  0E08               	movlw	8
  7723  0020B2  6F82               	movwf	___awdiv@divisor& (0+255),b
  7724  0020B4  EC42  F03B         	call	___awdiv	;wreg free
  7725  0020B8  0100               	movlb	0	; () banked
  7726  0020BA  5180               	movf	?___awdiv& (0+255),w,b
  7727  0020BC  6E4F               	movwf	_dtl_posi_visualizar,c
  7728                           
  7729                           ;tela_DATALOGER.h: 48: dtl_dia = readEEPROM_ext(dtl_posicao);
  7730  0020BE  0100               	movlb	0	; () banked
  7731  0020C0  51FA               	movf	_dtl_posicao& (0+255),w,b
  7732  0020C2  ECD4  F01F         	call	_readEEPROM_ext
  7733  0020C6  6E59               	movwf	_dtl_dia,c
  7734                           
  7735                           ;tela_DATALOGER.h: 49: dtl_mes = readEEPROM_ext((dtl_posicao + 1));
  7736  0020C8  0100               	movlb	0	; () banked
  7737  0020CA  29FA               	incf	_dtl_posicao& (0+255),w,b
  7738  0020CC  ECD4  F01F         	call	_readEEPROM_ext
  7739  0020D0  6E58               	movwf	_dtl_mes,c
  7740                           
  7741                           ;tela_DATALOGER.h: 50: dtl_ano = readEEPROM_ext((dtl_posicao + 2));
  7742  0020D2  0100               	movlb	0	; () banked
  7743  0020D4  51FA               	movf	_dtl_posicao& (0+255),w,b
  7744  0020D6  0F02               	addlw	2
  7745  0020D8  ECD4  F01F         	call	_readEEPROM_ext
  7746  0020DC  6E57               	movwf	_dtl_ano,c
  7747                           
  7748                           ;tela_DATALOGER.h: 51: dtl_hora = readEEPROM_ext((dtl_posicao + 3));
  7749  0020DE  0100               	movlb	0	; () banked
  7750  0020E0  51FA               	movf	_dtl_posicao& (0+255),w,b
  7751  0020E2  0F03               	addlw	3
  7752  0020E4  ECD4  F01F         	call	_readEEPROM_ext
  7753  0020E8  6E56               	movwf	_dtl_hora,c
  7754                           
  7755                           ;tela_DATALOGER.h: 52: dtl_min = readEEPROM_ext((dtl_posicao + 4));
  7756  0020EA  0100               	movlb	0	; () banked
  7757  0020EC  51FA               	movf	_dtl_posicao& (0+255),w,b
  7758  0020EE  0F04               	addlw	4
  7759  0020F0  ECD4  F01F         	call	_readEEPROM_ext
  7760  0020F4  6E55               	movwf	_dtl_min,c
  7761                           
  7762                           ;tela_DATALOGER.h: 53: dtl_jockey = readEEPROM_ext((dtl_posicao + 5));
  7763  0020F6  0100               	movlb	0	; () banked
  7764  0020F8  51FA               	movf	_dtl_posicao& (0+255),w,b
  7765  0020FA  0F05               	addlw	5
  7766  0020FC  ECD4  F01F         	call	_readEEPROM_ext
  7767  002100  6E54               	movwf	_dtl_jockey,c
  7768                           
  7769                           ;tela_DATALOGER.h: 54: dtl_principal = readEEPROM_ext((dtl_posicao + 6));
  7770  002102  0100               	movlb	0	; () banked
  7771  002104  51FA               	movf	_dtl_posicao& (0+255),w,b
  7772  002106  0F06               	addlw	6
  7773  002108  ECD4  F01F         	call	_readEEPROM_ext
  7774  00210C  6E53               	movwf	_dtl_principal,c
  7775                           
  7776                           ;tela_DATALOGER.h: 55: dtl_estacionaria = readEEPROM_ext((dtl_posicao + 7));
  7777  00210E  0100               	movlb	0	; () banked
  7778  002110  51FA               	movf	_dtl_posicao& (0+255),w,b
  7779  002112  0F07               	addlw	7
  7780  002114  ECD4  F01F         	call	_readEEPROM_ext
  7781  002118  6E52               	movwf	_dtl_estacionaria,c
  7782                           
  7783                           ;tela_DATALOGER.h: 56: dtl_carregar_log = 0;
  7784  00211A  0E00               	movlw	0
  7785  00211C  6E51               	movwf	_dtl_carregar_log,c
  7786  00211E                     l776:
  7787  00211E  FFFF               	dw	65535	; assembler added errata NOP
  7788  002120  0012               	return		;funcret
  7789  002122  FFFF               	dw	65535	; errata NOP
  7790  002124                     __end_of_dataLoger:
  7791                           	opt stack 0
  7792                           tblptru	equ	0xFF8
  7793                           tblptrh	equ	0xFF7
  7794                           tblptrl	equ	0xFF6
  7795                           tablat	equ	0xFF5
  7796                           prodh	equ	0xFF4
  7797                           prodl	equ	0xFF3
  7798                           postinc0	equ	0xFEE
  7799                           wreg	equ	0xFE8
  7800                           postdec1	equ	0xFE5
  7801                           fsr1l	equ	0xFE1
  7802                           indf2	equ	0xFDF
  7803                           postinc2	equ	0xFDE
  7804                           fsr2h	equ	0xFDA
  7805                           fsr2l	equ	0xFD9
  7806                           status	equ	0xFD8
  7807                           
  7808 ;; *************** function _criarCaracteresCGRAM *****************
  7809 ;; Defined at:
  7810 ;;		line 152 in file "lcd.h"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  character      48    7[BANK0 ] const unsigned char [8][
  7815 ;;  i               1   59[BANK0 ] unsigned char 
  7816 ;;  j               1   58[BANK0 ] unsigned char 
  7817 ;;  k               1   57[BANK0 ] unsigned char 
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1    wreg      void 
  7820 ;; Registers used:
  7821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7827 ;;      Params:         0       0       0       0       0       0       0
  7828 ;;      Locals:         0      53       0       0       0       0       0
  7829 ;;      Temps:          0       3       0       0       0       0       0
  7830 ;;      Totals:         0      56       0       0       0       0       0
  7831 ;;Total ram usage:       56 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    8
  7834 ;; This function calls:
  7835 ;;		_Lcd_Cmd
  7836 ;;		_Lcd_Write_Char
  7837 ;; This function is called by:
  7838 ;;		_main
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text19
  7843  003CC4                     __ptext19:
  7844                           	opt stack 0
  7845  003CC4                     _criarCaracteresCGRAM:
  7846                           	opt stack 0
  7847  003CC4  FFFF               	dw	65535	; assembler added errata NOP
  7848                           
  7849                           ;lcd.h: 153: const char character[6][8] = {
  7850                           ;lcd.h: 154: 0x00, 0x1F, 0x0E, 0x04, 0x04, 0x04, 0x04, 0x04,
  7851                           ;lcd.h: 155: 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10,
  7852                           ;lcd.h: 156: 0x00, 0x00, 0x00, 0x04, 0x04, 0x14, 0x14, 0x14,
  7853                           ;lcd.h: 157: 0x00, 0x01, 0x01, 0x05, 0x05, 0x15, 0x15, 0x15,
  7854                           ;lcd.h: 158: 0x0A, 0x0A, 0x1F, 0x11, 0x11, 0x0E, 0x04, 0x04,
  7855                           ;lcd.h: 159: };
  7856                           
  7857                           ;incstack = 0
  7858  003CC6  0EF7               	movlw	low criarCaracteresCGRAM@F2950
  7859  003CC8  6EF6               	movwf	tblptrl,c
  7860  003CCA                     	if	1	;There is more than 1 active tblptr byte
  7861  003CCA  0E7A               	movlw	high criarCaracteresCGRAM@F2950
  7862  003CCC  6EF7               	movwf	tblptrh,c
  7863  003CCE                     	endif
  7864  003CCE                     	if	0	;There are less than 3 active tblptr bytes
  7865  003CCE                     	endif
  7866  003CCE  EE20  F087         	lfsr	2,criarCaracteresCGRAM@character
  7867  003CD2  0E2F               	movlw	47
  7868  003CD4                     u10990:
  7869  003CD4  0009               	tblrd		*+
  7870  003CD6  FFFF               	dw	65535	; errata NOP
  7871  003CD8  CFF5 FFDE          	movff	tablat,postinc2
  7872  003CDC  06E8               	decf	wreg,f,c
  7873  003CDE  E2FA               	bc	u10990
  7874                           
  7875                           ;lcd.h: 160: Lcd_Cmd(0b0100);
  7876  003CE0  0E04               	movlw	4
  7877  003CE2  ECC4  F032         	call	_Lcd_Cmd
  7878                           
  7879                           ;lcd.h: 161: Lcd_Cmd(0b0000);
  7880  003CE6  0E00               	movlw	0
  7881  003CE8  ECC4  F032         	call	_Lcd_Cmd
  7882                           
  7883                           ;lcd.h: 162: _delay((unsigned long)((100)*(8000000/4000000.0)));
  7884  003CEC  0E32               	movlw	50
  7885  003CEE                     u12177:
  7886  003CEE  FFFF               	dw	65535	; errata NOP
  7887  003CF0  2EE8               	decfsz	wreg,f,c
  7888  003CF2  D7FD               	bra	u12177
  7889                           
  7890                           ;lcd.h: 163: char i = 0, j = 0, k = 0;
  7891  003CF4  0E00               	movlw	0
  7892  003CF6  0100               	movlb	0	; () banked
  7893  003CF8  6FBB               	movwf	criarCaracteresCGRAM@i& (0+255),b
  7894                           
  7895                           ; BSR set to: 0
  7896  003CFA  0E00               	movlw	0
  7897  003CFC  0100               	movlb	0	; () banked
  7898  003CFE  6FBA               	movwf	criarCaracteresCGRAM@j& (0+255),b
  7899                           
  7900                           ; BSR set to: 0
  7901  003D00  0E00               	movlw	0
  7902  003D02  0100               	movlb	0	; () banked
  7903  003D04  6FB9               	movwf	criarCaracteresCGRAM@k& (0+255),b
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;lcd.h: 164: for (i = 0; i < 5; i++) {
  7907  003D06  0E00               	movlw	0
  7908  003D08  0100               	movlb	0	; () banked
  7909  003D0A  6FBB               	movwf	criarCaracteresCGRAM@i& (0+255),b
  7910  003D0C                     l9356:
  7911  003D0C  FFFF               	dw	65535	; assembler added errata NOP
  7912                           
  7913                           ; BSR set to: 0
  7914  003D0E  0E04               	movlw	4
  7915  003D10  0100               	movlb	0	; () banked
  7916  003D12  65BB               	cpfsgt	criarCaracteresCGRAM@i& (0+255),b
  7917  003D14  D001               	goto	l9360
  7918  003D16  D04F               	goto	l654
  7919  003D18                     l9360:
  7920  003D18  FFFF               	dw	65535	; assembler added errata NOP
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;lcd.h: 165: if (k == 1) i = 0;
  7924  003D1A  0100               	movlb	0	; () banked
  7925  003D1C  05B9               	decf	criarCaracteresCGRAM@k& (0+255),w,b
  7926  003D1E  A4D8               	btfss	status,2,c
  7927  003D20  D003               	goto	l647
  7928                           
  7929                           ; BSR set to: 0
  7930  003D22  0E00               	movlw	0
  7931  003D24  0100               	movlb	0	; () banked
  7932  003D26  6FBB               	movwf	criarCaracteresCGRAM@i& (0+255),b
  7933  003D28                     l647:
  7934  003D28  FFFF               	dw	65535	; assembler added errata NOP
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;lcd.h: 166: for (j = 0; j < 8; j++) {
  7938  003D2A  0E00               	movlw	0
  7939  003D2C  0100               	movlb	0	; () banked
  7940  003D2E  6FBA               	movwf	criarCaracteresCGRAM@j& (0+255),b
  7941  003D30                     l9364:
  7942  003D30  FFFF               	dw	65535	; assembler added errata NOP
  7943                           
  7944                           ; BSR set to: 0
  7945  003D32  0E07               	movlw	7
  7946  003D34  0100               	movlb	0	; () banked
  7947  003D36  65BA               	cpfsgt	criarCaracteresCGRAM@j& (0+255),b
  7948  003D38  D001               	goto	l9368
  7949  003D3A  D037               	goto	l9380
  7950  003D3C                     l9368:
  7951  003D3C  FFFF               	dw	65535	; assembler added errata NOP
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;lcd.h: 167: Lcd_Write_Char((k) ? character[i][j] : 0);
  7955  003D3E  0100               	movlb	0	; () banked
  7956  003D40  51B9               	movf	criarCaracteresCGRAM@k& (0+255),w,b
  7957  003D42  0100               	movlb	0	; () banked
  7958  003D44  A4D8               	btfss	status,2,c
  7959  003D46  D006               	goto	l9372
  7960                           
  7961                           ; BSR set to: 0
  7962  003D48  0E00               	movlw	0
  7963  003D4A  0100               	movlb	0	; () banked
  7964  003D4C  6FB8               	movwf	(_criarCaracteresCGRAM$1377+1)& (0+255),b
  7965  003D4E  0E00               	movlw	0
  7966  003D50  6FB7               	movwf	_criarCaracteresCGRAM$1377& (0+255),b
  7967  003D52  D023               	goto	l9374
  7968  003D54                     l9372:
  7969  003D54  FFFF               	dw	65535	; assembler added errata NOP
  7970                           
  7971                           ; BSR set to: 0
  7972  003D56  0100               	movlb	0	; () banked
  7973  003D58  51BB               	movf	criarCaracteresCGRAM@i& (0+255),w,b
  7974  003D5A  0D08               	mullw	8
  7975  003D5C  0E87               	movlw	low criarCaracteresCGRAM@character
  7976  003D5E  0100               	movlb	0	; () banked
  7977  003D60  6F84               	movwf	??_criarCaracteresCGRAM& (0+255),b
  7978  003D62  0E00               	movlw	high criarCaracteresCGRAM@character
  7979  003D64  0100               	movlb	0	; () banked
  7980  003D66  6F85               	movwf	(??_criarCaracteresCGRAM+1)& (0+255),b
  7981  003D68  50F3               	movf	prodl,w,c
  7982  003D6A  0100               	movlb	0	; () banked
  7983  003D6C  2784               	addwf	??_criarCaracteresCGRAM& (0+255),f,b
  7984  003D6E  50F4               	movf	prodh,w,c
  7985  003D70  0100               	movlb	0	; () banked
  7986  003D72  2385               	addwfc	(??_criarCaracteresCGRAM+1)& (0+255),f,b
  7987  003D74  0100               	movlb	0	; () banked
  7988  003D76  51BA               	movf	criarCaracteresCGRAM@j& (0+255),w,b
  7989  003D78  0D01               	mullw	1
  7990  003D7A  50F3               	movf	prodl,w,c
  7991  003D7C  0100               	movlb	0	; () banked
  7992  003D7E  2584               	addwf	??_criarCaracteresCGRAM& (0+255),w,b
  7993  003D80  6ED9               	movwf	fsr2l,c
  7994  003D82  50F4               	movf	prodh,w,c
  7995  003D84  0100               	movlb	0	; () banked
  7996  003D86  2185               	addwfc	(??_criarCaracteresCGRAM+1)& (0+255),w,b
  7997  003D88  6EDA               	movwf	fsr2h,c
  7998  003D8A  50DF               	movf	indf2,w,c
  7999  003D8C  0100               	movlb	0	; () banked
  8000  003D8E  6F86               	movwf	(??_criarCaracteresCGRAM+2)& (0+255),b
  8001  003D90  0100               	movlb	0	; () banked
  8002  003D92  5186               	movf	(??_criarCaracteresCGRAM+2)& (0+255),w,b
  8003  003D94  0100               	movlb	0	; () banked
  8004  003D96  6FB7               	movwf	_criarCaracteresCGRAM$1377& (0+255),b
  8005  003D98  6BB8               	clrf	(_criarCaracteresCGRAM$1377+1)& (0+255),b
  8006  003D9A                     l9374:
  8007  003D9A  FFFF               	dw	65535	; assembler added errata NOP
  8008                           
  8009                           ; BSR set to: 0
  8010  003D9C  0100               	movlb	0	; () banked
  8011  003D9E  51B7               	movf	_criarCaracteresCGRAM$1377& (0+255),w,b
  8012  003DA0  EC3B  F035         	call	_Lcd_Write_Char
  8013  003DA4  0100               	movlb	0	; () banked
  8014  003DA6  2BBA               	incf	criarCaracteresCGRAM@j& (0+255),f,b
  8015  003DA8  D7C3               	goto	l9364
  8016  003DAA                     l9380:
  8017  003DAA  FFFF               	dw	65535	; assembler added errata NOP
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;lcd.h: 168: }
  8021                           ;lcd.h: 169: k++;
  8022  003DAC  0100               	movlb	0	; () banked
  8023  003DAE  2BB9               	incf	criarCaracteresCGRAM@k& (0+255),f,b
  8024  003DB0  0100               	movlb	0	; () banked
  8025  003DB2  2BBB               	incf	criarCaracteresCGRAM@i& (0+255),f,b
  8026  003DB4  D7AB               	goto	l9356
  8027  003DB6                     l654:
  8028  003DB6  FFFF               	dw	65535	; assembler added errata NOP
  8029                           
  8030                           ; BSR set to: 0
  8031  003DB8  0012               	return		;funcret
  8032  003DBA  FFFF               	dw	65535	; errata NOP
  8033  003DBC                     __end_of_criarCaracteresCGRAM:
  8034                           	opt stack 0
  8035                           tblptru	equ	0xFF8
  8036                           tblptrh	equ	0xFF7
  8037                           tblptrl	equ	0xFF6
  8038                           tablat	equ	0xFF5
  8039                           prodh	equ	0xFF4
  8040                           prodl	equ	0xFF3
  8041                           postinc0	equ	0xFEE
  8042                           wreg	equ	0xFE8
  8043                           postdec1	equ	0xFE5
  8044                           fsr1l	equ	0xFE1
  8045                           indf2	equ	0xFDF
  8046                           postinc2	equ	0xFDE
  8047                           fsr2h	equ	0xFDA
  8048                           fsr2l	equ	0xFD9
  8049                           status	equ	0xFD8
  8050                           
  8051 ;; *************** function _configurarEstacionaria *****************
  8052 ;; Defined at:
  8053 ;;		line 7 in file "tela_ESTACIONARIA.h"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;		None
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;		None
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  1    wreg      void 
  8060 ;; Registers used:
  8061 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8067 ;;      Params:         0       0       0       0       0       0       0
  8068 ;;      Locals:         0       0       0       0       0       0       0
  8069 ;;      Temps:          0       0       0       0       0       0       0
  8070 ;;      Totals:         0       0       0       0       0       0       0
  8071 ;;Total ram usage:        0 bytes
  8072 ;; Hardware stack levels used:    1
  8073 ;; Hardware stack levels required when called:    9
  8074 ;; This function calls:
  8075 ;;		_blink
  8076 ;;		_btPress
  8077 ;;		_sprintf
  8078 ;;		_writeEEPROM_ext
  8079 ;; This function is called by:
  8080 ;;		_main
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text20
  8085  002FF2                     __ptext20:
  8086                           	opt stack 0
  8087  002FF2                     _configurarEstacionaria:
  8088                           	opt stack 0
  8089  002FF2  FFFF               	dw	65535	; assembler added errata NOP
  8090                           
  8091                           ;tela_ESTACIONARIA.h: 9: sprintf(line1, "Configuracao tempo");
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;incstack = 0
  8095  002FF4  0E7B               	movlw	low _line1
  8096  002FF6  0100               	movlb	0	; () banked
  8097  002FF8  6FA1               	movwf	sprintf@wh& (0+255),b
  8098  002FFA  0E01               	movlw	high _line1
  8099  002FFC  0100               	movlb	0	; () banked
  8100  002FFE  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  8101  003000  0E3D               	movlw	low STR_92
  8102  003002  0100               	movlb	0	; () banked
  8103  003004  6FA3               	movwf	sprintf@f& (0+255),b
  8104  003006  0E7D               	movlw	high STR_92
  8105  003008  0100               	movlb	0	; () banked
  8106  00300A  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  8107  00300C  EC25  F036         	call	_sprintf	;wreg free
  8108                           
  8109                           ;tela_ESTACIONARIA.h: 10: sprintf(line2, "Max. PARTIDA:");
  8110  003010  0E66               	movlw	low _line2
  8111  003012  0100               	movlb	0	; () banked
  8112  003014  6FA1               	movwf	sprintf@wh& (0+255),b
  8113  003016  0E01               	movlw	high _line2
  8114  003018  0100               	movlb	0	; () banked
  8115  00301A  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  8116  00301C  0E9A               	movlw	low STR_93
  8117  00301E  0100               	movlb	0	; () banked
  8118  003020  6FA3               	movwf	sprintf@f& (0+255),b
  8119  003022  0E7E               	movlw	high STR_93
  8120  003024  0100               	movlb	0	; () banked
  8121  003026  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  8122  003028  EC25  F036         	call	_sprintf	;wreg free
  8123                           
  8124                           ;tela_ESTACIONARIA.h: 11: sprintf(&line2[16], "%3ds", tempo_limite_estacionaria);
  8125  00302C  0E76               	movlw	low (_line2+16)
  8126  00302E  0100               	movlb	0	; () banked
  8127  003030  6FA1               	movwf	sprintf@wh& (0+255),b
  8128  003032  0E01               	movlw	high (_line2+16)
  8129  003034  0100               	movlb	0	; () banked
  8130  003036  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  8131  003038  0EEC               	movlw	low STR_94
  8132  00303A  0100               	movlb	0	; () banked
  8133  00303C  6FA3               	movwf	sprintf@f& (0+255),b
  8134  00303E  0E7F               	movlw	high STR_94
  8135  003040  0100               	movlb	0	; () banked
  8136  003042  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  8137  003044  C0E6  F0A5         	movff	_tempo_limite_estacionaria,?_sprintf+4
  8138  003048  0100               	movlb	0	; () banked
  8139  00304A  6BA6               	clrf	(?_sprintf+5)& (0+255),b
  8140  00304C  EC25  F036         	call	_sprintf	;wreg free
  8141                           
  8142                           ;tela_ESTACIONARIA.h: 12: sprintf(line3, "Max. TESTE:");
  8143  003050  0E51               	movlw	low _line3
  8144  003052  0100               	movlb	0	; () banked
  8145  003054  6FA1               	movwf	sprintf@wh& (0+255),b
  8146  003056  0E01               	movlw	high _line3
  8147  003058  0100               	movlb	0	; () banked
  8148  00305A  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  8149  00305C  0EE9               	movlw	low STR_95
  8150  00305E  0100               	movlb	0	; () banked
  8151  003060  6FA3               	movwf	sprintf@f& (0+255),b
  8152  003062  0E7E               	movlw	high STR_95
  8153  003064  0100               	movlb	0	; () banked
  8154  003066  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  8155  003068  EC25  F036         	call	_sprintf	;wreg free
  8156                           
  8157                           ;tela_ESTACIONARIA.h: 13: sprintf(&line3[16], "%3ds", tempo_limite_teste_estacionaria);
  8158  00306C  0E61               	movlw	low (_line3+16)
  8159  00306E  0100               	movlb	0	; () banked
  8160  003070  6FA1               	movwf	sprintf@wh& (0+255),b
  8161  003072  0E01               	movlw	high (_line3+16)
  8162  003074  0100               	movlb	0	; () banked
  8163  003076  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  8164  003078  0EEC               	movlw	low STR_94
  8165  00307A  0100               	movlb	0	; () banked
  8166  00307C  6FA3               	movwf	sprintf@f& (0+255),b
  8167  00307E  0E7F               	movlw	high STR_94
  8168  003080  0100               	movlb	0	; () banked
  8169  003082  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  8170  003084  C0E5  F0A5         	movff	_tempo_limite_teste_estacionaria,?_sprintf+4
  8171  003088  0100               	movlb	0	; () banked
  8172  00308A  6BA6               	clrf	(?_sprintf+5)& (0+255),b
  8173  00308C  EC25  F036         	call	_sprintf	;wreg free
  8174                           
  8175                           ;tela_ESTACIONARIA.h: 14: sprintf(line4, "#horimetro:%5d min", horimetro);
  8176  003090  0E3C               	movlw	low _line4
  8177  003092  0100               	movlb	0	; () banked
  8178  003094  6FA1               	movwf	sprintf@wh& (0+255),b
  8179  003096  0E01               	movlw	high _line4
  8180  003098  0100               	movlb	0	; () banked
  8181  00309A  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  8182  00309C  0E17               	movlw	low STR_97
  8183  00309E  0100               	movlb	0	; () banked
  8184  0030A0  6FA3               	movwf	sprintf@f& (0+255),b
  8185  0030A2  0E7D               	movlw	high STR_97
  8186  0030A4  0100               	movlb	0	; () banked
  8187  0030A6  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  8188  0030A8  C04B  F0A5         	movff	_horimetro,?_sprintf+4
  8189  0030AC  C04C  F0A6         	movff	_horimetro+1,?_sprintf+5
  8190  0030B0  EC25  F036         	call	_sprintf	;wreg free
  8191                           
  8192                           ;tela_ESTACIONARIA.h: 16: if (btPress(4)) {
  8193  0030B4  0E04               	movlw	4
  8194  0030B6  EC82  F037         	call	_btPress
  8195  0030BA  0900               	iorlw	0
  8196  0030BC  B4D8               	btfsc	status,2,c
  8197  0030BE  D002               	goto	l9762
  8198                           
  8199                           ;tela_ESTACIONARIA.h: 17: option_posi++;
  8200  0030C0  0100               	movlb	0	; () banked
  8201  0030C2  2BE0               	incf	_option_posi& (0+255),f,b
  8202  0030C4                     l9762:
  8203  0030C4  FFFF               	dw	65535	; assembler added errata NOP
  8204                           
  8205                           ;tela_ESTACIONARIA.h: 18: }
  8206                           ;tela_ESTACIONARIA.h: 19: if (btPress(1)) {
  8207  0030C6  0E01               	movlw	1
  8208  0030C8  EC82  F037         	call	_btPress
  8209  0030CC  0900               	iorlw	0
  8210  0030CE  B4D8               	btfsc	status,2,c
  8211  0030D0  D057               	goto	l9794
  8212                           
  8213                           ;tela_ESTACIONARIA.h: 20: writeEEPROM_ext(7, tempo_limite_estacionaria);
  8214  0030D2  C0E6  F08C         	movff	_tempo_limite_estacionaria,writeEEPROM_ext@data
  8215  0030D6  0E07               	movlw	7
  8216  0030D8  ECCF  F034         	call	_writeEEPROM_ext
  8217                           
  8218                           ;tela_ESTACIONARIA.h: 21: writeEEPROM_ext(13, tempo_limite_teste_estacionaria);
  8219  0030DC  C0E5  F08C         	movff	_tempo_limite_teste_estacionaria,writeEEPROM_ext@data
  8220  0030E0  0E0D               	movlw	13
  8221  0030E2  ECCF  F034         	call	_writeEEPROM_ext
  8222                           
  8223                           ;tela_ESTACIONARIA.h: 22: option_posi = 0;
  8224  0030E6  0E00               	movlw	0
  8225  0030E8  0100               	movlb	0	; () banked
  8226  0030EA  6FE0               	movwf	_option_posi& (0+255),b
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;tela_ESTACIONARIA.h: 23: menu_posi = _menu_posi;
  8230  0030EC  C0DE  F0DF         	movff	__menu_posi,_menu_posi
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;tela_ESTACIONARIA.h: 24: }
  8234                           ;tela_ESTACIONARIA.h: 25: switch (option_posi) {
  8235  0030F0  D047               	goto	l9794
  8236  0030F2                     l9770:
  8237  0030F2  FFFF               	dw	65535	; assembler added errata NOP
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;tela_ESTACIONARIA.h: 27: blink(line2, 16,20 );
  8241  0030F4  0E66               	movlw	low _line2
  8242  0030F6  0100               	movlb	0	; () banked
  8243  0030F8  6F80               	movwf	blink@line& (0+255),b
  8244  0030FA  0E01               	movlw	high _line2
  8245  0030FC  0100               	movlb	0	; () banked
  8246  0030FE  6F81               	movwf	(blink@line+1)& (0+255),b
  8247  003100  0E10               	movlw	16
  8248  003102  0100               	movlb	0	; () banked
  8249  003104  6F82               	movwf	blink@start& (0+255),b
  8250  003106  0E14               	movlw	20
  8251  003108  0100               	movlb	0	; () banked
  8252  00310A  6F83               	movwf	blink@end& (0+255),b
  8253  00310C  EC87  F035         	call	_blink	;wreg free
  8254                           
  8255                           ;tela_ESTACIONARIA.h: 28: if (btPress(3)) {
  8256  003110  0E03               	movlw	3
  8257  003112  EC82  F037         	call	_btPress
  8258  003116  0900               	iorlw	0
  8259  003118  B4D8               	btfsc	status,2,c
  8260  00311A  D002               	goto	l9776
  8261                           
  8262                           ;tela_ESTACIONARIA.h: 29: tempo_limite_estacionaria++;
  8263  00311C  0100               	movlb	0	; () banked
  8264  00311E  2BE6               	incf	_tempo_limite_estacionaria& (0+255),f,b
  8265  003120                     l9776:
  8266  003120  FFFF               	dw	65535	; assembler added errata NOP
  8267                           
  8268                           ;tela_ESTACIONARIA.h: 30: }
  8269                           ;tela_ESTACIONARIA.h: 31: if (btPress(2)) {
  8270  003122  0E02               	movlw	2
  8271  003124  EC82  F037         	call	_btPress
  8272  003128  0900               	iorlw	0
  8273  00312A  B4D8               	btfsc	status,2,c
  8274  00312C  D033               	goto	l838
  8275                           
  8276                           ;tela_ESTACIONARIA.h: 32: tempo_limite_estacionaria--;
  8277  00312E  0100               	movlb	0	; () banked
  8278  003130  07E6               	decf	_tempo_limite_estacionaria& (0+255),f,b
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;tela_ESTACIONARIA.h: 33: }
  8282                           ;tela_ESTACIONARIA.h: 34: break;
  8283  003132  D030               	goto	l838
  8284  003134                     l9780:
  8285  003134  FFFF               	dw	65535	; assembler added errata NOP
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;tela_ESTACIONARIA.h: 36: blink(line3, 16,20 );
  8289  003136  0E51               	movlw	low _line3
  8290  003138  0100               	movlb	0	; () banked
  8291  00313A  6F80               	movwf	blink@line& (0+255),b
  8292  00313C  0E01               	movlw	high _line3
  8293  00313E  0100               	movlb	0	; () banked
  8294  003140  6F81               	movwf	(blink@line+1)& (0+255),b
  8295  003142  0E10               	movlw	16
  8296  003144  0100               	movlb	0	; () banked
  8297  003146  6F82               	movwf	blink@start& (0+255),b
  8298  003148  0E14               	movlw	20
  8299  00314A  0100               	movlb	0	; () banked
  8300  00314C  6F83               	movwf	blink@end& (0+255),b
  8301  00314E  EC87  F035         	call	_blink	;wreg free
  8302                           
  8303                           ;tela_ESTACIONARIA.h: 37: if (btPress(3)) {
  8304  003152  0E03               	movlw	3
  8305  003154  EC82  F037         	call	_btPress
  8306  003158  0900               	iorlw	0
  8307  00315A  B4D8               	btfsc	status,2,c
  8308  00315C  D002               	goto	l9786
  8309                           
  8310                           ;tela_ESTACIONARIA.h: 38: tempo_limite_teste_estacionaria++;
  8311  00315E  0100               	movlb	0	; () banked
  8312  003160  2BE5               	incf	_tempo_limite_teste_estacionaria& (0+255),f,b
  8313  003162                     l9786:
  8314  003162  FFFF               	dw	65535	; assembler added errata NOP
  8315                           
  8316                           ;tela_ESTACIONARIA.h: 39: }
  8317                           ;tela_ESTACIONARIA.h: 40: if (btPress(2)) {
  8318  003164  0E02               	movlw	2
  8319  003166  EC82  F037         	call	_btPress
  8320  00316A  0900               	iorlw	0
  8321  00316C  B4D8               	btfsc	status,2,c
  8322  00316E  D012               	goto	l838
  8323                           
  8324                           ;tela_ESTACIONARIA.h: 41: tempo_limite_teste_estacionaria--;
  8325  003170  0100               	movlb	0	; () banked
  8326  003172  07E5               	decf	_tempo_limite_teste_estacionaria& (0+255),f,b
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;tela_ESTACIONARIA.h: 42: }
  8330                           ;tela_ESTACIONARIA.h: 43: break;
  8331  003174  D00F               	goto	l838
  8332  003176                     l9790:
  8333  003176  FFFF               	dw	65535	; assembler added errata NOP
  8334                           
  8335                           ; BSR set to: 0
  8336  003178  0E00               	movlw	0
  8337  00317A  0100               	movlb	0	; () banked
  8338  00317C  6FE0               	movwf	_option_posi& (0+255),b
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;tela_ESTACIONARIA.h: 46: }
  8342                           
  8343                           ;tela_ESTACIONARIA.h: 45: break;
  8344  00317E  D00A               	goto	l838
  8345  003180                     l9794:
  8346  003180  FFFF               	dw	65535	; assembler added errata NOP
  8347  003182  0100               	movlb	0	; () banked
  8348  003184  51E0               	movf	_option_posi& (0+255),w,b
  8349                           
  8350                           ; Switch size 1, requested type "space"
  8351                           ; Number of cases is 2, Range of values is 0 to 1
  8352                           ; switch strategies available:
  8353                           ; Name         Instructions Cycles
  8354                           ; simple_byte            7     4 (average)
  8355                           ;	Chosen strategy is simple_byte
  8356  003186  0A00               	xorlw	0	; case 0
  8357  003188  B4D8               	btfsc	status,2,c
  8358  00318A  D7B3               	goto	l9770
  8359  00318C  0A01               	xorlw	1	; case 1
  8360  00318E  B4D8               	btfsc	status,2,c
  8361  003190  D7D1               	goto	l9780
  8362  003192  D7F1               	goto	l9790
  8363  003194                     l838:
  8364  003194  FFFF               	dw	65535	; assembler added errata NOP
  8365  003196  0012               	return		;funcret
  8366  003198  FFFF               	dw	65535	; errata NOP
  8367  00319A                     __end_of_configurarEstacionaria:
  8368                           	opt stack 0
  8369                           tblptru	equ	0xFF8
  8370                           tblptrh	equ	0xFF7
  8371                           tblptrl	equ	0xFF6
  8372                           tablat	equ	0xFF5
  8373                           prodh	equ	0xFF4
  8374                           prodl	equ	0xFF3
  8375                           postinc0	equ	0xFEE
  8376                           wreg	equ	0xFE8
  8377                           postdec1	equ	0xFE5
  8378                           fsr1l	equ	0xFE1
  8379                           indf2	equ	0xFDF
  8380                           postinc2	equ	0xFDE
  8381                           fsr2h	equ	0xFDA
  8382                           fsr2l	equ	0xFD9
  8383                           status	equ	0xFD8
  8384                           
  8385 ;; *************** function _configuraTelefones *****************
  8386 ;; Defined at:
  8387 ;;		line 9 in file "tela_TELEFONES.h"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;		None
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  i               1   67[BANK0 ] unsigned char 
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  1    wreg      void 
  8394 ;; Registers used:
  8395 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8401 ;;      Params:         0       0       0       0       0       0       0
  8402 ;;      Locals:         0       3       0       0       0       0       0
  8403 ;;      Temps:          0       2       0       0       0       0       0
  8404 ;;      Totals:         0       5       0       0       0       0       0
  8405 ;;Total ram usage:        5 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; Hardware stack levels required when called:   10
  8408 ;; This function calls:
  8409 ;;		_blink
  8410 ;;		_btPress
  8411 ;;		_comunicarTeste
  8412 ;;		_sprintf
  8413 ;;		_writeEEPROM_ext
  8414 ;; This function is called by:
  8415 ;;		_main
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text21
  8420  0013E6                     __ptext21:
  8421                           	opt stack 0
  8422  0013E6                     _configuraTelefones:
  8423                           	opt stack 0
  8424  0013E6  FFFF               	dw	65535	; assembler added errata NOP
  8425                           
  8426                           ;tela_TELEFONES.h: 10: sprintf(&line1[1], "T1: %s", tel1);
  8427                           
  8428                           ;incstack = 0
  8429  0013E8  0E7C               	movlw	low (_line1+1)
  8430  0013EA  0100               	movlb	0	; () banked
  8431  0013EC  6FA1               	movwf	sprintf@wh& (0+255),b
  8432  0013EE  0E01               	movlw	high (_line1+1)
  8433  0013F0  0100               	movlb	0	; () banked
  8434  0013F2  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  8435  0013F4  0EB7               	movlw	low STR_87
  8436  0013F6  0100               	movlb	0	; () banked
  8437  0013F8  6FA3               	movwf	sprintf@f& (0+255),b
  8438  0013FA  0E7F               	movlw	high STR_87
  8439  0013FC  0100               	movlb	0	; () banked
  8440  0013FE  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  8441  001400  0EB0               	movlw	low _tel1
  8442  001402  0100               	movlb	0	; () banked
  8443  001404  6FA5               	movwf	(?_sprintf+4)& (0+255),b
  8444  001406  0E01               	movlw	high _tel1
  8445  001408  0100               	movlb	0	; () banked
  8446  00140A  6FA6               	movwf	(?_sprintf+5)& (0+255),b
  8447  00140C  EC25  F036         	call	_sprintf	;wreg free
  8448                           
  8449                           ;tela_TELEFONES.h: 11: sprintf(&line2[1], "T2: %s", tel2);
  8450  001410  0E67               	movlw	low (_line2+1)
  8451  001412  0100               	movlb	0	; () banked
  8452  001414  6FA1               	movwf	sprintf@wh& (0+255),b
  8453  001416  0E01               	movlw	high (_line2+1)
  8454  001418  0100               	movlb	0	; () banked
  8455  00141A  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  8456  00141C  0EBE               	movlw	low STR_88
  8457  00141E  0100               	movlb	0	; () banked
  8458  001420  6FA3               	movwf	sprintf@f& (0+255),b
  8459  001422  0E7F               	movlw	high STR_88
  8460  001424  0100               	movlb	0	; () banked
  8461  001426  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  8462  001428  0EA4               	movlw	low _tel2
  8463  00142A  0100               	movlb	0	; () banked
  8464  00142C  6FA5               	movwf	(?_sprintf+4)& (0+255),b
  8465  00142E  0E01               	movlw	high _tel2
  8466  001430  0100               	movlb	0	; () banked
  8467  001432  6FA6               	movwf	(?_sprintf+5)& (0+255),b
  8468  001434  EC25  F036         	call	_sprintf	;wreg free
  8469                           
  8470                           ;tela_TELEFONES.h: 12: sprintf(&line3[1], "%s", gsmOcupado ? " aguarde... " : "Enviar sm
      +                          s teste");
  8471  001438  0100               	movlb	0	; () banked
  8472  00143A  51F4               	movf	_gsmOcupado& (0+255),w,b
  8473  00143C  A4D8               	btfss	status,2,c
  8474  00143E  D005               	goto	l9650
  8475                           
  8476                           ; BSR set to: 0
  8477  001440  0EE0               	movlw	low STR_91
  8478  001442  0100               	movlb	0	; () banked
  8479  001444  6FC1               	movwf	_configuraTelefones$1454& (0+255),b
  8480  001446  0E7D               	movlw	high STR_91
  8481  001448  D005               	goto	L16
  8482  00144A                     l9650:
  8483  00144A  FFFF               	dw	65535	; assembler added errata NOP
  8484                           
  8485                           ; BSR set to: 0
  8486  00144C  0EC4               	movlw	low STR_90
  8487  00144E  0100               	movlb	0	; () banked
  8488  001450  6FC1               	movwf	_configuraTelefones$1454& (0+255),b
  8489  001452  0E7E               	movlw	high STR_90
  8490  001454                     L16:
  8491  001454  FFFF               	dw	65535	; assembler added errata NOP
  8492  001456  0100               	movlb	0	; () banked
  8493  001458  6FC2               	movwf	(_configuraTelefones$1454+1)& (0+255),b
  8494                           
  8495                           ; BSR set to: 0
  8496                           
  8497                           ; BSR set to: 0
  8498  00145A  0E52               	movlw	low (_line3+1)
  8499  00145C  0100               	movlb	0	; () banked
  8500  00145E  6FA1               	movwf	sprintf@wh& (0+255),b
  8501  001460  0E01               	movlw	high (_line3+1)
  8502  001462  0100               	movlb	0	; () banked
  8503  001464  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
  8504  001466  0E0A               	movlw	low (STR_85+9)
  8505  001468  0100               	movlb	0	; () banked
  8506  00146A  6FA3               	movwf	sprintf@f& (0+255),b
  8507  00146C  0E7F               	movlw	high (STR_85+9)
  8508  00146E  0100               	movlb	0	; () banked
  8509  001470  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  8510  001472  C0C1  F0A5         	movff	_configuraTelefones$1454,?_sprintf+4
  8511  001476  C0C2  F0A6         	movff	_configuraTelefones$1454+1,?_sprintf+5
  8512  00147A  EC25  F036         	call	_sprintf	;wreg free
  8513                           
  8514                           ;tela_TELEFONES.h: 14: if (ajust_tel == 0) {
  8515  00147E  0100               	movlb	0	; () banked
  8516  001480  51DC               	movf	_ajust_tel& (0+255),w,b
  8517  001482  0100               	movlb	0	; () banked
  8518  001484  A4D8               	btfss	status,2,c
  8519  001486  D05B               	goto	l9678
  8520                           
  8521                           ; BSR set to: 0
  8522                           ;tela_TELEFONES.h: 15: if (btPress(3)) {
  8523  001488  0E03               	movlw	3
  8524  00148A  EC82  F037         	call	_btPress
  8525  00148E  0900               	iorlw	0
  8526  001490  B4D8               	btfsc	status,2,c
  8527  001492  D003               	goto	l9660
  8528                           
  8529                           ;tela_TELEFONES.h: 16: option_posi--;
  8530  001494  0100               	movlb	0	; () banked
  8531  001496  07E0               	decf	_option_posi& (0+255),f,b
  8532                           
  8533                           ;tela_TELEFONES.h: 17: } else if (btPress(2)) {
  8534  001498  D052               	goto	l9678
  8535  00149A                     l9660:
  8536  00149A  FFFF               	dw	65535	; assembler added errata NOP
  8537  00149C  0E02               	movlw	2
  8538  00149E  EC82  F037         	call	_btPress
  8539  0014A2  0900               	iorlw	0
  8540  0014A4  B4D8               	btfsc	status,2,c
  8541  0014A6  D003               	goto	l9664
  8542                           
  8543                           ;tela_TELEFONES.h: 18: option_posi++;
  8544  0014A8  0100               	movlb	0	; () banked
  8545  0014AA  2BE0               	incf	_option_posi& (0+255),f,b
  8546                           
  8547                           ;tela_TELEFONES.h: 19: } else if (btPress(1)) {
  8548  0014AC  D048               	goto	l9678
  8549  0014AE                     l9664:
  8550  0014AE  FFFF               	dw	65535	; assembler added errata NOP
  8551  0014B0  0E01               	movlw	1
  8552  0014B2  EC82  F037         	call	_btPress
  8553  0014B6  0900               	iorlw	0
  8554  0014B8  B4D8               	btfsc	status,2,c
  8555  0014BA  D041               	goto	l9678
  8556                           
  8557                           ;tela_TELEFONES.h: 20: gsmOcupado = 0;
  8558  0014BC  0E00               	movlw	0
  8559  0014BE  0100               	movlb	0	; () banked
  8560  0014C0  6FF4               	movwf	_gsmOcupado& (0+255),b
  8561                           
  8562                           ;tela_TELEFONES.h: 21: option_posi = 0;
  8563  0014C2  0E00               	movlw	0
  8564  0014C4  0100               	movlb	0	; () banked
  8565  0014C6  6FE0               	movwf	_option_posi& (0+255),b
  8566                           
  8567                           ;tela_TELEFONES.h: 22: tel_posi = 0;
  8568  0014C8  0E00               	movlw	0
  8569  0014CA  0100               	movlb	0	; () banked
  8570  0014CC  6FDD               	movwf	_tel_posi& (0+255),b
  8571                           
  8572                           ;tela_TELEFONES.h: 23: ajust_tel = 0;
  8573  0014CE  0E00               	movlw	0
  8574  0014D0  0100               	movlb	0	; () banked
  8575  0014D2  6FDC               	movwf	_ajust_tel& (0+255),b
  8576                           
  8577                           ;tela_TELEFONES.h: 24: char i = 0;
  8578  0014D4  0E00               	movlw	0
  8579  0014D6  0100               	movlb	0	; () banked
  8580  0014D8  6FC3               	movwf	configuraTelefones@i& (0+255),b
  8581                           
  8582                           ;tela_TELEFONES.h: 25: for (i = 0; i < 11; i++) {
  8583  0014DA  0E00               	movlw	0
  8584  0014DC  0100               	movlb	0	; () banked
  8585  0014DE  6FC3               	movwf	configuraTelefones@i& (0+255),b
  8586  0014E0                     l9668:
  8587  0014E0  FFFF               	dw	65535	; assembler added errata NOP
  8588                           
  8589                           ; BSR set to: 0
  8590  0014E2  0E0A               	movlw	10
  8591  0014E4  0100               	movlb	0	; () banked
  8592  0014E6  65C3               	cpfsgt	configuraTelefones@i& (0+255),b
  8593  0014E8  D001               	goto	l9672
  8594  0014EA  D026               	goto	l795
  8595  0014EC                     l9672:
  8596  0014EC  FFFF               	dw	65535	; assembler added errata NOP
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;tela_TELEFONES.h: 26: writeEEPROM_ext((20 + i), tel1[i]);
  8600  0014EE  0100               	movlb	0	; () banked
  8601  0014F0  51C3               	movf	configuraTelefones@i& (0+255),w,b
  8602  0014F2  0D01               	mullw	1
  8603  0014F4  0EB0               	movlw	low _tel1
  8604  0014F6  24F3               	addwf	prodl,w,c
  8605  0014F8  6ED9               	movwf	fsr2l,c
  8606  0014FA  0E01               	movlw	high _tel1
  8607  0014FC  20F4               	addwfc	prodh,w,c
  8608  0014FE  6EDA               	movwf	fsr2h,c
  8609  001500  50DF               	movf	indf2,w,c
  8610  001502  0100               	movlb	0	; () banked
  8611  001504  6F8C               	movwf	writeEEPROM_ext@data& (0+255),b
  8612  001506  0100               	movlb	0	; () banked
  8613  001508  51C3               	movf	configuraTelefones@i& (0+255),w,b
  8614  00150A  0F14               	addlw	20
  8615  00150C  ECCF  F034         	call	_writeEEPROM_ext
  8616                           
  8617                           ;tela_TELEFONES.h: 27: writeEEPROM_ext((40 + i), tel2[i]);
  8618  001510  0100               	movlb	0	; () banked
  8619  001512  51C3               	movf	configuraTelefones@i& (0+255),w,b
  8620  001514  0D01               	mullw	1
  8621  001516  0EA4               	movlw	low _tel2
  8622  001518  24F3               	addwf	prodl,w,c
  8623  00151A  6ED9               	movwf	fsr2l,c
  8624  00151C  0E01               	movlw	high _tel2
  8625  00151E  20F4               	addwfc	prodh,w,c
  8626  001520  6EDA               	movwf	fsr2h,c
  8627  001522  50DF               	movf	indf2,w,c
  8628  001524  0100               	movlb	0	; () banked
  8629  001526  6F8C               	movwf	writeEEPROM_ext@data& (0+255),b
  8630  001528  0100               	movlb	0	; () banked
  8631  00152A  51C3               	movf	configuraTelefones@i& (0+255),w,b
  8632  00152C  0F28               	addlw	40
  8633  00152E  ECCF  F034         	call	_writeEEPROM_ext
  8634  001532  0100               	movlb	0	; () banked
  8635  001534  2BC3               	incf	configuraTelefones@i& (0+255),f,b
  8636  001536  D7D4               	goto	l9668
  8637  001538                     l795:
  8638  001538  FFFF               	dw	65535	; assembler added errata NOP
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;tela_TELEFONES.h: 28: }
  8642                           ;tela_TELEFONES.h: 29: menu_posi = _menu_posi;
  8643  00153A  C0DE  F0DF         	movff	__menu_posi,_menu_posi
  8644  00153E                     l9678:
  8645  00153E  FFFF               	dw	65535	; assembler added errata NOP
  8646                           
  8647                           ;tela_TELEFONES.h: 30: }
  8648                           ;tela_TELEFONES.h: 31: }
  8649                           ;tela_TELEFONES.h: 32: if (ajust_tel == 1) {
  8650  001540  0100               	movlb	0	; () banked
  8651  001542  05DC               	decf	_ajust_tel& (0+255),w,b
  8652  001544  A4D8               	btfss	status,2,c
  8653  001546  D13D               	goto	l9750
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;tela_TELEFONES.h: 33: if (btPress(4)) {
  8657  001548  0E04               	movlw	4
  8658  00154A  EC82  F037         	call	_btPress
  8659  00154E  0900               	iorlw	0
  8660  001550  B4D8               	btfsc	status,2,c
  8661  001552  D003               	goto	l9684
  8662                           
  8663                           ;tela_TELEFONES.h: 34: tel_posi++;
  8664  001554  0100               	movlb	0	; () banked
  8665  001556  2BDD               	incf	_tel_posi& (0+255),f,b
  8666                           
  8667                           ;tela_TELEFONES.h: 35: } else if (btPress(1)) {
  8668  001558  D134               	goto	l9750
  8669  00155A                     l9684:
  8670  00155A  FFFF               	dw	65535	; assembler added errata NOP
  8671  00155C  0E01               	movlw	1
  8672  00155E  EC82  F037         	call	_btPress
  8673  001562  0900               	iorlw	0
  8674  001564  B4D8               	btfsc	status,2,c
  8675  001566  D12D               	goto	l9750
  8676                           
  8677                           ;tela_TELEFONES.h: 36: tel_posi = 0;
  8678  001568  0E00               	movlw	0
  8679  00156A  0100               	movlb	0	; () banked
  8680  00156C  6FDD               	movwf	_tel_posi& (0+255),b
  8681                           
  8682                           ;tela_TELEFONES.h: 37: ajust_tel = 0;
  8683  00156E  0E00               	movlw	0
  8684  001570  0100               	movlb	0	; () banked
  8685  001572  6FDC               	movwf	_ajust_tel& (0+255),b
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;tela_TELEFONES.h: 38: }
  8689                           ;tela_TELEFONES.h: 39: }
  8690                           ;tela_TELEFONES.h: 41: switch (option_posi) {
  8691                           
  8692                           ; BSR set to: 0
  8693                           
  8694                           ; BSR set to: 0
  8695  001574  D126               	goto	l9750
  8696  001576                     l9688:
  8697  001576  FFFF               	dw	65535	; assembler added errata NOP
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;tela_TELEFONES.h: 43: line1[0] = '>';
  8701  001578  0E3E               	movlw	62
  8702  00157A  0101               	movlb	1	; () banked
  8703  00157C  6F7B               	movwf	_line1& (0+255),b
  8704                           
  8705                           ; BSR set to: 1
  8706                           ;tela_TELEFONES.h: 44: if (btPress(4)) {
  8707  00157E  0E04               	movlw	4
  8708  001580  EC82  F037         	call	_btPress
  8709  001584  0900               	iorlw	0
  8710  001586  B4D8               	btfsc	status,2,c
  8711  001588  D003               	goto	l802
  8712                           
  8713                           ;tela_TELEFONES.h: 45: ajust_tel = 1;
  8714  00158A  0E01               	movlw	1
  8715  00158C  0100               	movlb	0	; () banked
  8716  00158E  6FDC               	movwf	_ajust_tel& (0+255),b
  8717  001590                     l802:
  8718  001590  FFFF               	dw	65535	; assembler added errata NOP
  8719                           
  8720                           ;tela_TELEFONES.h: 46: }
  8721                           ;tela_TELEFONES.h: 47: if (ajust_tel) {
  8722  001592  0100               	movlb	0	; () banked
  8723  001594  51DC               	movf	_ajust_tel& (0+255),w,b
  8724  001596  0100               	movlb	0	; () banked
  8725  001598  B4D8               	btfsc	status,2,c
  8726  00159A  D120               	goto	l9752
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;tela_TELEFONES.h: 48: blink(line1, (tel_posi + 6), (tel_posi + 6));
  8730  00159C  0E7B               	movlw	low _line1
  8731  00159E  0100               	movlb	0	; () banked
  8732  0015A0  6F80               	movwf	blink@line& (0+255),b
  8733  0015A2  0E01               	movlw	high _line1
  8734  0015A4  0100               	movlb	0	; () banked
  8735  0015A6  6F81               	movwf	(blink@line+1)& (0+255),b
  8736  0015A8  0100               	movlb	0	; () banked
  8737  0015AA  51DD               	movf	_tel_posi& (0+255),w,b
  8738  0015AC  0F06               	addlw	6
  8739  0015AE  0100               	movlb	0	; () banked
  8740  0015B0  6F82               	movwf	blink@start& (0+255),b
  8741  0015B2  0100               	movlb	0	; () banked
  8742  0015B4  51DD               	movf	_tel_posi& (0+255),w,b
  8743  0015B6  0F06               	addlw	6
  8744  0015B8  0100               	movlb	0	; () banked
  8745  0015BA  6F83               	movwf	blink@end& (0+255),b
  8746  0015BC  EC87  F035         	call	_blink	;wreg free
  8747                           
  8748                           ;tela_TELEFONES.h: 49: if ((tel_posi + 2) > sizeof (tel1)) {
  8749  0015C0  0100               	movlb	0	; () banked
  8750  0015C2  51DD               	movf	_tel_posi& (0+255),w,b
  8751  0015C4  0100               	movlb	0	; () banked
  8752  0015C6  6FBF               	movwf	??_configuraTelefones& (0+255),b
  8753  0015C8  6BC0               	clrf	(??_configuraTelefones+1)& (0+255),b
  8754  0015CA  0E02               	movlw	2
  8755  0015CC  0100               	movlb	0	; () banked
  8756  0015CE  27BF               	addwf	??_configuraTelefones& (0+255),f,b
  8757  0015D0  0E00               	movlw	0
  8758  0015D2  23C0               	addwfc	(??_configuraTelefones+1)& (0+255),f,b
  8759  0015D4  0100               	movlb	0	; () banked
  8760  0015D6  51C0               	movf	(??_configuraTelefones+1)& (0+255),w,b
  8761  0015D8  E105               	bnz	u11600
  8762  0015DA  0E0D               	movlw	13
  8763  0015DC  0100               	movlb	0	; () banked
  8764  0015DE  5DBF               	subwf	??_configuraTelefones& (0+255),w,b
  8765  0015E0  A0D8               	btfss	status,0,c
  8766  0015E2  D006               	goto	l9700
  8767  0015E4                     u11600:
  8768                           
  8769                           ; BSR set to: 0
  8770                           ;tela_TELEFONES.h: 50: tel_posi = 0;
  8771  0015E4  0E00               	movlw	0
  8772  0015E6  0100               	movlb	0	; () banked
  8773  0015E8  6FDD               	movwf	_tel_posi& (0+255),b
  8774                           
  8775                           ;tela_TELEFONES.h: 51: ajust_tel = 0;
  8776  0015EA  0E00               	movlw	0
  8777  0015EC  0100               	movlb	0	; () banked
  8778  0015EE  6FDC               	movwf	_ajust_tel& (0+255),b
  8779  0015F0                     l9700:
  8780  0015F0  FFFF               	dw	65535	; assembler added errata NOP
  8781                           
  8782                           ; BSR set to: 0
  8783                           ;tela_TELEFONES.h: 52: }
  8784                           ;tela_TELEFONES.h: 53: if (btPress(3)) {
  8785  0015F2  0E03               	movlw	3
  8786  0015F4  EC82  F037         	call	_btPress
  8787  0015F8  0900               	iorlw	0
  8788  0015FA  B4D8               	btfsc	status,2,c
  8789  0015FC  D00A               	goto	l9704
  8790                           
  8791                           ;tela_TELEFONES.h: 54: tel1[tel_posi]++;
  8792  0015FE  0100               	movlb	0	; () banked
  8793  001600  51DD               	movf	_tel_posi& (0+255),w,b
  8794  001602  0D01               	mullw	1
  8795  001604  0EB0               	movlw	low _tel1
  8796  001606  24F3               	addwf	prodl,w,c
  8797  001608  6ED9               	movwf	fsr2l,c
  8798  00160A  0E01               	movlw	high _tel1
  8799  00160C  20F4               	addwfc	prodh,w,c
  8800  00160E  6EDA               	movwf	fsr2h,c
  8801  001610  2ADF               	incf	indf2,f,c
  8802  001612                     l9704:
  8803  001612  FFFF               	dw	65535	; assembler added errata NOP
  8804                           
  8805                           ;tela_TELEFONES.h: 55: }
  8806                           ;tela_TELEFONES.h: 56: if (btPress(2)) {
  8807  001614  0E02               	movlw	2
  8808  001616  EC82  F037         	call	_btPress
  8809  00161A  0900               	iorlw	0
  8810  00161C  B4D8               	btfsc	status,2,c
  8811  00161E  D00A               	goto	l806
  8812                           
  8813                           ;tela_TELEFONES.h: 57: tel1[tel_posi]--;
  8814  001620  0100               	movlb	0	; () banked
  8815  001622  51DD               	movf	_tel_posi& (0+255),w,b
  8816  001624  0D01               	mullw	1
  8817  001626  0EB0               	movlw	low _tel1
  8818  001628  24F3               	addwf	prodl,w,c
  8819  00162A  6ED9               	movwf	fsr2l,c
  8820  00162C  0E01               	movlw	high _tel1
  8821  00162E  20F4               	addwfc	prodh,w,c
  8822  001630  6EDA               	movwf	fsr2h,c
  8823  001632  06DF               	decf	indf2,f,c
  8824  001634                     l806:
  8825  001634  FFFF               	dw	65535	; assembler added errata NOP
  8826                           
  8827                           ;tela_TELEFONES.h: 58: }
  8828                           ;tela_TELEFONES.h: 59: if ((tel1[tel_posi] > 57) | (tel1[tel_posi] < 48)) {
  8829  001636  0100               	movlb	0	; () banked
  8830  001638  51DD               	movf	_tel_posi& (0+255),w,b
  8831  00163A  0D01               	mullw	1
  8832  00163C  0EB0               	movlw	low _tel1
  8833  00163E  24F3               	addwf	prodl,w,c
  8834  001640  6ED9               	movwf	fsr2l,c
  8835  001642  0E01               	movlw	high _tel1
  8836  001644  20F4               	addwfc	prodh,w,c
  8837  001646  6EDA               	movwf	fsr2h,c
  8838  001648  0E3A               	movlw	58
  8839  00164A  60DF               	cpfslt	indf2,c
  8840  00164C  D00C               	goto	l9710
  8841                           
  8842                           ; BSR set to: 0
  8843  00164E  0100               	movlb	0	; () banked
  8844  001650  51DD               	movf	_tel_posi& (0+255),w,b
  8845  001652  0D01               	mullw	1
  8846  001654  0EB0               	movlw	low _tel1
  8847  001656  24F3               	addwf	prodl,w,c
  8848  001658  6ED9               	movwf	fsr2l,c
  8849  00165A  0E01               	movlw	high _tel1
  8850  00165C  20F4               	addwfc	prodh,w,c
  8851  00165E  6EDA               	movwf	fsr2h,c
  8852  001660  0E30               	movlw	48
  8853  001662  60DF               	cpfslt	indf2,c
  8854  001664  D0BB               	goto	l9752
  8855  001666                     l9710:
  8856  001666  FFFF               	dw	65535	; assembler added errata NOP
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;tela_TELEFONES.h: 60: tel1[tel_posi] = 48;
  8860  001668  0100               	movlb	0	; () banked
  8861  00166A  51DD               	movf	_tel_posi& (0+255),w,b
  8862  00166C  0D01               	mullw	1
  8863  00166E  0EB0               	movlw	low _tel1
  8864  001670  24F3               	addwf	prodl,w,c
  8865  001672  6ED9               	movwf	fsr2l,c
  8866  001674  0E01               	movlw	high _tel1
  8867  001676  D080               	goto	L17
  8868  001678                     l9712:
  8869  001678  FFFF               	dw	65535	; assembler added errata NOP
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;tela_TELEFONES.h: 65: line2[0] = '>';
  8873  00167A  0E3E               	movlw	62
  8874  00167C  0101               	movlb	1	; () banked
  8875  00167E  6F66               	movwf	_line2& (0+255),b
  8876                           
  8877                           ; BSR set to: 1
  8878                           ;tela_TELEFONES.h: 66: if (btPress(4)) {
  8879  001680  0E04               	movlw	4
  8880  001682  EC82  F037         	call	_btPress
  8881  001686  0900               	iorlw	0
  8882  001688  B4D8               	btfsc	status,2,c
  8883  00168A  D003               	goto	l812
  8884                           
  8885                           ;tela_TELEFONES.h: 67: ajust_tel = 1;
  8886  00168C  0E01               	movlw	1
  8887  00168E  0100               	movlb	0	; () banked
  8888  001690  6FDC               	movwf	_ajust_tel& (0+255),b
  8889  001692                     l812:
  8890  001692  FFFF               	dw	65535	; assembler added errata NOP
  8891                           
  8892                           ;tela_TELEFONES.h: 68: }
  8893                           ;tela_TELEFONES.h: 69: if (ajust_tel) {
  8894  001694  0100               	movlb	0	; () banked
  8895  001696  51DC               	movf	_ajust_tel& (0+255),w,b
  8896  001698  0100               	movlb	0	; () banked
  8897  00169A  B4D8               	btfsc	status,2,c
  8898  00169C  D09F               	goto	l9752
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;tela_TELEFONES.h: 70: blink(line2, (tel_posi + 6), (tel_posi + 6));
  8902  00169E  0E66               	movlw	low _line2
  8903  0016A0  0100               	movlb	0	; () banked
  8904  0016A2  6F80               	movwf	blink@line& (0+255),b
  8905  0016A4  0E01               	movlw	high _line2
  8906  0016A6  0100               	movlb	0	; () banked
  8907  0016A8  6F81               	movwf	(blink@line+1)& (0+255),b
  8908  0016AA  0100               	movlb	0	; () banked
  8909  0016AC  51DD               	movf	_tel_posi& (0+255),w,b
  8910  0016AE  0F06               	addlw	6
  8911  0016B0  0100               	movlb	0	; () banked
  8912  0016B2  6F82               	movwf	blink@start& (0+255),b
  8913  0016B4  0100               	movlb	0	; () banked
  8914  0016B6  51DD               	movf	_tel_posi& (0+255),w,b
  8915  0016B8  0F06               	addlw	6
  8916  0016BA  0100               	movlb	0	; () banked
  8917  0016BC  6F83               	movwf	blink@end& (0+255),b
  8918  0016BE  EC87  F035         	call	_blink	;wreg free
  8919                           
  8920                           ;tela_TELEFONES.h: 71: if ((tel_posi + 2) > sizeof (tel2)) {
  8921  0016C2  0100               	movlb	0	; () banked
  8922  0016C4  51DD               	movf	_tel_posi& (0+255),w,b
  8923  0016C6  0100               	movlb	0	; () banked
  8924  0016C8  6FBF               	movwf	??_configuraTelefones& (0+255),b
  8925  0016CA  6BC0               	clrf	(??_configuraTelefones+1)& (0+255),b
  8926  0016CC  0E02               	movlw	2
  8927  0016CE  0100               	movlb	0	; () banked
  8928  0016D0  27BF               	addwf	??_configuraTelefones& (0+255),f,b
  8929  0016D2  0E00               	movlw	0
  8930  0016D4  23C0               	addwfc	(??_configuraTelefones+1)& (0+255),f,b
  8931  0016D6  0100               	movlb	0	; () banked
  8932  0016D8  51C0               	movf	(??_configuraTelefones+1)& (0+255),w,b
  8933  0016DA  E105               	bnz	u11670
  8934  0016DC  0E0D               	movlw	13
  8935  0016DE  0100               	movlb	0	; () banked
  8936  0016E0  5DBF               	subwf	??_configuraTelefones& (0+255),w,b
  8937  0016E2  A0D8               	btfss	status,0,c
  8938  0016E4  D006               	goto	l9724
  8939  0016E6                     u11670:
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;tela_TELEFONES.h: 72: tel_posi = 0;
  8943  0016E6  0E00               	movlw	0
  8944  0016E8  0100               	movlb	0	; () banked
  8945  0016EA  6FDD               	movwf	_tel_posi& (0+255),b
  8946                           
  8947                           ;tela_TELEFONES.h: 73: ajust_tel = 0;
  8948  0016EC  0E00               	movlw	0
  8949  0016EE  0100               	movlb	0	; () banked
  8950  0016F0  6FDC               	movwf	_ajust_tel& (0+255),b
  8951  0016F2                     l9724:
  8952  0016F2  FFFF               	dw	65535	; assembler added errata NOP
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;tela_TELEFONES.h: 74: }
  8956                           ;tela_TELEFONES.h: 75: if (btPress(3)) {
  8957  0016F4  0E03               	movlw	3
  8958  0016F6  EC82  F037         	call	_btPress
  8959  0016FA  0900               	iorlw	0
  8960  0016FC  B4D8               	btfsc	status,2,c
  8961  0016FE  D00A               	goto	l9728
  8962                           
  8963                           ;tela_TELEFONES.h: 76: tel2[tel_posi]++;
  8964  001700  0100               	movlb	0	; () banked
  8965  001702  51DD               	movf	_tel_posi& (0+255),w,b
  8966  001704  0D01               	mullw	1
  8967  001706  0EA4               	movlw	low _tel2
  8968  001708  24F3               	addwf	prodl,w,c
  8969  00170A  6ED9               	movwf	fsr2l,c
  8970  00170C  0E01               	movlw	high _tel2
  8971  00170E  20F4               	addwfc	prodh,w,c
  8972  001710  6EDA               	movwf	fsr2h,c
  8973  001712  2ADF               	incf	indf2,f,c
  8974  001714                     l9728:
  8975  001714  FFFF               	dw	65535	; assembler added errata NOP
  8976                           
  8977                           ;tela_TELEFONES.h: 77: }
  8978                           ;tela_TELEFONES.h: 78: if (btPress(2)) {
  8979  001716  0E02               	movlw	2
  8980  001718  EC82  F037         	call	_btPress
  8981  00171C  0900               	iorlw	0
  8982  00171E  B4D8               	btfsc	status,2,c
  8983  001720  D00A               	goto	l816
  8984                           
  8985                           ;tela_TELEFONES.h: 79: tel2[tel_posi]--;
  8986  001722  0100               	movlb	0	; () banked
  8987  001724  51DD               	movf	_tel_posi& (0+255),w,b
  8988  001726  0D01               	mullw	1
  8989  001728  0EA4               	movlw	low _tel2
  8990  00172A  24F3               	addwf	prodl,w,c
  8991  00172C  6ED9               	movwf	fsr2l,c
  8992  00172E  0E01               	movlw	high _tel2
  8993  001730  20F4               	addwfc	prodh,w,c
  8994  001732  6EDA               	movwf	fsr2h,c
  8995  001734  06DF               	decf	indf2,f,c
  8996  001736                     l816:
  8997  001736  FFFF               	dw	65535	; assembler added errata NOP
  8998                           
  8999                           ;tela_TELEFONES.h: 80: }
  9000                           ;tela_TELEFONES.h: 81: if ((tel2[tel_posi] > 57) | (tel2[tel_posi] < 48)) {
  9001  001738  0100               	movlb	0	; () banked
  9002  00173A  51DD               	movf	_tel_posi& (0+255),w,b
  9003  00173C  0D01               	mullw	1
  9004  00173E  0EA4               	movlw	low _tel2
  9005  001740  24F3               	addwf	prodl,w,c
  9006  001742  6ED9               	movwf	fsr2l,c
  9007  001744  0E01               	movlw	high _tel2
  9008  001746  20F4               	addwfc	prodh,w,c
  9009  001748  6EDA               	movwf	fsr2h,c
  9010  00174A  0E3A               	movlw	58
  9011  00174C  60DF               	cpfslt	indf2,c
  9012  00174E  D00C               	goto	l9734
  9013                           
  9014                           ; BSR set to: 0
  9015  001750  0100               	movlb	0	; () banked
  9016  001752  51DD               	movf	_tel_posi& (0+255),w,b
  9017  001754  0D01               	mullw	1
  9018  001756  0EA4               	movlw	low _tel2
  9019  001758  24F3               	addwf	prodl,w,c
  9020  00175A  6ED9               	movwf	fsr2l,c
  9021  00175C  0E01               	movlw	high _tel2
  9022  00175E  20F4               	addwfc	prodh,w,c
  9023  001760  6EDA               	movwf	fsr2h,c
  9024  001762  0E30               	movlw	48
  9025  001764  60DF               	cpfslt	indf2,c
  9026  001766  D03A               	goto	l9752
  9027  001768                     l9734:
  9028  001768  FFFF               	dw	65535	; assembler added errata NOP
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;tela_TELEFONES.h: 82: tel2[tel_posi] = 48;
  9032  00176A  0100               	movlb	0	; () banked
  9033  00176C  51DD               	movf	_tel_posi& (0+255),w,b
  9034  00176E  0D01               	mullw	1
  9035  001770  0EA4               	movlw	low _tel2
  9036  001772  24F3               	addwf	prodl,w,c
  9037  001774  6ED9               	movwf	fsr2l,c
  9038  001776  0E01               	movlw	high _tel2
  9039  001778                     L17:
  9040  001778  FFFF               	dw	65535	; assembler added errata NOP
  9041  00177A  20F4               	addwfc	prodh,w,c
  9042  00177C  6EDA               	movwf	fsr2h,c
  9043  00177E  0E30               	movlw	48
  9044  001780  6EDF               	movwf	indf2,c
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;tela_TELEFONES.h: 83: }
  9048                           ;tela_TELEFONES.h: 84: }
  9049                           ;tela_TELEFONES.h: 85: break;
  9050                           
  9051                           ; BSR set to: 0
  9052  001782  D02C               	goto	l9752
  9053  001784                     l9736:
  9054  001784  FFFF               	dw	65535	; assembler added errata NOP
  9055                           
  9056                           ; BSR set to: 0
  9057                           ;tela_TELEFONES.h: 87: line3[0] = '>';
  9058  001786  0E3E               	movlw	62
  9059  001788  0101               	movlb	1	; () banked
  9060  00178A  6F51               	movwf	_line3& (0+255),b
  9061                           
  9062                           ; BSR set to: 1
  9063                           ;tela_TELEFONES.h: 88: if (btPress(4) && intensidadeSinal != 'x' && !gsmOcupado) {
  9064  00178C  0E04               	movlw	4
  9065  00178E  EC82  F037         	call	_btPress
  9066  001792  0900               	iorlw	0
  9067  001794  B4D8               	btfsc	status,2,c
  9068  001796  D022               	goto	l9752
  9069  001798  0E78               	movlw	120
  9070  00179A  0100               	movlb	0	; () banked
  9071  00179C  19FF               	xorwf	_intensidadeSinal& (0+255),w,b
  9072  00179E  B4D8               	btfsc	status,2,c
  9073  0017A0  D01D               	goto	l9752
  9074                           
  9075                           ; BSR set to: 0
  9076  0017A2  0100               	movlb	0	; () banked
  9077  0017A4  51F4               	movf	_gsmOcupado& (0+255),w,b
  9078  0017A6  A4D8               	btfss	status,2,c
  9079  0017A8  D019               	goto	l9752
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;tela_TELEFONES.h: 89: gsmOcupado = 1;
  9083  0017AA  0E01               	movlw	1
  9084  0017AC  0100               	movlb	0	; () banked
  9085  0017AE  6FF4               	movwf	_gsmOcupado& (0+255),b
  9086                           
  9087                           ;tela_TELEFONES.h: 90: telefoneSelecionado = 0;
  9088  0017B0  0E00               	movlw	0
  9089  0017B2  0100               	movlb	0	; () banked
  9090  0017B4  6FF7               	movwf	_telefoneSelecionado& (0+255),b
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;tela_TELEFONES.h: 91: }
  9094                           ;tela_TELEFONES.h: 92: break;
  9095  0017B6  D012               	goto	l9752
  9096  0017B8                     l9746:
  9097  0017B8  FFFF               	dw	65535	; assembler added errata NOP
  9098                           
  9099                           ; BSR set to: 0
  9100  0017BA  0E00               	movlw	0
  9101  0017BC  0100               	movlb	0	; () banked
  9102  0017BE  6FE0               	movwf	_option_posi& (0+255),b
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;tela_TELEFONES.h: 96: }
  9106                           
  9107                           ;tela_TELEFONES.h: 95: break;
  9108  0017C0  D00D               	goto	l9752
  9109  0017C2                     l9750:
  9110  0017C2  FFFF               	dw	65535	; assembler added errata NOP
  9111  0017C4  0100               	movlb	0	; () banked
  9112  0017C6  51E0               	movf	_option_posi& (0+255),w,b
  9113                           
  9114                           ; Switch size 1, requested type "space"
  9115                           ; Number of cases is 3, Range of values is 0 to 2
  9116                           ; switch strategies available:
  9117                           ; Name         Instructions Cycles
  9118                           ; simple_byte           10     6 (average)
  9119                           ;	Chosen strategy is simple_byte
  9120  0017C8  0A00               	xorlw	0	; case 0
  9121  0017CA  B4D8               	btfsc	status,2,c
  9122  0017CC  D6D4               	goto	l9688
  9123  0017CE  0A01               	xorlw	1	; case 1
  9124  0017D0  B4D8               	btfsc	status,2,c
  9125  0017D2  D752               	goto	l9712
  9126  0017D4  0A03               	xorlw	3	; case 2
  9127  0017D6  B4D8               	btfsc	status,2,c
  9128  0017D8  D7D5               	goto	l9736
  9129  0017DA  D7EE               	goto	l9746
  9130  0017DC                     l9752:
  9131  0017DC  FFFF               	dw	65535	; assembler added errata NOP
  9132                           
  9133                           ;tela_TELEFONES.h: 97: if (gsmOcupado) {
  9134  0017DE  0100               	movlb	0	; () banked
  9135  0017E0  51F4               	movf	_gsmOcupado& (0+255),w,b
  9136  0017E2  A4D8               	btfss	status,2,c
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;tela_TELEFONES.h: 98: comunicarTeste();
  9140  0017E4  ECD4  F011         	call	_comunicarTeste	;wreg free
  9141  0017E8  0012               	return		;funcret
  9142  0017EA  FFFF               	dw	65535	; errata NOP
  9143  0017EC                     __end_of_configuraTelefones:
  9144                           	opt stack 0
  9145                           tblptru	equ	0xFF8
  9146                           tblptrh	equ	0xFF7
  9147                           tblptrl	equ	0xFF6
  9148                           tablat	equ	0xFF5
  9149                           prodh	equ	0xFF4
  9150                           prodl	equ	0xFF3
  9151                           postinc0	equ	0xFEE
  9152                           wreg	equ	0xFE8
  9153                           postdec1	equ	0xFE5
  9154                           fsr1l	equ	0xFE1
  9155                           indf2	equ	0xFDF
  9156                           postinc2	equ	0xFDE
  9157                           fsr2h	equ	0xFDA
  9158                           fsr2l	equ	0xFD9
  9159                           status	equ	0xFD8
  9160                           
  9161 ;; *************** function _comunicarTeste *****************
  9162 ;; Defined at:
  9163 ;;		line 57 in file "comunicacao.h"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;		None
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      void 
  9170 ;; Registers used:
  9171 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9177 ;;      Params:         0       0       0       0       0       0       0
  9178 ;;      Locals:         0       2       0       0       0       0       0
  9179 ;;      Temps:          0       2       0       0       0       0       0
  9180 ;;      Totals:         0       4       0       0       0       0       0
  9181 ;;Total ram usage:        4 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:    9
  9184 ;; This function calls:
  9185 ;;		_aguardaBuffer
  9186 ;;		_delay
  9187 ;;		_limparBuffer
  9188 ;;		_printf
  9189 ;;		_writeChar
  9190 ;; This function is called by:
  9191 ;;		_configuraTelefones
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           	psect	text22
  9196  0023A8                     __ptext22:
  9197                           	opt stack 0
  9198  0023A8                     _comunicarTeste:
  9199                           	opt stack 0
  9200  0023A8  FFFF               	dw	65535	; assembler added errata NOP
  9201                           
  9202                           ;comunicacao.h: 58: switch (etapaComunicacao) {
  9203                           
  9204                           ;incstack = 0
  9205  0023AA  D102               	goto	l8454
  9206  0023AC                     l8374:
  9207  0023AC  FFFF               	dw	65535	; assembler added errata NOP
  9208                           
  9209                           ;comunicacao.h: 60: limparBuffer();
  9210  0023AE  ECD0  F033         	call	_limparBuffer	;wreg free
  9211                           
  9212                           ;comunicacao.h: 61: printf("AT\r\n");
  9213  0023B2  0EDD               	movlw	low STR_4
  9214  0023B4  0100               	movlb	0	; () banked
  9215  0023B6  6FA1               	movwf	printf@f& (0+255),b
  9216  0023B8  0E7F               	movlw	high STR_4
  9217  0023BA  0100               	movlb	0	; () banked
  9218  0023BC  6FA2               	movwf	(printf@f+1)& (0+255),b
  9219  0023BE  EC60  F035         	call	_printf	;wreg free
  9220                           
  9221                           ;comunicacao.h: 62: etapaComunicacao++;
  9222  0023C2  4A4D               	infsnz	_etapaComunicacao,f,c
  9223  0023C4  2A4E               	incf	_etapaComunicacao+1,f,c
  9224                           
  9225                           ;comunicacao.h: 63: timerEtapaComunicacao = 5;
  9226  0023C6  0E05               	movlw	5
  9227  0023C8  D0AD               	goto	L18
  9228  0023CA                     l8382:
  9229  0023CA  FFFF               	dw	65535	; assembler added errata NOP
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;comunicacao.h: 66: if (aguardaBuffer("OK")) {
  9233  0023CC  0EF9               	movlw	low STR_5
  9234  0023CE  0100               	movlb	0	; () banked
  9235  0023D0  6F93               	movwf	aguardaBuffer@str& (0+255),b
  9236  0023D2  0E7F               	movlw	high STR_5
  9237  0023D4  0100               	movlb	0	; () banked
  9238  0023D6  6F94               	movwf	(aguardaBuffer@str+1)& (0+255),b
  9239  0023D8  EC6A  F034         	call	_aguardaBuffer	;wreg free
  9240  0023DC  0900               	iorlw	0
  9241  0023DE  B4D8               	btfsc	status,2,c
  9242  0023E0  D00F               	goto	l8392
  9243                           
  9244                           ;comunicacao.h: 67: limparBuffer();
  9245  0023E2  ECD0  F033         	call	_limparBuffer	;wreg free
  9246                           
  9247                           ;comunicacao.h: 68: printf("AT+CMGF=1\r\n");
  9248  0023E6  0ED1               	movlw	low STR_10
  9249  0023E8  0100               	movlb	0	; () banked
  9250  0023EA  6FA1               	movwf	printf@f& (0+255),b
  9251  0023EC  0E7E               	movlw	high STR_10
  9252  0023EE  0100               	movlb	0	; () banked
  9253  0023F0  6FA2               	movwf	(printf@f+1)& (0+255),b
  9254  0023F2  EC60  F035         	call	_printf	;wreg free
  9255                           
  9256                           ;comunicacao.h: 69: etapaComunicacao++;
  9257  0023F6  4A4D               	infsnz	_etapaComunicacao,f,c
  9258  0023F8  2A4E               	incf	_etapaComunicacao+1,f,c
  9259                           
  9260                           ;comunicacao.h: 70: timerEtapaComunicacao = 2;
  9261  0023FA  0E02               	movlw	2
  9262  0023FC  0100               	movlb	0	; () banked
  9263  0023FE  6FF5               	movwf	_timerEtapaComunicacao& (0+255),b
  9264  002400                     l8392:
  9265  002400  FFFF               	dw	65535	; assembler added errata NOP
  9266                           
  9267                           ;comunicacao.h: 71: }
  9268                           ;comunicacao.h: 72: if (!timerEtapaComunicacao) {
  9269  002402  0100               	movlb	0	; () banked
  9270  002404  51F5               	movf	_timerEtapaComunicacao& (0+255),w,b
  9271  002406  A4D8               	btfss	status,2,c
  9272  002408  D0EF               	goto	l339
  9273                           
  9274                           ; BSR set to: 0
  9275                           ;comunicacao.h: 73: etapaComunicacao = 0;
  9276  00240A  0E00               	movlw	0
  9277  00240C  6E4E               	movwf	_etapaComunicacao+1,c
  9278  00240E  0E00               	movlw	0
  9279  002410  6E4D               	movwf	_etapaComunicacao,c
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;comunicacao.h: 74: writeChar(0x1A);
  9283  002412  0E1A               	movlw	26
  9284  002414  0100               	movlb	0	; () banked
  9285  002416  6F80               	movwf	writeChar@hex& (0+255),b
  9286  002418  0E00               	movlw	0
  9287  00241A  0100               	movlb	0	; () banked
  9288  00241C  6F81               	movwf	(writeChar@hex+1)& (0+255),b
  9289  00241E  EC3C  F032         	call	_writeChar	;wreg free
  9290                           
  9291                           ;comunicacao.h: 75: }
  9292                           ;comunicacao.h: 76: break;
  9293  002422  D0E2               	goto	l339
  9294  002424                     l8398:
  9295  002424  FFFF               	dw	65535	; assembler added errata NOP
  9296                           
  9297                           ;comunicacao.h: 78: if (!timerEtapaComunicacao) {
  9298  002426  0100               	movlb	0	; () banked
  9299  002428  51F5               	movf	_timerEtapaComunicacao& (0+255),w,b
  9300  00242A  A4D8               	btfss	status,2,c
  9301  00242C  D0DD               	goto	l339
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;comunicacao.h: 79: limparBuffer();
  9305  00242E  ECD0  F033         	call	_limparBuffer	;wreg free
  9306                           
  9307                           ;comunicacao.h: 80: printf("AT+CMGS=\"+55%s\"\r\n", telefoneSelecionado == 0 ? tel1 : te
      +                          l2);
  9308  002432  0100               	movlb	0	; () banked
  9309  002434  51F7               	movf	_telefoneSelecionado& (0+255),w,b
  9310  002436  B4D8               	btfsc	status,2,c
  9311  002438  D005               	goto	l8406
  9312                           
  9313                           ; BSR set to: 0
  9314  00243A  0EA4               	movlw	low _tel2
  9315  00243C  0100               	movlb	0	; () banked
  9316  00243E  6FBD               	movwf	_comunicarTeste$1187& (0+255),b
  9317  002440  0E01               	movlw	high _tel2
  9318  002442  D005               	goto	L19
  9319  002444                     l8406:
  9320  002444  FFFF               	dw	65535	; assembler added errata NOP
  9321                           
  9322                           ; BSR set to: 0
  9323  002446  0EB0               	movlw	low _tel1
  9324  002448  0100               	movlb	0	; () banked
  9325  00244A  6FBD               	movwf	_comunicarTeste$1187& (0+255),b
  9326  00244C  0E01               	movlw	high _tel1
  9327  00244E                     L19:
  9328  00244E  FFFF               	dw	65535	; assembler added errata NOP
  9329  002450  0100               	movlb	0	; () banked
  9330  002452  6FBE               	movwf	(_comunicarTeste$1187+1)& (0+255),b
  9331                           
  9332                           ; BSR set to: 0
  9333                           
  9334                           ; BSR set to: 0
  9335  002454  0E76               	movlw	low STR_11
  9336  002456  0100               	movlb	0	; () banked
  9337  002458  6FA1               	movwf	printf@f& (0+255),b
  9338  00245A  0E7D               	movlw	high STR_11
  9339  00245C  0100               	movlb	0	; () banked
  9340  00245E  6FA2               	movwf	(printf@f+1)& (0+255),b
  9341  002460  C0BD  F0A3         	movff	_comunicarTeste$1187,?_printf+2
  9342  002464  C0BE  F0A4         	movff	_comunicarTeste$1187+1,?_printf+3
  9343  002468  EC60  F035         	call	_printf	;wreg free
  9344                           
  9345                           ;comunicacao.h: 81: timerEtapaComunicacao = 2;
  9346  00246C  0E02               	movlw	2
  9347  00246E  0100               	movlb	0	; () banked
  9348  002470  6FF5               	movwf	_timerEtapaComunicacao& (0+255),b
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;comunicacao.h: 82: etapaComunicacao++;
  9352  002472  4A4D               	infsnz	_etapaComunicacao,f,c
  9353  002474  2A4E               	incf	_etapaComunicacao+1,f,c
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;comunicacao.h: 83: }
  9357                           ;comunicacao.h: 84: break;
  9358  002476  D0B8               	goto	l339
  9359  002478                     l8414:
  9360  002478  FFFF               	dw	65535	; assembler added errata NOP
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;comunicacao.h: 86: if (!timerEtapaComunicacao) {
  9364  00247A  0100               	movlb	0	; () banked
  9365  00247C  51F5               	movf	_timerEtapaComunicacao& (0+255),w,b
  9366  00247E  A4D8               	btfss	status,2,c
  9367  002480  D0B3               	goto	l339
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;comunicacao.h: 87: limparBuffer();
  9371  002482  ECD0  F033         	call	_limparBuffer	;wreg free
  9372                           
  9373                           ;comunicacao.h: 88: printf("TECHNOW Sistemas embarcados\r\n\r\nTeste manual de comunicac
      +                          ao.\r\nData: %02d/%02d/%02d %02d:%02d:%02d\r\n\r\nVersao do sistema: %s\r",
  9374                           ;comunicacao.h: 89: _dia, _mes, _ano, _hor, _min, _sec, "Aug 31 2019");
  9375  002486  0E31               	movlw	low STR_12
  9376  002488  0100               	movlb	0	; () banked
  9377  00248A  6FA1               	movwf	printf@f& (0+255),b
  9378  00248C  0E7B               	movlw	high STR_12
  9379  00248E  0100               	movlb	0	; () banked
  9380  002490  6FA2               	movwf	(printf@f+1)& (0+255),b
  9381  002492  C0EC  F0A3         	movff	__dia,?_printf+2
  9382  002496  0100               	movlb	0	; () banked
  9383  002498  6BA4               	clrf	(?_printf+3)& (0+255),b
  9384  00249A  C0EB  F0A5         	movff	__mes,?_printf+4
  9385  00249E  0100               	movlb	0	; () banked
  9386  0024A0  6BA6               	clrf	(?_printf+5)& (0+255),b
  9387  0024A2  C0EA  F0A7         	movff	__ano,?_printf+6
  9388  0024A6  0100               	movlb	0	; () banked
  9389  0024A8  6BA8               	clrf	(?_printf+7)& (0+255),b
  9390  0024AA  C0ED  F0A9         	movff	__hor,?_printf+8
  9391  0024AE  0100               	movlb	0	; () banked
  9392  0024B0  6BAA               	clrf	(?_printf+9)& (0+255),b
  9393  0024B2  C0EE  F0AB         	movff	__min,?_printf+10
  9394  0024B6  0100               	movlb	0	; () banked
  9395  0024B8  6BAC               	clrf	(?_printf+11)& (0+255),b
  9396  0024BA  C0EF  F0AD         	movff	__sec,?_printf+12
  9397  0024BE  0100               	movlb	0	; () banked
  9398  0024C0  6BAE               	clrf	(?_printf+13)& (0+255),b
  9399  0024C2  0EDD               	movlw	low STR_13
  9400  0024C4  0100               	movlb	0	; () banked
  9401  0024C6  6FAF               	movwf	(?_printf+14)& (0+255),b
  9402  0024C8  0E7E               	movlw	high STR_13
  9403  0024CA  0100               	movlb	0	; () banked
  9404  0024CC  6FB0               	movwf	(?_printf+15)& (0+255),b
  9405  0024CE  EC60  F035         	call	_printf	;wreg free
  9406                           
  9407                           ;comunicacao.h: 90: writeChar(0x1A);
  9408  0024D2  0E1A               	movlw	26
  9409  0024D4  0100               	movlb	0	; () banked
  9410  0024D6  6F80               	movwf	writeChar@hex& (0+255),b
  9411  0024D8  0E00               	movlw	0
  9412  0024DA  0100               	movlb	0	; () banked
  9413  0024DC  6F81               	movwf	(writeChar@hex+1)& (0+255),b
  9414  0024DE  EC3C  F032         	call	_writeChar	;wreg free
  9415                           
  9416                           ;comunicacao.h: 91: delay(100);
  9417  0024E2  0E00               	movlw	0
  9418  0024E4  0100               	movlb	0	; () banked
  9419  0024E6  6F81               	movwf	(delay@x+1)& (0+255),b
  9420  0024E8  0E64               	movlw	100
  9421  0024EA  6F80               	movwf	delay@x& (0+255),b
  9422  0024EC  EC5B  F033         	call	_delay	;wreg free
  9423                           
  9424                           ;comunicacao.h: 92: writeChar(0x1A);
  9425  0024F0  0E1A               	movlw	26
  9426  0024F2  0100               	movlb	0	; () banked
  9427  0024F4  6F80               	movwf	writeChar@hex& (0+255),b
  9428  0024F6  0E00               	movlw	0
  9429  0024F8  0100               	movlb	0	; () banked
  9430  0024FA  6F81               	movwf	(writeChar@hex+1)& (0+255),b
  9431  0024FC  EC3C  F032         	call	_writeChar	;wreg free
  9432                           
  9433                           ;comunicacao.h: 93: delay(100);
  9434  002500  0E00               	movlw	0
  9435  002502  0100               	movlb	0	; () banked
  9436  002504  6F81               	movwf	(delay@x+1)& (0+255),b
  9437  002506  0E64               	movlw	100
  9438  002508  6F80               	movwf	delay@x& (0+255),b
  9439  00250A  EC5B  F033         	call	_delay	;wreg free
  9440                           
  9441                           ;comunicacao.h: 94: writeChar(0x1A);
  9442  00250E  0E1A               	movlw	26
  9443  002510  0100               	movlb	0	; () banked
  9444  002512  6F80               	movwf	writeChar@hex& (0+255),b
  9445  002514  0E00               	movlw	0
  9446  002516  0100               	movlb	0	; () banked
  9447  002518  6F81               	movwf	(writeChar@hex+1)& (0+255),b
  9448  00251A  EC3C  F032         	call	_writeChar	;wreg free
  9449                           
  9450                           ;comunicacao.h: 95: etapaComunicacao++;
  9451  00251E  4A4D               	infsnz	_etapaComunicacao,f,c
  9452  002520  2A4E               	incf	_etapaComunicacao+1,f,c
  9453                           
  9454                           ;comunicacao.h: 96: timerEtapaComunicacao = 30;
  9455  002522  0E1E               	movlw	30
  9456  002524                     L18:
  9457  002524  FFFF               	dw	65535	; assembler added errata NOP
  9458  002526  0100               	movlb	0	; () banked
  9459  002528  6FF5               	movwf	_timerEtapaComunicacao& (0+255),b
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;comunicacao.h: 97: }
  9463                           ;comunicacao.h: 98: break;
  9464  00252A  D05E               	goto	l339
  9465  00252C                     l8434:
  9466  00252C  FFFF               	dw	65535	; assembler added errata NOP
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;comunicacao.h: 100: if (aguardaBuffer("OK") || aguardaBuffer("+CMGS:")) {
  9470  00252E  0EF9               	movlw	low STR_5
  9471  002530  0100               	movlb	0	; () banked
  9472  002532  6F93               	movwf	aguardaBuffer@str& (0+255),b
  9473  002534  0E7F               	movlw	high STR_5
  9474  002536  0100               	movlb	0	; () banked
  9475  002538  6F94               	movwf	(aguardaBuffer@str+1)& (0+255),b
  9476  00253A  EC6A  F034         	call	_aguardaBuffer	;wreg free
  9477  00253E  0900               	iorlw	0
  9478  002540  A4D8               	btfss	status,2,c
  9479  002542  D00B               	goto	l8438
  9480  002544  0EB0               	movlw	low STR_15
  9481  002546  0100               	movlb	0	; () banked
  9482  002548  6F93               	movwf	aguardaBuffer@str& (0+255),b
  9483  00254A  0E7F               	movlw	high STR_15
  9484  00254C  0100               	movlb	0	; () banked
  9485  00254E  6F94               	movwf	(aguardaBuffer@str+1)& (0+255),b
  9486  002550  EC6A  F034         	call	_aguardaBuffer	;wreg free
  9487  002554  0900               	iorlw	0
  9488  002556  B4D8               	btfsc	status,2,c
  9489  002558  D015               	goto	l8444
  9490  00255A                     l8438:
  9491  00255A  FFFF               	dw	65535	; assembler added errata NOP
  9492                           
  9493                           ;comunicacao.h: 101: if (telefoneSelecionado == 0) {
  9494  00255C  0100               	movlb	0	; () banked
  9495  00255E  51F7               	movf	_telefoneSelecionado& (0+255),w,b
  9496  002560  A4D8               	btfss	status,2,c
  9497  002562  D004               	goto	l8442
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;comunicacao.h: 102: telefoneSelecionado = 1;
  9501  002564  0E01               	movlw	1
  9502  002566  0100               	movlb	0	; () banked
  9503  002568  6FF7               	movwf	_telefoneSelecionado& (0+255),b
  9504                           
  9505                           ;comunicacao.h: 103: } else {
  9506  00256A  D007               	goto	l334
  9507  00256C                     l8442:
  9508  00256C  FFFF               	dw	65535	; assembler added errata NOP
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;comunicacao.h: 104: telefoneSelecionado = 0;
  9512  00256E  0E00               	movlw	0
  9513  002570  0100               	movlb	0	; () banked
  9514  002572  6FF7               	movwf	_telefoneSelecionado& (0+255),b
  9515                           
  9516                           ;comunicacao.h: 105: gsmOcupado = 0;
  9517  002574  0E00               	movlw	0
  9518  002576  0100               	movlb	0	; () banked
  9519  002578  6FF4               	movwf	_gsmOcupado& (0+255),b
  9520  00257A                     l334:
  9521  00257A  FFFF               	dw	65535	; assembler added errata NOP
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;comunicacao.h: 106: }
  9525                           ;comunicacao.h: 107: etapaComunicacao = 0;
  9526  00257C  0E00               	movlw	0
  9527  00257E  6E4E               	movwf	_etapaComunicacao+1,c
  9528  002580  0E00               	movlw	0
  9529  002582  6E4D               	movwf	_etapaComunicacao,c
  9530  002584                     l8444:
  9531  002584  FFFF               	dw	65535	; assembler added errata NOP
  9532                           
  9533                           ;comunicacao.h: 108: }
  9534                           ;comunicacao.h: 109: if (aguardaBuffer("ERROR") || !timerEtapaComunicacao) {
  9535  002586  0ED7               	movlw	low STR_16
  9536  002588  0100               	movlb	0	; () banked
  9537  00258A  6F93               	movwf	aguardaBuffer@str& (0+255),b
  9538  00258C  0E7F               	movlw	high STR_16
  9539  00258E  0100               	movlb	0	; () banked
  9540  002590  6F94               	movwf	(aguardaBuffer@str+1)& (0+255),b
  9541  002592  EC6A  F034         	call	_aguardaBuffer	;wreg free
  9542  002596  0900               	iorlw	0
  9543  002598  A4D8               	btfss	status,2,c
  9544  00259A  D004               	goto	l8450
  9545  00259C  0100               	movlb	0	; () banked
  9546  00259E  51F5               	movf	_timerEtapaComunicacao& (0+255),w,b
  9547  0025A0  A4D8               	btfss	status,2,c
  9548  0025A2  D022               	goto	l339
  9549  0025A4                     l8450:
  9550  0025A4  FFFF               	dw	65535	; assembler added errata NOP
  9551                           
  9552                           ;comunicacao.h: 114: etapaComunicacao = 0;
  9553  0025A6  0E00               	movlw	0
  9554  0025A8  6E4E               	movwf	_etapaComunicacao+1,c
  9555  0025AA  0E00               	movlw	0
  9556  0025AC  6E4D               	movwf	_etapaComunicacao,c
  9557                           
  9558                           ;comunicacao.h: 117: }
  9559                           
  9560                           ;comunicacao.h: 115: break;
  9561  0025AE  D01C               	goto	l339
  9562  0025B0                     l8454:
  9563  0025B0  FFFF               	dw	65535	; assembler added errata NOP
  9564  0025B2  C04D  F0BB         	movff	_etapaComunicacao,??_comunicarTeste
  9565  0025B6  C04E  F0BC         	movff	_etapaComunicacao+1,??_comunicarTeste+1
  9566                           
  9567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9568                           ; Switch size 1, requested type "space"
  9569                           ; Number of cases is 1, Range of values is 0 to 0
  9570                           ; switch strategies available:
  9571                           ; Name         Instructions Cycles
  9572                           ; simple_byte            4     3 (average)
  9573                           ;	Chosen strategy is simple_byte
  9574  0025BA  0100               	movlb	0	; () banked
  9575  0025BC  51BC               	movf	(??_comunicarTeste+1)& (0+255),w,b
  9576  0025BE  0A00               	xorlw	0	; case 0
  9577  0025C0  A4D8               	btfss	status,2,c
  9578  0025C2  D7F0               	goto	l8450
  9579                           
  9580                           ; BSR set to: 0
  9581                           ; Switch size 1, requested type "space"
  9582                           ; Number of cases is 5, Range of values is 0 to 4
  9583                           ; switch strategies available:
  9584                           ; Name         Instructions Cycles
  9585                           ; simple_byte           16     9 (average)
  9586                           ;	Chosen strategy is simple_byte
  9587  0025C4  0100               	movlb	0	; () banked
  9588  0025C6  51BB               	movf	??_comunicarTeste& (0+255),w,b
  9589  0025C8  0A00               	xorlw	0	; case 0
  9590  0025CA  B4D8               	btfsc	status,2,c
  9591  0025CC  D6EF               	goto	l8374
  9592  0025CE  0A01               	xorlw	1	; case 1
  9593  0025D0  B4D8               	btfsc	status,2,c
  9594  0025D2  D6FB               	goto	l8382
  9595  0025D4  0A03               	xorlw	3	; case 2
  9596  0025D6  B4D8               	btfsc	status,2,c
  9597  0025D8  D725               	goto	l8398
  9598  0025DA  0A01               	xorlw	1	; case 3
  9599  0025DC  B4D8               	btfsc	status,2,c
  9600  0025DE  D74C               	goto	l8414
  9601  0025E0  0A07               	xorlw	7	; case 4
  9602  0025E2  B4D8               	btfsc	status,2,c
  9603  0025E4  D7A3               	goto	l8434
  9604  0025E6  D7DE               	goto	l8450
  9605  0025E8                     l339:
  9606  0025E8  FFFF               	dw	65535	; assembler added errata NOP
  9607  0025EA  0012               	return		;funcret
  9608  0025EC  FFFF               	dw	65535	; errata NOP
  9609  0025EE                     __end_of_comunicarTeste:
  9610                           	opt stack 0
  9611                           tblptru	equ	0xFF8
  9612                           tblptrh	equ	0xFF7
  9613                           tblptrl	equ	0xFF6
  9614                           tablat	equ	0xFF5
  9615                           prodh	equ	0xFF4
  9616                           prodl	equ	0xFF3
  9617                           postinc0	equ	0xFEE
  9618                           wreg	equ	0xFE8
  9619                           postdec1	equ	0xFE5
  9620                           fsr1l	equ	0xFE1
  9621                           indf2	equ	0xFDF
  9622                           postinc2	equ	0xFDE
  9623                           fsr2h	equ	0xFDA
  9624                           fsr2l	equ	0xFD9
  9625                           status	equ	0xFD8
  9626                           
  9627 ;; *************** function _configuraRegistradores *****************
  9628 ;; Defined at:
  9629 ;;		line 7 in file "registradores.h"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;		None
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;		None
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  1    wreg      void 
  9636 ;; Registers used:
  9637 ;;		wreg, status,2
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9643 ;;      Params:         0       0       0       0       0       0       0
  9644 ;;      Locals:         0       0       0       0       0       0       0
  9645 ;;      Temps:          0       0       0       0       0       0       0
  9646 ;;      Totals:         0       0       0       0       0       0       0
  9647 ;;Total ram usage:        0 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; Hardware stack levels required when called:    6
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		_main
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text23
  9658  006CA0                     __ptext23:
  9659                           	opt stack 0
  9660  006CA0                     _configuraRegistradores:
  9661                           	opt stack 0
  9662  006CA0  FFFF               	dw	65535	; assembler added errata NOP
  9663                           
  9664                           ;registradores.h: 9: ADCON0 = 0b10000001;
  9665                           
  9666                           ;incstack = 0
  9667  006CA2  0E81               	movlw	129
  9668  006CA4  6EC2               	movwf	4034,c	;volatile
  9669                           
  9670                           ;registradores.h: 10: ADCON1 = 0b11001110;
  9671  006CA6  0ECE               	movlw	206
  9672  006CA8  6EC1               	movwf	4033,c	;volatile
  9673                           
  9674                           ;registradores.h: 11: TRISAbits.RA0 = 1;
  9675  006CAA  8092               	bsf	3986,0,c	;volatile
  9676                           
  9677                           ;registradores.h: 12: PORTAbits.AN0 = 0;
  9678  006CAC  9080               	bcf	3968,0,c	;volatile
  9679                           
  9680                           ;registradores.h: 15: T0CON = 0x81;
  9681  006CAE  0E81               	movlw	129
  9682  006CB0  6ED5               	movwf	4053,c	;volatile
  9683                           
  9684                           ;registradores.h: 16: INTCON = 0xE4;
  9685  006CB2  0EE4               	movlw	228
  9686  006CB4  6EF2               	movwf	intcon,c	;volatile
  9687                           
  9688                           ;registradores.h: 19: TRISDbits.RD5 = 0;
  9689  006CB6  9A95               	bcf	3989,5,c	;volatile
  9690                           
  9691                           ;registradores.h: 20: TRISDbits.RD4 = 0;
  9692  006CB8  9895               	bcf	3989,4,c	;volatile
  9693                           
  9694                           ;registradores.h: 21: TRISDbits.RD3 = 0;
  9695  006CBA  9695               	bcf	3989,3,c	;volatile
  9696                           
  9697                           ;registradores.h: 22: TRISDbits.RD2 = 0;
  9698  006CBC  9495               	bcf	3989,2,c	;volatile
  9699                           
  9700                           ;registradores.h: 23: TRISDbits.RD1 = 0;
  9701  006CBE  9295               	bcf	3989,1,c	;volatile
  9702                           
  9703                           ;registradores.h: 24: TRISDbits.RD0 = 0;
  9704  006CC0  9095               	bcf	3989,0,c	;volatile
  9705                           
  9706                           ;registradores.h: 27: TRISCbits.TRISC6 = 0;
  9707  006CC2  9C94               	bcf	3988,6,c	;volatile
  9708                           
  9709                           ;registradores.h: 28: TRISCbits.TRISC7 = 1;
  9710  006CC4  8E94               	bsf	3988,7,c	;volatile
  9711                           
  9712                           ;registradores.h: 29: TXSTAbits.TXEN = 1;
  9713  006CC6  8AAC               	bsf	4012,5,c	;volatile
  9714                           
  9715                           ;registradores.h: 30: TXSTAbits.BRGH = 1;
  9716  006CC8  84AC               	bsf	4012,2,c	;volatile
  9717                           
  9718                           ;registradores.h: 31: TXSTAbits.SYNC = 0;
  9719  006CCA  98AC               	bcf	4012,4,c	;volatile
  9720                           
  9721                           ;registradores.h: 32: RCSTAbits.SPEN = 1;
  9722  006CCC  8EAB               	bsf	4011,7,c	;volatile
  9723                           
  9724                           ;registradores.h: 33: RCSTAbits.CREN = 1;
  9725  006CCE  88AB               	bsf	4011,4,c	;volatile
  9726                           
  9727                           ;registradores.h: 36: SPBRG = 25;
  9728  006CD0  0E19               	movlw	25
  9729  006CD2  6EAF               	movwf	4015,c	;volatile
  9730                           
  9731                           ;registradores.h: 37: INTCONbits.GIE = 1;
  9732  006CD4  8EF2               	bsf	intcon,7,c	;volatile
  9733                           
  9734                           ;registradores.h: 38: INTCONbits.PEIE = 1;
  9735  006CD6  8CF2               	bsf	intcon,6,c	;volatile
  9736                           
  9737                           ;registradores.h: 39: PIR1bits.RCIF = 0;
  9738  006CD8  9A9E               	bcf	3998,5,c	;volatile
  9739                           
  9740                           ;registradores.h: 40: PIE1bits.RCIE = 1;
  9741  006CDA  8A9D               	bsf	3997,5,c	;volatile
  9742                           
  9743                           ;registradores.h: 43: INTCONbits.RBIE = 0;
  9744  006CDC  96F2               	bcf	intcon,3,c	;volatile
  9745                           
  9746                           ;registradores.h: 44: TRISAbits.RA2 = 1;
  9747  006CDE  8492               	bsf	3986,2,c	;volatile
  9748                           
  9749                           ;registradores.h: 45: TRISAbits.RA5 = 1;
  9750  006CE0  8A92               	bsf	3986,5,c	;volatile
  9751                           
  9752                           ;registradores.h: 46: TRISCbits.RC0 = 1;
  9753  006CE2  8094               	bsf	3988,0,c	;volatile
  9754                           
  9755                           ;registradores.h: 49: TRISBbits.RB2 = 1;
  9756  006CE4  8493               	bsf	3987,2,c	;volatile
  9757                           
  9758                           ;registradores.h: 50: TRISBbits.RB3 = 1;
  9759  006CE6  8693               	bsf	3987,3,c	;volatile
  9760                           
  9761                           ;registradores.h: 51: TRISBbits.RB4 = 1;
  9762  006CE8  8893               	bsf	3987,4,c	;volatile
  9763                           
  9764                           ;registradores.h: 52: TRISBbits.RB5 = 1;
  9765  006CEA  8A93               	bsf	3987,5,c	;volatile
  9766                           
  9767                           ;registradores.h: 55: TRISEbits.RE0 = 0;
  9768  006CEC  9096               	bcf	3990,0,c	;volatile
  9769                           
  9770                           ;registradores.h: 56: TRISEbits.RE1 = 0;
  9771  006CEE  9296               	bcf	3990,1,c	;volatile
  9772                           
  9773                           ;registradores.h: 57: TRISEbits.RE2 = 0;
  9774  006CF0  9496               	bcf	3990,2,c	;volatile
  9775  006CF2  0012               	return		;funcret
  9776  006CF4  FFFF               	dw	65535	; errata NOP
  9777  006CF6                     __end_of_configuraRegistradores:
  9778                           	opt stack 0
  9779                           tblptru	equ	0xFF8
  9780                           tblptrh	equ	0xFF7
  9781                           tblptrl	equ	0xFF6
  9782                           tablat	equ	0xFF5
  9783                           prodh	equ	0xFF4
  9784                           prodl	equ	0xFF3
  9785                           intcon	equ	0xFF2
  9786                           postinc0	equ	0xFEE
  9787                           wreg	equ	0xFE8
  9788                           postdec1	equ	0xFE5
  9789                           fsr1l	equ	0xFE1
  9790                           indf2	equ	0xFDF
  9791                           postinc2	equ	0xFDE
  9792                           fsr2h	equ	0xFDA
  9793                           fsr2l	equ	0xFD9
  9794                           status	equ	0xFD8
  9795                           
  9796 ;; *************** function _atualizarLCD *****************
  9797 ;; Defined at:
  9798 ;;		line 132 in file "lcd.h"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  line1           2    8[BANK0 ] PTR unsigned char 
  9801 ;;		 -> line1(21), 
  9802 ;;  line2           2   10[BANK0 ] PTR unsigned char 
  9803 ;;		 -> line2(21), 
  9804 ;;  line3           2   12[BANK0 ] PTR unsigned char 
  9805 ;;		 -> line3(21), 
  9806 ;;  line4           2   14[BANK0 ] PTR unsigned char 
  9807 ;;		 -> line4(21), 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;  i               1   16[BANK0 ] unsigned char 
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9819 ;;      Params:         0       8       0       0       0       0       0
  9820 ;;      Locals:         0       1       0       0       0       0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0
  9822 ;;      Totals:         0       9       0       0       0       0       0
  9823 ;;Total ram usage:        9 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:    9
  9826 ;; This function calls:
  9827 ;;		_Lcd_Set_Cursor
  9828 ;;		_Lcd_Write_String
  9829 ;; This function is called by:
  9830 ;;		_main
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           	psect	text24
  9835  007A06                     __ptext24:
  9836                           	opt stack 0
  9837  007A06                     _atualizarLCD:
  9838                           	opt stack 0
  9839  007A06  FFFF               	dw	65535	; assembler added errata NOP
  9840                           
  9841                           ;lcd.h: 134: Lcd_Set_Cursor(1, 1);
  9842                           
  9843                           ;incstack = 0
  9844  007A08  0E01               	movlw	1
  9845  007A0A  0100               	movlb	0	; () banked
  9846  007A0C  6F83               	movwf	Lcd_Set_Cursor@b& (0+255),b
  9847  007A0E  0E01               	movlw	1
  9848  007A10  EC5A  F01F         	call	_Lcd_Set_Cursor
  9849                           
  9850                           ;lcd.h: 135: Lcd_Write_String(line1);
  9851  007A14  C088  F084         	movff	atualizarLCD@line1,Lcd_Write_String@a
  9852  007A18  C089  F085         	movff	atualizarLCD@line1+1,Lcd_Write_String@a+1
  9853  007A1C  EC8B  F034         	call	_Lcd_Write_String	;wreg free
  9854                           
  9855                           ;lcd.h: 136: Lcd_Set_Cursor(2, 1);
  9856  007A20  0E01               	movlw	1
  9857  007A22  0100               	movlb	0	; () banked
  9858  007A24  6F83               	movwf	Lcd_Set_Cursor@b& (0+255),b
  9859  007A26  0E02               	movlw	2
  9860  007A28  EC5A  F01F         	call	_Lcd_Set_Cursor
  9861                           
  9862                           ;lcd.h: 137: Lcd_Write_String(line2);
  9863  007A2C  C08A  F084         	movff	atualizarLCD@line2,Lcd_Write_String@a
  9864  007A30  C08B  F085         	movff	atualizarLCD@line2+1,Lcd_Write_String@a+1
  9865  007A34  EC8B  F034         	call	_Lcd_Write_String	;wreg free
  9866                           
  9867                           ;lcd.h: 138: Lcd_Set_Cursor(3, 0);
  9868  007A38  0E00               	movlw	0
  9869  007A3A  0100               	movlb	0	; () banked
  9870  007A3C  6F83               	movwf	Lcd_Set_Cursor@b& (0+255),b
  9871  007A3E  0E03               	movlw	3
  9872  007A40  EC5A  F01F         	call	_Lcd_Set_Cursor
  9873                           
  9874                           ;lcd.h: 139: Lcd_Write_String(line3);
  9875  007A44  C08C  F084         	movff	atualizarLCD@line3,Lcd_Write_String@a
  9876  007A48  C08D  F085         	movff	atualizarLCD@line3+1,Lcd_Write_String@a+1
  9877  007A4C  EC8B  F034         	call	_Lcd_Write_String	;wreg free
  9878                           
  9879                           ;lcd.h: 140: Lcd_Set_Cursor(4, 0);
  9880  007A50  0E00               	movlw	0
  9881  007A52  0100               	movlb	0	; () banked
  9882  007A54  6F83               	movwf	Lcd_Set_Cursor@b& (0+255),b
  9883  007A56  0E04               	movlw	4
  9884  007A58  EC5A  F01F         	call	_Lcd_Set_Cursor
  9885                           
  9886                           ;lcd.h: 141: Lcd_Write_String(line4);
  9887  007A5C  C08E  F084         	movff	atualizarLCD@line4,Lcd_Write_String@a
  9888  007A60  C08F  F085         	movff	atualizarLCD@line4+1,Lcd_Write_String@a+1
  9889  007A64  EC8B  F034         	call	_Lcd_Write_String	;wreg free
  9890                           
  9891                           ;lcd.h: 143: char i = 0;
  9892  007A68  0E00               	movlw	0
  9893  007A6A  0100               	movlb	0	; () banked
  9894  007A6C  6F90               	movwf	atualizarLCD@i& (0+255),b
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;lcd.h: 144: for (i = 0; i < 20; i++) {
  9898  007A6E  0E00               	movlw	0
  9899  007A70  0100               	movlb	0	; () banked
  9900  007A72  6F90               	movwf	atualizarLCD@i& (0+255),b
  9901  007A74                     l9330:
  9902  007A74  FFFF               	dw	65535	; assembler added errata NOP
  9903                           
  9904                           ; BSR set to: 0
  9905  007A76  0E13               	movlw	19
  9906  007A78  0100               	movlb	0	; () banked
  9907  007A7A  6590               	cpfsgt	atualizarLCD@i& (0+255),b
  9908  007A7C  D001               	goto	l9334
  9909  007A7E  D038               	goto	l640
  9910  007A80                     l9334:
  9911  007A80  FFFF               	dw	65535	; assembler added errata NOP
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;lcd.h: 145: line1[i] = ' ';
  9915  007A82  0100               	movlb	0	; () banked
  9916  007A84  5190               	movf	atualizarLCD@i& (0+255),w,b
  9917  007A86  0D01               	mullw	1
  9918  007A88  50F3               	movf	prodl,w,c
  9919  007A8A  0100               	movlb	0	; () banked
  9920  007A8C  2588               	addwf	atualizarLCD@line1& (0+255),w,b
  9921  007A8E  6ED9               	movwf	fsr2l,c
  9922  007A90  50F4               	movf	prodh,w,c
  9923  007A92  0100               	movlb	0	; () banked
  9924  007A94  2189               	addwfc	(atualizarLCD@line1+1)& (0+255),w,b
  9925  007A96  6EDA               	movwf	fsr2h,c
  9926  007A98  0E20               	movlw	32
  9927  007A9A  6EDF               	movwf	indf2,c
  9928                           
  9929                           ;lcd.h: 146: line2[i] = ' ';
  9930  007A9C  0100               	movlb	0	; () banked
  9931  007A9E  5190               	movf	atualizarLCD@i& (0+255),w,b
  9932  007AA0  0D01               	mullw	1
  9933  007AA2  50F3               	movf	prodl,w,c
  9934  007AA4  0100               	movlb	0	; () banked
  9935  007AA6  258A               	addwf	atualizarLCD@line2& (0+255),w,b
  9936  007AA8  6ED9               	movwf	fsr2l,c
  9937  007AAA  50F4               	movf	prodh,w,c
  9938  007AAC  0100               	movlb	0	; () banked
  9939  007AAE  218B               	addwfc	(atualizarLCD@line2+1)& (0+255),w,b
  9940  007AB0  6EDA               	movwf	fsr2h,c
  9941  007AB2  0E20               	movlw	32
  9942  007AB4  6EDF               	movwf	indf2,c
  9943                           
  9944                           ;lcd.h: 147: line3[i] = ' ';
  9945  007AB6  0100               	movlb	0	; () banked
  9946  007AB8  5190               	movf	atualizarLCD@i& (0+255),w,b
  9947  007ABA  0D01               	mullw	1
  9948  007ABC  50F3               	movf	prodl,w,c
  9949  007ABE  0100               	movlb	0	; () banked
  9950  007AC0  258C               	addwf	atualizarLCD@line3& (0+255),w,b
  9951  007AC2  6ED9               	movwf	fsr2l,c
  9952  007AC4  50F4               	movf	prodh,w,c
  9953  007AC6  0100               	movlb	0	; () banked
  9954  007AC8  218D               	addwfc	(atualizarLCD@line3+1)& (0+255),w,b
  9955  007ACA  6EDA               	movwf	fsr2h,c
  9956  007ACC  0E20               	movlw	32
  9957  007ACE  6EDF               	movwf	indf2,c
  9958                           
  9959                           ;lcd.h: 148: line4[i] = ' ';
  9960  007AD0  0100               	movlb	0	; () banked
  9961  007AD2  5190               	movf	atualizarLCD@i& (0+255),w,b
  9962  007AD4  0D01               	mullw	1
  9963  007AD6  50F3               	movf	prodl,w,c
  9964  007AD8  0100               	movlb	0	; () banked
  9965  007ADA  258E               	addwf	atualizarLCD@line4& (0+255),w,b
  9966  007ADC  6ED9               	movwf	fsr2l,c
  9967  007ADE  50F4               	movf	prodh,w,c
  9968  007AE0  0100               	movlb	0	; () banked
  9969  007AE2  218F               	addwfc	(atualizarLCD@line4+1)& (0+255),w,b
  9970  007AE4  6EDA               	movwf	fsr2h,c
  9971  007AE6  0E20               	movlw	32
  9972  007AE8  6EDF               	movwf	indf2,c
  9973                           
  9974                           ; BSR set to: 0
  9975  007AEA  0100               	movlb	0	; () banked
  9976  007AEC  2B90               	incf	atualizarLCD@i& (0+255),f,b
  9977  007AEE  D7C2               	goto	l9330
  9978  007AF0                     l640:
  9979  007AF0  FFFF               	dw	65535	; assembler added errata NOP
  9980                           
  9981                           ; BSR set to: 0
  9982  007AF2  0012               	return		;funcret
  9983  007AF4  FFFF               	dw	65535	; errata NOP
  9984  007AF6                     __end_of_atualizarLCD:
  9985                           	opt stack 0
  9986                           tblptru	equ	0xFF8
  9987                           tblptrh	equ	0xFF7
  9988                           tblptrl	equ	0xFF6
  9989                           tablat	equ	0xFF5
  9990                           prodh	equ	0xFF4
  9991                           prodl	equ	0xFF3
  9992                           intcon	equ	0xFF2
  9993                           postinc0	equ	0xFEE
  9994                           wreg	equ	0xFE8
  9995                           postdec1	equ	0xFE5
  9996                           fsr1l	equ	0xFE1
  9997                           indf2	equ	0xFDF
  9998                           postinc2	equ	0xFDE
  9999                           fsr2h	equ	0xFDA
 10000                           fsr2l	equ	0xFD9
 10001                           status	equ	0xFD8
 10002                           
 10003 ;; *************** function _Lcd_Write_String *****************
 10004 ;; Defined at:
 10005 ;;		line 123 in file "lcd.h"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  a               2    4[BANK0 ] PTR unsigned char 
 10008 ;;		 -> line3(21), line2(21), line1(21), line4(21), 
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;  i               1    6[BANK0 ] unsigned char 
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  1    wreg      void 
 10013 ;; Registers used:
 10014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10020 ;;      Params:         0       2       0       0       0       0       0
 10021 ;;      Locals:         0       1       0       0       0       0       0
 10022 ;;      Temps:          0       0       0       0       0       0       0
 10023 ;;      Totals:         0       3       0       0       0       0       0
 10024 ;;Total ram usage:        3 bytes
 10025 ;; Hardware stack levels used:    1
 10026 ;; Hardware stack levels required when called:    8
 10027 ;; This function calls:
 10028 ;;		_Lcd_Write_Char
 10029 ;; This function is called by:
 10030 ;;		_atualizarLCD
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text25
 10035  006916                     __ptext25:
 10036                           	opt stack 0
 10037  006916                     _Lcd_Write_String:
 10038                           	opt stack 0
 10039  006916  FFFF               	dw	65535	; assembler added errata NOP
 10040                           
 10041                           ;lcd.h: 124: unsigned char i = 0;
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;incstack = 0
 10045  006918  0E00               	movlw	0
 10046  00691A  0100               	movlb	0	; () banked
 10047  00691C  6F86               	movwf	Lcd_Write_String@i& (0+255),b
 10048                           
 10049                           ;lcd.h: 126: for (i = 0; i < 20; i++) {
 10050  00691E  0E00               	movlw	0
 10051  006920  0100               	movlb	0	; () banked
 10052  006922  6F86               	movwf	Lcd_Write_String@i& (0+255),b
 10053  006924                     l8812:
 10054  006924  FFFF               	dw	65535	; assembler added errata NOP
 10055                           
 10056                           ; BSR set to: 0
 10057  006926  0E13               	movlw	19
 10058  006928  0100               	movlb	0	; () banked
 10059  00692A  6586               	cpfsgt	Lcd_Write_String@i& (0+255),b
 10060  00692C  D001               	goto	l8816
 10061  00692E  D012               	goto	l635
 10062  006930                     l8816:
 10063  006930  FFFF               	dw	65535	; assembler added errata NOP
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;lcd.h: 127: Lcd_Write_Char(a[i]);
 10067  006932  0100               	movlb	0	; () banked
 10068  006934  5186               	movf	Lcd_Write_String@i& (0+255),w,b
 10069  006936  0D01               	mullw	1
 10070  006938  50F3               	movf	prodl,w,c
 10071  00693A  0100               	movlb	0	; () banked
 10072  00693C  2584               	addwf	Lcd_Write_String@a& (0+255),w,b
 10073  00693E  6ED9               	movwf	fsr2l,c
 10074  006940  50F4               	movf	prodh,w,c
 10075  006942  0100               	movlb	0	; () banked
 10076  006944  2185               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
 10077  006946  6EDA               	movwf	fsr2h,c
 10078  006948  50DF               	movf	indf2,w,c
 10079  00694A  EC3B  F035         	call	_Lcd_Write_Char
 10080  00694E  0100               	movlb	0	; () banked
 10081  006950  2B86               	incf	Lcd_Write_String@i& (0+255),f,b
 10082  006952  D7E8               	goto	l8812
 10083  006954                     l635:
 10084  006954  FFFF               	dw	65535	; assembler added errata NOP
 10085                           
 10086                           ; BSR set to: 0
 10087  006956  0012               	return		;funcret
 10088  006958  FFFF               	dw	65535	; errata NOP
 10089  00695A                     __end_of_Lcd_Write_String:
 10090                           	opt stack 0
 10091                           tblptru	equ	0xFF8
 10092                           tblptrh	equ	0xFF7
 10093                           tblptrl	equ	0xFF6
 10094                           tablat	equ	0xFF5
 10095                           prodh	equ	0xFF4
 10096                           prodl	equ	0xFF3
 10097                           intcon	equ	0xFF2
 10098                           postinc0	equ	0xFEE
 10099                           wreg	equ	0xFE8
 10100                           postdec1	equ	0xFE5
 10101                           fsr1l	equ	0xFE1
 10102                           indf2	equ	0xFDF
 10103                           postinc2	equ	0xFDE
 10104                           fsr2h	equ	0xFDA
 10105                           fsr2l	equ	0xFD9
 10106                           status	equ	0xFD8
 10107                           
 10108 ;; *************** function _Lcd_Write_Char *****************
 10109 ;; Defined at:
 10110 ;;		line 108 in file "lcd.h"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  a               1    wreg     unsigned char 
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;  a               1    3[BANK0 ] unsigned char 
 10115 ;;  y               1    2[BANK0 ] unsigned char 
 10116 ;;  tempp           1    1[BANK0 ] unsigned char 
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		wreg, status,2, status,0, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10126 ;;      Params:         0       0       0       0       0       0       0
 10127 ;;      Locals:         0       3       0       0       0       0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0
 10129 ;;      Totals:         0       3       0       0       0       0       0
 10130 ;;Total ram usage:        3 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:    7
 10133 ;; This function calls:
 10134 ;;		_Lcd_Port
 10135 ;; This function is called by:
 10136 ;;		_Lcd_Write_String
 10137 ;;		_criarCaracteresCGRAM
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text26
 10142  006A76                     __ptext26:
 10143                           	opt stack 0
 10144  006A76                     _Lcd_Write_Char:
 10145                           	opt stack 0
 10146  006A76  FFFF               	dw	65535	; assembler added errata NOP
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;incstack = 0
 10150                           ;Lcd_Write_Char@a stored from wreg
 10151  006A78  0100               	movlb	0	; () banked
 10152  006A7A  6F83               	movwf	Lcd_Write_Char@a& (0+255),b
 10153                           
 10154                           ;lcd.h: 109: char tempp, y;
 10155                           ;lcd.h: 110: tempp = a & 0x0F;
 10156  006A7C  0100               	movlb	0	; () banked
 10157  006A7E  5183               	movf	Lcd_Write_Char@a& (0+255),w,b
 10158  006A80  0B0F               	andlw	15
 10159  006A82  0100               	movlb	0	; () banked
 10160  006A84  6F81               	movwf	Lcd_Write_Char@tempp& (0+255),b
 10161                           
 10162                           ;lcd.h: 111: y = a & 0xF0;
 10163  006A86  0100               	movlb	0	; () banked
 10164  006A88  5183               	movf	Lcd_Write_Char@a& (0+255),w,b
 10165  006A8A  0BF0               	andlw	240
 10166  006A8C  0100               	movlb	0	; () banked
 10167  006A8E  6F82               	movwf	Lcd_Write_Char@y& (0+255),b
 10168                           
 10169                           ; BSR set to: 0
 10170                           ;lcd.h: 112: PORTDbits.RD1 = 1;
 10171  006A90  8283               	bsf	3971,1,c	;volatile
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;lcd.h: 113: Lcd_Port(y >> 4);
 10175  006A92  0100               	movlb	0	; () banked
 10176  006A94  3982               	swapf	Lcd_Write_Char@y& (0+255),w,b
 10177  006A96  0B0F               	andlw	15
 10178  006A98  EC16  F035         	call	_Lcd_Port
 10179                           
 10180                           ;lcd.h: 114: PORTDbits.RD0 = 1;
 10181  006A9C  8083               	bsf	3971,0,c	;volatile
 10182                           
 10183                           ;lcd.h: 115: _delay((unsigned long)((150)*(8000000/4000000.0)));
 10184  006A9E  0E4B               	movlw	75
 10185  006AA0                     u12187:
 10186  006AA0  FFFF               	dw	65535	; errata NOP
 10187  006AA2  2EE8               	decfsz	wreg,f,c
 10188  006AA4  D7FD               	bra	u12187
 10189                           
 10190                           ;lcd.h: 116: PORTDbits.RD0 = 0;
 10191  006AA6  9083               	bcf	3971,0,c	;volatile
 10192                           
 10193                           ;lcd.h: 117: Lcd_Port(tempp);
 10194  006AA8  0100               	movlb	0	; () banked
 10195  006AAA  5181               	movf	Lcd_Write_Char@tempp& (0+255),w,b
 10196  006AAC  EC16  F035         	call	_Lcd_Port
 10197                           
 10198                           ;lcd.h: 118: PORTDbits.RD0 = 1;
 10199  006AB0  8083               	bsf	3971,0,c	;volatile
 10200                           
 10201                           ;lcd.h: 119: _delay((unsigned long)((150)*(8000000/4000000.0)));
 10202  006AB2  0E4B               	movlw	75
 10203  006AB4                     u12197:
 10204  006AB4  FFFF               	dw	65535	; errata NOP
 10205  006AB6  2EE8               	decfsz	wreg,f,c
 10206  006AB8  D7FD               	bra	u12197
 10207                           
 10208                           ;lcd.h: 120: PORTDbits.RD0 = 0;
 10209  006ABA  9083               	bcf	3971,0,c	;volatile
 10210  006ABC  0012               	return		;funcret
 10211  006ABE  FFFF               	dw	65535	; errata NOP
 10212  006AC0                     __end_of_Lcd_Write_Char:
 10213                           	opt stack 0
 10214                           tblptru	equ	0xFF8
 10215                           tblptrh	equ	0xFF7
 10216                           tblptrl	equ	0xFF6
 10217                           tablat	equ	0xFF5
 10218                           prodh	equ	0xFF4
 10219                           prodl	equ	0xFF3
 10220                           intcon	equ	0xFF2
 10221                           postinc0	equ	0xFEE
 10222                           wreg	equ	0xFE8
 10223                           postdec1	equ	0xFE5
 10224                           fsr1l	equ	0xFE1
 10225                           indf2	equ	0xFDF
 10226                           postinc2	equ	0xFDE
 10227                           fsr2h	equ	0xFDA
 10228                           fsr2l	equ	0xFD9
 10229                           status	equ	0xFD8
 10230                           
 10231 ;; *************** function _Lcd_Set_Cursor *****************
 10232 ;; Defined at:
 10233 ;;		line 73 in file "lcd.h"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;  a               1    wreg     unsigned char 
 10236 ;;  b               1    3[BANK0 ] unsigned char 
 10237 ;; Auto vars:     Size  Location     Type
 10238 ;;  a               1    4[BANK0 ] unsigned char 
 10239 ;;  temp            1    7[BANK0 ] unsigned char 
 10240 ;;  y               1    6[BANK0 ] unsigned char 
 10241 ;;  z               1    5[BANK0 ] unsigned char 
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  1    wreg      void 
 10244 ;; Registers used:
 10245 ;;		wreg, status,2, status,0, cstack
 10246 ;; Tracked objects:
 10247 ;;		On entry : 0/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10251 ;;      Params:         0       1       0       0       0       0       0
 10252 ;;      Locals:         0       4       0       0       0       0       0
 10253 ;;      Temps:          0       0       0       0       0       0       0
 10254 ;;      Totals:         0       5       0       0       0       0       0
 10255 ;;Total ram usage:        5 bytes
 10256 ;; Hardware stack levels used:    1
 10257 ;; Hardware stack levels required when called:    8
 10258 ;; This function calls:
 10259 ;;		_Lcd_Cmd
 10260 ;; This function is called by:
 10261 ;;		_atualizarLCD
 10262 ;; This function uses a non-reentrant model
 10263 ;;
 10264                           
 10265                           	psect	text27
 10266  003EB4                     __ptext27:
 10267                           	opt stack 0
 10268  003EB4                     _Lcd_Set_Cursor:
 10269                           	opt stack 0
 10270  003EB4  FFFF               	dw	65535	; assembler added errata NOP
 10271                           
 10272                           ;incstack = 0
 10273                           ;Lcd_Set_Cursor@a stored from wreg
 10274  003EB6  0100               	movlb	0	; () banked
 10275  003EB8  6F84               	movwf	Lcd_Set_Cursor@a& (0+255),b
 10276                           
 10277                           ;lcd.h: 74: char temp, z, y;
 10278                           ;lcd.h: 75: switch (a) {
 10279  003EBA  D064               	goto	l8808
 10280  003EBC                     l8782:
 10281  003EBC  FFFF               	dw	65535	; assembler added errata NOP
 10282                           
 10283                           ;lcd.h: 77: temp = 0x80 + b - 1;
 10284  003EBE  0100               	movlb	0	; () banked
 10285  003EC0  5183               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 10286  003EC2  0F7F               	addlw	127
 10287  003EC4  0100               	movlb	0	; () banked
 10288  003EC6  6F87               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 10289                           
 10290                           ;lcd.h: 78: z = temp >> 4;
 10291  003EC8  0100               	movlb	0	; () banked
 10292  003ECA  3987               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 10293  003ECC  0B0F               	andlw	15
 10294  003ECE  0100               	movlb	0	; () banked
 10295  003ED0  6F85               	movwf	Lcd_Set_Cursor@z& (0+255),b
 10296                           
 10297                           ;lcd.h: 79: y = temp & 0x0F;
 10298  003ED2  0100               	movlb	0	; () banked
 10299  003ED4  5187               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 10300  003ED6  0B0F               	andlw	15
 10301  003ED8  0100               	movlb	0	; () banked
 10302  003EDA  6F86               	movwf	Lcd_Set_Cursor@y& (0+255),b
 10303                           
 10304                           ; BSR set to: 0
 10305                           ;lcd.h: 80: Lcd_Cmd(z);
 10306  003EDC  0100               	movlb	0	; () banked
 10307  003EDE  5185               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 10308  003EE0  ECC4  F032         	call	_Lcd_Cmd
 10309                           
 10310                           ;lcd.h: 81: Lcd_Cmd(y);
 10311  003EE4  0100               	movlb	0	; () banked
 10312  003EE6  5186               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 10313  003EE8  ECC4  F032         	call	_Lcd_Cmd
 10314                           
 10315                           ;lcd.h: 82: break;
 10316  003EEC  D05A               	goto	l627
 10317  003EEE                     l8788:
 10318  003EEE  FFFF               	dw	65535	; assembler added errata NOP
 10319                           
 10320                           ;lcd.h: 84: temp = 0xC0 + b - 1;
 10321  003EF0  0100               	movlb	0	; () banked
 10322  003EF2  5183               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 10323  003EF4  0FBF               	addlw	191
 10324  003EF6  0100               	movlb	0	; () banked
 10325  003EF8  6F87               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 10326                           
 10327                           ;lcd.h: 85: z = temp >> 4;
 10328  003EFA  0100               	movlb	0	; () banked
 10329  003EFC  3987               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 10330  003EFE  0B0F               	andlw	15
 10331  003F00  0100               	movlb	0	; () banked
 10332  003F02  6F85               	movwf	Lcd_Set_Cursor@z& (0+255),b
 10333                           
 10334                           ;lcd.h: 86: y = temp & 0x0F;
 10335  003F04  0100               	movlb	0	; () banked
 10336  003F06  5187               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 10337  003F08  0B0F               	andlw	15
 10338  003F0A  0100               	movlb	0	; () banked
 10339  003F0C  6F86               	movwf	Lcd_Set_Cursor@y& (0+255),b
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;lcd.h: 87: Lcd_Cmd(z);
 10343  003F0E  0100               	movlb	0	; () banked
 10344  003F10  5185               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 10345  003F12  ECC4  F032         	call	_Lcd_Cmd
 10346                           
 10347                           ;lcd.h: 88: Lcd_Cmd(y);
 10348  003F16  0100               	movlb	0	; () banked
 10349  003F18  5186               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 10350  003F1A  ECC4  F032         	call	_Lcd_Cmd
 10351                           
 10352                           ;lcd.h: 89: break;
 10353  003F1E  D041               	goto	l627
 10354  003F20                     l8794:
 10355  003F20  FFFF               	dw	65535	; assembler added errata NOP
 10356                           
 10357                           ;lcd.h: 91: temp = 0x94 + b;
 10358  003F22  0100               	movlb	0	; () banked
 10359  003F24  5183               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 10360  003F26  0F94               	addlw	148
 10361  003F28  0100               	movlb	0	; () banked
 10362  003F2A  6F87               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 10363                           
 10364                           ;lcd.h: 92: z = temp >> 4;
 10365  003F2C  0100               	movlb	0	; () banked
 10366  003F2E  3987               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 10367  003F30  0B0F               	andlw	15
 10368  003F32  0100               	movlb	0	; () banked
 10369  003F34  6F85               	movwf	Lcd_Set_Cursor@z& (0+255),b
 10370                           
 10371                           ;lcd.h: 93: y = temp & 0x0F;
 10372  003F36  0100               	movlb	0	; () banked
 10373  003F38  5187               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 10374  003F3A  0B0F               	andlw	15
 10375  003F3C  0100               	movlb	0	; () banked
 10376  003F3E  6F86               	movwf	Lcd_Set_Cursor@y& (0+255),b
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;lcd.h: 94: Lcd_Cmd(z);
 10380  003F40  0100               	movlb	0	; () banked
 10381  003F42  5185               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 10382  003F44  ECC4  F032         	call	_Lcd_Cmd
 10383                           
 10384                           ;lcd.h: 95: Lcd_Cmd(y);
 10385  003F48  0100               	movlb	0	; () banked
 10386  003F4A  5186               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 10387  003F4C  ECC4  F032         	call	_Lcd_Cmd
 10388                           
 10389                           ;lcd.h: 96: break;
 10390  003F50  D028               	goto	l627
 10391  003F52                     l8800:
 10392  003F52  FFFF               	dw	65535	; assembler added errata NOP
 10393                           
 10394                           ;lcd.h: 98: temp = 0xD4 + b;
 10395  003F54  0100               	movlb	0	; () banked
 10396  003F56  5183               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 10397  003F58  0FD4               	addlw	212
 10398  003F5A  0100               	movlb	0	; () banked
 10399  003F5C  6F87               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 10400                           
 10401                           ;lcd.h: 99: z = temp >> 4;
 10402  003F5E  0100               	movlb	0	; () banked
 10403  003F60  3987               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 10404  003F62  0B0F               	andlw	15
 10405  003F64  0100               	movlb	0	; () banked
 10406  003F66  6F85               	movwf	Lcd_Set_Cursor@z& (0+255),b
 10407                           
 10408                           ;lcd.h: 100: y = temp & 0x0F;
 10409  003F68  0100               	movlb	0	; () banked
 10410  003F6A  5187               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 10411  003F6C  0B0F               	andlw	15
 10412  003F6E  0100               	movlb	0	; () banked
 10413  003F70  6F86               	movwf	Lcd_Set_Cursor@y& (0+255),b
 10414                           
 10415                           ; BSR set to: 0
 10416                           ;lcd.h: 101: Lcd_Cmd(z);
 10417  003F72  0100               	movlb	0	; () banked
 10418  003F74  5185               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 10419  003F76  ECC4  F032         	call	_Lcd_Cmd
 10420                           
 10421                           ;lcd.h: 102: Lcd_Cmd(y);
 10422  003F7A  0100               	movlb	0	; () banked
 10423  003F7C  5186               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 10424  003F7E  ECC4  F032         	call	_Lcd_Cmd
 10425                           
 10426                           ;lcd.h: 105: }
 10427                           
 10428                           ;lcd.h: 104: default:return;
 10429                           
 10430                           ;lcd.h: 103: break;
 10431  003F82  D00F               	goto	l627
 10432  003F84                     l8808:
 10433  003F84  FFFF               	dw	65535	; assembler added errata NOP
 10434  003F86  0100               	movlb	0	; () banked
 10435  003F88  5184               	movf	Lcd_Set_Cursor@a& (0+255),w,b
 10436                           
 10437                           ; Switch size 1, requested type "space"
 10438                           ; Number of cases is 4, Range of values is 1 to 4
 10439                           ; switch strategies available:
 10440                           ; Name         Instructions Cycles
 10441                           ; simple_byte           13     7 (average)
 10442                           ;	Chosen strategy is simple_byte
 10443  003F8A  0A01               	xorlw	1	; case 1
 10444  003F8C  B4D8               	btfsc	status,2,c
 10445  003F8E  D796               	goto	l8782
 10446  003F90  0A03               	xorlw	3	; case 2
 10447  003F92  B4D8               	btfsc	status,2,c
 10448  003F94  D7AC               	goto	l8788
 10449  003F96  0A01               	xorlw	1	; case 3
 10450  003F98  B4D8               	btfsc	status,2,c
 10451  003F9A  D7C2               	goto	l8794
 10452  003F9C  0A07               	xorlw	7	; case 4
 10453  003F9E  B4D8               	btfsc	status,2,c
 10454  003FA0  D7D8               	goto	l8800
 10455  003FA2                     l627:
 10456  003FA2  FFFF               	dw	65535	; assembler added errata NOP
 10457  003FA4  0012               	return		;funcret
 10458  003FA6  FFFF               	dw	65535	; errata NOP
 10459  003FA8                     __end_of_Lcd_Set_Cursor:
 10460                           	opt stack 0
 10461                           tblptru	equ	0xFF8
 10462                           tblptrh	equ	0xFF7
 10463                           tblptrl	equ	0xFF6
 10464                           tablat	equ	0xFF5
 10465                           prodh	equ	0xFF4
 10466                           prodl	equ	0xFF3
 10467                           intcon	equ	0xFF2
 10468                           postinc0	equ	0xFEE
 10469                           wreg	equ	0xFE8
 10470                           postdec1	equ	0xFE5
 10471                           fsr1l	equ	0xFE1
 10472                           indf2	equ	0xFDF
 10473                           postinc2	equ	0xFDE
 10474                           fsr2h	equ	0xFDA
 10475                           fsr2l	equ	0xFD9
 10476                           status	equ	0xFD8
 10477                           
 10478 ;; *************** function _ajusteSP_Bombas *****************
 10479 ;; Defined at:
 10480 ;;		line 7 in file "tela_CONFIG_PRESSAO.h"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;		None
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;		None
 10485 ;; Return value:  Size  Location     Type
 10486 ;;                  1    wreg      void 
 10487 ;; Registers used:
 10488 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10489 ;; Tracked objects:
 10490 ;;		On entry : 0/0
 10491 ;;		On exit  : 0/0
 10492 ;;		Unchanged: 0/0
 10493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10494 ;;      Params:         0       0       0       0       0       0       0
 10495 ;;      Locals:         0       2       0       0       0       0       0
 10496 ;;      Temps:          0       0       0       0       0       0       0
 10497 ;;      Totals:         0       2       0       0       0       0       0
 10498 ;;Total ram usage:        2 bytes
 10499 ;; Hardware stack levels used:    1
 10500 ;; Hardware stack levels required when called:   10
 10501 ;; This function calls:
 10502 ;;		_blink
 10503 ;;		_btPress
 10504 ;;		_intToFloatStr
 10505 ;;		_sprintf
 10506 ;;		_writeEEPROM_ext
 10507 ;; This function is called by:
 10508 ;;		_main
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512                           	psect	text28
 10513  001BEE                     __ptext28:
 10514                           	opt stack 0
 10515  001BEE                     _ajusteSP_Bombas:
 10516                           	opt stack 0
 10517  001BEE  FFFF               	dw	65535	; assembler added errata NOP
 10518                           
 10519                           ;tela_CONFIG_PRESSAO.h: 9: sprintf(line1, "GERAL : %s", intToFloatStr(sp_pressao_rede));
 10520                           
 10521                           ;incstack = 0
 10522  001BF0  0100               	movlb	0	; () banked
 10523  001BF2  51E4               	movf	_sp_pressao_rede& (0+255),w,b
 10524  001BF4  EC6F  F039         	call	_intToFloatStr
 10525  001BF8  C0B5  F0C2         	movff	?_intToFloatStr,_ajusteSP_Bombas$2348
 10526  001BFC  C0B6  F0C3         	movff	?_intToFloatStr+1,_ajusteSP_Bombas$2348+1
 10527                           
 10528                           ;tela_CONFIG_PRESSAO.h: 9: sprintf(line1, "GERAL : %s", intToFloatStr(sp_pressao_rede));
 10529  001C00  0E7B               	movlw	low _line1
 10530  001C02  0100               	movlb	0	; () banked
 10531  001C04  6FA1               	movwf	sprintf@wh& (0+255),b
 10532  001C06  0E01               	movlw	high _line1
 10533  001C08  0100               	movlb	0	; () banked
 10534  001C0A  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 10535  001C0C  0E2E               	movlw	low STR_98
 10536  001C0E  0100               	movlb	0	; () banked
 10537  001C10  6FA3               	movwf	sprintf@f& (0+255),b
 10538  001C12  0E7F               	movlw	high STR_98
 10539  001C14  0100               	movlb	0	; () banked
 10540  001C16  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 10541  001C18  C0C2  F0A5         	movff	_ajusteSP_Bombas$2348,?_sprintf+4
 10542  001C1C  C0C3  F0A6         	movff	_ajusteSP_Bombas$2348+1,?_sprintf+5
 10543  001C20  EC25  F036         	call	_sprintf	;wreg free
 10544                           
 10545                           ;tela_CONFIG_PRESSAO.h: 10: sprintf(line2, "JOKEY : %s", intToFloatStr(sp_jockey));
 10546  001C24  0100               	movlb	0	; () banked
 10547  001C26  51E3               	movf	_sp_jockey& (0+255),w,b
 10548  001C28  EC6F  F039         	call	_intToFloatStr
 10549  001C2C  C0B5  F0C2         	movff	?_intToFloatStr,_ajusteSP_Bombas$2348
 10550  001C30  C0B6  F0C3         	movff	?_intToFloatStr+1,_ajusteSP_Bombas$2348+1
 10551                           
 10552                           ;tela_CONFIG_PRESSAO.h: 10: sprintf(line2, "JOKEY : %s", intToFloatStr(sp_jockey));
 10553  001C34  0E66               	movlw	low _line2
 10554  001C36  0100               	movlb	0	; () banked
 10555  001C38  6FA1               	movwf	sprintf@wh& (0+255),b
 10556  001C3A  0E01               	movlw	high _line2
 10557  001C3C  0100               	movlb	0	; () banked
 10558  001C3E  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 10559  001C40  0E39               	movlw	low STR_44
 10560  001C42  0100               	movlb	0	; () banked
 10561  001C44  6FA3               	movwf	sprintf@f& (0+255),b
 10562  001C46  0E7F               	movlw	high STR_44
 10563  001C48  0100               	movlb	0	; () banked
 10564  001C4A  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 10565  001C4C  C0C2  F0A5         	movff	_ajusteSP_Bombas$2348,?_sprintf+4
 10566  001C50  C0C3  F0A6         	movff	_ajusteSP_Bombas$2348+1,?_sprintf+5
 10567  001C54  EC25  F036         	call	_sprintf	;wreg free
 10568                           
 10569                           ;tela_CONFIG_PRESSAO.h: 11: sprintf(line3, "PRINCIPAL : %s", intToFloatStr(sp_principal)
      +                          );
 10570  001C58  0100               	movlb	0	; () banked
 10571  001C5A  51E2               	movf	_sp_principal& (0+255),w,b
 10572  001C5C  EC6F  F039         	call	_intToFloatStr
 10573  001C60  C0B5  F0C2         	movff	?_intToFloatStr,_ajusteSP_Bombas$2348
 10574  001C64  C0B6  F0C3         	movff	?_intToFloatStr+1,_ajusteSP_Bombas$2348+1
 10575                           
 10576                           ;tela_CONFIG_PRESSAO.h: 11: sprintf(line3, "PRINCIPAL : %s", intToFloatStr(sp_principal)
      +                          );
 10577  001C68  0E51               	movlw	low _line3
 10578  001C6A  0100               	movlb	0	; () banked
 10579  001C6C  6FA1               	movwf	sprintf@wh& (0+255),b
 10580  001C6E  0E01               	movlw	high _line3
 10581  001C70  0100               	movlb	0	; () banked
 10582  001C72  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 10583  001C74  0E5E               	movlw	low STR_47
 10584  001C76  0100               	movlb	0	; () banked
 10585  001C78  6FA3               	movwf	sprintf@f& (0+255),b
 10586  001C7A  0E7E               	movlw	high STR_47
 10587  001C7C  0100               	movlb	0	; () banked
 10588  001C7E  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 10589  001C80  C0C2  F0A5         	movff	_ajusteSP_Bombas$2348,?_sprintf+4
 10590  001C84  C0C3  F0A6         	movff	_ajusteSP_Bombas$2348+1,?_sprintf+5
 10591  001C88  EC25  F036         	call	_sprintf	;wreg free
 10592                           
 10593                           ;tela_CONFIG_PRESSAO.h: 12: sprintf(line4, "COMBUSTAO : %s", intToFloatStr(sp_estacionar
      +                          ia));
 10594  001C8C  0100               	movlb	0	; () banked
 10595  001C8E  51E1               	movf	_sp_estacionaria& (0+255),w,b
 10596  001C90  EC6F  F039         	call	_intToFloatStr
 10597  001C94  C0B5  F0C2         	movff	?_intToFloatStr,_ajusteSP_Bombas$2348
 10598  001C98  C0B6  F0C3         	movff	?_intToFloatStr+1,_ajusteSP_Bombas$2348+1
 10599                           
 10600                           ;tela_CONFIG_PRESSAO.h: 12: sprintf(line4, "COMBUSTAO : %s", intToFloatStr(sp_estacionar
      +                          ia));
 10601  001C9C  0E3C               	movlw	low _line4
 10602  001C9E  0100               	movlb	0	; () banked
 10603  001CA0  6FA1               	movwf	sprintf@wh& (0+255),b
 10604  001CA2  0E01               	movlw	high _line4
 10605  001CA4  0100               	movlb	0	; () banked
 10606  001CA6  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 10607  001CA8  0E6D               	movlw	low STR_50
 10608  001CAA  0100               	movlb	0	; () banked
 10609  001CAC  6FA3               	movwf	sprintf@f& (0+255),b
 10610  001CAE  0E7E               	movlw	high STR_50
 10611  001CB0  0100               	movlb	0	; () banked
 10612  001CB2  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 10613  001CB4  C0C2  F0A5         	movff	_ajusteSP_Bombas$2348,?_sprintf+4
 10614  001CB8  C0C3  F0A6         	movff	_ajusteSP_Bombas$2348+1,?_sprintf+5
 10615  001CBC  EC25  F036         	call	_sprintf	;wreg free
 10616                           
 10617                           ;tela_CONFIG_PRESSAO.h: 14: if (btPress(1)) {
 10618  001CC0  0E01               	movlw	1
 10619  001CC2  EC82  F037         	call	_btPress
 10620  001CC6  0900               	iorlw	0
 10621  001CC8  B4D8               	btfsc	status,2,c
 10622  001CCA  D019               	goto	l9806
 10623                           
 10624                           ;tela_CONFIG_PRESSAO.h: 15: writeEEPROM_ext(0, sp_jockey);
 10625  001CCC  C0E3  F08C         	movff	_sp_jockey,writeEEPROM_ext@data
 10626  001CD0  0E00               	movlw	0
 10627  001CD2  ECCF  F034         	call	_writeEEPROM_ext
 10628                           
 10629                           ;tela_CONFIG_PRESSAO.h: 16: writeEEPROM_ext(1, sp_principal);
 10630  001CD6  C0E2  F08C         	movff	_sp_principal,writeEEPROM_ext@data
 10631  001CDA  0E01               	movlw	1
 10632  001CDC  ECCF  F034         	call	_writeEEPROM_ext
 10633                           
 10634                           ;tela_CONFIG_PRESSAO.h: 17: writeEEPROM_ext(2, sp_estacionaria);
 10635  001CE0  C0E1  F08C         	movff	_sp_estacionaria,writeEEPROM_ext@data
 10636  001CE4  0E02               	movlw	2
 10637  001CE6  ECCF  F034         	call	_writeEEPROM_ext
 10638                           
 10639                           ;tela_CONFIG_PRESSAO.h: 18: writeEEPROM_ext(4, sp_pressao_rede);
 10640  001CEA  C0E4  F08C         	movff	_sp_pressao_rede,writeEEPROM_ext@data
 10641  001CEE  0E04               	movlw	4
 10642  001CF0  ECCF  F034         	call	_writeEEPROM_ext
 10643                           
 10644                           ;tela_CONFIG_PRESSAO.h: 19: option_posi = 0;
 10645  001CF4  0E00               	movlw	0
 10646  001CF6  0100               	movlb	0	; () banked
 10647  001CF8  6FE0               	movwf	_option_posi& (0+255),b
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;tela_CONFIG_PRESSAO.h: 20: menu_posi = _menu_posi;
 10651  001CFA  C0DE  F0DF         	movff	__menu_posi,_menu_posi
 10652  001CFE                     l9806:
 10653  001CFE  FFFF               	dw	65535	; assembler added errata NOP
 10654                           
 10655                           ;tela_CONFIG_PRESSAO.h: 21: }
 10656                           ;tela_CONFIG_PRESSAO.h: 23: if (btPress(4)) {
 10657  001D00  0E04               	movlw	4
 10658  001D02  EC82  F037         	call	_btPress
 10659  001D06  0900               	iorlw	0
 10660  001D08  B4D8               	btfsc	status,2,c
 10661  001D0A  D0AC               	goto	l9870
 10662                           
 10663                           ;tela_CONFIG_PRESSAO.h: 24: option_posi++;
 10664  001D0C  0100               	movlb	0	; () banked
 10665  001D0E  2BE0               	incf	_option_posi& (0+255),f,b
 10666                           
 10667                           ; BSR set to: 0
 10668                           ;tela_CONFIG_PRESSAO.h: 25: }
 10669                           ;tela_CONFIG_PRESSAO.h: 27: switch (option_posi) {
 10670  001D10  D0A9               	goto	l9870
 10671  001D12                     l9810:
 10672  001D12  FFFF               	dw	65535	; assembler added errata NOP
 10673                           
 10674                           ; BSR set to: 0
 10675                           ;tela_CONFIG_PRESSAO.h: 29: blink(line1, 8, 15);
 10676  001D14  0E7B               	movlw	low _line1
 10677  001D16  0100               	movlb	0	; () banked
 10678  001D18  6F80               	movwf	blink@line& (0+255),b
 10679  001D1A  0E01               	movlw	high _line1
 10680  001D1C  0100               	movlb	0	; () banked
 10681  001D1E  6F81               	movwf	(blink@line+1)& (0+255),b
 10682  001D20  0E08               	movlw	8
 10683  001D22  0100               	movlb	0	; () banked
 10684  001D24  6F82               	movwf	blink@start& (0+255),b
 10685  001D26  0E0F               	movlw	15
 10686  001D28  0100               	movlb	0	; () banked
 10687  001D2A  6F83               	movwf	blink@end& (0+255),b
 10688  001D2C  EC87  F035         	call	_blink	;wreg free
 10689                           
 10690                           ;tela_CONFIG_PRESSAO.h: 30: if (btPress(3)) {
 10691  001D30  0E03               	movlw	3
 10692  001D32  EC82  F037         	call	_btPress
 10693  001D36  0900               	iorlw	0
 10694  001D38  B4D8               	btfsc	status,2,c
 10695  001D3A  D002               	goto	l9816
 10696                           
 10697                           ;tela_CONFIG_PRESSAO.h: 31: sp_pressao_rede++;
 10698  001D3C  0100               	movlb	0	; () banked
 10699  001D3E  2BE4               	incf	_sp_pressao_rede& (0+255),f,b
 10700  001D40                     l9816:
 10701  001D40  FFFF               	dw	65535	; assembler added errata NOP
 10702                           
 10703                           ;tela_CONFIG_PRESSAO.h: 32: }
 10704                           ;tela_CONFIG_PRESSAO.h: 33: if (btPress(2)) {
 10705  001D42  0E02               	movlw	2
 10706  001D44  EC82  F037         	call	_btPress
 10707  001D48  0900               	iorlw	0
 10708  001D4A  B4D8               	btfsc	status,2,c
 10709  001D4C  D002               	goto	l9820
 10710                           
 10711                           ;tela_CONFIG_PRESSAO.h: 34: sp_pressao_rede--;
 10712  001D4E  0100               	movlb	0	; () banked
 10713  001D50  07E4               	decf	_sp_pressao_rede& (0+255),f,b
 10714  001D52                     l9820:
 10715  001D52  FFFF               	dw	65535	; assembler added errata NOP
 10716                           
 10717                           ;tela_CONFIG_PRESSAO.h: 35: }
 10718                           ;tela_CONFIG_PRESSAO.h: 36: if (sp_pressao_rede > 99) {
 10719  001D54  0E63               	movlw	99
 10720  001D56  0100               	movlb	0	; () banked
 10721  001D58  65E4               	cpfsgt	_sp_pressao_rede& (0+255),b
 10722  001D5A  D094               	goto	l862
 10723                           
 10724                           ; BSR set to: 0
 10725                           ;tela_CONFIG_PRESSAO.h: 37: sp_pressao_rede = 0;
 10726  001D5C  0E00               	movlw	0
 10727  001D5E  0100               	movlb	0	; () banked
 10728  001D60  6FE4               	movwf	_sp_pressao_rede& (0+255),b
 10729                           
 10730                           ; BSR set to: 0
 10731                           ;tela_CONFIG_PRESSAO.h: 38: }
 10732                           ;tela_CONFIG_PRESSAO.h: 39: break;
 10733  001D62  D090               	goto	l862
 10734  001D64                     l9824:
 10735  001D64  FFFF               	dw	65535	; assembler added errata NOP
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;tela_CONFIG_PRESSAO.h: 41: blink(line2, 8, 15);
 10739  001D66  0E66               	movlw	low _line2
 10740  001D68  0100               	movlb	0	; () banked
 10741  001D6A  6F80               	movwf	blink@line& (0+255),b
 10742  001D6C  0E01               	movlw	high _line2
 10743  001D6E  0100               	movlb	0	; () banked
 10744  001D70  6F81               	movwf	(blink@line+1)& (0+255),b
 10745  001D72  0E08               	movlw	8
 10746  001D74  0100               	movlb	0	; () banked
 10747  001D76  6F82               	movwf	blink@start& (0+255),b
 10748  001D78  0E0F               	movlw	15
 10749  001D7A  0100               	movlb	0	; () banked
 10750  001D7C  6F83               	movwf	blink@end& (0+255),b
 10751  001D7E  EC87  F035         	call	_blink	;wreg free
 10752                           
 10753                           ;tela_CONFIG_PRESSAO.h: 42: if (btPress(3)) {
 10754  001D82  0E03               	movlw	3
 10755  001D84  EC82  F037         	call	_btPress
 10756  001D88  0900               	iorlw	0
 10757  001D8A  B4D8               	btfsc	status,2,c
 10758  001D8C  D002               	goto	l9830
 10759                           
 10760                           ;tela_CONFIG_PRESSAO.h: 43: sp_jockey++;
 10761  001D8E  0100               	movlb	0	; () banked
 10762  001D90  2BE3               	incf	_sp_jockey& (0+255),f,b
 10763  001D92                     l9830:
 10764  001D92  FFFF               	dw	65535	; assembler added errata NOP
 10765                           
 10766                           ;tela_CONFIG_PRESSAO.h: 44: }
 10767                           ;tela_CONFIG_PRESSAO.h: 45: if (btPress(2)) {
 10768  001D94  0E02               	movlw	2
 10769  001D96  EC82  F037         	call	_btPress
 10770  001D9A  0900               	iorlw	0
 10771  001D9C  B4D8               	btfsc	status,2,c
 10772  001D9E  D002               	goto	l9834
 10773                           
 10774                           ;tela_CONFIG_PRESSAO.h: 46: sp_jockey--;
 10775  001DA0  0100               	movlb	0	; () banked
 10776  001DA2  07E3               	decf	_sp_jockey& (0+255),f,b
 10777  001DA4                     l9834:
 10778  001DA4  FFFF               	dw	65535	; assembler added errata NOP
 10779                           
 10780                           ;tela_CONFIG_PRESSAO.h: 47: }
 10781                           ;tela_CONFIG_PRESSAO.h: 48: if (sp_jockey > 99) {
 10782  001DA6  0E63               	movlw	99
 10783  001DA8  0100               	movlb	0	; () banked
 10784  001DAA  65E3               	cpfsgt	_sp_jockey& (0+255),b
 10785  001DAC  D06B               	goto	l862
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;tela_CONFIG_PRESSAO.h: 49: sp_jockey = 0;
 10789  001DAE  0E00               	movlw	0
 10790  001DB0  0100               	movlb	0	; () banked
 10791  001DB2  6FE3               	movwf	_sp_jockey& (0+255),b
 10792                           
 10793                           ; BSR set to: 0
 10794                           ;tela_CONFIG_PRESSAO.h: 50: }
 10795                           ;tela_CONFIG_PRESSAO.h: 51: break;
 10796  001DB4  D067               	goto	l862
 10797  001DB6                     l9838:
 10798  001DB6  FFFF               	dw	65535	; assembler added errata NOP
 10799                           
 10800                           ; BSR set to: 0
 10801                           ;tela_CONFIG_PRESSAO.h: 53: blink(line3, 12, 18);
 10802  001DB8  0E51               	movlw	low _line3
 10803  001DBA  0100               	movlb	0	; () banked
 10804  001DBC  6F80               	movwf	blink@line& (0+255),b
 10805  001DBE  0E01               	movlw	high _line3
 10806  001DC0  0100               	movlb	0	; () banked
 10807  001DC2  6F81               	movwf	(blink@line+1)& (0+255),b
 10808  001DC4  0E0C               	movlw	12
 10809  001DC6  0100               	movlb	0	; () banked
 10810  001DC8  6F82               	movwf	blink@start& (0+255),b
 10811  001DCA  0E12               	movlw	18
 10812  001DCC  0100               	movlb	0	; () banked
 10813  001DCE  6F83               	movwf	blink@end& (0+255),b
 10814  001DD0  EC87  F035         	call	_blink	;wreg free
 10815                           
 10816                           ;tela_CONFIG_PRESSAO.h: 54: if (btPress(3)) {
 10817  001DD4  0E03               	movlw	3
 10818  001DD6  EC82  F037         	call	_btPress
 10819  001DDA  0900               	iorlw	0
 10820  001DDC  B4D8               	btfsc	status,2,c
 10821  001DDE  D002               	goto	l9844
 10822                           
 10823                           ;tela_CONFIG_PRESSAO.h: 55: sp_principal++;
 10824  001DE0  0100               	movlb	0	; () banked
 10825  001DE2  2BE2               	incf	_sp_principal& (0+255),f,b
 10826  001DE4                     l9844:
 10827  001DE4  FFFF               	dw	65535	; assembler added errata NOP
 10828                           
 10829                           ;tela_CONFIG_PRESSAO.h: 56: }
 10830                           ;tela_CONFIG_PRESSAO.h: 57: if (btPress(2)) {
 10831  001DE6  0E02               	movlw	2
 10832  001DE8  EC82  F037         	call	_btPress
 10833  001DEC  0900               	iorlw	0
 10834  001DEE  B4D8               	btfsc	status,2,c
 10835  001DF0  D002               	goto	l9848
 10836                           
 10837                           ;tela_CONFIG_PRESSAO.h: 58: sp_principal--;
 10838  001DF2  0100               	movlb	0	; () banked
 10839  001DF4  07E2               	decf	_sp_principal& (0+255),f,b
 10840  001DF6                     l9848:
 10841  001DF6  FFFF               	dw	65535	; assembler added errata NOP
 10842                           
 10843                           ;tela_CONFIG_PRESSAO.h: 59: }
 10844                           ;tela_CONFIG_PRESSAO.h: 60: if (sp_principal > 99) {
 10845  001DF8  0E63               	movlw	99
 10846  001DFA  0100               	movlb	0	; () banked
 10847  001DFC  65E2               	cpfsgt	_sp_principal& (0+255),b
 10848  001DFE  D042               	goto	l862
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;tela_CONFIG_PRESSAO.h: 61: sp_principal = 0;
 10852  001E00  0E00               	movlw	0
 10853  001E02  0100               	movlb	0	; () banked
 10854  001E04  6FE2               	movwf	_sp_principal& (0+255),b
 10855                           
 10856                           ; BSR set to: 0
 10857                           ;tela_CONFIG_PRESSAO.h: 62: }
 10858                           ;tela_CONFIG_PRESSAO.h: 63: break;
 10859  001E06  D03E               	goto	l862
 10860  001E08                     l9852:
 10861  001E08  FFFF               	dw	65535	; assembler added errata NOP
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;tela_CONFIG_PRESSAO.h: 65: blink(line4, 12, 18);
 10865  001E0A  0E3C               	movlw	low _line4
 10866  001E0C  0100               	movlb	0	; () banked
 10867  001E0E  6F80               	movwf	blink@line& (0+255),b
 10868  001E10  0E01               	movlw	high _line4
 10869  001E12  0100               	movlb	0	; () banked
 10870  001E14  6F81               	movwf	(blink@line+1)& (0+255),b
 10871  001E16  0E0C               	movlw	12
 10872  001E18  0100               	movlb	0	; () banked
 10873  001E1A  6F82               	movwf	blink@start& (0+255),b
 10874  001E1C  0E12               	movlw	18
 10875  001E1E  0100               	movlb	0	; () banked
 10876  001E20  6F83               	movwf	blink@end& (0+255),b
 10877  001E22  EC87  F035         	call	_blink	;wreg free
 10878                           
 10879                           ;tela_CONFIG_PRESSAO.h: 66: if (btPress(3)) {
 10880  001E26  0E03               	movlw	3
 10881  001E28  EC82  F037         	call	_btPress
 10882  001E2C  0900               	iorlw	0
 10883  001E2E  B4D8               	btfsc	status,2,c
 10884  001E30  D002               	goto	l9858
 10885                           
 10886                           ;tela_CONFIG_PRESSAO.h: 67: sp_estacionaria++;
 10887  001E32  0100               	movlb	0	; () banked
 10888  001E34  2BE1               	incf	_sp_estacionaria& (0+255),f,b
 10889  001E36                     l9858:
 10890  001E36  FFFF               	dw	65535	; assembler added errata NOP
 10891                           
 10892                           ;tela_CONFIG_PRESSAO.h: 68: }
 10893                           ;tela_CONFIG_PRESSAO.h: 69: if (btPress(2)) {
 10894  001E38  0E02               	movlw	2
 10895  001E3A  EC82  F037         	call	_btPress
 10896  001E3E  0900               	iorlw	0
 10897  001E40  B4D8               	btfsc	status,2,c
 10898  001E42  D002               	goto	l9862
 10899                           
 10900                           ;tela_CONFIG_PRESSAO.h: 70: sp_estacionaria--;
 10901  001E44  0100               	movlb	0	; () banked
 10902  001E46  07E1               	decf	_sp_estacionaria& (0+255),f,b
 10903  001E48                     l9862:
 10904  001E48  FFFF               	dw	65535	; assembler added errata NOP
 10905                           
 10906                           ;tela_CONFIG_PRESSAO.h: 71: }
 10907                           ;tela_CONFIG_PRESSAO.h: 72: if (sp_estacionaria > 99) {
 10908  001E4A  0E63               	movlw	99
 10909  001E4C  0100               	movlb	0	; () banked
 10910  001E4E  65E1               	cpfsgt	_sp_estacionaria& (0+255),b
 10911  001E50  D019               	goto	l862
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;tela_CONFIG_PRESSAO.h: 73: sp_estacionaria = 0;
 10915  001E52  0E00               	movlw	0
 10916  001E54  0100               	movlb	0	; () banked
 10917  001E56  6FE1               	movwf	_sp_estacionaria& (0+255),b
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;tela_CONFIG_PRESSAO.h: 74: }
 10921                           ;tela_CONFIG_PRESSAO.h: 75: break;
 10922  001E58  D015               	goto	l862
 10923  001E5A                     l9866:
 10924  001E5A  FFFF               	dw	65535	; assembler added errata NOP
 10925                           
 10926                           ; BSR set to: 0
 10927  001E5C  0E00               	movlw	0
 10928  001E5E  0100               	movlb	0	; () banked
 10929  001E60  6FE0               	movwf	_option_posi& (0+255),b
 10930                           
 10931                           ; BSR set to: 0
 10932                           ;tela_CONFIG_PRESSAO.h: 78: }
 10933                           
 10934                           ;tela_CONFIG_PRESSAO.h: 77: break;
 10935  001E62  D010               	goto	l862
 10936  001E64                     l9870:
 10937  001E64  FFFF               	dw	65535	; assembler added errata NOP
 10938  001E66  0100               	movlb	0	; () banked
 10939  001E68  51E0               	movf	_option_posi& (0+255),w,b
 10940                           
 10941                           ; Switch size 1, requested type "space"
 10942                           ; Number of cases is 4, Range of values is 0 to 3
 10943                           ; switch strategies available:
 10944                           ; Name         Instructions Cycles
 10945                           ; simple_byte           13     7 (average)
 10946                           ;	Chosen strategy is simple_byte
 10947  001E6A  0A00               	xorlw	0	; case 0
 10948  001E6C  B4D8               	btfsc	status,2,c
 10949  001E6E  D751               	goto	l9810
 10950  001E70  0A01               	xorlw	1	; case 1
 10951  001E72  B4D8               	btfsc	status,2,c
 10952  001E74  D777               	goto	l9824
 10953  001E76  0A03               	xorlw	3	; case 2
 10954  001E78  B4D8               	btfsc	status,2,c
 10955  001E7A  D79D               	goto	l9838
 10956  001E7C  0A01               	xorlw	1	; case 3
 10957  001E7E  B4D8               	btfsc	status,2,c
 10958  001E80  D7C3               	goto	l9852
 10959  001E82  D7EB               	goto	l9866
 10960  001E84                     l862:
 10961  001E84  FFFF               	dw	65535	; assembler added errata NOP
 10962                           
 10963                           ; BSR set to: 0
 10964  001E86  0012               	return		;funcret
 10965  001E88  FFFF               	dw	65535	; errata NOP
 10966  001E8A                     __end_of_ajusteSP_Bombas:
 10967                           	opt stack 0
 10968                           tblptru	equ	0xFF8
 10969                           tblptrh	equ	0xFF7
 10970                           tblptrl	equ	0xFF6
 10971                           tablat	equ	0xFF5
 10972                           prodh	equ	0xFF4
 10973                           prodl	equ	0xFF3
 10974                           intcon	equ	0xFF2
 10975                           postinc0	equ	0xFEE
 10976                           wreg	equ	0xFE8
 10977                           postdec1	equ	0xFE5
 10978                           fsr1l	equ	0xFE1
 10979                           indf2	equ	0xFDF
 10980                           postinc2	equ	0xFDE
 10981                           fsr2h	equ	0xFDA
 10982                           fsr2l	equ	0xFD9
 10983                           status	equ	0xFD8
 10984                           
 10985 ;; *************** function _blink *****************
 10986 ;; Defined at:
 10987 ;;		line 173 in file "lcd.h"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  line            2    0[BANK0 ] PTR unsigned char 
 10990 ;;		 -> line3(21), line2(21), line1(21), line4(21), 
 10991 ;;  start           1    2[BANK0 ] unsigned char 
 10992 ;;  end             1    3[BANK0 ] unsigned char 
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;  i               1    4[BANK0 ] unsigned char 
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  1    wreg      void 
 10997 ;; Registers used:
 10998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11004 ;;      Params:         0       4       0       0       0       0       0
 11005 ;;      Locals:         0       1       0       0       0       0       0
 11006 ;;      Temps:          0       0       0       0       0       0       0
 11007 ;;      Totals:         0       5       0       0       0       0       0
 11008 ;;Total ram usage:        5 bytes
 11009 ;; Hardware stack levels used:    1
 11010 ;; Hardware stack levels required when called:    6
 11011 ;; This function calls:
 11012 ;;		Nothing
 11013 ;; This function is called by:
 11014 ;;		_telaPrincipal
 11015 ;;		_tela_ajusteRTC
 11016 ;;		_tela_testeBombas
 11017 ;;		_configuraTelefones
 11018 ;;		_configurarEstacionaria
 11019 ;;		_ajusteSP_Bombas
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text29
 11024  006B0E                     __ptext29:
 11025                           	opt stack 0
 11026  006B0E                     _blink:
 11027                           	opt stack 0
 11028  006B0E  FFFF               	dw	65535	; assembler added errata NOP
 11029                           
 11030                           ;lcd.h: 174: if (blinkk) {
 11031                           
 11032                           ; BSR set to: 0
 11033                           ;incstack = 0
 11034  006B10  0100               	movlb	0	; () banked
 11035  006B12  51DB               	movf	_blinkk& (0+255),w,b
 11036  006B14  B4D8               	btfsc	status,2,c
 11037  006B16  D01F               	goto	l661
 11038                           
 11039                           ; BSR set to: 0
 11040                           ;lcd.h: 175: char i = 0;
 11041  006B18  0E00               	movlw	0
 11042  006B1A  0100               	movlb	0	; () banked
 11043  006B1C  6F84               	movwf	blink@i& (0+255),b
 11044                           
 11045                           ; BSR set to: 0
 11046                           ;lcd.h: 176: for (i = (--start); i < end; i++) {
 11047  006B1E  0100               	movlb	0	; () banked
 11048  006B20  0782               	decf	blink@start& (0+255),f,b
 11049  006B22  C082  F084         	movff	blink@start,blink@i
 11050  006B26  D010               	goto	l8832
 11051  006B28                     l8828:
 11052  006B28  FFFF               	dw	65535	; assembler added errata NOP
 11053                           
 11054                           ; BSR set to: 0
 11055                           ;lcd.h: 177: line[i] = ' ';
 11056  006B2A  0100               	movlb	0	; () banked
 11057  006B2C  5184               	movf	blink@i& (0+255),w,b
 11058  006B2E  0D01               	mullw	1
 11059  006B30  50F3               	movf	prodl,w,c
 11060  006B32  0100               	movlb	0	; () banked
 11061  006B34  2580               	addwf	blink@line& (0+255),w,b
 11062  006B36  6ED9               	movwf	fsr2l,c
 11063  006B38  50F4               	movf	prodh,w,c
 11064  006B3A  0100               	movlb	0	; () banked
 11065  006B3C  2181               	addwfc	(blink@line+1)& (0+255),w,b
 11066  006B3E  6EDA               	movwf	fsr2h,c
 11067  006B40  0E20               	movlw	32
 11068  006B42  6EDF               	movwf	indf2,c
 11069                           
 11070                           ; BSR set to: 0
 11071  006B44  0100               	movlb	0	; () banked
 11072  006B46  2B84               	incf	blink@i& (0+255),f,b
 11073  006B48                     l8832:
 11074  006B48  FFFF               	dw	65535	; assembler added errata NOP
 11075                           
 11076                           ; BSR set to: 0
 11077  006B4A  0100               	movlb	0	; () banked
 11078  006B4C  5183               	movf	blink@end& (0+255),w,b
 11079  006B4E  0100               	movlb	0	; () banked
 11080  006B50  5D84               	subwf	blink@i& (0+255),w,b
 11081  006B52  A0D8               	btfss	status,0,c
 11082  006B54  D7E9               	goto	l8828
 11083  006B56                     l661:
 11084  006B56  FFFF               	dw	65535	; assembler added errata NOP
 11085                           
 11086                           ; BSR set to: 0
 11087  006B58  0012               	return		;funcret
 11088  006B5A  FFFF               	dw	65535	; errata NOP
 11089  006B5C                     __end_of_blink:
 11090                           	opt stack 0
 11091                           tblptru	equ	0xFF8
 11092                           tblptrh	equ	0xFF7
 11093                           tblptrl	equ	0xFF6
 11094                           tablat	equ	0xFF5
 11095                           prodh	equ	0xFF4
 11096                           prodl	equ	0xFF3
 11097                           intcon	equ	0xFF2
 11098                           postinc0	equ	0xFEE
 11099                           wreg	equ	0xFE8
 11100                           postdec1	equ	0xFE5
 11101                           fsr1l	equ	0xFE1
 11102                           indf2	equ	0xFDF
 11103                           postinc2	equ	0xFDE
 11104                           fsr2h	equ	0xFDA
 11105                           fsr2l	equ	0xFD9
 11106                           status	equ	0xFD8
 11107                           
 11108 ;; *************** function _acaoTesteBombas *****************
 11109 ;; Defined at:
 11110 ;;		line 135 in file "controle.h"
 11111 ;; Parameters:    Size  Location     Type
 11112 ;;		None
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;  i               1   88[BANK0 ] unsigned char 
 11115 ;;  intervalo       1   87[BANK0 ] unsigned char 
 11116 ;; Return value:  Size  Location     Type
 11117 ;;                  1    wreg      void 
 11118 ;; Registers used:
 11119 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11120 ;; Tracked objects:
 11121 ;;		On entry : 0/0
 11122 ;;		On exit  : 0/0
 11123 ;;		Unchanged: 0/0
 11124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11125 ;;      Params:         0       0       0       0       0       0       0
 11126 ;;      Locals:         0      12       0       0       0       0       0
 11127 ;;      Temps:          0       5       0       0       0       0       0
 11128 ;;      Totals:         0      17       0       0       0       0       0
 11129 ;;Total ram usage:       17 bytes
 11130 ;; Hardware stack levels used:    1
 11131 ;; Hardware stack levels required when called:   10
 11132 ;; This function calls:
 11133 ;;		_btPress
 11134 ;;		_clearShiftREG
 11135 ;;		_drenarPressao
 11136 ;;		_enviaSMS
 11137 ;;		_intToFloatStr
 11138 ;;		_partidaBombaEstacionaria
 11139 ;;		_readEEPROM_ext
 11140 ;;		_salvarLOG
 11141 ;;		_sprintf
 11142 ;;		_writeEEPROM_ext
 11143 ;; This function is called by:
 11144 ;;		_main
 11145 ;; This function uses a non-reentrant model
 11146 ;;
 11147                           
 11148                           	psect	text30
 11149  0009D0                     __ptext30:
 11150                           	opt stack 0
 11151  0009D0                     _acaoTesteBombas:
 11152                           	opt stack 0
 11153  0009D0  FFFF               	dw	65535	; assembler added errata NOP
 11154                           
 11155                           ;controle.h: 136: if (btPress(1)) {
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;incstack = 0
 11159  0009D2  0E01               	movlw	1
 11160  0009D4  EC82  F037         	call	_btPress
 11161  0009D8  0900               	iorlw	0
 11162  0009DA  B4D8               	btfsc	status,2,c
 11163  0009DC  D03D               	goto	l9102
 11164                           
 11165                           ;controle.h: 137: executandoTeste = 0;
 11166  0009DE  0E00               	movlw	0
 11167  0009E0  0100               	movlb	0	; () banked
 11168  0009E2  6FF2               	movwf	_executandoTeste& (0+255),b
 11169                           
 11170                           ;controle.h: 138: gsmOcupado = 0;
 11171  0009E4  0E00               	movlw	0
 11172  0009E6  0100               	movlb	0	; () banked
 11173  0009E8  6FF4               	movwf	_gsmOcupado& (0+255),b
 11174                           
 11175                           ;controle.h: 139: etapaTesteBombas = 0;
 11176  0009EA  0E00               	movlw	0
 11177  0009EC  6E6D               	movwf	_etapaTesteBombas,c
 11178                           
 11179                           ; BSR set to: 0
 11180                           ;controle.h: 140: unsigned char intervalo = readEEPROM_ext(6);
 11181  0009EE  0E06               	movlw	6
 11182  0009F0  ECD4  F01F         	call	_readEEPROM_ext
 11183  0009F4  0100               	movlb	0	; () banked
 11184  0009F6  6FD7               	movwf	acaoTesteBombas@intervalo& (0+255),b
 11185                           
 11186                           ; BSR set to: 0
 11187                           ;controle.h: 141: intervalo_teste_dia = intervalo > 0 ? intervalo : 1;
 11188  0009F8  0100               	movlb	0	; () banked
 11189  0009FA  51D7               	movf	acaoTesteBombas@intervalo& (0+255),w,b
 11190  0009FC  0100               	movlb	0	; () banked
 11191  0009FE  A4D8               	btfss	status,2,c
 11192  000A00  D006               	goto	l513
 11193                           
 11194                           ; BSR set to: 0
 11195  000A02  0E00               	movlw	0
 11196  000A04  0100               	movlb	0	; () banked
 11197  000A06  6FD0               	movwf	(_acaoTesteBombas$1295+1)& (0+255),b
 11198  000A08  0E01               	movlw	1
 11199  000A0A  6FCF               	movwf	_acaoTesteBombas$1295& (0+255),b
 11200  000A0C  D005               	goto	l515
 11201  000A0E                     l513:
 11202  000A0E  FFFF               	dw	65535	; assembler added errata NOP
 11203                           
 11204                           ; BSR set to: 0
 11205  000A10  C0D7  F0CF         	movff	acaoTesteBombas@intervalo,_acaoTesteBombas$1295
 11206  000A14  0100               	movlb	0	; () banked
 11207  000A16  6BD0               	clrf	(_acaoTesteBombas$1295+1)& (0+255),b
 11208  000A18                     l515:
 11209  000A18  FFFF               	dw	65535	; assembler added errata NOP
 11210                           
 11211                           ; BSR set to: 0
 11212  000A1A  C0CF  F0E9         	movff	_acaoTesteBombas$1295,_intervalo_teste_dia
 11213                           
 11214                           ;controle.h: 142: menu_posi = _menu_posi;
 11215  000A1E  C0DE  F0DF         	movff	__menu_posi,_menu_posi
 11216                           
 11217                           ; BSR set to: 0
 11218                           ;controle.h: 143: char i = 0;
 11219  000A22  0E00               	movlw	0
 11220  000A24  0100               	movlb	0	; () banked
 11221  000A26  6FD8               	movwf	acaoTesteBombas@i& (0+255),b
 11222                           
 11223                           ;controle.h: 144: for (i = 0; i < 8; i++) {
 11224  000A28  0E00               	movlw	0
 11225  000A2A  0100               	movlb	0	; () banked
 11226  000A2C  6FD8               	movwf	acaoTesteBombas@i& (0+255),b
 11227  000A2E                     l9092:
 11228  000A2E  FFFF               	dw	65535	; assembler added errata NOP
 11229                           
 11230                           ; BSR set to: 0
 11231  000A30  0E07               	movlw	7
 11232  000A32  0100               	movlb	0	; () banked
 11233  000A34  65D8               	cpfsgt	acaoTesteBombas@i& (0+255),b
 11234  000A36  D001               	goto	l9096
 11235  000A38  D00F               	goto	l9102
 11236  000A3A                     l9096:
 11237  000A3A  FFFF               	dw	65535	; assembler added errata NOP
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;controle.h: 145: shift[i] = 0;
 11241  000A3C  0100               	movlb	0	; () banked
 11242  000A3E  51D8               	movf	acaoTesteBombas@i& (0+255),w,b
 11243  000A40  0D01               	mullw	1
 11244  000A42  0E40               	movlw	low _shift
 11245  000A44  24F3               	addwf	prodl,w,c
 11246  000A46  6ED9               	movwf	fsr2l,c
 11247  000A48  0E00               	movlw	high _shift
 11248  000A4A  20F4               	addwfc	prodh,w,c
 11249  000A4C  6EDA               	movwf	fsr2h,c
 11250  000A4E  0E00               	movlw	0
 11251  000A50  6EDF               	movwf	indf2,c
 11252                           
 11253                           ; BSR set to: 0
 11254  000A52  0100               	movlb	0	; () banked
 11255  000A54  2BD8               	incf	acaoTesteBombas@i& (0+255),f,b
 11256  000A56  D7EB               	goto	l9092
 11257  000A58                     l9102:
 11258  000A58  FFFF               	dw	65535	; assembler added errata NOP
 11259                           
 11260                           ;controle.h: 146: }
 11261                           ;controle.h: 147: }
 11262                           ;controle.h: 149: if (etapaTesteBombas < 10) {
 11263  000A5A  0E0A               	movlw	10
 11264  000A5C  606D               	cpfslt	_etapaTesteBombas,c
 11265  000A5E  D26E               	goto	l9238
 11266                           
 11267                           ;controle.h: 150: sprintf(&line1[4], "Aguarde... %ds", timerTesteBombas);
 11268  000A60  0E7F               	movlw	low (_line1+4)
 11269  000A62  0100               	movlb	0	; () banked
 11270  000A64  6FA1               	movwf	sprintf@wh& (0+255),b
 11271  000A66  0E01               	movlw	high (_line1+4)
 11272  000A68  0100               	movlb	0	; () banked
 11273  000A6A  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 11274  000A6C  0E7C               	movlw	low STR_37
 11275  000A6E  0100               	movlb	0	; () banked
 11276  000A70  6FA3               	movwf	sprintf@f& (0+255),b
 11277  000A72  0E7E               	movlw	high STR_37
 11278  000A74  0100               	movlb	0	; () banked
 11279  000A76  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 11280  000A78  C0D9  F0A5         	movff	_timerTesteBombas,?_sprintf+4
 11281  000A7C  C0DA  F0A6         	movff	_timerTesteBombas+1,?_sprintf+5
 11282  000A80  EC25  F036         	call	_sprintf	;wreg free
 11283                           
 11284                           ;controle.h: 151: sprintf(&line2[2], "Pressao %s BAR", intToFloatStr(pressao));
 11285  000A84  0100               	movlb	0	; () banked
 11286  000A86  51F8               	movf	_pressao& (0+255),w,b
 11287  000A88  EC6F  F039         	call	_intToFloatStr
 11288  000A8C  C0B5  F0CD         	movff	?_intToFloatStr,_acaoTesteBombas$2346
 11289  000A90  C0B6  F0CE         	movff	?_intToFloatStr+1,_acaoTesteBombas$2346+1
 11290                           
 11291                           ;controle.h: 151: sprintf(&line2[2], "Pressao %s BAR", intToFloatStr(pressao));
 11292  000A94  0E68               	movlw	low (_line2+2)
 11293  000A96  0100               	movlb	0	; () banked
 11294  000A98  6FA1               	movwf	sprintf@wh& (0+255),b
 11295  000A9A  0E01               	movlw	high (_line2+2)
 11296  000A9C  0100               	movlb	0	; () banked
 11297  000A9E  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 11298  000AA0  0E31               	movlw	low STR_38
 11299  000AA2  0100               	movlb	0	; () banked
 11300  000AA4  6FA3               	movwf	sprintf@f& (0+255),b
 11301  000AA6  0E7E               	movlw	high STR_38
 11302  000AA8  0100               	movlb	0	; () banked
 11303  000AAA  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 11304  000AAC  C0CD  F0A5         	movff	_acaoTesteBombas$2346,?_sprintf+4
 11305  000AB0  C0CE  F0A6         	movff	_acaoTesteBombas$2346+1,?_sprintf+5
 11306  000AB4  EC25  F036         	call	_sprintf	;wreg free
 11307                           
 11308                           ;controle.h: 152: }
 11309                           ;controle.h: 154: switch (etapaTesteBombas) {
 11310  000AB8  D241               	goto	l9238
 11311  000ABA                     l9106:
 11312  000ABA  FFFF               	dw	65535	; assembler added errata NOP
 11313                           
 11314                           ;controle.h: 156: dias_restante_teste = 0;
 11315  000ABC  0E00               	movlw	0
 11316  000ABE  0100               	movlb	0	; () banked
 11317  000AC0  6FE8               	movwf	_dias_restante_teste& (0+255),b
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;controle.h: 157: writeEEPROM_ext(10, dias_restante_teste);
 11321  000AC2  C0E8  F08C         	movff	_dias_restante_teste,writeEEPROM_ext@data
 11322  000AC6  0E0A               	movlw	10
 11323  000AC8  ECCF  F034         	call	_writeEEPROM_ext
 11324                           
 11325                           ;controle.h: 158: shift[2] = 1;
 11326  000ACC  0E01               	movlw	1
 11327  000ACE  6E42               	movwf	_shift+2,c
 11328                           
 11329                           ;controle.h: 159: timerTesteBombas = 30;
 11330  000AD0  0E00               	movlw	0
 11331  000AD2  0100               	movlb	0	; () banked
 11332  000AD4  6FDA               	movwf	(_timerTesteBombas+1)& (0+255),b
 11333  000AD6  0E1E               	movlw	30
 11334  000AD8  6FD9               	movwf	_timerTesteBombas& (0+255),b
 11335                           
 11336                           ; BSR set to: 0
 11337                           ;controle.h: 160: etapaTesteBombas = 1;
 11338  000ADA  0E01               	movlw	1
 11339  000ADC  D168               	goto	L25
 11340  000ADE                     l9116:
 11341  000ADE  FFFF               	dw	65535	; assembler added errata NOP
 11342                           
 11343                           ;controle.h: 163: drenarPressao();
 11344  000AE0  EC4A  F034         	call	_drenarPressao	;wreg free
 11345                           
 11346                           ;controle.h: 164: if (pressao <= (sp_pressao_rede - 10)) {
 11347  000AE4  0EF6               	movlw	246
 11348  000AE6  0100               	movlb	0	; () banked
 11349  000AE8  6FC8               	movwf	??_acaoTesteBombas& (0+255),b
 11350  000AEA  0EFF               	movlw	255
 11351  000AEC  0100               	movlb	0	; () banked
 11352  000AEE  6FC9               	movwf	(??_acaoTesteBombas+1)& (0+255),b
 11353  000AF0  0100               	movlb	0	; () banked
 11354  000AF2  51E4               	movf	_sp_pressao_rede& (0+255),w,b
 11355  000AF4  0100               	movlb	0	; () banked
 11356  000AF6  6FCA               	movwf	(??_acaoTesteBombas+2)& (0+255),b
 11357  000AF8  6BCB               	clrf	(??_acaoTesteBombas+3)& (0+255),b
 11358  000AFA  0100               	movlb	0	; () banked
 11359  000AFC  51C8               	movf	??_acaoTesteBombas& (0+255),w,b
 11360  000AFE  0100               	movlb	0	; () banked
 11361  000B00  27CA               	addwf	(??_acaoTesteBombas+2)& (0+255),f,b
 11362  000B02  0100               	movlb	0	; () banked
 11363  000B04  51C9               	movf	(??_acaoTesteBombas+1)& (0+255),w,b
 11364  000B06  0100               	movlb	0	; () banked
 11365  000B08  23CB               	addwfc	(??_acaoTesteBombas+3)& (0+255),f,b
 11366  000B0A  0100               	movlb	0	; () banked
 11367  000B0C  51F8               	movf	_pressao& (0+255),w,b
 11368  000B0E  0100               	movlb	0	; () banked
 11369  000B10  5DCA               	subwf	(??_acaoTesteBombas+2)& (0+255),w,b
 11370  000B12  0100               	movlb	0	; () banked
 11371  000B14  51CB               	movf	(??_acaoTesteBombas+3)& (0+255),w,b
 11372  000B16  0A80               	xorlw	128
 11373  000B18  0100               	movlb	0	; () banked
 11374  000B1A  6FCC               	movwf	(??_acaoTesteBombas+4)& (0+255),b
 11375  000B1C  0100               	movlb	0	; () banked
 11376  000B1E  51F9               	movf	(_pressao+1)& (0+255),w,b
 11377  000B20  0A80               	xorlw	128
 11378  000B22  0100               	movlb	0	; () banked
 11379  000B24  59CC               	subwfb	(??_acaoTesteBombas+4)& (0+255),w,b
 11380  000B26  A0D8               	btfss	status,0,c
 11381  000B28  D233               	goto	l561
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;controle.h: 165: shift[2] = 0;
 11385  000B2A  0E00               	movlw	0
 11386  000B2C  6E42               	movwf	_shift+2,c
 11387                           
 11388                           ;controle.h: 166: shift[6] = 1;
 11389  000B2E  0E01               	movlw	1
 11390  000B30  6E46               	movwf	_shift+6,c
 11391                           
 11392                           ;controle.h: 167: etapaTesteBombas = 2;
 11393  000B32  0E02               	movlw	2
 11394  000B34  D067               	goto	L30
 11395  000B36                     l9122:
 11396  000B36  FFFF               	dw	65535	; assembler added errata NOP
 11397                           
 11398                           ;controle.h: 172: sprintf(line4, "Bomba Jockey...");
 11399  000B38  0E3C               	movlw	low _line4
 11400  000B3A  0100               	movlb	0	; () banked
 11401  000B3C  6FA1               	movwf	sprintf@wh& (0+255),b
 11402  000B3E  0E01               	movlw	high _line4
 11403  000B40  0100               	movlb	0	; () banked
 11404  000B42  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 11405  000B44  0E11               	movlw	low STR_39
 11406  000B46  0100               	movlb	0	; () banked
 11407  000B48  6FA3               	movwf	sprintf@f& (0+255),b
 11408  000B4A  0E7E               	movlw	high STR_39
 11409  000B4C  0100               	movlb	0	; () banked
 11410  000B4E  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 11411  000B50  EC25  F036         	call	_sprintf	;wreg free
 11412                           
 11413                           ;controle.h: 173: if (pressao >= sp_pressao_rede) {
 11414  000B54  0100               	movlb	0	; () banked
 11415  000B56  51E4               	movf	_sp_pressao_rede& (0+255),w,b
 11416  000B58  0100               	movlb	0	; () banked
 11417  000B5A  6FC8               	movwf	??_acaoTesteBombas& (0+255),b
 11418  000B5C  6BC9               	clrf	(??_acaoTesteBombas+1)& (0+255),b
 11419  000B5E  0100               	movlb	0	; () banked
 11420  000B60  51C8               	movf	??_acaoTesteBombas& (0+255),w,b
 11421  000B62  0100               	movlb	0	; () banked
 11422  000B64  5DF8               	subwf	_pressao& (0+255),w,b
 11423  000B66  0100               	movlb	0	; () banked
 11424  000B68  51F9               	movf	(_pressao+1)& (0+255),w,b
 11425  000B6A  0A80               	xorlw	128
 11426  000B6C  0100               	movlb	0	; () banked
 11427  000B6E  6FCA               	movwf	(??_acaoTesteBombas+2)& (0+255),b
 11428  000B70  0100               	movlb	0	; () banked
 11429  000B72  51C9               	movf	(??_acaoTesteBombas+1)& (0+255),w,b
 11430  000B74  0A80               	xorlw	128
 11431  000B76  0100               	movlb	0	; () banked
 11432  000B78  59CA               	subwfb	(??_acaoTesteBombas+2)& (0+255),w,b
 11433  000B7A  A0D8               	btfss	status,0,c
 11434  000B7C  D007               	goto	l9128
 11435                           
 11436                           ; BSR set to: 0
 11437                           ;controle.h: 174: shift[6] = 0;
 11438  000B7E  0E00               	movlw	0
 11439  000B80  6E46               	movwf	_shift+6,c
 11440                           
 11441                           ;controle.h: 175: status_jockey = 1;
 11442  000B82  0E01               	movlw	1
 11443  000B84  0100               	movlb	0	; () banked
 11444  000B86  6FFD               	movwf	_status_jockey& (0+255),b
 11445                           
 11446                           ;controle.h: 176: etapaTesteBombas = 3;
 11447  000B88  0E03               	movlw	3
 11448  000B8A  6E6D               	movwf	_etapaTesteBombas,c
 11449  000B8C                     l9128:
 11450  000B8C  FFFF               	dw	65535	; assembler added errata NOP
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;controle.h: 177: }
 11454                           ;controle.h: 178: if (!timerTesteBombas) {
 11455  000B8E  0100               	movlb	0	; () banked
 11456  000B90  51D9               	movf	_timerTesteBombas& (0+255),w,b
 11457  000B92  0100               	movlb	0	; () banked
 11458  000B94  11DA               	iorwf	(_timerTesteBombas+1)& (0+255),w,b
 11459  000B96  A4D8               	btfss	status,2,c
 11460  000B98  D1FB               	goto	l561
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;controle.h: 179: status_jockey = 0;
 11464  000B9A  0E00               	movlw	0
 11465  000B9C  0100               	movlb	0	; () banked
 11466  000B9E  6FFD               	movwf	_status_jockey& (0+255),b
 11467                           
 11468                           ;controle.h: 180: etapaTesteBombas = 3;
 11469  000BA0  0E03               	movlw	3
 11470  000BA2  D06D               	goto	L42
 11471  000BA4                     l9132:
 11472  000BA4  FFFF               	dw	65535	; assembler added errata NOP
 11473                           
 11474                           ;controle.h: 185: shift[2] = 1;
 11475  000BA6  0E01               	movlw	1
 11476  000BA8  6E42               	movwf	_shift+2,c
 11477                           
 11478                           ;controle.h: 186: etapaTesteBombas = 4;
 11479  000BAA  0E04               	movlw	4
 11480  000BAC  D100               	goto	L25
 11481  000BAE                     l9134:
 11482  000BAE  FFFF               	dw	65535	; assembler added errata NOP
 11483                           
 11484                           ;controle.h: 189: drenarPressao();
 11485  000BB0  EC4A  F034         	call	_drenarPressao	;wreg free
 11486                           
 11487                           ;controle.h: 190: if (pressao <= (sp_pressao_rede - 10)) {
 11488  000BB4  0EF6               	movlw	246
 11489  000BB6  0100               	movlb	0	; () banked
 11490  000BB8  6FC8               	movwf	??_acaoTesteBombas& (0+255),b
 11491  000BBA  0EFF               	movlw	255
 11492  000BBC  0100               	movlb	0	; () banked
 11493  000BBE  6FC9               	movwf	(??_acaoTesteBombas+1)& (0+255),b
 11494  000BC0  0100               	movlb	0	; () banked
 11495  000BC2  51E4               	movf	_sp_pressao_rede& (0+255),w,b
 11496  000BC4  0100               	movlb	0	; () banked
 11497  000BC6  6FCA               	movwf	(??_acaoTesteBombas+2)& (0+255),b
 11498  000BC8  6BCB               	clrf	(??_acaoTesteBombas+3)& (0+255),b
 11499  000BCA  0100               	movlb	0	; () banked
 11500  000BCC  51C8               	movf	??_acaoTesteBombas& (0+255),w,b
 11501  000BCE  0100               	movlb	0	; () banked
 11502  000BD0  27CA               	addwf	(??_acaoTesteBombas+2)& (0+255),f,b
 11503  000BD2  0100               	movlb	0	; () banked
 11504  000BD4  51C9               	movf	(??_acaoTesteBombas+1)& (0+255),w,b
 11505  000BD6  0100               	movlb	0	; () banked
 11506  000BD8  23CB               	addwfc	(??_acaoTesteBombas+3)& (0+255),f,b
 11507  000BDA  0100               	movlb	0	; () banked
 11508  000BDC  51F8               	movf	_pressao& (0+255),w,b
 11509  000BDE  0100               	movlb	0	; () banked
 11510  000BE0  5DCA               	subwf	(??_acaoTesteBombas+2)& (0+255),w,b
 11511  000BE2  0100               	movlb	0	; () banked
 11512  000BE4  51CB               	movf	(??_acaoTesteBombas+3)& (0+255),w,b
 11513  000BE6  0A80               	xorlw	128
 11514  000BE8  0100               	movlb	0	; () banked
 11515  000BEA  6FCC               	movwf	(??_acaoTesteBombas+4)& (0+255),b
 11516  000BEC  0100               	movlb	0	; () banked
 11517  000BEE  51F9               	movf	(_pressao+1)& (0+255),w,b
 11518  000BF0  0A80               	xorlw	128
 11519  000BF2  0100               	movlb	0	; () banked
 11520  000BF4  59CC               	subwfb	(??_acaoTesteBombas+4)& (0+255),w,b
 11521  000BF6  A0D8               	btfss	status,0,c
 11522  000BF8  D1CB               	goto	l561
 11523                           
 11524                           ; BSR set to: 0
 11525                           ;controle.h: 191: shift[5] = 1;
 11526  000BFA  0E01               	movlw	1
 11527  000BFC  6E45               	movwf	_shift+5,c
 11528                           
 11529                           ;controle.h: 192: shift[2] = 0;
 11530  000BFE  0E00               	movlw	0
 11531  000C00  6E42               	movwf	_shift+2,c
 11532                           
 11533                           ;controle.h: 193: etapaTesteBombas = 5;
 11534  000C02  0E05               	movlw	5
 11535  000C04                     L30:
 11536  000C04  FFFF               	dw	65535	; assembler added errata NOP
 11537  000C06  6E6D               	movwf	_etapaTesteBombas,c
 11538                           
 11539                           ;controle.h: 194: timerTesteBombas = 50;
 11540  000C08  0E00               	movlw	0
 11541  000C0A  0100               	movlb	0	; () banked
 11542  000C0C  6FDA               	movwf	(_timerTesteBombas+1)& (0+255),b
 11543  000C0E  0E32               	movlw	50
 11544  000C10  D03C               	goto	L24
 11545  000C12                     l9140:
 11546  000C12  FFFF               	dw	65535	; assembler added errata NOP
 11547                           
 11548                           ;controle.h: 198: sprintf(line4, "Bomba Principal...");
 11549  000C14  0E3C               	movlw	low _line4
 11550  000C16  0100               	movlb	0	; () banked
 11551  000C18  6FA1               	movwf	sprintf@wh& (0+255),b
 11552  000C1A  0E01               	movlw	high _line4
 11553  000C1C  0100               	movlb	0	; () banked
 11554  000C1E  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 11555  000C20  0EF1               	movlw	low STR_40
 11556  000C22  0100               	movlb	0	; () banked
 11557  000C24  6FA3               	movwf	sprintf@f& (0+255),b
 11558  000C26  0E7C               	movlw	high STR_40
 11559  000C28  0100               	movlb	0	; () banked
 11560  000C2A  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 11561  000C2C  EC25  F036         	call	_sprintf	;wreg free
 11562                           
 11563                           ;controle.h: 199: if (pressao >= sp_pressao_rede) {
 11564  000C30  0100               	movlb	0	; () banked
 11565  000C32  51E4               	movf	_sp_pressao_rede& (0+255),w,b
 11566  000C34  0100               	movlb	0	; () banked
 11567  000C36  6FC8               	movwf	??_acaoTesteBombas& (0+255),b
 11568  000C38  6BC9               	clrf	(??_acaoTesteBombas+1)& (0+255),b
 11569  000C3A  0100               	movlb	0	; () banked
 11570  000C3C  51C8               	movf	??_acaoTesteBombas& (0+255),w,b
 11571  000C3E  0100               	movlb	0	; () banked
 11572  000C40  5DF8               	subwf	_pressao& (0+255),w,b
 11573  000C42  0100               	movlb	0	; () banked
 11574  000C44  51F9               	movf	(_pressao+1)& (0+255),w,b
 11575  000C46  0A80               	xorlw	128
 11576  000C48  0100               	movlb	0	; () banked
 11577  000C4A  6FCA               	movwf	(??_acaoTesteBombas+2)& (0+255),b
 11578  000C4C  0100               	movlb	0	; () banked
 11579  000C4E  51C9               	movf	(??_acaoTesteBombas+1)& (0+255),w,b
 11580  000C50  0A80               	xorlw	128
 11581  000C52  0100               	movlb	0	; () banked
 11582  000C54  59CA               	subwfb	(??_acaoTesteBombas+2)& (0+255),w,b
 11583  000C56  A0D8               	btfss	status,0,c
 11584  000C58  D007               	goto	l9146
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;controle.h: 200: shift[5] = 0;
 11588  000C5A  0E00               	movlw	0
 11589  000C5C  6E45               	movwf	_shift+5,c
 11590                           
 11591                           ;controle.h: 201: status_principal = 1;
 11592  000C5E  0E01               	movlw	1
 11593  000C60  0100               	movlb	0	; () banked
 11594  000C62  6FFC               	movwf	_status_principal& (0+255),b
 11595                           
 11596                           ;controle.h: 202: etapaTesteBombas = 6;
 11597  000C64  0E06               	movlw	6
 11598  000C66  6E6D               	movwf	_etapaTesteBombas,c
 11599  000C68                     l9146:
 11600  000C68  FFFF               	dw	65535	; assembler added errata NOP
 11601                           
 11602                           ; BSR set to: 0
 11603                           ;controle.h: 203: }
 11604                           ;controle.h: 204: if (!timerTesteBombas) {
 11605  000C6A  0100               	movlb	0	; () banked
 11606  000C6C  51D9               	movf	_timerTesteBombas& (0+255),w,b
 11607  000C6E  0100               	movlb	0	; () banked
 11608  000C70  11DA               	iorwf	(_timerTesteBombas+1)& (0+255),w,b
 11609  000C72  A4D8               	btfss	status,2,c
 11610  000C74  D18D               	goto	l561
 11611                           
 11612                           ; BSR set to: 0
 11613                           ;controle.h: 205: status_principal = 0;
 11614  000C76  0E00               	movlw	0
 11615  000C78  0100               	movlb	0	; () banked
 11616  000C7A  6FFC               	movwf	_status_principal& (0+255),b
 11617                           
 11618                           ;controle.h: 206: etapaTesteBombas = 6;
 11619  000C7C  0E06               	movlw	6
 11620  000C7E                     L42:
 11621  000C7E  FFFF               	dw	65535	; assembler added errata NOP
 11622  000C80  6E6D               	movwf	_etapaTesteBombas,c
 11623                           
 11624                           ;controle.h: 207: timerTesteBombas = 30;
 11625  000C82  0E00               	movlw	0
 11626  000C84  0100               	movlb	0	; () banked
 11627  000C86  6FDA               	movwf	(_timerTesteBombas+1)& (0+255),b
 11628  000C88  0E1E               	movlw	30
 11629  000C8A                     L24:
 11630  000C8A  FFFF               	dw	65535	; assembler added errata NOP
 11631  000C8C  6FD9               	movwf	_timerTesteBombas& (0+255),b
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;controle.h: 208: }
 11635                           ;controle.h: 209: break;
 11636  000C8E  D180               	goto	l561
 11637  000C90                     l9150:
 11638  000C90  FFFF               	dw	65535	; assembler added errata NOP
 11639                           
 11640                           ;controle.h: 211: shift[2] = 1;
 11641  000C92  0E01               	movlw	1
 11642  000C94  6E42               	movwf	_shift+2,c
 11643                           
 11644                           ;controle.h: 212: etapaTesteBombas = 7;
 11645  000C96  0E07               	movlw	7
 11646  000C98  D08A               	goto	L25
 11647  000C9A                     l9152:
 11648  000C9A  FFFF               	dw	65535	; assembler added errata NOP
 11649                           
 11650                           ;controle.h: 215: drenarPressao();
 11651  000C9C  EC4A  F034         	call	_drenarPressao	;wreg free
 11652                           
 11653                           ;controle.h: 216: if (pressao <= (sp_pressao_rede - 10)) {
 11654  000CA0  0EF6               	movlw	246
 11655  000CA2  0100               	movlb	0	; () banked
 11656  000CA4  6FC8               	movwf	??_acaoTesteBombas& (0+255),b
 11657  000CA6  0EFF               	movlw	255
 11658  000CA8  0100               	movlb	0	; () banked
 11659  000CAA  6FC9               	movwf	(??_acaoTesteBombas+1)& (0+255),b
 11660  000CAC  0100               	movlb	0	; () banked
 11661  000CAE  51E4               	movf	_sp_pressao_rede& (0+255),w,b
 11662  000CB0  0100               	movlb	0	; () banked
 11663  000CB2  6FCA               	movwf	(??_acaoTesteBombas+2)& (0+255),b
 11664  000CB4  6BCB               	clrf	(??_acaoTesteBombas+3)& (0+255),b
 11665  000CB6  0100               	movlb	0	; () banked
 11666  000CB8  51C8               	movf	??_acaoTesteBombas& (0+255),w,b
 11667  000CBA  0100               	movlb	0	; () banked
 11668  000CBC  27CA               	addwf	(??_acaoTesteBombas+2)& (0+255),f,b
 11669  000CBE  0100               	movlb	0	; () banked
 11670  000CC0  51C9               	movf	(??_acaoTesteBombas+1)& (0+255),w,b
 11671  000CC2  0100               	movlb	0	; () banked
 11672  000CC4  23CB               	addwfc	(??_acaoTesteBombas+3)& (0+255),f,b
 11673  000CC6  0100               	movlb	0	; () banked
 11674  000CC8  51F8               	movf	_pressao& (0+255),w,b
 11675  000CCA  0100               	movlb	0	; () banked
 11676  000CCC  5DCA               	subwf	(??_acaoTesteBombas+2)& (0+255),w,b
 11677  000CCE  0100               	movlb	0	; () banked
 11678  000CD0  51CB               	movf	(??_acaoTesteBombas+3)& (0+255),w,b
 11679  000CD2  0A80               	xorlw	128
 11680  000CD4  0100               	movlb	0	; () banked
 11681  000CD6  6FCC               	movwf	(??_acaoTesteBombas+4)& (0+255),b
 11682  000CD8  0100               	movlb	0	; () banked
 11683  000CDA  51F9               	movf	(_pressao+1)& (0+255),w,b
 11684  000CDC  0A80               	xorlw	128
 11685  000CDE  0100               	movlb	0	; () banked
 11686  000CE0  59CC               	subwfb	(??_acaoTesteBombas+4)& (0+255),w,b
 11687  000CE2  A0D8               	btfss	status,0,c
 11688  000CE4  D155               	goto	l561
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;controle.h: 217: shift[2] = 0;
 11692  000CE6  0E00               	movlw	0
 11693  000CE8  6E42               	movwf	_shift+2,c
 11694                           
 11695                           ;controle.h: 218: etapaTesteBombas = 8;
 11696  000CEA  0E08               	movlw	8
 11697  000CEC  6E6D               	movwf	_etapaTesteBombas,c
 11698                           
 11699                           ; BSR set to: 0
 11700                           ;controle.h: 219: timerTesteBombas = tempo_limite_estacionaria;
 11701  000CEE  C0E6  F0D9         	movff	_tempo_limite_estacionaria,_timerTesteBombas
 11702  000CF2  0100               	movlb	0	; () banked
 11703  000CF4  6BDA               	clrf	(_timerTesteBombas+1)& (0+255),b
 11704                           
 11705                           ; BSR set to: 0
 11706                           ;controle.h: 220: }
 11707                           ;controle.h: 221: break;
 11708  000CF6  D14C               	goto	l561
 11709  000CF8                     l9160:
 11710  000CF8  FFFF               	dw	65535	; assembler added errata NOP
 11711                           
 11712                           ;controle.h: 223: sprintf(line4, "Bomba Combustao...");
 11713  000CFA  0E3C               	movlw	low _line4
 11714  000CFC  0100               	movlb	0	; () banked
 11715  000CFE  6FA1               	movwf	sprintf@wh& (0+255),b
 11716  000D00  0E01               	movlw	high _line4
 11717  000D02  0100               	movlb	0	; () banked
 11718  000D04  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 11719  000D06  0E04               	movlw	low STR_41
 11720  000D08  0100               	movlb	0	; () banked
 11721  000D0A  6FA3               	movwf	sprintf@f& (0+255),b
 11722  000D0C  0E7D               	movlw	high STR_41
 11723  000D0E  0100               	movlb	0	; () banked
 11724  000D10  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 11725  000D12  EC25  F036         	call	_sprintf	;wreg free
 11726                           
 11727                           ;controle.h: 224: partidaBombaEstacionaria(1);
 11728  000D16  0E01               	movlw	1
 11729  000D18  ECE2  F01D         	call	_partidaBombaEstacionaria
 11730                           
 11731                           ;controle.h: 226: if (flagEstacionariaLigada || pressao >= sp_pressao_rede) {
 11732  000D1C  0100               	movlb	0	; () banked
 11733  000D1E  51F1               	movf	_flagEstacionariaLigada& (0+255),w,b
 11734  000D20  A4D8               	btfss	status,2,c
 11735  000D22  D015               	goto	l9168
 11736                           
 11737                           ; BSR set to: 0
 11738  000D24  0100               	movlb	0	; () banked
 11739  000D26  51E4               	movf	_sp_pressao_rede& (0+255),w,b
 11740  000D28  0100               	movlb	0	; () banked
 11741  000D2A  6FC8               	movwf	??_acaoTesteBombas& (0+255),b
 11742  000D2C  6BC9               	clrf	(??_acaoTesteBombas+1)& (0+255),b
 11743  000D2E  0100               	movlb	0	; () banked
 11744  000D30  51C8               	movf	??_acaoTesteBombas& (0+255),w,b
 11745  000D32  0100               	movlb	0	; () banked
 11746  000D34  5DF8               	subwf	_pressao& (0+255),w,b
 11747  000D36  0100               	movlb	0	; () banked
 11748  000D38  51F9               	movf	(_pressao+1)& (0+255),w,b
 11749  000D3A  0A80               	xorlw	128
 11750  000D3C  0100               	movlb	0	; () banked
 11751  000D3E  6FCA               	movwf	(??_acaoTesteBombas+2)& (0+255),b
 11752  000D40  0100               	movlb	0	; () banked
 11753  000D42  51C9               	movf	(??_acaoTesteBombas+1)& (0+255),w,b
 11754  000D44  0A80               	xorlw	128
 11755  000D46  0100               	movlb	0	; () banked
 11756  000D48  59CA               	subwfb	(??_acaoTesteBombas+2)& (0+255),w,b
 11757  000D4A  A0D8               	btfss	status,0,c
 11758  000D4C  D00A               	goto	l9172
 11759  000D4E                     l9168:
 11760  000D4E  FFFF               	dw	65535	; assembler added errata NOP
 11761                           
 11762                           ; BSR set to: 0
 11763                           ;controle.h: 227: status_estacionaria = 1;
 11764  000D50  0E01               	movlw	1
 11765  000D52  0100               	movlb	0	; () banked
 11766  000D54  6FFB               	movwf	_status_estacionaria& (0+255),b
 11767                           
 11768                           ; BSR set to: 0
 11769                           ;controle.h: 228: timerTesteBombas = tempo_limite_teste_estacionaria;
 11770  000D56  C0E5  F0D9         	movff	_tempo_limite_teste_estacionaria,_timerTesteBombas
 11771  000D5A  0100               	movlb	0	; () banked
 11772  000D5C  6BDA               	clrf	(_timerTesteBombas+1)& (0+255),b
 11773                           
 11774                           ;controle.h: 229: etapaTesteBombas = 9;
 11775  000D5E  0E09               	movlw	9
 11776  000D60  6E6D               	movwf	_etapaTesteBombas,c
 11777  000D62                     l9172:
 11778  000D62  FFFF               	dw	65535	; assembler added errata NOP
 11779                           
 11780                           ; BSR set to: 0
 11781                           ;controle.h: 230: }
 11782                           ;controle.h: 231: if (!timerTesteBombas) {;
 11783  000D64  0100               	movlb	0	; () banked
 11784  000D66  51D9               	movf	_timerTesteBombas& (0+255),w,b
 11785  000D68  0100               	movlb	0	; () banked
 11786  000D6A  11DA               	iorwf	(_timerTesteBombas+1)& (0+255),w,b
 11787  000D6C  A4D8               	btfss	status,2,c
 11788  000D6E  D110               	goto	l561
 11789                           
 11790                           ; BSR set to: 0
 11791                           ;controle.h: 232: etapaTesteBombas = 10;
 11792  000D70  0E0A               	movlw	10
 11793  000D72  6E6D               	movwf	_etapaTesteBombas,c
 11794                           
 11795                           ;controle.h: 233: status_estacionaria = 0;
 11796  000D74  0E00               	movlw	0
 11797  000D76  0100               	movlb	0	; () banked
 11798  000D78  6FFB               	movwf	_status_estacionaria& (0+255),b
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;controle.h: 234: }
 11802                           ;controle.h: 235: break;
 11803  000D7A  D10A               	goto	l561
 11804  000D7C                     l9176:
 11805  000D7C  FFFF               	dw	65535	; assembler added errata NOP
 11806                           
 11807                           ;controle.h: 237: sprintf(line4, "Bomba Ligada...");
 11808  000D7E  0E3C               	movlw	low _line4
 11809  000D80  0100               	movlb	0	; () banked
 11810  000D82  6FA1               	movwf	sprintf@wh& (0+255),b
 11811  000D84  0E01               	movlw	high _line4
 11812  000D86  0100               	movlb	0	; () banked
 11813  000D88  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 11814  000D8A  0E01               	movlw	low STR_42
 11815  000D8C  0100               	movlb	0	; () banked
 11816  000D8E  6FA3               	movwf	sprintf@f& (0+255),b
 11817  000D90  0E7E               	movlw	high STR_42
 11818  000D92  0100               	movlb	0	; () banked
 11819  000D94  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 11820  000D96  EC25  F036         	call	_sprintf	;wreg free
 11821                           
 11822                           ;controle.h: 238: partidaBombaEstacionaria(1);
 11823  000D9A  0E01               	movlw	1
 11824  000D9C  ECE2  F01D         	call	_partidaBombaEstacionaria
 11825                           
 11826                           ;controle.h: 239: if (!timerTesteBombas) {
 11827  000DA0  0100               	movlb	0	; () banked
 11828  000DA2  51D9               	movf	_timerTesteBombas& (0+255),w,b
 11829  000DA4  0100               	movlb	0	; () banked
 11830  000DA6  11DA               	iorwf	(_timerTesteBombas+1)& (0+255),w,b
 11831  000DA8  A4D8               	btfss	status,2,c
 11832  000DAA  D0F2               	goto	l561
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;controle.h: 240: etapaTesteBombas = 10;
 11836  000DAC  0E0A               	movlw	10
 11837  000DAE                     L25:
 11838  000DAE  FFFF               	dw	65535	; assembler added errata NOP
 11839  000DB0  6E6D               	movwf	_etapaTesteBombas,c
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;controle.h: 241: }
 11843                           ;controle.h: 242: break;
 11844  000DB2  D0EE               	goto	l561
 11845  000DB4                     l9184:
 11846  000DB4  FFFF               	dw	65535	; assembler added errata NOP
 11847                           
 11848                           ;controle.h: 244: salvarLOG();
 11849  000DB6  ECAB  F03B         	call	_salvarLOG	;wreg free
 11850                           
 11851                           ;controle.h: 245: partidaBombaEstacionaria(2);
 11852  000DBA  0E02               	movlw	2
 11853  000DBC  ECE2  F01D         	call	_partidaBombaEstacionaria
 11854                           
 11855                           ;controle.h: 246: clearShiftREG();
 11856  000DC0  EC2B  F034         	call	_clearShiftREG	;wreg free
 11857                           
 11858                           ;controle.h: 247: etapaTesteBombas = 11;
 11859  000DC4  0E0B               	movlw	11
 11860  000DC6  6E6D               	movwf	_etapaTesteBombas,c
 11861                           
 11862                           ;controle.h: 248: timerTesteBombas = 10;
 11863  000DC8  0E00               	movlw	0
 11864  000DCA  0100               	movlb	0	; () banked
 11865  000DCC  6FDA               	movwf	(_timerTesteBombas+1)& (0+255),b
 11866  000DCE  0E0A               	movlw	10
 11867  000DD0  6FD9               	movwf	_timerTesteBombas& (0+255),b
 11868                           
 11869                           ; BSR set to: 0
 11870                           ;controle.h: 249: executandoTeste = 0;
 11871  000DD2  0E00               	movlw	0
 11872  000DD4  0100               	movlb	0	; () banked
 11873  000DD6  6FF2               	movwf	_executandoTeste& (0+255),b
 11874                           
 11875                           ;controle.h: 250: break;
 11876  000DD8  D0DB               	goto	l561
 11877  000DDA                     l9194:
 11878  000DDA  FFFF               	dw	65535	; assembler added errata NOP
 11879                           
 11880                           ;controle.h: 252: sprintf(&line1[2], "Teste Concluido!");
 11881  000DDC  0E7D               	movlw	low (_line1+2)
 11882  000DDE  0100               	movlb	0	; () banked
 11883  000DE0  6FA1               	movwf	sprintf@wh& (0+255),b
 11884  000DE2  0E01               	movlw	high (_line1+2)
 11885  000DE4  0100               	movlb	0	; () banked
 11886  000DE6  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 11887  000DE8  0EBE               	movlw	low STR_43
 11888  000DEA  0100               	movlb	0	; () banked
 11889  000DEC  6FA3               	movwf	sprintf@f& (0+255),b
 11890  000DEE  0E7D               	movlw	high STR_43
 11891  000DF0  0100               	movlb	0	; () banked
 11892  000DF2  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 11893  000DF4  EC25  F036         	call	_sprintf	;wreg free
 11894                           
 11895                           ;controle.h: 253: sprintf(line2, "JOKEY : %s", status_jockey == 1 ? "OK" : "ERRO");
 11896  000DF8  0100               	movlb	0	; () banked
 11897  000DFA  05FD               	decf	_status_jockey& (0+255),w,b
 11898  000DFC  B4D8               	btfsc	status,2,c
 11899  000DFE  D005               	goto	l9200
 11900                           
 11901                           ; BSR set to: 0
 11902  000E00  0EE2               	movlw	low STR_46
 11903  000E02  0100               	movlb	0	; () banked
 11904  000E04  6FD1               	movwf	_acaoTesteBombas$1311& (0+255),b
 11905  000E06  0E7F               	movlw	high STR_46
 11906  000E08  D005               	goto	L26
 11907  000E0A                     l9200:
 11908  000E0A  FFFF               	dw	65535	; assembler added errata NOP
 11909                           
 11910                           ; BSR set to: 0
 11911  000E0C  0EF9               	movlw	low STR_5
 11912  000E0E  0100               	movlb	0	; () banked
 11913  000E10  6FD1               	movwf	_acaoTesteBombas$1311& (0+255),b
 11914  000E12  0E7F               	movlw	high STR_5
 11915  000E14                     L26:
 11916  000E14  FFFF               	dw	65535	; assembler added errata NOP
 11917  000E16  0100               	movlb	0	; () banked
 11918  000E18  6FD2               	movwf	(_acaoTesteBombas$1311+1)& (0+255),b
 11919                           
 11920                           ; BSR set to: 0
 11921                           
 11922                           ; BSR set to: 0
 11923  000E1A  0E66               	movlw	low _line2
 11924  000E1C  0100               	movlb	0	; () banked
 11925  000E1E  6FA1               	movwf	sprintf@wh& (0+255),b
 11926  000E20  0E01               	movlw	high _line2
 11927  000E22  0100               	movlb	0	; () banked
 11928  000E24  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 11929  000E26  0E39               	movlw	low STR_44
 11930  000E28  0100               	movlb	0	; () banked
 11931  000E2A  6FA3               	movwf	sprintf@f& (0+255),b
 11932  000E2C  0E7F               	movlw	high STR_44
 11933  000E2E  0100               	movlb	0	; () banked
 11934  000E30  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 11935  000E32  C0D1  F0A5         	movff	_acaoTesteBombas$1311,?_sprintf+4
 11936  000E36  C0D2  F0A6         	movff	_acaoTesteBombas$1311+1,?_sprintf+5
 11937  000E3A  EC25  F036         	call	_sprintf	;wreg free
 11938                           
 11939                           ;controle.h: 254: sprintf(line3, "PRINCIPAL : %s", status_principal == 1 ? "OK" : "ERRO"
      +                          );
 11940  000E3E  0100               	movlb	0	; () banked
 11941  000E40  05FC               	decf	_status_principal& (0+255),w,b
 11942  000E42  B4D8               	btfsc	status,2,c
 11943  000E44  D005               	goto	l9208
 11944                           
 11945                           ; BSR set to: 0
 11946  000E46  0EE2               	movlw	low STR_46
 11947  000E48  0100               	movlb	0	; () banked
 11948  000E4A  6FD3               	movwf	_acaoTesteBombas$1316& (0+255),b
 11949  000E4C  0E7F               	movlw	high STR_46
 11950  000E4E  D005               	goto	L27
 11951  000E50                     l9208:
 11952  000E50  FFFF               	dw	65535	; assembler added errata NOP
 11953                           
 11954                           ; BSR set to: 0
 11955  000E52  0EF9               	movlw	low STR_5
 11956  000E54  0100               	movlb	0	; () banked
 11957  000E56  6FD3               	movwf	_acaoTesteBombas$1316& (0+255),b
 11958  000E58  0E7F               	movlw	high STR_5
 11959  000E5A                     L27:
 11960  000E5A  FFFF               	dw	65535	; assembler added errata NOP
 11961  000E5C  0100               	movlb	0	; () banked
 11962  000E5E  6FD4               	movwf	(_acaoTesteBombas$1316+1)& (0+255),b
 11963                           
 11964                           ; BSR set to: 0
 11965                           
 11966                           ; BSR set to: 0
 11967  000E60  0E51               	movlw	low _line3
 11968  000E62  0100               	movlb	0	; () banked
 11969  000E64  6FA1               	movwf	sprintf@wh& (0+255),b
 11970  000E66  0E01               	movlw	high _line3
 11971  000E68  0100               	movlb	0	; () banked
 11972  000E6A  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 11973  000E6C  0E5E               	movlw	low STR_47
 11974  000E6E  0100               	movlb	0	; () banked
 11975  000E70  6FA3               	movwf	sprintf@f& (0+255),b
 11976  000E72  0E7E               	movlw	high STR_47
 11977  000E74  0100               	movlb	0	; () banked
 11978  000E76  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 11979  000E78  C0D3  F0A5         	movff	_acaoTesteBombas$1316,?_sprintf+4
 11980  000E7C  C0D4  F0A6         	movff	_acaoTesteBombas$1316+1,?_sprintf+5
 11981  000E80  EC25  F036         	call	_sprintf	;wreg free
 11982                           
 11983                           ;controle.h: 255: sprintf(line4, "COMBUSTAO : %s", status_estacionaria == 1 ? "OK" : "ER
      +                          RO");
 11984  000E84  0100               	movlb	0	; () banked
 11985  000E86  05FB               	decf	_status_estacionaria& (0+255),w,b
 11986  000E88  B4D8               	btfsc	status,2,c
 11987  000E8A  D005               	goto	l9216
 11988                           
 11989                           ; BSR set to: 0
 11990  000E8C  0EE2               	movlw	low STR_46
 11991  000E8E  0100               	movlb	0	; () banked
 11992  000E90  6FD5               	movwf	_acaoTesteBombas$1321& (0+255),b
 11993  000E92  0E7F               	movlw	high STR_46
 11994  000E94  D005               	goto	L28
 11995  000E96                     l9216:
 11996  000E96  FFFF               	dw	65535	; assembler added errata NOP
 11997                           
 11998                           ; BSR set to: 0
 11999  000E98  0EF9               	movlw	low STR_5
 12000  000E9A  0100               	movlb	0	; () banked
 12001  000E9C  6FD5               	movwf	_acaoTesteBombas$1321& (0+255),b
 12002  000E9E  0E7F               	movlw	high STR_5
 12003  000EA0                     L28:
 12004  000EA0  FFFF               	dw	65535	; assembler added errata NOP
 12005  000EA2  0100               	movlb	0	; () banked
 12006  000EA4  6FD6               	movwf	(_acaoTesteBombas$1321+1)& (0+255),b
 12007                           
 12008                           ; BSR set to: 0
 12009                           
 12010                           ; BSR set to: 0
 12011  000EA6  0E3C               	movlw	low _line4
 12012  000EA8  0100               	movlb	0	; () banked
 12013  000EAA  6FA1               	movwf	sprintf@wh& (0+255),b
 12014  000EAC  0E01               	movlw	high _line4
 12015  000EAE  0100               	movlb	0	; () banked
 12016  000EB0  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 12017  000EB2  0E6D               	movlw	low STR_50
 12018  000EB4  0100               	movlb	0	; () banked
 12019  000EB6  6FA3               	movwf	sprintf@f& (0+255),b
 12020  000EB8  0E7E               	movlw	high STR_50
 12021  000EBA  0100               	movlb	0	; () banked
 12022  000EBC  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 12023  000EBE  C0D5  F0A5         	movff	_acaoTesteBombas$1321,?_sprintf+4
 12024  000EC2  C0D6  F0A6         	movff	_acaoTesteBombas$1321+1,?_sprintf+5
 12025  000EC6  EC25  F036         	call	_sprintf	;wreg free
 12026                           
 12027                           ;controle.h: 256: if (!timerTesteBombas) {
 12028  000ECA  0100               	movlb	0	; () banked
 12029  000ECC  51D9               	movf	_timerTesteBombas& (0+255),w,b
 12030  000ECE  0100               	movlb	0	; () banked
 12031  000ED0  11DA               	iorwf	(_timerTesteBombas+1)& (0+255),w,b
 12032  000ED2  A4D8               	btfss	status,2,c
 12033  000ED4  D05D               	goto	l561
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;controle.h: 257: etapaTesteBombas = 12;
 12037  000ED6  0E0C               	movlw	12
 12038  000ED8  6E6D               	movwf	_etapaTesteBombas,c
 12039                           
 12040                           ;controle.h: 258: timerTesteBombas = 90;
 12041  000EDA  0E00               	movlw	0
 12042  000EDC  0100               	movlb	0	; () banked
 12043  000EDE  6FDA               	movwf	(_timerTesteBombas+1)& (0+255),b
 12044  000EE0  0E5A               	movlw	90
 12045  000EE2  6FD9               	movwf	_timerTesteBombas& (0+255),b
 12046                           
 12047                           ;controle.h: 259: gsmOcupado = 1;
 12048  000EE4  0E01               	movlw	1
 12049  000EE6  D01F               	goto	L29
 12050  000EE8                     l9224:
 12051  000EE8  FFFF               	dw	65535	; assembler added errata NOP
 12052                           
 12053                           ;controle.h: 263: sprintf(&line4[2], "enviando SMS...");
 12054  000EEA  0E3E               	movlw	low (_line4+2)
 12055  000EEC  0100               	movlb	0	; () banked
 12056  000EEE  6FA1               	movwf	sprintf@wh& (0+255),b
 12057  000EF0  0E01               	movlw	high (_line4+2)
 12058  000EF2  0100               	movlb	0	; () banked
 12059  000EF4  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 12060  000EF6  0EF1               	movlw	low STR_53
 12061  000EF8  0100               	movlb	0	; () banked
 12062  000EFA  6FA3               	movwf	sprintf@f& (0+255),b
 12063  000EFC  0E7D               	movlw	high STR_53
 12064  000EFE  0100               	movlb	0	; () banked
 12065  000F00  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 12066  000F02  EC25  F036         	call	_sprintf	;wreg free
 12067                           
 12068                           ;controle.h: 264: gsmOcupado = 1;
 12069  000F06  0E01               	movlw	1
 12070  000F08  0100               	movlb	0	; () banked
 12071  000F0A  6FF4               	movwf	_gsmOcupado& (0+255),b
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;controle.h: 265: enviaSMS(2);
 12075  000F0C  0E02               	movlw	2
 12076  000F0E  ECF6  F00B         	call	_enviaSMS
 12077                           
 12078                           ;controle.h: 266: if (!timerTesteBombas) {
 12079  000F12  0100               	movlb	0	; () banked
 12080  000F14  51D9               	movf	_timerTesteBombas& (0+255),w,b
 12081  000F16  0100               	movlb	0	; () banked
 12082  000F18  11DA               	iorwf	(_timerTesteBombas+1)& (0+255),w,b
 12083  000F1A  A4D8               	btfss	status,2,c
 12084  000F1C  D039               	goto	l561
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;controle.h: 267: menu_posi = 0;
 12088  000F1E  0E00               	movlw	0
 12089  000F20  0100               	movlb	0	; () banked
 12090  000F22  6FDF               	movwf	_menu_posi& (0+255),b
 12091                           
 12092                           ;controle.h: 268: gsmOcupado = 0;
 12093  000F24  0E00               	movlw	0
 12094  000F26                     L29:
 12095  000F26  FFFF               	dw	65535	; assembler added errata NOP
 12096  000F28  0100               	movlb	0	; () banked
 12097  000F2A  6FF4               	movwf	_gsmOcupado& (0+255),b
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;controle.h: 269: }
 12101                           ;controle.h: 270: break;
 12102  000F2C  D031               	goto	l561
 12103  000F2E                     l9234:
 12104  000F2E  FFFF               	dw	65535	; assembler added errata NOP
 12105                           
 12106                           ;controle.h: 272: etapaTesteBombas = 0;
 12107  000F30  0E00               	movlw	0
 12108  000F32  6E6D               	movwf	_etapaTesteBombas,c
 12109                           
 12110                           ;controle.h: 273: menu_posi = 0;
 12111  000F34  0E00               	movlw	0
 12112  000F36  0100               	movlb	0	; () banked
 12113  000F38  6FDF               	movwf	_menu_posi& (0+255),b
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;controle.h: 275: }
 12117                           
 12118                           ;controle.h: 274: break;
 12119  000F3A  D02A               	goto	l561
 12120  000F3C                     l9238:
 12121  000F3C  FFFF               	dw	65535	; assembler added errata NOP
 12122  000F3E  506D               	movf	_etapaTesteBombas,w,c
 12123                           
 12124                           ; Switch size 1, requested type "space"
 12125                           ; Number of cases is 13, Range of values is 0 to 12
 12126                           ; switch strategies available:
 12127                           ; Name         Instructions Cycles
 12128                           ; simple_byte           40    21 (average)
 12129                           ;	Chosen strategy is simple_byte
 12130  000F40  0A00               	xorlw	0	; case 0
 12131  000F42  B4D8               	btfsc	status,2,c
 12132  000F44  D5BA               	goto	l9106
 12133  000F46  0A01               	xorlw	1	; case 1
 12134  000F48  B4D8               	btfsc	status,2,c
 12135  000F4A  D5C9               	goto	l9116
 12136  000F4C  0A03               	xorlw	3	; case 2
 12137  000F4E  B4D8               	btfsc	status,2,c
 12138  000F50  D5F2               	goto	l9122
 12139  000F52  0A01               	xorlw	1	; case 3
 12140  000F54  B4D8               	btfsc	status,2,c
 12141  000F56  D626               	goto	l9132
 12142  000F58  0A07               	xorlw	7	; case 4
 12143  000F5A  B4D8               	btfsc	status,2,c
 12144  000F5C  D628               	goto	l9134
 12145  000F5E  0A01               	xorlw	1	; case 5
 12146  000F60  B4D8               	btfsc	status,2,c
 12147  000F62  D657               	goto	l9140
 12148  000F64  0A03               	xorlw	3	; case 6
 12149  000F66  B4D8               	btfsc	status,2,c
 12150  000F68  D693               	goto	l9150
 12151  000F6A  0A01               	xorlw	1	; case 7
 12152  000F6C  B4D8               	btfsc	status,2,c
 12153  000F6E  D695               	goto	l9152
 12154  000F70  0A0F               	xorlw	15	; case 8
 12155  000F72  B4D8               	btfsc	status,2,c
 12156  000F74  D6C1               	goto	l9160
 12157  000F76  0A01               	xorlw	1	; case 9
 12158  000F78  B4D8               	btfsc	status,2,c
 12159  000F7A  D700               	goto	l9176
 12160  000F7C  0A03               	xorlw	3	; case 10
 12161  000F7E  B4D8               	btfsc	status,2,c
 12162  000F80  D719               	goto	l9184
 12163  000F82  0A01               	xorlw	1	; case 11
 12164  000F84  B4D8               	btfsc	status,2,c
 12165  000F86  D729               	goto	l9194
 12166  000F88  0A07               	xorlw	7	; case 12
 12167  000F8A  B4D8               	btfsc	status,2,c
 12168  000F8C  D7AD               	goto	l9224
 12169  000F8E  D7CF               	goto	l9234
 12170  000F90                     l561:
 12171  000F90  FFFF               	dw	65535	; assembler added errata NOP
 12172  000F92  0012               	return		;funcret
 12173  000F94  FFFF               	dw	65535	; errata NOP
 12174  000F96                     __end_of_acaoTesteBombas:
 12175                           	opt stack 0
 12176                           tblptru	equ	0xFF8
 12177                           tblptrh	equ	0xFF7
 12178                           tblptrl	equ	0xFF6
 12179                           tablat	equ	0xFF5
 12180                           prodh	equ	0xFF4
 12181                           prodl	equ	0xFF3
 12182                           intcon	equ	0xFF2
 12183                           postinc0	equ	0xFEE
 12184                           wreg	equ	0xFE8
 12185                           postdec1	equ	0xFE5
 12186                           fsr1l	equ	0xFE1
 12187                           indf2	equ	0xFDF
 12188                           postinc2	equ	0xFDE
 12189                           fsr2h	equ	0xFDA
 12190                           fsr2l	equ	0xFD9
 12191                           status	equ	0xFD8
 12192                           
 12193 ;; *************** function _salvarLOG *****************
 12194 ;; Defined at:
 12195 ;;		line 9 in file "logs.h"
 12196 ;; Parameters:    Size  Location     Type
 12197 ;;		None
 12198 ;; Auto vars:     Size  Location     Type
 12199 ;;  ultimoLogSal    2   15[BANK0 ] unsigned int 
 12200 ;; Return value:  Size  Location     Type
 12201 ;;                  1    wreg      void 
 12202 ;; Registers used:
 12203 ;;		wreg, status,2, status,0, cstack
 12204 ;; Tracked objects:
 12205 ;;		On entry : 0/0
 12206 ;;		On exit  : 0/0
 12207 ;;		Unchanged: 0/0
 12208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12209 ;;      Params:         0       0       0       0       0       0       0
 12210 ;;      Locals:         0       2       0       0       0       0       0
 12211 ;;      Temps:          0       1       0       0       0       0       0
 12212 ;;      Totals:         0       3       0       0       0       0       0
 12213 ;;Total ram usage:        3 bytes
 12214 ;; Hardware stack levels used:    1
 12215 ;; Hardware stack levels required when called:    9
 12216 ;; This function calls:
 12217 ;;		_readEEPROM_ext
 12218 ;;		_writeEEPROM_ext
 12219 ;; This function is called by:
 12220 ;;		_acaoTesteBombas
 12221 ;; This function uses a non-reentrant model
 12222 ;;
 12223                           
 12224                           	psect	text31
 12225  007756                     __ptext31:
 12226                           	opt stack 0
 12227  007756                     _salvarLOG:
 12228                           	opt stack 0
 12229  007756  FFFF               	dw	65535	; assembler added errata NOP
 12230                           
 12231                           ;logs.h: 10: unsigned int ultimoLogSalvo = readEEPROM_ext(14);
 12232                           
 12233                           ;incstack = 0
 12234  007758  0E0E               	movlw	14
 12235  00775A  ECD4  F01F         	call	_readEEPROM_ext
 12236  00775E  0100               	movlb	0	; () banked
 12237  007760  6F8E               	movwf	??_salvarLOG& (0+255),b
 12238  007762  0100               	movlb	0	; () banked
 12239  007764  518E               	movf	??_salvarLOG& (0+255),w,b
 12240  007766  0100               	movlb	0	; () banked
 12241  007768  6F8F               	movwf	salvarLOG@ultimoLogSalvo& (0+255),b
 12242  00776A  6B90               	clrf	(salvarLOG@ultimoLogSalvo+1)& (0+255),b
 12243                           
 12244                           ; BSR set to: 0
 12245                           ;logs.h: 11: if (ultimoLogSalvo < 60 || ultimoLogSalvo > 250) {
 12246  00776C  0100               	movlb	0	; () banked
 12247  00776E  5190               	movf	(salvarLOG@ultimoLogSalvo+1)& (0+255),w,b
 12248  007770  E105               	bnz	u10120
 12249  007772  0E3C               	movlw	60
 12250  007774  0100               	movlb	0	; () banked
 12251  007776  5D8F               	subwf	salvarLOG@ultimoLogSalvo& (0+255),w,b
 12252  007778  A0D8               	btfss	status,0,c
 12253  00777A  D008               	goto	l8626
 12254  00777C                     u10120:
 12255                           
 12256                           ; BSR set to: 0
 12257  00777C  0100               	movlb	0	; () banked
 12258  00777E  5190               	movf	(salvarLOG@ultimoLogSalvo+1)& (0+255),w,b
 12259  007780  E105               	bnz	l8626
 12260  007782  0EFB               	movlw	251
 12261  007784  0100               	movlb	0	; () banked
 12262  007786  5D8F               	subwf	salvarLOG@ultimoLogSalvo& (0+255),w,b
 12263  007788  A0D8               	btfss	status,0,c
 12264  00778A  D006               	goto	l8628
 12265  00778C                     l8626:
 12266  00778C  FFFF               	dw	65535	; assembler added errata NOP
 12267                           
 12268                           ; BSR set to: 0
 12269                           ;logs.h: 12: ultimoLogSalvo = 60;
 12270  00778E  0E00               	movlw	0
 12271  007790  0100               	movlb	0	; () banked
 12272  007792  6F90               	movwf	(salvarLOG@ultimoLogSalvo+1)& (0+255),b
 12273  007794  0E3C               	movlw	60
 12274  007796  6F8F               	movwf	salvarLOG@ultimoLogSalvo& (0+255),b
 12275  007798                     l8628:
 12276  007798  FFFF               	dw	65535	; assembler added errata NOP
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;logs.h: 13: }
 12280                           ;logs.h: 14: writeEEPROM_ext(ultimoLogSalvo, _dia);
 12281  00779A  C0EC  F08C         	movff	__dia,writeEEPROM_ext@data
 12282  00779E  0100               	movlb	0	; () banked
 12283  0077A0  518F               	movf	salvarLOG@ultimoLogSalvo& (0+255),w,b
 12284  0077A2  ECCF  F034         	call	_writeEEPROM_ext
 12285                           
 12286                           ;logs.h: 15: writeEEPROM_ext(++ultimoLogSalvo, _mes);
 12287  0077A6  C0EB  F08C         	movff	__mes,writeEEPROM_ext@data
 12288  0077AA  0100               	movlb	0	; () banked
 12289  0077AC  4B8F               	infsnz	salvarLOG@ultimoLogSalvo& (0+255),f,b
 12290  0077AE  2B90               	incf	(salvarLOG@ultimoLogSalvo+1)& (0+255),f,b
 12291  0077B0  0100               	movlb	0	; () banked
 12292  0077B2  518F               	movf	salvarLOG@ultimoLogSalvo& (0+255),w,b
 12293  0077B4  ECCF  F034         	call	_writeEEPROM_ext
 12294                           
 12295                           ;logs.h: 16: writeEEPROM_ext(++ultimoLogSalvo, _ano);
 12296  0077B8  C0EA  F08C         	movff	__ano,writeEEPROM_ext@data
 12297  0077BC  0100               	movlb	0	; () banked
 12298  0077BE  4B8F               	infsnz	salvarLOG@ultimoLogSalvo& (0+255),f,b
 12299  0077C0  2B90               	incf	(salvarLOG@ultimoLogSalvo+1)& (0+255),f,b
 12300  0077C2  0100               	movlb	0	; () banked
 12301  0077C4  518F               	movf	salvarLOG@ultimoLogSalvo& (0+255),w,b
 12302  0077C6  ECCF  F034         	call	_writeEEPROM_ext
 12303                           
 12304                           ;logs.h: 17: writeEEPROM_ext(++ultimoLogSalvo, _hor);
 12305  0077CA  C0ED  F08C         	movff	__hor,writeEEPROM_ext@data
 12306  0077CE  0100               	movlb	0	; () banked
 12307  0077D0  4B8F               	infsnz	salvarLOG@ultimoLogSalvo& (0+255),f,b
 12308  0077D2  2B90               	incf	(salvarLOG@ultimoLogSalvo+1)& (0+255),f,b
 12309  0077D4  0100               	movlb	0	; () banked
 12310  0077D6  518F               	movf	salvarLOG@ultimoLogSalvo& (0+255),w,b
 12311  0077D8  ECCF  F034         	call	_writeEEPROM_ext
 12312                           
 12313                           ;logs.h: 18: writeEEPROM_ext(++ultimoLogSalvo, _min);
 12314  0077DC  C0EE  F08C         	movff	__min,writeEEPROM_ext@data
 12315  0077E0  0100               	movlb	0	; () banked
 12316  0077E2  4B8F               	infsnz	salvarLOG@ultimoLogSalvo& (0+255),f,b
 12317  0077E4  2B90               	incf	(salvarLOG@ultimoLogSalvo+1)& (0+255),f,b
 12318  0077E6  0100               	movlb	0	; () banked
 12319  0077E8  518F               	movf	salvarLOG@ultimoLogSalvo& (0+255),w,b
 12320  0077EA  ECCF  F034         	call	_writeEEPROM_ext
 12321                           
 12322                           ;logs.h: 19: writeEEPROM_ext(++ultimoLogSalvo, status_jockey);
 12323  0077EE  C0FD  F08C         	movff	_status_jockey,writeEEPROM_ext@data
 12324  0077F2  0100               	movlb	0	; () banked
 12325  0077F4  4B8F               	infsnz	salvarLOG@ultimoLogSalvo& (0+255),f,b
 12326  0077F6  2B90               	incf	(salvarLOG@ultimoLogSalvo+1)& (0+255),f,b
 12327  0077F8  0100               	movlb	0	; () banked
 12328  0077FA  518F               	movf	salvarLOG@ultimoLogSalvo& (0+255),w,b
 12329  0077FC  ECCF  F034         	call	_writeEEPROM_ext
 12330                           
 12331                           ;logs.h: 20: writeEEPROM_ext(++ultimoLogSalvo, status_principal);
 12332  007800  C0FC  F08C         	movff	_status_principal,writeEEPROM_ext@data
 12333  007804  0100               	movlb	0	; () banked
 12334  007806  4B8F               	infsnz	salvarLOG@ultimoLogSalvo& (0+255),f,b
 12335  007808  2B90               	incf	(salvarLOG@ultimoLogSalvo+1)& (0+255),f,b
 12336  00780A  0100               	movlb	0	; () banked
 12337  00780C  518F               	movf	salvarLOG@ultimoLogSalvo& (0+255),w,b
 12338  00780E  ECCF  F034         	call	_writeEEPROM_ext
 12339                           
 12340                           ;logs.h: 21: writeEEPROM_ext(++ultimoLogSalvo, status_estacionaria);
 12341  007812  C0FB  F08C         	movff	_status_estacionaria,writeEEPROM_ext@data
 12342  007816  0100               	movlb	0	; () banked
 12343  007818  4B8F               	infsnz	salvarLOG@ultimoLogSalvo& (0+255),f,b
 12344  00781A  2B90               	incf	(salvarLOG@ultimoLogSalvo+1)& (0+255),f,b
 12345  00781C  0100               	movlb	0	; () banked
 12346  00781E  518F               	movf	salvarLOG@ultimoLogSalvo& (0+255),w,b
 12347  007820  ECCF  F034         	call	_writeEEPROM_ext
 12348                           
 12349                           ;logs.h: 23: writeEEPROM_ext(14, ++ultimoLogSalvo);
 12350  007824  0100               	movlb	0	; () banked
 12351  007826  4B8F               	infsnz	salvarLOG@ultimoLogSalvo& (0+255),f,b
 12352  007828  2B90               	incf	(salvarLOG@ultimoLogSalvo+1)& (0+255),f,b
 12353  00782A  C08F  F08C         	movff	salvarLOG@ultimoLogSalvo,writeEEPROM_ext@data
 12354  00782E  0E0E               	movlw	14
 12355  007830  ECCF  F034         	call	_writeEEPROM_ext
 12356  007834  0012               	return		;funcret
 12357  007836  FFFF               	dw	65535	; errata NOP
 12358  007838                     __end_of_salvarLOG:
 12359                           	opt stack 0
 12360                           tblptru	equ	0xFF8
 12361                           tblptrh	equ	0xFF7
 12362                           tblptrl	equ	0xFF6
 12363                           tablat	equ	0xFF5
 12364                           prodh	equ	0xFF4
 12365                           prodl	equ	0xFF3
 12366                           intcon	equ	0xFF2
 12367                           postinc0	equ	0xFEE
 12368                           wreg	equ	0xFE8
 12369                           postdec1	equ	0xFE5
 12370                           fsr1l	equ	0xFE1
 12371                           indf2	equ	0xFDF
 12372                           postinc2	equ	0xFDE
 12373                           fsr2h	equ	0xFDA
 12374                           fsr2l	equ	0xFD9
 12375                           status	equ	0xFD8
 12376                           
 12377 ;; *************** function _writeEEPROM_ext *****************
 12378 ;; Defined at:
 12379 ;;		line 13 in file "eeprom.h"
 12380 ;; Parameters:    Size  Location     Type
 12381 ;;  adress          1    wreg     unsigned char 
 12382 ;;  data            1   12[BANK0 ] unsigned char 
 12383 ;; Auto vars:     Size  Location     Type
 12384 ;;  adress          1   13[BANK0 ] unsigned char 
 12385 ;; Return value:  Size  Location     Type
 12386 ;;                  1    wreg      void 
 12387 ;; Registers used:
 12388 ;;		wreg, status,2, status,0, cstack
 12389 ;; Tracked objects:
 12390 ;;		On entry : 0/0
 12391 ;;		On exit  : 0/0
 12392 ;;		Unchanged: 0/0
 12393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12394 ;;      Params:         0       1       0       0       0       0       0
 12395 ;;      Locals:         0       1       0       0       0       0       0
 12396 ;;      Temps:          0       0       0       0       0       0       0
 12397 ;;      Totals:         0       2       0       0       0       0       0
 12398 ;;Total ram usage:        2 bytes
 12399 ;; Hardware stack levels used:    1
 12400 ;; Hardware stack levels required when called:    8
 12401 ;; This function calls:
 12402 ;;		_I2C_Start
 12403 ;;		_I2C_Stop
 12404 ;;		_I2C_Write
 12405 ;;		_delay
 12406 ;; This function is called by:
 12407 ;;		_salvarLOG
 12408 ;;		_verificarIntervaloTesteBombas
 12409 ;;		_acaoTesteBombas
 12410 ;;		_lerParametros
 12411 ;;		_tela_testeBombas
 12412 ;;		_configuraTelefones
 12413 ;;		_configurarEstacionaria
 12414 ;;		_ajusteSP_Bombas
 12415 ;;		_apagarLOGS
 12416 ;; This function uses a non-reentrant model
 12417 ;;
 12418                           
 12419                           	psect	text32
 12420  00699E                     __ptext32:
 12421                           	opt stack 0
 12422  00699E                     _writeEEPROM_ext:
 12423                           	opt stack 0
 12424  00699E  FFFF               	dw	65535	; assembler added errata NOP
 12425                           
 12426                           ;incstack = 0
 12427                           ;writeEEPROM_ext@adress stored from wreg
 12428  0069A0  0100               	movlb	0	; () banked
 12429  0069A2  6F8D               	movwf	writeEEPROM_ext@adress& (0+255),b
 12430                           
 12431                           ;eeprom.h: 15: I2C_Start();
 12432  0069A4  EC1C  F032         	call	_I2C_Start	;wreg free
 12433                           
 12434                           ;eeprom.h: 16: I2C_Write(0xA0);
 12435  0069A8  0E00               	movlw	0
 12436  0069AA  0100               	movlb	0	; () banked
 12437  0069AC  6F8B               	movwf	(I2C_Write@d+1)& (0+255),b
 12438  0069AE  0EA0               	movlw	160
 12439  0069B0  6F8A               	movwf	I2C_Write@d& (0+255),b
 12440  0069B2  EC35  F032         	call	_I2C_Write	;wreg free
 12441                           
 12442                           ;eeprom.h: 18: I2C_Write(adress);
 12443  0069B6  C08D  F08A         	movff	writeEEPROM_ext@adress,I2C_Write@d
 12444  0069BA  0100               	movlb	0	; () banked
 12445  0069BC  6B8B               	clrf	(I2C_Write@d+1)& (0+255),b
 12446  0069BE  EC35  F032         	call	_I2C_Write	;wreg free
 12447                           
 12448                           ;eeprom.h: 19: I2C_Write(data);
 12449  0069C2  C08C  F08A         	movff	writeEEPROM_ext@data,I2C_Write@d
 12450  0069C6  0100               	movlb	0	; () banked
 12451  0069C8  6B8B               	clrf	(I2C_Write@d+1)& (0+255),b
 12452  0069CA  EC35  F032         	call	_I2C_Write	;wreg free
 12453                           
 12454                           ;eeprom.h: 20: I2C_Stop();
 12455  0069CE  EC22  F032         	call	_I2C_Stop	;wreg free
 12456                           
 12457                           ;eeprom.h: 21: delay(15);
 12458  0069D2  0E00               	movlw	0
 12459  0069D4  0100               	movlb	0	; () banked
 12460  0069D6  6F81               	movwf	(delay@x+1)& (0+255),b
 12461  0069D8  0E0F               	movlw	15
 12462  0069DA  6F80               	movwf	delay@x& (0+255),b
 12463  0069DC  EC5B  F033         	call	_delay	;wreg free
 12464  0069E0  0012               	return		;funcret
 12465  0069E2  FFFF               	dw	65535	; errata NOP
 12466  0069E4                     __end_of_writeEEPROM_ext:
 12467                           	opt stack 0
 12468                           tblptru	equ	0xFF8
 12469                           tblptrh	equ	0xFF7
 12470                           tblptrl	equ	0xFF6
 12471                           tablat	equ	0xFF5
 12472                           prodh	equ	0xFF4
 12473                           prodl	equ	0xFF3
 12474                           intcon	equ	0xFF2
 12475                           postinc0	equ	0xFEE
 12476                           wreg	equ	0xFE8
 12477                           postdec1	equ	0xFE5
 12478                           fsr1l	equ	0xFE1
 12479                           indf2	equ	0xFDF
 12480                           postinc2	equ	0xFDE
 12481                           fsr2h	equ	0xFDA
 12482                           fsr2l	equ	0xFD9
 12483                           status	equ	0xFD8
 12484                           
 12485 ;; *************** function _readEEPROM_ext *****************
 12486 ;; Defined at:
 12487 ;;		line 26 in file "eeprom.h"
 12488 ;; Parameters:    Size  Location     Type
 12489 ;;  adress          1    wreg     unsigned char 
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;  adress          1   12[BANK0 ] unsigned char 
 12492 ;;  data            1   13[BANK0 ] unsigned char 
 12493 ;; Return value:  Size  Location     Type
 12494 ;;                  1    wreg      unsigned char 
 12495 ;; Registers used:
 12496 ;;		wreg, status,2, status,0, cstack
 12497 ;; Tracked objects:
 12498 ;;		On entry : 0/0
 12499 ;;		On exit  : 0/0
 12500 ;;		Unchanged: 0/0
 12501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12502 ;;      Params:         0       0       0       0       0       0       0
 12503 ;;      Locals:         0       2       0       0       0       0       0
 12504 ;;      Temps:          0       0       0       0       0       0       0
 12505 ;;      Totals:         0       2       0       0       0       0       0
 12506 ;;Total ram usage:        2 bytes
 12507 ;; Hardware stack levels used:    1
 12508 ;; Hardware stack levels required when called:    8
 12509 ;; This function calls:
 12510 ;;		_I2C_Read
 12511 ;;		_I2C_Restart
 12512 ;;		_I2C_Start
 12513 ;;		_I2C_Stop
 12514 ;;		_I2C_Write
 12515 ;; This function is called by:
 12516 ;;		_readEEPROM16_ext
 12517 ;;		_salvarLOG
 12518 ;;		_acaoTesteBombas
 12519 ;;		_lerParametros
 12520 ;;		_dataLoger
 12521 ;; This function uses a non-reentrant model
 12522 ;;
 12523                           
 12524                           	psect	text33
 12525  003FA8                     __ptext33:
 12526                           	opt stack 0
 12527  003FA8                     _readEEPROM_ext:
 12528                           	opt stack 0
 12529  003FA8  FFFF               	dw	65535	; assembler added errata NOP
 12530                           
 12531                           ;incstack = 0
 12532                           ;readEEPROM_ext@adress stored from wreg
 12533  003FAA  0100               	movlb	0	; () banked
 12534  003FAC  6F8C               	movwf	readEEPROM_ext@adress& (0+255),b
 12535                           
 12536                           ;eeprom.h: 27: I2C_Start();
 12537  003FAE  EC1C  F032         	call	_I2C_Start	;wreg free
 12538                           
 12539                           ;eeprom.h: 28: I2C_Write(0xA0);
 12540  003FB2  0E00               	movlw	0
 12541  003FB4  0100               	movlb	0	; () banked
 12542  003FB6  6F8B               	movwf	(I2C_Write@d+1)& (0+255),b
 12543  003FB8  0EA0               	movlw	160
 12544  003FBA  6F8A               	movwf	I2C_Write@d& (0+255),b
 12545  003FBC  EC35  F032         	call	_I2C_Write	;wreg free
 12546                           
 12547                           ;eeprom.h: 30: I2C_Write(adress);
 12548  003FC0  C08C  F08A         	movff	readEEPROM_ext@adress,I2C_Write@d
 12549  003FC4  0100               	movlb	0	; () banked
 12550  003FC6  6B8B               	clrf	(I2C_Write@d+1)& (0+255),b
 12551  003FC8  EC35  F032         	call	_I2C_Write	;wreg free
 12552                           
 12553                           ;eeprom.h: 31: I2C_Restart();
 12554  003FCC  EC28  F032         	call	_I2C_Restart	;wreg free
 12555                           
 12556                           ;eeprom.h: 32: I2C_Write(0xA1);
 12557  003FD0  0E00               	movlw	0
 12558  003FD2  0100               	movlb	0	; () banked
 12559  003FD4  6F8B               	movwf	(I2C_Write@d+1)& (0+255),b
 12560  003FD6  0EA1               	movlw	161
 12561  003FD8  6F8A               	movwf	I2C_Write@d& (0+255),b
 12562  003FDA  EC35  F032         	call	_I2C_Write	;wreg free
 12563                           
 12564                           ;eeprom.h: 33: unsigned char data = I2C_Read(0);
 12565  003FDE  0E00               	movlw	0
 12566  003FE0  0100               	movlb	0	; () banked
 12567  003FE2  6F82               	movwf	(I2C_Read@a+1)& (0+255),b
 12568  003FE4  0E00               	movlw	0
 12569  003FE6  6F81               	movwf	I2C_Read@a& (0+255),b
 12570  003FE8  ECEE  F033         	call	_I2C_Read	;wreg free
 12571  003FEC  0100               	movlb	0	; () banked
 12572  003FEE  5181               	movf	?_I2C_Read& (0+255),w,b
 12573  003FF0  0100               	movlb	0	; () banked
 12574  003FF2  6F8D               	movwf	readEEPROM_ext@data& (0+255),b
 12575                           
 12576                           ;eeprom.h: 34: I2C_Stop();
 12577  003FF4  EC22  F032         	call	_I2C_Stop	;wreg free
 12578                           
 12579                           ;eeprom.h: 35: return data;
 12580  003FF8  0100               	movlb	0	; () banked
 12581  003FFA  518D               	movf	readEEPROM_ext@data& (0+255),w,b
 12582                           
 12583                           ; BSR set to: 0
 12584                           
 12585                           ; BSR set to: 0
 12586  003FFC  0012               	return		;funcret
 12587  003FFE  FFFF               	dw	65535	; errata NOP
 12588  004000                     __end_of_readEEPROM_ext:
 12589                           	opt stack 0
 12590                           tblptru	equ	0xFF8
 12591                           tblptrh	equ	0xFF7
 12592                           tblptrl	equ	0xFF6
 12593                           tablat	equ	0xFF5
 12594                           prodh	equ	0xFF4
 12595                           prodl	equ	0xFF3
 12596                           intcon	equ	0xFF2
 12597                           postinc0	equ	0xFEE
 12598                           wreg	equ	0xFE8
 12599                           postdec1	equ	0xFE5
 12600                           fsr1l	equ	0xFE1
 12601                           indf2	equ	0xFDF
 12602                           postinc2	equ	0xFDE
 12603                           fsr2h	equ	0xFDA
 12604                           fsr2l	equ	0xFD9
 12605                           status	equ	0xFD8
 12606                           
 12607 ;; *************** function _I2C_Restart *****************
 12608 ;; Defined at:
 12609 ;;		line 31 in file "I2C.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;		None
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;		None
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  1    wreg      void 
 12616 ;; Registers used:
 12617 ;;		wreg, status,2, status,0, cstack
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12623 ;;      Params:         0       0       0       0       0       0       0
 12624 ;;      Locals:         0       0       0       0       0       0       0
 12625 ;;      Temps:          0       0       0       0       0       0       0
 12626 ;;      Totals:         0       0       0       0       0       0       0
 12627 ;;Total ram usage:        0 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; Hardware stack levels required when called:    7
 12630 ;; This function calls:
 12631 ;;		_I2C_Wait
 12632 ;; This function is called by:
 12633 ;;		_getDS1307TimeDate
 12634 ;;		_readEEPROM_ext
 12635 ;;		_getDS1307Time
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text34
 12640  006450                     __ptext34:
 12641                           	opt stack 0
 12642  006450                     _I2C_Restart:
 12643                           	opt stack 0
 12644  006450  FFFF               	dw	65535	; assembler added errata NOP
 12645                           
 12646                           ;I2C.c: 32: I2C_Wait();
 12647                           
 12648                           ; BSR set to: 0
 12649                           ;incstack = 0
 12650  006452  EC6F  F032         	call	_I2C_Wait	;wreg free
 12651                           
 12652                           ;I2C.c: 33: RSEN = 1;
 12653  006456  82C5               	bsf	4037,1,c	;volatile
 12654  006458  0012               	return		;funcret
 12655  00645A  FFFF               	dw	65535	; errata NOP
 12656  00645C                     __end_of_I2C_Restart:
 12657                           	opt stack 0
 12658                           tblptru	equ	0xFF8
 12659                           tblptrh	equ	0xFF7
 12660                           tblptrl	equ	0xFF6
 12661                           tablat	equ	0xFF5
 12662                           prodh	equ	0xFF4
 12663                           prodl	equ	0xFF3
 12664                           intcon	equ	0xFF2
 12665                           postinc0	equ	0xFEE
 12666                           wreg	equ	0xFE8
 12667                           postdec1	equ	0xFE5
 12668                           fsr1l	equ	0xFE1
 12669                           indf2	equ	0xFDF
 12670                           postinc2	equ	0xFDE
 12671                           fsr2h	equ	0xFDA
 12672                           fsr2l	equ	0xFD9
 12673                           status	equ	0xFD8
 12674                           
 12675 ;; *************** function _I2C_Read *****************
 12676 ;; Defined at:
 12677 ;;		line 47 in file "I2C.c"
 12678 ;; Parameters:    Size  Location     Type
 12679 ;;  a               2    1[BANK0 ] unsigned short 
 12680 ;; Auto vars:     Size  Location     Type
 12681 ;;  temp            2    3[BANK0 ] unsigned short 
 12682 ;; Return value:  Size  Location     Type
 12683 ;;                  2    1[BANK0 ] unsigned short 
 12684 ;; Registers used:
 12685 ;;		wreg, status,2, status,0, cstack
 12686 ;; Tracked objects:
 12687 ;;		On entry : 0/0
 12688 ;;		On exit  : 0/0
 12689 ;;		Unchanged: 0/0
 12690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12691 ;;      Params:         0       2       0       0       0       0       0
 12692 ;;      Locals:         0       2       0       0       0       0       0
 12693 ;;      Temps:          0       0       0       0       0       0       0
 12694 ;;      Totals:         0       4       0       0       0       0       0
 12695 ;;Total ram usage:        4 bytes
 12696 ;; Hardware stack levels used:    1
 12697 ;; Hardware stack levels required when called:    7
 12698 ;; This function calls:
 12699 ;;		_I2C_Wait
 12700 ;; This function is called by:
 12701 ;;		_getDS1307TimeDate
 12702 ;;		_readEEPROM_ext
 12703 ;;		_getDS1307Time
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           	psect	text35
 12708  0067DC                     __ptext35:
 12709                           	opt stack 0
 12710  0067DC                     _I2C_Read:
 12711                           	opt stack 0
 12712  0067DC  FFFF               	dw	65535	; assembler added errata NOP
 12713                           
 12714                           ;I2C.c: 48: unsigned short temp;
 12715                           ;I2C.c: 49: I2C_Wait();
 12716                           
 12717                           ;incstack = 0
 12718  0067DE  EC6F  F032         	call	_I2C_Wait	;wreg free
 12719                           
 12720                           ;I2C.c: 50: RCEN = 1;
 12721  0067E2  86C5               	bsf	4037,3,c	;volatile
 12722                           
 12723                           ;I2C.c: 51: I2C_Wait();
 12724  0067E4  EC6F  F032         	call	_I2C_Wait	;wreg free
 12725                           
 12726                           ;I2C.c: 52: temp = SSPBUF;
 12727  0067E8  CFC9 F083          	movff	4041,I2C_Read@temp	;volatile
 12728  0067EC  0100               	movlb	0	; () banked
 12729  0067EE  6B84               	clrf	(I2C_Read@temp+1)& (0+255),b
 12730                           
 12731                           ;I2C.c: 53: I2C_Wait();
 12732  0067F0  EC6F  F032         	call	_I2C_Wait	;wreg free
 12733                           
 12734                           ;I2C.c: 54: ACKDT = (a) ? 0 : 1;
 12735  0067F4  0100               	movlb	0	; () banked
 12736  0067F6  5181               	movf	I2C_Read@a& (0+255),w,b
 12737  0067F8  0100               	movlb	0	; () banked
 12738  0067FA  1182               	iorwf	(I2C_Read@a+1)& (0+255),w,b
 12739  0067FC  A4D8               	btfss	status,2,c
 12740  0067FE  D002               	goto	u8960
 12741  006800  8AC5               	bsf	4037,5,c	;volatile
 12742  006802  D002               	goto	l7892
 12743  006804                     u8960:
 12744  006804  FFFF               	dw	65535	; assembler added errata NOP
 12745  006806  9AC5               	bcf	4037,5,c	;volatile
 12746  006808                     l7892:
 12747  006808  FFFF               	dw	65535	; assembler added errata NOP
 12748                           
 12749                           ;I2C.c: 55: ACKEN = 1;
 12750  00680A  88C5               	bsf	4037,4,c	;volatile
 12751                           
 12752                           ;I2C.c: 56: return temp;
 12753  00680C  C083  F081         	movff	I2C_Read@temp,?_I2C_Read
 12754  006810  C084  F082         	movff	I2C_Read@temp+1,?_I2C_Read+1
 12755  006814  0012               	return		;funcret
 12756  006816  FFFF               	dw	65535	; errata NOP
 12757  006818                     __end_of_I2C_Read:
 12758                           	opt stack 0
 12759                           tblptru	equ	0xFF8
 12760                           tblptrh	equ	0xFF7
 12761                           tblptrl	equ	0xFF6
 12762                           tablat	equ	0xFF5
 12763                           prodh	equ	0xFF4
 12764                           prodl	equ	0xFF3
 12765                           intcon	equ	0xFF2
 12766                           postinc0	equ	0xFEE
 12767                           wreg	equ	0xFE8
 12768                           postdec1	equ	0xFE5
 12769                           fsr1l	equ	0xFE1
 12770                           indf2	equ	0xFDF
 12771                           postinc2	equ	0xFDE
 12772                           fsr2h	equ	0xFDA
 12773                           fsr2l	equ	0xFD9
 12774                           status	equ	0xFD8
 12775                           
 12776 ;; *************** function _intToFloatStr *****************
 12777 ;; Defined at:
 12778 ;;		line 48 in file "function.c"
 12779 ;; Parameters:    Size  Location     Type
 12780 ;;  valor           1    wreg     unsigned char 
 12781 ;; Auto vars:     Size  Location     Type
 12782 ;;  valor           1   63[BANK0 ] unsigned char 
 12783 ;;  conv            4   59[BANK0 ] unsigned char [4]
 12784 ;;  end             4   55[BANK0 ] unsigned char [4]
 12785 ;;  pr              2   64[BANK0 ] int 
 12786 ;; Return value:  Size  Location     Type
 12787 ;;                  2   53[BANK0 ] PTR unsigned char 
 12788 ;; Registers used:
 12789 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12790 ;; Tracked objects:
 12791 ;;		On entry : 0/0
 12792 ;;		On exit  : 0/0
 12793 ;;		Unchanged: 0/0
 12794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12795 ;;      Params:         0       2       0       0       0       0       0
 12796 ;;      Locals:         0      11       0       0       0       0       0
 12797 ;;      Temps:          0       0       0       0       0       0       0
 12798 ;;      Totals:         0      13       0       0       0       0       0
 12799 ;;Total ram usage:       13 bytes
 12800 ;; Hardware stack levels used:    1
 12801 ;; Hardware stack levels required when called:    9
 12802 ;; This function calls:
 12803 ;;		___awdiv
 12804 ;;		___awmod
 12805 ;;		_sprintf
 12806 ;; This function is called by:
 12807 ;;		_acaoTesteBombas
 12808 ;;		_telaPrincipal
 12809 ;;		_ajusteSP_Bombas
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           	psect	text36
 12814  0072DE                     __ptext36:
 12815                           	opt stack 0
 12816  0072DE                     _intToFloatStr:
 12817                           	opt stack 0
 12818  0072DE  FFFF               	dw	65535	; assembler added errata NOP
 12819                           
 12820                           ;incstack = 0
 12821                           ;intToFloatStr@valor stored from wreg
 12822  0072E0  0100               	movlb	0	; () banked
 12823  0072E2  6FBF               	movwf	intToFloatStr@valor& (0+255),b
 12824                           
 12825                           ;function.c: 49: int pr = valor >= 99 ? 99 : valor;
 12826  0072E4  0E63               	movlw	99
 12827  0072E6  0100               	movlb	0	; () banked
 12828  0072E8  61BF               	cpfslt	intToFloatStr@valor& (0+255),b
 12829  0072EA  D005               	goto	l8764
 12830                           
 12831                           ; BSR set to: 0
 12832  0072EC  C0BF  F0C0         	movff	intToFloatStr@valor,intToFloatStr@pr
 12833  0072F0  0100               	movlb	0	; () banked
 12834  0072F2  6BC1               	clrf	(intToFloatStr@pr+1)& (0+255),b
 12835  0072F4  D006               	goto	l8766
 12836  0072F6                     l8764:
 12837  0072F6  FFFF               	dw	65535	; assembler added errata NOP
 12838                           
 12839                           ; BSR set to: 0
 12840  0072F8  0E00               	movlw	0
 12841  0072FA  0100               	movlb	0	; () banked
 12842  0072FC  6FC1               	movwf	(intToFloatStr@pr+1)& (0+255),b
 12843  0072FE  0E63               	movlw	99
 12844  007300  6FC0               	movwf	intToFloatStr@pr& (0+255),b
 12845  007302                     l8766:
 12846  007302  FFFF               	dw	65535	; assembler added errata NOP
 12847                           
 12848                           ; BSR set to: 0
 12849                           ;function.c: 50: unsigned char conv[4] = {' ', ' ', ' ', ' '};
 12850  007304  C076  F0BB         	movff	intToFloatStr@F2540,intToFloatStr@conv
 12851  007308  C077  F0BC         	movff	intToFloatStr@F2540+1,intToFloatStr@conv+1
 12852  00730C  C078  F0BD         	movff	intToFloatStr@F2540+2,intToFloatStr@conv+2
 12853  007310  C079  F0BE         	movff	intToFloatStr@F2540+3,intToFloatStr@conv+3
 12854                           
 12855                           ; BSR set to: 0
 12856                           ;function.c: 51: conv[0] = (char) ((pr / 10) + 48);
 12857  007314  C0C0  F080         	movff	intToFloatStr@pr,___awdiv@dividend
 12858  007318  C0C1  F081         	movff	intToFloatStr@pr+1,___awdiv@dividend+1
 12859  00731C  0E00               	movlw	0
 12860  00731E  0100               	movlb	0	; () banked
 12861  007320  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
 12862  007322  0E0A               	movlw	10
 12863  007324  6F82               	movwf	___awdiv@divisor& (0+255),b
 12864  007326  EC42  F03B         	call	___awdiv	;wreg free
 12865  00732A  0100               	movlb	0	; () banked
 12866  00732C  5180               	movf	?___awdiv& (0+255),w,b
 12867  00732E  0F30               	addlw	48
 12868  007330  0100               	movlb	0	; () banked
 12869  007332  6FBB               	movwf	intToFloatStr@conv& (0+255),b
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;function.c: 52: conv[1] = (char) '.';
 12873  007334  0E2E               	movlw	46
 12874  007336  0100               	movlb	0	; () banked
 12875  007338  6FBC               	movwf	(intToFloatStr@conv+1)& (0+255),b
 12876                           
 12877                           ;function.c: 53: conv[2] = (char) ((pr % 10) + 48);
 12878  00733A  C0C0  F080         	movff	intToFloatStr@pr,___awmod@dividend
 12879  00733E  C0C1  F081         	movff	intToFloatStr@pr+1,___awmod@dividend+1
 12880  007342  0E00               	movlw	0
 12881  007344  0100               	movlb	0	; () banked
 12882  007346  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
 12883  007348  0E0A               	movlw	10
 12884  00734A  6F82               	movwf	___awmod@divisor& (0+255),b
 12885  00734C  EC20  F03A         	call	___awmod	;wreg free
 12886  007350  0100               	movlb	0	; () banked
 12887  007352  5180               	movf	?___awmod& (0+255),w,b
 12888  007354  0F30               	addlw	48
 12889  007356  0100               	movlb	0	; () banked
 12890  007358  6FBD               	movwf	(intToFloatStr@conv+2)& (0+255),b
 12891                           
 12892                           ; BSR set to: 0
 12893                           ;function.c: 54: conv[3] = '\0';
 12894  00735A  0E00               	movlw	0
 12895  00735C  0100               	movlb	0	; () banked
 12896  00735E  6FBE               	movwf	(intToFloatStr@conv+3)& (0+255),b
 12897                           
 12898                           ; BSR set to: 0
 12899                           ;function.c: 55: char end[4];
 12900                           ;function.c: 56: sprintf(end , conv);
 12901  007360  0EB7               	movlw	low intToFloatStr@end
 12902  007362  0100               	movlb	0	; () banked
 12903  007364  6FA1               	movwf	sprintf@wh& (0+255),b
 12904  007366  0E00               	movlw	high intToFloatStr@end
 12905  007368  0100               	movlb	0	; () banked
 12906  00736A  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 12907  00736C  0EBB               	movlw	low intToFloatStr@conv
 12908  00736E  0100               	movlb	0	; () banked
 12909  007370  6FA3               	movwf	sprintf@f& (0+255),b
 12910  007372  0E00               	movlw	high intToFloatStr@conv
 12911  007374  0100               	movlb	0	; () banked
 12912  007376  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 12913  007378  EC25  F036         	call	_sprintf	;wreg free
 12914                           
 12915                           ;function.c: 57: return end;
 12916  00737C  0EB7               	movlw	low intToFloatStr@end
 12917  00737E  0100               	movlb	0	; () banked
 12918  007380  6FB5               	movwf	?_intToFloatStr& (0+255),b
 12919  007382  0E00               	movlw	high intToFloatStr@end
 12920  007384  0100               	movlb	0	; () banked
 12921  007386  6FB6               	movwf	(?_intToFloatStr+1)& (0+255),b
 12922                           
 12923                           ; BSR set to: 0
 12924                           
 12925                           ; BSR set to: 0
 12926  007388  0012               	return		;funcret
 12927  00738A  FFFF               	dw	65535	; errata NOP
 12928  00738C                     __end_of_intToFloatStr:
 12929                           	opt stack 0
 12930                           tblptru	equ	0xFF8
 12931                           tblptrh	equ	0xFF7
 12932                           tblptrl	equ	0xFF6
 12933                           tablat	equ	0xFF5
 12934                           prodh	equ	0xFF4
 12935                           prodl	equ	0xFF3
 12936                           intcon	equ	0xFF2
 12937                           postinc0	equ	0xFEE
 12938                           wreg	equ	0xFE8
 12939                           postdec1	equ	0xFE5
 12940                           fsr1l	equ	0xFE1
 12941                           indf2	equ	0xFDF
 12942                           postinc2	equ	0xFDE
 12943                           fsr2h	equ	0xFDA
 12944                           fsr2l	equ	0xFD9
 12945                           status	equ	0xFD8
 12946                           
 12947 ;; *************** function ___awmod *****************
 12948 ;; Defined at:
 12949 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 12950 ;; Parameters:    Size  Location     Type
 12951 ;;  dividend        2    0[BANK0 ] int 
 12952 ;;  divisor         2    2[BANK0 ] int 
 12953 ;; Auto vars:     Size  Location     Type
 12954 ;;  sign            1    5[BANK0 ] unsigned char 
 12955 ;;  counter         1    4[BANK0 ] unsigned char 
 12956 ;; Return value:  Size  Location     Type
 12957 ;;                  2    0[BANK0 ] int 
 12958 ;; Registers used:
 12959 ;;		wreg, status,2, status,0
 12960 ;; Tracked objects:
 12961 ;;		On entry : 0/0
 12962 ;;		On exit  : 0/0
 12963 ;;		Unchanged: 0/0
 12964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12965 ;;      Params:         0       4       0       0       0       0       0
 12966 ;;      Locals:         0       2       0       0       0       0       0
 12967 ;;      Temps:          0       0       0       0       0       0       0
 12968 ;;      Totals:         0       6       0       0       0       0       0
 12969 ;;Total ram usage:        6 bytes
 12970 ;; Hardware stack levels used:    1
 12971 ;; Hardware stack levels required when called:    6
 12972 ;; This function calls:
 12973 ;;		Nothing
 12974 ;; This function is called by:
 12975 ;;		_DECtoBCD
 12976 ;;		_intToFloatStr
 12977 ;;		_DECtoHEX
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           	psect	text37
 12982  007440                     __ptext37:
 12983                           	opt stack 0
 12984  007440                     ___awmod:
 12985                           	opt stack 0
 12986  007440  FFFF               	dw	65535	; assembler added errata NOP
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;incstack = 0
 12990  007442  0E00               	movlw	0
 12991  007444  0100               	movlb	0	; () banked
 12992  007446  6F85               	movwf	___awmod@sign& (0+255),b
 12993                           
 12994                           ; BSR set to: 0
 12995  007448  0100               	movlb	0	; () banked
 12996  00744A  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12997  00744C  D008               	goto	l8150
 12998                           
 12999                           ; BSR set to: 0
 13000  00744E  0100               	movlb	0	; () banked
 13001  007450  6D80               	negf	___awmod@dividend& (0+255),b
 13002  007452  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
 13003  007454  B0D8               	btfsc	status,0,c
 13004  007456  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
 13005                           
 13006                           ; BSR set to: 0
 13007  007458  0E01               	movlw	1
 13008  00745A  0100               	movlb	0	; () banked
 13009  00745C  6F85               	movwf	___awmod@sign& (0+255),b
 13010  00745E                     l8150:
 13011  00745E  FFFF               	dw	65535	; assembler added errata NOP
 13012                           
 13013                           ; BSR set to: 0
 13014  007460  0100               	movlb	0	; () banked
 13015  007462  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13016  007464  D005               	goto	l8154
 13017                           
 13018                           ; BSR set to: 0
 13019  007466  0100               	movlb	0	; () banked
 13020  007468  6D82               	negf	___awmod@divisor& (0+255),b
 13021  00746A  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
 13022  00746C  B0D8               	btfsc	status,0,c
 13023  00746E  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
 13024  007470                     l8154:
 13025  007470  FFFF               	dw	65535	; assembler added errata NOP
 13026                           
 13027                           ; BSR set to: 0
 13028  007472  0100               	movlb	0	; () banked
 13029  007474  5182               	movf	___awmod@divisor& (0+255),w,b
 13030  007476  0100               	movlb	0	; () banked
 13031  007478  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13032  00747A  B4D8               	btfsc	status,2,c
 13033  00747C  D02A               	goto	l8170
 13034                           
 13035                           ; BSR set to: 0
 13036  00747E  0E01               	movlw	1
 13037  007480  0100               	movlb	0	; () banked
 13038  007482  6F84               	movwf	___awmod@counter& (0+255),b
 13039  007484  D007               	goto	l8160
 13040  007486                     l8158:
 13041  007486  FFFF               	dw	65535	; assembler added errata NOP
 13042                           
 13043                           ; BSR set to: 0
 13044  007488  0100               	movlb	0	; () banked
 13045  00748A  90D8               	bcf	status,0,c
 13046  00748C  3782               	rlcf	___awmod@divisor& (0+255),f,b
 13047  00748E  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13048  007490  0100               	movlb	0	; () banked
 13049  007492  2B84               	incf	___awmod@counter& (0+255),f,b
 13050  007494                     l8160:
 13051  007494  FFFF               	dw	65535	; assembler added errata NOP
 13052                           
 13053                           ; BSR set to: 0
 13054  007496  0100               	movlb	0	; () banked
 13055  007498  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13056  00749A  D7F5               	goto	l8158
 13057  00749C                     l8162:
 13058  00749C  FFFF               	dw	65535	; assembler added errata NOP
 13059                           
 13060                           ; BSR set to: 0
 13061  00749E  0100               	movlb	0	; () banked
 13062  0074A0  5182               	movf	___awmod@divisor& (0+255),w,b
 13063  0074A2  0100               	movlb	0	; () banked
 13064  0074A4  5D80               	subwf	___awmod@dividend& (0+255),w,b
 13065  0074A6  0100               	movlb	0	; () banked
 13066  0074A8  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
 13067  0074AA  0100               	movlb	0	; () banked
 13068  0074AC  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13069  0074AE  A0D8               	btfss	status,0,c
 13070  0074B0  D008               	goto	l8166
 13071                           
 13072                           ; BSR set to: 0
 13073  0074B2  0100               	movlb	0	; () banked
 13074  0074B4  5182               	movf	___awmod@divisor& (0+255),w,b
 13075  0074B6  0100               	movlb	0	; () banked
 13076  0074B8  5F80               	subwf	___awmod@dividend& (0+255),f,b
 13077  0074BA  0100               	movlb	0	; () banked
 13078  0074BC  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
 13079  0074BE  0100               	movlb	0	; () banked
 13080  0074C0  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13081  0074C2                     l8166:
 13082  0074C2  FFFF               	dw	65535	; assembler added errata NOP
 13083                           
 13084                           ; BSR set to: 0
 13085  0074C4  0100               	movlb	0	; () banked
 13086  0074C6  90D8               	bcf	status,0,c
 13087  0074C8  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13088  0074CA  3382               	rrcf	___awmod@divisor& (0+255),f,b
 13089                           
 13090                           ; BSR set to: 0
 13091  0074CC  0100               	movlb	0	; () banked
 13092  0074CE  2F84               	decfsz	___awmod@counter& (0+255),f,b
 13093  0074D0  D7E5               	goto	l8162
 13094  0074D2                     l8170:
 13095  0074D2  FFFF               	dw	65535	; assembler added errata NOP
 13096                           
 13097                           ; BSR set to: 0
 13098  0074D4  0100               	movlb	0	; () banked
 13099  0074D6  5185               	movf	___awmod@sign& (0+255),w,b
 13100  0074D8  0100               	movlb	0	; () banked
 13101  0074DA  B4D8               	btfsc	status,2,c
 13102  0074DC  D005               	goto	l8174
 13103                           
 13104                           ; BSR set to: 0
 13105  0074DE  0100               	movlb	0	; () banked
 13106  0074E0  6D80               	negf	___awmod@dividend& (0+255),b
 13107  0074E2  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
 13108  0074E4  B0D8               	btfsc	status,0,c
 13109  0074E6  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
 13110  0074E8                     l8174:
 13111  0074E8  FFFF               	dw	65535	; assembler added errata NOP
 13112                           
 13113                           ; BSR set to: 0
 13114  0074EA  C080  F080         	movff	___awmod@dividend,?___awmod
 13115  0074EE  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
 13116                           
 13117                           ; BSR set to: 0
 13118                           
 13119                           ; BSR set to: 0
 13120  0074F2  0012               	return		;funcret
 13121  0074F4  FFFF               	dw	65535	; errata NOP
 13122  0074F6                     __end_of___awmod:
 13123                           	opt stack 0
 13124                           tblptru	equ	0xFF8
 13125                           tblptrh	equ	0xFF7
 13126                           tblptrl	equ	0xFF6
 13127                           tablat	equ	0xFF5
 13128                           prodh	equ	0xFF4
 13129                           prodl	equ	0xFF3
 13130                           intcon	equ	0xFF2
 13131                           postinc0	equ	0xFEE
 13132                           wreg	equ	0xFE8
 13133                           postdec1	equ	0xFE5
 13134                           fsr1l	equ	0xFE1
 13135                           indf2	equ	0xFDF
 13136                           postinc2	equ	0xFDE
 13137                           fsr2h	equ	0xFDA
 13138                           fsr2l	equ	0xFD9
 13139                           status	equ	0xFD8
 13140                           
 13141 ;; *************** function ___awdiv *****************
 13142 ;; Defined at:
 13143 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 13144 ;; Parameters:    Size  Location     Type
 13145 ;;  dividend        2    0[BANK0 ] int 
 13146 ;;  divisor         2    2[BANK0 ] int 
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  quotient        2    6[BANK0 ] int 
 13149 ;;  sign            1    5[BANK0 ] unsigned char 
 13150 ;;  counter         1    4[BANK0 ] unsigned char 
 13151 ;; Return value:  Size  Location     Type
 13152 ;;                  2    0[BANK0 ] int 
 13153 ;; Registers used:
 13154 ;;		wreg, status,2, status,0
 13155 ;; Tracked objects:
 13156 ;;		On entry : 0/0
 13157 ;;		On exit  : 0/0
 13158 ;;		Unchanged: 0/0
 13159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13160 ;;      Params:         0       4       0       0       0       0       0
 13161 ;;      Locals:         0       4       0       0       0       0       0
 13162 ;;      Temps:          0       0       0       0       0       0       0
 13163 ;;      Totals:         0       8       0       0       0       0       0
 13164 ;;Total ram usage:        8 bytes
 13165 ;; Hardware stack levels used:    1
 13166 ;; Hardware stack levels required when called:    6
 13167 ;; This function calls:
 13168 ;;		Nothing
 13169 ;; This function is called by:
 13170 ;;		_dataLoger
 13171 ;;		_DECtoBCD
 13172 ;;		_intToFloatStr
 13173 ;;		_DECtoHEX
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177                           	psect	text38
 13178  007684                     __ptext38:
 13179                           	opt stack 0
 13180  007684                     ___awdiv:
 13181                           	opt stack 0
 13182  007684  FFFF               	dw	65535	; assembler added errata NOP
 13183                           
 13184                           ; BSR set to: 0
 13185                           ;incstack = 0
 13186  007686  0E00               	movlw	0
 13187  007688  0100               	movlb	0	; () banked
 13188  00768A  6F85               	movwf	___awdiv@sign& (0+255),b
 13189                           
 13190                           ; BSR set to: 0
 13191  00768C  0100               	movlb	0	; () banked
 13192  00768E  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13193  007690  D008               	goto	l8106
 13194                           
 13195                           ; BSR set to: 0
 13196  007692  0100               	movlb	0	; () banked
 13197  007694  6D82               	negf	___awdiv@divisor& (0+255),b
 13198  007696  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13199  007698  B0D8               	btfsc	status,0,c
 13200  00769A  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13201                           
 13202                           ; BSR set to: 0
 13203  00769C  0E01               	movlw	1
 13204  00769E  0100               	movlb	0	; () banked
 13205  0076A0  6F85               	movwf	___awdiv@sign& (0+255),b
 13206  0076A2                     l8106:
 13207  0076A2  FFFF               	dw	65535	; assembler added errata NOP
 13208                           
 13209                           ; BSR set to: 0
 13210  0076A4  0100               	movlb	0	; () banked
 13211  0076A6  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13212  0076A8  D008               	goto	l8112
 13213                           
 13214                           ; BSR set to: 0
 13215  0076AA  0100               	movlb	0	; () banked
 13216  0076AC  6D80               	negf	___awdiv@dividend& (0+255),b
 13217  0076AE  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13218  0076B0  B0D8               	btfsc	status,0,c
 13219  0076B2  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13220                           
 13221                           ; BSR set to: 0
 13222  0076B4  0E01               	movlw	1
 13223  0076B6  0100               	movlb	0	; () banked
 13224  0076B8  1B85               	xorwf	___awdiv@sign& (0+255),f,b
 13225  0076BA                     l8112:
 13226  0076BA  FFFF               	dw	65535	; assembler added errata NOP
 13227                           
 13228                           ; BSR set to: 0
 13229  0076BC  0E00               	movlw	0
 13230  0076BE  0100               	movlb	0	; () banked
 13231  0076C0  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
 13232  0076C2  0E00               	movlw	0
 13233  0076C4  6F86               	movwf	___awdiv@quotient& (0+255),b
 13234                           
 13235                           ; BSR set to: 0
 13236  0076C6  0100               	movlb	0	; () banked
 13237  0076C8  5182               	movf	___awdiv@divisor& (0+255),w,b
 13238  0076CA  0100               	movlb	0	; () banked
 13239  0076CC  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13240  0076CE  B4D8               	btfsc	status,2,c
 13241  0076D0  D030               	goto	l8134
 13242                           
 13243                           ; BSR set to: 0
 13244  0076D2  0E01               	movlw	1
 13245  0076D4  0100               	movlb	0	; () banked
 13246  0076D6  6F84               	movwf	___awdiv@counter& (0+255),b
 13247  0076D8  D007               	goto	l8120
 13248  0076DA                     l8118:
 13249  0076DA  FFFF               	dw	65535	; assembler added errata NOP
 13250                           
 13251                           ; BSR set to: 0
 13252  0076DC  0100               	movlb	0	; () banked
 13253  0076DE  90D8               	bcf	status,0,c
 13254  0076E0  3782               	rlcf	___awdiv@divisor& (0+255),f,b
 13255  0076E2  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13256  0076E4  0100               	movlb	0	; () banked
 13257  0076E6  2B84               	incf	___awdiv@counter& (0+255),f,b
 13258  0076E8                     l8120:
 13259  0076E8  FFFF               	dw	65535	; assembler added errata NOP
 13260                           
 13261                           ; BSR set to: 0
 13262  0076EA  0100               	movlb	0	; () banked
 13263  0076EC  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13264  0076EE  D7F5               	goto	l8118
 13265  0076F0                     l8122:
 13266  0076F0  FFFF               	dw	65535	; assembler added errata NOP
 13267                           
 13268                           ; BSR set to: 0
 13269  0076F2  0100               	movlb	0	; () banked
 13270  0076F4  90D8               	bcf	status,0,c
 13271  0076F6  3786               	rlcf	___awdiv@quotient& (0+255),f,b
 13272  0076F8  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13273                           
 13274                           ; BSR set to: 0
 13275  0076FA  0100               	movlb	0	; () banked
 13276  0076FC  5182               	movf	___awdiv@divisor& (0+255),w,b
 13277  0076FE  0100               	movlb	0	; () banked
 13278  007700  5D80               	subwf	___awdiv@dividend& (0+255),w,b
 13279  007702  0100               	movlb	0	; () banked
 13280  007704  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13281  007706  0100               	movlb	0	; () banked
 13282  007708  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13283  00770A  A0D8               	btfss	status,0,c
 13284  00770C  D00A               	goto	l8130
 13285                           
 13286                           ; BSR set to: 0
 13287  00770E  0100               	movlb	0	; () banked
 13288  007710  5182               	movf	___awdiv@divisor& (0+255),w,b
 13289  007712  0100               	movlb	0	; () banked
 13290  007714  5F80               	subwf	___awdiv@dividend& (0+255),f,b
 13291  007716  0100               	movlb	0	; () banked
 13292  007718  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13293  00771A  0100               	movlb	0	; () banked
 13294  00771C  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13295                           
 13296                           ; BSR set to: 0
 13297  00771E  0100               	movlb	0	; () banked
 13298  007720  8186               	bsf	___awdiv@quotient& (0+255),0,b
 13299  007722                     l8130:
 13300  007722  FFFF               	dw	65535	; assembler added errata NOP
 13301                           
 13302                           ; BSR set to: 0
 13303  007724  0100               	movlb	0	; () banked
 13304  007726  90D8               	bcf	status,0,c
 13305  007728  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13306  00772A  3382               	rrcf	___awdiv@divisor& (0+255),f,b
 13307                           
 13308                           ; BSR set to: 0
 13309  00772C  0100               	movlb	0	; () banked
 13310  00772E  2F84               	decfsz	___awdiv@counter& (0+255),f,b
 13311  007730  D7DF               	goto	l8122
 13312  007732                     l8134:
 13313  007732  FFFF               	dw	65535	; assembler added errata NOP
 13314                           
 13315                           ; BSR set to: 0
 13316  007734  0100               	movlb	0	; () banked
 13317  007736  5185               	movf	___awdiv@sign& (0+255),w,b
 13318  007738  0100               	movlb	0	; () banked
 13319  00773A  B4D8               	btfsc	status,2,c
 13320  00773C  D005               	goto	l8138
 13321                           
 13322                           ; BSR set to: 0
 13323  00773E  0100               	movlb	0	; () banked
 13324  007740  6D86               	negf	___awdiv@quotient& (0+255),b
 13325  007742  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13326  007744  B0D8               	btfsc	status,0,c
 13327  007746  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13328  007748                     l8138:
 13329  007748  FFFF               	dw	65535	; assembler added errata NOP
 13330                           
 13331                           ; BSR set to: 0
 13332  00774A  C086  F080         	movff	___awdiv@quotient,?___awdiv
 13333  00774E  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
 13334                           
 13335                           ; BSR set to: 0
 13336                           
 13337                           ; BSR set to: 0
 13338  007752  0012               	return		;funcret
 13339  007754  FFFF               	dw	65535	; errata NOP
 13340  007756                     __end_of___awdiv:
 13341                           	opt stack 0
 13342                           tblptru	equ	0xFF8
 13343                           tblptrh	equ	0xFF7
 13344                           tblptrl	equ	0xFF6
 13345                           tablat	equ	0xFF5
 13346                           prodh	equ	0xFF4
 13347                           prodl	equ	0xFF3
 13348                           intcon	equ	0xFF2
 13349                           postinc0	equ	0xFEE
 13350                           wreg	equ	0xFE8
 13351                           postdec1	equ	0xFE5
 13352                           fsr1l	equ	0xFE1
 13353                           indf2	equ	0xFDF
 13354                           postinc2	equ	0xFDE
 13355                           fsr2h	equ	0xFDA
 13356                           fsr2l	equ	0xFD9
 13357                           status	equ	0xFD8
 13358                           
 13359 ;; *************** function _drenarPressao *****************
 13360 ;; Defined at:
 13361 ;;		line 126 in file "controle.h"
 13362 ;; Parameters:    Size  Location     Type
 13363 ;;		None
 13364 ;; Auto vars:     Size  Location     Type
 13365 ;;		None
 13366 ;; Return value:  Size  Location     Type
 13367 ;;                  1    wreg      void 
 13368 ;; Registers used:
 13369 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13370 ;; Tracked objects:
 13371 ;;		On entry : 0/0
 13372 ;;		On exit  : 0/0
 13373 ;;		Unchanged: 0/0
 13374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13375 ;;      Params:         0       0       0       0       0       0       0
 13376 ;;      Locals:         0       0       0       0       0       0       0
 13377 ;;      Temps:          0       0       0       0       0       0       0
 13378 ;;      Totals:         0       0       0       0       0       0       0
 13379 ;;Total ram usage:        0 bytes
 13380 ;; Hardware stack levels used:    1
 13381 ;; Hardware stack levels required when called:    9
 13382 ;; This function calls:
 13383 ;;		_sprintf
 13384 ;; This function is called by:
 13385 ;;		_acaoTesteBombas
 13386 ;; This function uses a non-reentrant model
 13387 ;;
 13388                           
 13389                           	psect	text39
 13390  006894                     __ptext39:
 13391                           	opt stack 0
 13392  006894                     _drenarPressao:
 13393                           	opt stack 0
 13394  006894  FFFF               	dw	65535	; assembler added errata NOP
 13395                           
 13396                           ;controle.h: 127: sprintf(line4, "Despressurizando...");
 13397                           
 13398                           ; BSR set to: 0
 13399                           ;incstack = 0
 13400  006896  0E3C               	movlw	low _line4
 13401  006898  0100               	movlb	0	; () banked
 13402  00689A  6FA1               	movwf	sprintf@wh& (0+255),b
 13403  00689C  0E01               	movlw	high _line4
 13404  00689E  0100               	movlb	0	; () banked
 13405  0068A0  6FA2               	movwf	(sprintf@wh+1)& (0+255),b
 13406  0068A2  0EA1               	movlw	low STR_36
 13407  0068A4  0100               	movlb	0	; () banked
 13408  0068A6  6FA3               	movwf	sprintf@f& (0+255),b
 13409  0068A8  0E7C               	movlw	high STR_36
 13410  0068AA  0100               	movlb	0	; () banked
 13411  0068AC  6FA4               	movwf	(sprintf@f+1)& (0+255),b
 13412  0068AE  EC25  F036         	call	_sprintf	;wreg free
 13413                           
 13414                           ;controle.h: 128: if (!timerTesteBombas) {
 13415  0068B2  0100               	movlb	0	; () banked
 13416  0068B4  51D9               	movf	_timerTesteBombas& (0+255),w,b
 13417  0068B6  0100               	movlb	0	; () banked
 13418  0068B8  11DA               	iorwf	(_timerTesteBombas+1)& (0+255),w,b
 13419  0068BA  A4D8               	btfss	status,2,c
 13420  0068BC  D008               	goto	l508
 13421                           
 13422                           ; BSR set to: 0
 13423                           ;controle.h: 129: executandoTeste = 0;
 13424  0068BE  0E00               	movlw	0
 13425  0068C0  0100               	movlb	0	; () banked
 13426  0068C2  6FF2               	movwf	_executandoTeste& (0+255),b
 13427                           
 13428                           ;controle.h: 130: codigoErro = 3;
 13429  0068C4  0E03               	movlw	3
 13430  0068C6  6E6E               	movwf	_codigoErro,c
 13431                           
 13432                           ;controle.h: 131: menu_posi = 0;
 13433  0068C8  0E00               	movlw	0
 13434  0068CA  0100               	movlb	0	; () banked
 13435  0068CC  6FDF               	movwf	_menu_posi& (0+255),b
 13436  0068CE                     l508:
 13437  0068CE  FFFF               	dw	65535	; assembler added errata NOP
 13438                           
 13439                           ; BSR set to: 0
 13440  0068D0  0012               	return		;funcret
 13441  0068D2  FFFF               	dw	65535	; errata NOP
 13442  0068D4                     __end_of_drenarPressao:
 13443                           	opt stack 0
 13444                           tblptru	equ	0xFF8
 13445                           tblptrh	equ	0xFF7
 13446                           tblptrl	equ	0xFF6
 13447                           tablat	equ	0xFF5
 13448                           prodh	equ	0xFF4
 13449                           prodl	equ	0xFF3
 13450                           intcon	equ	0xFF2
 13451                           postinc0	equ	0xFEE
 13452                           wreg	equ	0xFE8
 13453                           postdec1	equ	0xFE5
 13454                           fsr1l	equ	0xFE1
 13455                           indf2	equ	0xFDF
 13456                           postinc2	equ	0xFDE
 13457                           fsr2h	equ	0xFDA
 13458                           fsr2l	equ	0xFD9
 13459                           status	equ	0xFD8
 13460                           
 13461 ;; *************** function _sprintf *****************
 13462 ;; Defined at:
 13463 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprintf.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;  wh              2   33[BANK0 ] PTR unsigned char 
 13466 ;;		 -> intToFloatStr@end(4), line3(21), line2(21), line1(21), 
 13467 ;;		 -> line4(21), bufferAUX(20), 
 13468 ;;  f               2   35[BANK0 ] PTR const unsigned char 
 13469 ;;		 -> intToFloatStr@conv(4), STR_113(15), STR_112(12), STR_111(10), 
 13470 ;;		 -> STR_110(18), STR_109(10), STR_108(18), STR_107(16), 
 13471 ;;		 -> STR_106(10), STR_105(10), STR_104(11), STR_103(9), 
 13472 ;;		 -> STR_102(3), STR_101(15), STR_100(15), STR_99(11), 
 13473 ;;		 -> STR_98(11), STR_97(19), STR_96(5), STR_95(12), 
 13474 ;;		 -> STR_94(5), STR_93(14), STR_92(19), STR_89(3), 
 13475 ;;		 -> STR_88(7), STR_87(7), STR_85(12), STR_84(17), 
 13476 ;;		 -> STR_83(20), STR_82(8), STR_79(14), STR_76(14), 
 13477 ;;		 -> STR_75(11), STR_72(10), STR_71(31), STR_68(11), 
 13478 ;;		 -> STR_67(20), STR_66(20), STR_65(21), STR_64(15), 
 13479 ;;		 -> STR_63(6), STR_62(15), STR_61(6), STR_60(19), 
 13480 ;;		 -> STR_59(15), STR_58(19), STR_57(15), STR_56(19), 
 13481 ;;		 -> STR_55(18), STR_54(26), STR_53(16), STR_50(15), 
 13482 ;;		 -> STR_47(15), STR_44(11), STR_43(17), STR_42(16), 
 13483 ;;		 -> STR_41(19), STR_40(19), STR_39(16), STR_38(15), 
 13484 ;;		 -> STR_37(15), STR_36(20), STR_2(5), STR_1(5), 
 13485 ;; Auto vars:     Size  Location     Type
 13486 ;;  pb              4   49[BANK0 ] struct __prbuf
 13487 ;;  ap              2   47[BANK0 ] PTR void [1]
 13488 ;;		 -> ?_sprintf(2), ?_printf(2), 
 13489 ;; Return value:  Size  Location     Type
 13490 ;;                  2   33[BANK0 ] int 
 13491 ;; Registers used:
 13492 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13493 ;; Tracked objects:
 13494 ;;		On entry : 0/0
 13495 ;;		On exit  : 0/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13498 ;;      Params:         0      14       0       0       0       0       0
 13499 ;;      Locals:         0       6       0       0       0       0       0
 13500 ;;      Temps:          0       0       0       0       0       0       0
 13501 ;;      Totals:         0      20       0       0       0       0       0
 13502 ;;Total ram usage:       20 bytes
 13503 ;; Hardware stack levels used:    1
 13504 ;; Hardware stack levels required when called:    8
 13505 ;; This function calls:
 13506 ;;		__doprnt
 13507 ;; This function is called by:
 13508 ;;		_getSerial
 13509 ;;		_drenarPressao
 13510 ;;		_acaoTesteBombas
 13511 ;;		_telaPrincipal
 13512 ;;		_tela_ajusteRTC
 13513 ;;		_tela_testeBombas
 13514 ;;		_dataLoger
 13515 ;;		_informacoes
 13516 ;;		_configuraTelefones
 13517 ;;		_configurarEstacionaria
 13518 ;;		_ajusteSP_Bombas
 13519 ;;		_main
 13520 ;;		_intToFloatStr
 13521 ;;		_telaTeste
 13522 ;; This function uses a non-reentrant model
 13523 ;;
 13524                           
 13525                           	psect	text40
 13526  006C4A                     __ptext40:
 13527                           	opt stack 0
 13528  006C4A                     _sprintf:
 13529                           	opt stack 0
 13530  006C4A  FFFF               	dw	65535	; assembler added errata NOP
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;incstack = 0
 13534  006C4C  C0A1  F0B1         	movff	sprintf@wh,sprintf@pb
 13535  006C50  C0A2  F0B2         	movff	sprintf@wh+1,sprintf@pb+1
 13536  006C54  0E00               	movlw	0
 13537  006C56  0100               	movlb	0	; () banked
 13538  006C58  6FB3               	movwf	(sprintf@pb+2)& (0+255),b
 13539  006C5A  0E00               	movlw	0
 13540  006C5C  0100               	movlb	0	; () banked
 13541  006C5E  6FB4               	movwf	(sprintf@pb+3)& (0+255),b
 13542  006C60  0EA5               	movlw	low (?_sprintf+4)
 13543  006C62  0100               	movlb	0	; () banked
 13544  006C64  6FAF               	movwf	sprintf@ap& (0+255),b
 13545  006C66  0E00               	movlw	high (?_sprintf+4)
 13546  006C68  0100               	movlb	0	; () banked
 13547  006C6A  6FB0               	movwf	(sprintf@ap+1)& (0+255),b
 13548                           
 13549                           ; BSR set to: 0
 13550  006C6C  0EB1               	movlw	low sprintf@pb
 13551  006C6E  0100               	movlb	0	; () banked
 13552  006C70  6F8C               	movwf	__doprnt@pb& (0+255),b
 13553  006C72  0E00               	movlw	high sprintf@pb
 13554  006C74  0100               	movlb	0	; () banked
 13555  006C76  6F8D               	movwf	(__doprnt@pb+1)& (0+255),b
 13556  006C78  C0A3  F08E         	movff	sprintf@f,__doprnt@f
 13557  006C7C  C0A4  F08F         	movff	sprintf@f+1,__doprnt@f+1
 13558  006C80  0EAF               	movlw	low sprintf@ap
 13559  006C82  0100               	movlb	0	; () banked
 13560  006C84  6F90               	movwf	__doprnt@ap& (0+255),b
 13561  006C86  0E00               	movlw	high sprintf@ap
 13562  006C88  0100               	movlb	0	; () banked
 13563  006C8A  6F91               	movwf	(__doprnt@ap+1)& (0+255),b
 13564  006C8C  EC82  F000         	call	__doprnt	;wreg free
 13565  006C90  C0B1  FFD9         	movff	sprintf@pb,fsr2l
 13566  006C94  C0B2  FFDA         	movff	sprintf@pb+1,fsr2h
 13567  006C98  0E00               	movlw	0
 13568  006C9A  6EDF               	movwf	indf2,c
 13569                           
 13570                           ;	Return value of _sprintf is never used
 13571  006C9C  0012               	return		;funcret
 13572  006C9E  FFFF               	dw	65535	; errata NOP
 13573  006CA0                     __end_of_sprintf:
 13574                           	opt stack 0
 13575                           tblptru	equ	0xFF8
 13576                           tblptrh	equ	0xFF7
 13577                           tblptrl	equ	0xFF6
 13578                           tablat	equ	0xFF5
 13579                           prodh	equ	0xFF4
 13580                           prodl	equ	0xFF3
 13581                           intcon	equ	0xFF2
 13582                           postinc0	equ	0xFEE
 13583                           wreg	equ	0xFE8
 13584                           postdec1	equ	0xFE5
 13585                           fsr1l	equ	0xFE1
 13586                           indf2	equ	0xFDF
 13587                           postinc2	equ	0xFDE
 13588                           fsr2h	equ	0xFDA
 13589                           fsr2l	equ	0xFD9
 13590                           status	equ	0xFD8
 13591                           
 13592 ;; *************** function _clearShiftREG *****************
 13593 ;; Defined at:
 13594 ;;		line 30 in file "shift595.h"
 13595 ;; Parameters:    Size  Location     Type
 13596 ;;		None
 13597 ;; Auto vars:     Size  Location     Type
 13598 ;;  i               1    0[BANK0 ] unsigned char 
 13599 ;; Return value:  Size  Location     Type
 13600 ;;                  1    wreg      void 
 13601 ;; Registers used:
 13602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13603 ;; Tracked objects:
 13604 ;;		On entry : 0/0
 13605 ;;		On exit  : 0/0
 13606 ;;		Unchanged: 0/0
 13607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13608 ;;      Params:         0       0       0       0       0       0       0
 13609 ;;      Locals:         0       1       0       0       0       0       0
 13610 ;;      Temps:          0       0       0       0       0       0       0
 13611 ;;      Totals:         0       1       0       0       0       0       0
 13612 ;;Total ram usage:        1 bytes
 13613 ;; Hardware stack levels used:    1
 13614 ;; Hardware stack levels required when called:    6
 13615 ;; This function calls:
 13616 ;;		Nothing
 13617 ;; This function is called by:
 13618 ;;		_acaoTesteBombas
 13619 ;;		_resetParametros
 13620 ;;		_telaPrincipal
 13621 ;; This function uses a non-reentrant model
 13622 ;;
 13623                           
 13624                           	psect	text41
 13625  006856                     __ptext41:
 13626                           	opt stack 0
 13627  006856                     _clearShiftREG:
 13628                           	opt stack 0
 13629  006856  FFFF               	dw	65535	; assembler added errata NOP
 13630                           
 13631                           ;shift595.h: 31: char i = 0;
 13632                           
 13633                           ;incstack = 0
 13634  006858  0E00               	movlw	0
 13635  00685A  0100               	movlb	0	; () banked
 13636  00685C  6F80               	movwf	clearShiftREG@i& (0+255),b
 13637                           
 13638                           ;shift595.h: 32: for (i = 0; i < 8; i++) {
 13639  00685E  0E00               	movlw	0
 13640  006860  0100               	movlb	0	; () banked
 13641  006862  6F80               	movwf	clearShiftREG@i& (0+255),b
 13642  006864                     l8228:
 13643  006864  FFFF               	dw	65535	; assembler added errata NOP
 13644                           
 13645                           ; BSR set to: 0
 13646  006866  0E07               	movlw	7
 13647  006868  0100               	movlb	0	; () banked
 13648  00686A  6580               	cpfsgt	clearShiftREG@i& (0+255),b
 13649  00686C  D001               	goto	l8232
 13650  00686E  D00F               	goto	l421
 13651  006870                     l8232:
 13652  006870  FFFF               	dw	65535	; assembler added errata NOP
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;shift595.h: 33: shift[i] = 0;
 13656  006872  0100               	movlb	0	; () banked
 13657  006874  5180               	movf	clearShiftREG@i& (0+255),w,b
 13658  006876  0D01               	mullw	1
 13659  006878  0E40               	movlw	low _shift
 13660  00687A  24F3               	addwf	prodl,w,c
 13661  00687C  6ED9               	movwf	fsr2l,c
 13662  00687E  0E00               	movlw	high _shift
 13663  006880  20F4               	addwfc	prodh,w,c
 13664  006882  6EDA               	movwf	fsr2h,c
 13665  006884  0E00               	movlw	0
 13666  006886  6EDF               	movwf	indf2,c
 13667                           
 13668                           ; BSR set to: 0
 13669  006888  0100               	movlb	0	; () banked
 13670  00688A  2B80               	incf	clearShiftREG@i& (0+255),f,b
 13671  00688C  D7EB               	goto	l8228
 13672  00688E                     l421:
 13673  00688E  FFFF               	dw	65535	; assembler added errata NOP
 13674                           
 13675                           ; BSR set to: 0
 13676  006890  0012               	return		;funcret
 13677  006892  FFFF               	dw	65535	; errata NOP
 13678  006894                     __end_of_clearShiftREG:
 13679                           	opt stack 0
 13680                           tblptru	equ	0xFF8
 13681                           tblptrh	equ	0xFF7
 13682                           tblptrl	equ	0xFF6
 13683                           tablat	equ	0xFF5
 13684                           prodh	equ	0xFF4
 13685                           prodl	equ	0xFF3
 13686                           intcon	equ	0xFF2
 13687                           postinc0	equ	0xFEE
 13688                           wreg	equ	0xFE8
 13689                           postdec1	equ	0xFE5
 13690                           fsr1l	equ	0xFE1
 13691                           indf2	equ	0xFDF
 13692                           postinc2	equ	0xFDE
 13693                           fsr2h	equ	0xFDA
 13694                           fsr2l	equ	0xFD9
 13695                           status	equ	0xFD8
 13696                           
 13697 ;; *************** function _btPress *****************
 13698 ;; Defined at:
 13699 ;;		line 59 in file "teclado.h"
 13700 ;; Parameters:    Size  Location     Type
 13701 ;;  bt              1    wreg     unsigned char 
 13702 ;; Auto vars:     Size  Location     Type
 13703 ;;  bt              1    0[BANK0 ] unsigned char 
 13704 ;; Return value:  Size  Location     Type
 13705 ;;                  1    wreg      unsigned char 
 13706 ;; Registers used:
 13707 ;;		wreg, status,2, status,0
 13708 ;; Tracked objects:
 13709 ;;		On entry : 0/0
 13710 ;;		On exit  : 0/0
 13711 ;;		Unchanged: 0/0
 13712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13713 ;;      Params:         0       0       0       0       0       0       0
 13714 ;;      Locals:         0       1       0       0       0       0       0
 13715 ;;      Temps:          0       0       0       0       0       0       0
 13716 ;;      Totals:         0       1       0       0       0       0       0
 13717 ;;Total ram usage:        1 bytes
 13718 ;; Hardware stack levels used:    1
 13719 ;; Hardware stack levels required when called:    6
 13720 ;; This function calls:
 13721 ;;		Nothing
 13722 ;; This function is called by:
 13723 ;;		_acaoTesteBombas
 13724 ;;		_telaPrincipal
 13725 ;;		_tela_ajusteRTC
 13726 ;;		_tela_testeBombas
 13727 ;;		_dataLoger
 13728 ;;		_informacoes
 13729 ;;		_configuraTelefones
 13730 ;;		_configurarEstacionaria
 13731 ;;		_ajusteSP_Bombas
 13732 ;;		_main
 13733 ;; This function uses a non-reentrant model
 13734 ;;
 13735                           
 13736                           	psect	text42
 13737  006F04                     __ptext42:
 13738                           	opt stack 0
 13739  006F04                     _btPress:
 13740                           	opt stack 0
 13741  006F04  FFFF               	dw	65535	; assembler added errata NOP
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;incstack = 0
 13745                           ;btPress@bt stored from wreg
 13746  006F06  0100               	movlb	0	; () banked
 13747  006F08  6F80               	movwf	btPress@bt& (0+255),b
 13748                           
 13749                           ;teclado.h: 60: switch (bt) {
 13750  006F0A  D025               	goto	l8702
 13751  006F0C                     l8648:
 13752  006F0C  FFFF               	dw	65535	; assembler added errata NOP
 13753  006F0E  5060               	movf	__b_esc,w,c
 13754  006F10  B4D8               	btfsc	status,2,c
 13755  006F12  D01E               	goto	l8696
 13756                           
 13757                           ;teclado.h: 62: _b_esc = 0;
 13758  006F14  0E00               	movlw	0
 13759  006F16  6E60               	movwf	__b_esc,c
 13760  006F18  D009               	goto	L31
 13761  006F1A                     l8652:
 13762  006F1A  FFFF               	dw	65535	; assembler added errata NOP
 13763                           
 13764                           ;teclado.h: 64: return 1;
 13765  006F1C  0E01               	movlw	1
 13766  006F1E  D02B               	goto	l461
 13767  006F20                     l8660:
 13768  006F20  FFFF               	dw	65535	; assembler added errata NOP
 13769  006F22  505C               	movf	__b_mais,w,c
 13770  006F24  B4D8               	btfsc	status,2,c
 13771  006F26  D014               	goto	l8696
 13772                           
 13773                           ;teclado.h: 68: _b_mais = 0;
 13774  006F28  0E00               	movlw	0
 13775  006F2A  6E5C               	movwf	__b_mais,c
 13776  006F2C                     L31:
 13777  006F2C  FFFF               	dw	65535	; assembler added errata NOP
 13778                           
 13779                           ;teclado.h: 69: bt_press = 1;
 13780  006F2E  0E01               	movlw	1
 13781  006F30  6E7A               	movwf	_bt_press,c
 13782  006F32  D7F3               	goto	l8652
 13783  006F34                     l8672:
 13784  006F34  FFFF               	dw	65535	; assembler added errata NOP
 13785  006F36  505E               	movf	__b_menos,w,c
 13786  006F38  B4D8               	btfsc	status,2,c
 13787  006F3A  D00A               	goto	l8696
 13788                           
 13789                           ;teclado.h: 74: _b_menos = 0;
 13790  006F3C  0E00               	movlw	0
 13791  006F3E  6E5E               	movwf	__b_menos,c
 13792  006F40  D7F5               	goto	L31
 13793  006F42                     l8684:
 13794  006F42  FFFF               	dw	65535	; assembler added errata NOP
 13795  006F44  505A               	movf	__b_ok,w,c
 13796  006F46  B4D8               	btfsc	status,2,c
 13797  006F48  D003               	goto	l8696
 13798                           
 13799                           ;teclado.h: 80: _b_ok = 0;
 13800  006F4A  0E00               	movlw	0
 13801  006F4C  6E5A               	movwf	__b_ok,c
 13802  006F4E  D7EE               	goto	L31
 13803  006F50                     l8696:
 13804  006F50  FFFF               	dw	65535	; assembler added errata NOP
 13805  006F52  0E00               	movlw	0
 13806                           
 13807                           ;teclado.h: 86: }
 13808  006F54  D010               	goto	l461
 13809  006F56                     l8702:
 13810  006F56  FFFF               	dw	65535	; assembler added errata NOP
 13811  006F58  0100               	movlb	0	; () banked
 13812  006F5A  5180               	movf	btPress@bt& (0+255),w,b
 13813                           
 13814                           ; Switch size 1, requested type "space"
 13815                           ; Number of cases is 4, Range of values is 1 to 4
 13816                           ; switch strategies available:
 13817                           ; Name         Instructions Cycles
 13818                           ; simple_byte           13     7 (average)
 13819                           ;	Chosen strategy is simple_byte
 13820  006F5C  0A01               	xorlw	1	; case 1
 13821  006F5E  B4D8               	btfsc	status,2,c
 13822  006F60  D7D5               	goto	l8648
 13823  006F62  0A03               	xorlw	3	; case 2
 13824  006F64  B4D8               	btfsc	status,2,c
 13825  006F66  D7E6               	goto	l8672
 13826  006F68  0A01               	xorlw	1	; case 3
 13827  006F6A  B4D8               	btfsc	status,2,c
 13828  006F6C  D7D9               	goto	l8660
 13829  006F6E  0A07               	xorlw	7	; case 4
 13830  006F70  B4D8               	btfsc	status,2,c
 13831  006F72  D7E7               	goto	l8684
 13832  006F74  D7ED               	goto	l8696
 13833  006F76                     l461:
 13834  006F76  FFFF               	dw	65535	; assembler added errata NOP
 13835  006F78  0012               	return		;funcret
 13836  006F7A  FFFF               	dw	65535	; errata NOP
 13837  006F7C                     __end_of_btPress:
 13838                           	opt stack 0
 13839                           tblptru	equ	0xFF8
 13840                           tblptrh	equ	0xFF7
 13841                           tblptrl	equ	0xFF6
 13842                           tablat	equ	0xFF5
 13843                           prodh	equ	0xFF4
 13844                           prodl	equ	0xFF3
 13845                           intcon	equ	0xFF2
 13846                           postinc0	equ	0xFEE
 13847                           wreg	equ	0xFE8
 13848                           postdec1	equ	0xFE5
 13849                           fsr1l	equ	0xFE1
 13850                           indf2	equ	0xFDF
 13851                           postinc2	equ	0xFDE
 13852                           fsr2h	equ	0xFDA
 13853                           fsr2l	equ	0xFD9
 13854                           status	equ	0xFD8
 13855                           
 13856 ;; *************** function _acaoBombas *****************
 13857 ;; Defined at:
 13858 ;;		line 18 in file "controle.h"
 13859 ;; Parameters:    Size  Location     Type
 13860 ;;		None
 13861 ;; Auto vars:     Size  Location     Type
 13862 ;;		None
 13863 ;; Return value:  Size  Location     Type
 13864 ;;                  1    wreg      void 
 13865 ;; Registers used:
 13866 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13867 ;; Tracked objects:
 13868 ;;		On entry : 0/0
 13869 ;;		On exit  : 0/0
 13870 ;;		Unchanged: 0/0
 13871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13872 ;;      Params:         0       0       0       0       0       0       0
 13873 ;;      Locals:         0       0       0       0       0       0       0
 13874 ;;      Temps:          0       3       0       0       0       0       0
 13875 ;;      Totals:         0       3       0       0       0       0       0
 13876 ;;Total ram usage:        3 bytes
 13877 ;; Hardware stack levels used:    1
 13878 ;; Hardware stack levels required when called:   10
 13879 ;; This function calls:
 13880 ;;		_enviaSMS
 13881 ;;		_partidaBombaEstacionaria
 13882 ;; This function is called by:
 13883 ;;		_main
 13884 ;; This function uses a non-reentrant model
 13885 ;;
 13886                           
 13887                           	psect	text43
 13888  00319A                     __ptext43:
 13889                           	opt stack 0
 13890  00319A                     _acaoBombas:
 13891                           	opt stack 0
 13892  00319A  FFFF               	dw	65535	; assembler added errata NOP
 13893                           
 13894                           ;controle.h: 19: if (pressao >= sp_pressao_rede && !ocorrendoIncendio && !executandoTest
      +                          e) {
 13895                           
 13896                           ;incstack = 0
 13897  00319C  0100               	movlb	0	; () banked
 13898  00319E  51E4               	movf	_sp_pressao_rede& (0+255),w,b
 13899  0031A0  0100               	movlb	0	; () banked
 13900  0031A2  6FC8               	movwf	??_acaoBombas& (0+255),b
 13901  0031A4  6BC9               	clrf	(??_acaoBombas+1)& (0+255),b
 13902  0031A6  0100               	movlb	0	; () banked
 13903  0031A8  51C8               	movf	??_acaoBombas& (0+255),w,b
 13904  0031AA  0100               	movlb	0	; () banked
 13905  0031AC  5DF8               	subwf	_pressao& (0+255),w,b
 13906  0031AE  0100               	movlb	0	; () banked
 13907  0031B0  51F9               	movf	(_pressao+1)& (0+255),w,b
 13908  0031B2  0A80               	xorlw	128
 13909  0031B4  0100               	movlb	0	; () banked
 13910  0031B6  6FCA               	movwf	(??_acaoBombas+2)& (0+255),b
 13911  0031B8  0100               	movlb	0	; () banked
 13912  0031BA  51C9               	movf	(??_acaoBombas+1)& (0+255),w,b
 13913  0031BC  0A80               	xorlw	128
 13914  0031BE  0100               	movlb	0	; () banked
 13915  0031C0  59CA               	subwfb	(??_acaoBombas+2)& (0+255),w,b
 13916  0031C2  A0D8               	btfss	status,0,c
 13917  0031C4  D010               	goto	l9020
 13918                           
 13919                           ; BSR set to: 0
 13920  0031C6  0100               	movlb	0	; () banked
 13921  0031C8  51F3               	movf	_ocorrendoIncendio& (0+255),w,b
 13922  0031CA  A4D8               	btfss	status,2,c
 13923  0031CC  D00C               	goto	l9020
 13924                           
 13925                           ; BSR set to: 0
 13926  0031CE  0100               	movlb	0	; () banked
 13927  0031D0  51F2               	movf	_executandoTeste& (0+255),w,b
 13928  0031D2  A4D8               	btfss	status,2,c
 13929  0031D4  D008               	goto	l9020
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;controle.h: 20: shift[6] = 0;
 13933  0031D6  0E00               	movlw	0
 13934  0031D8  6E46               	movwf	_shift+6,c
 13935                           
 13936                           ;controle.h: 21: shift[5] = 0;
 13937  0031DA  0E00               	movlw	0
 13938  0031DC  6E45               	movwf	_shift+5,c
 13939                           
 13940                           ; BSR set to: 0
 13941                           ;controle.h: 22: partidaBombaEstacionaria(0);
 13942  0031DE  0E00               	movlw	0
 13943  0031E0  ECE2  F01D         	call	_partidaBombaEstacionaria
 13944                           
 13945                           ;controle.h: 23: return;
 13946  0031E4  D0A1               	goto	l473
 13947  0031E6                     l9020:
 13948  0031E6  FFFF               	dw	65535	; assembler added errata NOP
 13949                           
 13950                           ;controle.h: 24: }
 13951                           ;controle.h: 26: shift[2] = 0;
 13952  0031E8  0E00               	movlw	0
 13953  0031EA  6E42               	movwf	_shift+2,c
 13954                           
 13955                           ;controle.h: 27: if (pressao <= sp_jockey) {
 13956  0031EC  0100               	movlb	0	; () banked
 13957  0031EE  51E3               	movf	_sp_jockey& (0+255),w,b
 13958  0031F0  0100               	movlb	0	; () banked
 13959  0031F2  6FC8               	movwf	??_acaoBombas& (0+255),b
 13960  0031F4  6BC9               	clrf	(??_acaoBombas+1)& (0+255),b
 13961  0031F6  0100               	movlb	0	; () banked
 13962  0031F8  51F8               	movf	_pressao& (0+255),w,b
 13963  0031FA  0100               	movlb	0	; () banked
 13964  0031FC  5DC8               	subwf	??_acaoBombas& (0+255),w,b
 13965  0031FE  0100               	movlb	0	; () banked
 13966  003200  51C9               	movf	(??_acaoBombas+1)& (0+255),w,b
 13967  003202  0A80               	xorlw	128
 13968  003204  0100               	movlb	0	; () banked
 13969  003206  6FCA               	movwf	(??_acaoBombas+2)& (0+255),b
 13970  003208  0100               	movlb	0	; () banked
 13971  00320A  51F9               	movf	(_pressao+1)& (0+255),w,b
 13972  00320C  0A80               	xorlw	128
 13973  00320E  0100               	movlb	0	; () banked
 13974  003210  59CA               	subwfb	(??_acaoBombas+2)& (0+255),w,b
 13975  003212  A0D8               	btfss	status,0,c
 13976  003214  D002               	goto	l9026
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;controle.h: 28: shift[6] = 1;
 13980  003216  0E01               	movlw	1
 13981  003218  D01B               	goto	L32
 13982  00321A                     l9026:
 13983  00321A  FFFF               	dw	65535	; assembler added errata NOP
 13984                           
 13985                           ; BSR set to: 0
 13986  00321C  0100               	movlb	0	; () banked
 13987  00321E  51E4               	movf	_sp_pressao_rede& (0+255),w,b
 13988  003220  0100               	movlb	0	; () banked
 13989  003222  6FC8               	movwf	??_acaoBombas& (0+255),b
 13990  003224  6BC9               	clrf	(??_acaoBombas+1)& (0+255),b
 13991  003226  0100               	movlb	0	; () banked
 13992  003228  51C8               	movf	??_acaoBombas& (0+255),w,b
 13993  00322A  0100               	movlb	0	; () banked
 13994  00322C  5DF8               	subwf	_pressao& (0+255),w,b
 13995  00322E  0100               	movlb	0	; () banked
 13996  003230  51F9               	movf	(_pressao+1)& (0+255),w,b
 13997  003232  0A80               	xorlw	128
 13998  003234  0100               	movlb	0	; () banked
 13999  003236  6FCA               	movwf	(??_acaoBombas+2)& (0+255),b
 14000  003238  0100               	movlb	0	; () banked
 14001  00323A  51C9               	movf	(??_acaoBombas+1)& (0+255),w,b
 14002  00323C  0A80               	xorlw	128
 14003  00323E  0100               	movlb	0	; () banked
 14004  003240  59CA               	subwfb	(??_acaoBombas+2)& (0+255),w,b
 14005  003242  A0D8               	btfss	status,0,c
 14006  003244  D007               	goto	l9032
 14007                           
 14008                           ; BSR set to: 0
 14009  003246  0100               	movlb	0	; () banked
 14010  003248  51F3               	movf	_ocorrendoIncendio& (0+255),w,b
 14011  00324A  A4D8               	btfss	status,2,c
 14012  00324C  D003               	goto	l9032
 14013                           
 14014                           ; BSR set to: 0
 14015                           ;controle.h: 30: shift[6] = 0;
 14016  00324E  0E00               	movlw	0
 14017  003250                     L32:
 14018  003250  FFFF               	dw	65535	; assembler added errata NOP
 14019  003252  6E46               	movwf	_shift+6,c
 14020  003254                     l9032:
 14021  003254  FFFF               	dw	65535	; assembler added errata NOP
 14022                           
 14023                           ; BSR set to: 0
 14024                           ;controle.h: 31: }
 14025                           ;controle.h: 33: if (pressao <= sp_principal) {
 14026  003256  0100               	movlb	0	; () banked
 14027  003258  51E2               	movf	_sp_principal& (0+255),w,b
 14028  00325A  0100               	movlb	0	; () banked
 14029  00325C  6FC8               	movwf	??_acaoBombas& (0+255),b
 14030  00325E  6BC9               	clrf	(??_acaoBombas+1)& (0+255),b
 14031  003260  0100               	movlb	0	; () banked
 14032  003262  51F8               	movf	_pressao& (0+255),w,b
 14033  003264  0100               	movlb	0	; () banked
 14034  003266  5DC8               	subwf	??_acaoBombas& (0+255),w,b
 14035  003268  0100               	movlb	0	; () banked
 14036  00326A  51C9               	movf	(??_acaoBombas+1)& (0+255),w,b
 14037  00326C  0A80               	xorlw	128
 14038  00326E  0100               	movlb	0	; () banked
 14039  003270  6FCA               	movwf	(??_acaoBombas+2)& (0+255),b
 14040  003272  0100               	movlb	0	; () banked
 14041  003274  51F9               	movf	(_pressao+1)& (0+255),w,b
 14042  003276  0A80               	xorlw	128
 14043  003278  0100               	movlb	0	; () banked
 14044  00327A  59CA               	subwfb	(??_acaoBombas+2)& (0+255),w,b
 14045  00327C  A0D8               	btfss	status,0,c
 14046  00327E  D00A               	goto	l9040
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;controle.h: 34: ocorrendoIncendio = 1;
 14050  003280  0E01               	movlw	1
 14051  003282  0100               	movlb	0	; () banked
 14052  003284  6FF3               	movwf	_ocorrendoIncendio& (0+255),b
 14053                           
 14054                           ;controle.h: 35: shift[5] = 1;
 14055  003286  0E01               	movlw	1
 14056  003288  6E45               	movwf	_shift+5,c
 14057                           
 14058                           ; BSR set to: 0
 14059                           ;controle.h: 36: if (!PORTCbits.RC0) {
 14060  00328A  B082               	btfsc	3970,0,c	;volatile
 14061  00328C  D003               	goto	l9040
 14062                           
 14063                           ; BSR set to: 0
 14064                           ;controle.h: 37: partidaBombaEstacionaria(1);
 14065  00328E  0E01               	movlw	1
 14066  003290  ECE2  F01D         	call	_partidaBombaEstacionaria
 14067  003294                     l9040:
 14068  003294  FFFF               	dw	65535	; assembler added errata NOP
 14069                           
 14070                           ;controle.h: 38: }
 14071                           ;controle.h: 39: }
 14072                           ;controle.h: 40: if (pressao >= sp_pressao_rede && !ocorrendoIncendio) {
 14073  003296  0100               	movlb	0	; () banked
 14074  003298  51E4               	movf	_sp_pressao_rede& (0+255),w,b
 14075  00329A  0100               	movlb	0	; () banked
 14076  00329C  6FC8               	movwf	??_acaoBombas& (0+255),b
 14077  00329E  6BC9               	clrf	(??_acaoBombas+1)& (0+255),b
 14078  0032A0  0100               	movlb	0	; () banked
 14079  0032A2  51C8               	movf	??_acaoBombas& (0+255),w,b
 14080  0032A4  0100               	movlb	0	; () banked
 14081  0032A6  5DF8               	subwf	_pressao& (0+255),w,b
 14082  0032A8  0100               	movlb	0	; () banked
 14083  0032AA  51F9               	movf	(_pressao+1)& (0+255),w,b
 14084  0032AC  0A80               	xorlw	128
 14085  0032AE  0100               	movlb	0	; () banked
 14086  0032B0  6FCA               	movwf	(??_acaoBombas+2)& (0+255),b
 14087  0032B2  0100               	movlb	0	; () banked
 14088  0032B4  51C9               	movf	(??_acaoBombas+1)& (0+255),w,b
 14089  0032B6  0A80               	xorlw	128
 14090  0032B8  0100               	movlb	0	; () banked
 14091  0032BA  59CA               	subwfb	(??_acaoBombas+2)& (0+255),w,b
 14092  0032BC  A0D8               	btfss	status,0,c
 14093  0032BE  D009               	goto	l9048
 14094                           
 14095                           ; BSR set to: 0
 14096  0032C0  0100               	movlb	0	; () banked
 14097  0032C2  51F3               	movf	_ocorrendoIncendio& (0+255),w,b
 14098  0032C4  A4D8               	btfss	status,2,c
 14099  0032C6  D005               	goto	l9048
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;controle.h: 41: shift[5] = 0;
 14103  0032C8  0E00               	movlw	0
 14104  0032CA  6E45               	movwf	_shift+5,c
 14105                           
 14106                           ; BSR set to: 0
 14107                           ;controle.h: 42: partidaBombaEstacionaria(0);
 14108  0032CC  0E00               	movlw	0
 14109  0032CE  ECE2  F01D         	call	_partidaBombaEstacionaria
 14110  0032D2                     l9048:
 14111  0032D2  FFFF               	dw	65535	; assembler added errata NOP
 14112                           
 14113                           ;controle.h: 43: }
 14114                           ;controle.h: 45: if (pressao <= sp_estacionaria) {
 14115  0032D4  0100               	movlb	0	; () banked
 14116  0032D6  51E1               	movf	_sp_estacionaria& (0+255),w,b
 14117  0032D8  0100               	movlb	0	; () banked
 14118  0032DA  6FC8               	movwf	??_acaoBombas& (0+255),b
 14119  0032DC  6BC9               	clrf	(??_acaoBombas+1)& (0+255),b
 14120  0032DE  0100               	movlb	0	; () banked
 14121  0032E0  51F8               	movf	_pressao& (0+255),w,b
 14122  0032E2  0100               	movlb	0	; () banked
 14123  0032E4  5DC8               	subwf	??_acaoBombas& (0+255),w,b
 14124  0032E6  0100               	movlb	0	; () banked
 14125  0032E8  51C9               	movf	(??_acaoBombas+1)& (0+255),w,b
 14126  0032EA  0A80               	xorlw	128
 14127  0032EC  0100               	movlb	0	; () banked
 14128  0032EE  6FCA               	movwf	(??_acaoBombas+2)& (0+255),b
 14129  0032F0  0100               	movlb	0	; () banked
 14130  0032F2  51F9               	movf	(_pressao+1)& (0+255),w,b
 14131  0032F4  0A80               	xorlw	128
 14132  0032F6  0100               	movlb	0	; () banked
 14133  0032F8  59CA               	subwfb	(??_acaoBombas+2)& (0+255),w,b
 14134  0032FA  A0D8               	btfss	status,0,c
 14135  0032FC  D006               	goto	l9054
 14136                           
 14137                           ; BSR set to: 0
 14138                           ;controle.h: 46: partidaBombaEstacionaria(1);
 14139  0032FE  0E01               	movlw	1
 14140  003300  ECE2  F01D         	call	_partidaBombaEstacionaria
 14141                           
 14142                           ;controle.h: 47: ocorrendoIncendio = 1;
 14143  003304  0E01               	movlw	1
 14144  003306  0100               	movlb	0	; () banked
 14145  003308  6FF3               	movwf	_ocorrendoIncendio& (0+255),b
 14146  00330A                     l9054:
 14147  00330A  FFFF               	dw	65535	; assembler added errata NOP
 14148                           
 14149                           ; BSR set to: 0
 14150                           ;controle.h: 48: }
 14151                           ;controle.h: 50: if (ocorrendoIncendio) {
 14152  00330C  0100               	movlb	0	; () banked
 14153  00330E  51F3               	movf	_ocorrendoIncendio& (0+255),w,b
 14154  003310  B4D8               	btfsc	status,2,c
 14155  003312  D00A               	goto	l473
 14156                           
 14157                           ; BSR set to: 0
 14158                           ;controle.h: 51: if(timerReenvioSMS == 0){
 14159  003314  0100               	movlb	0	; () banked
 14160  003316  51F6               	movf	_timerReenvioSMS& (0+255),w,b
 14161  003318  A4D8               	btfss	status,2,c
 14162  00331A  D006               	goto	l473
 14163                           
 14164                           ; BSR set to: 0
 14165                           ;controle.h: 52: gsmOcupado = 1;
 14166  00331C  0E01               	movlw	1
 14167  00331E  0100               	movlb	0	; () banked
 14168  003320  6FF4               	movwf	_gsmOcupado& (0+255),b
 14169                           
 14170                           ; BSR set to: 0
 14171                           ;controle.h: 53: enviaSMS(1);
 14172  003322  0E01               	movlw	1
 14173  003324  ECF6  F00B         	call	_enviaSMS
 14174  003328                     l473:
 14175  003328  FFFF               	dw	65535	; assembler added errata NOP
 14176  00332A  0012               	return		;funcret
 14177  00332C  FFFF               	dw	65535	; errata NOP
 14178  00332E                     __end_of_acaoBombas:
 14179                           	opt stack 0
 14180                           tblptru	equ	0xFF8
 14181                           tblptrh	equ	0xFF7
 14182                           tblptrl	equ	0xFF6
 14183                           tablat	equ	0xFF5
 14184                           prodh	equ	0xFF4
 14185                           prodl	equ	0xFF3
 14186                           intcon	equ	0xFF2
 14187                           postinc0	equ	0xFEE
 14188                           wreg	equ	0xFE8
 14189                           postdec1	equ	0xFE5
 14190                           fsr1l	equ	0xFE1
 14191                           indf2	equ	0xFDF
 14192                           postinc2	equ	0xFDE
 14193                           fsr2h	equ	0xFDA
 14194                           fsr2l	equ	0xFD9
 14195                           status	equ	0xFD8
 14196                           
 14197 ;; *************** function _partidaBombaEstacionaria *****************
 14198 ;; Defined at:
 14199 ;;		line 58 in file "controle.h"
 14200 ;; Parameters:    Size  Location     Type
 14201 ;;  acao            1    wreg     unsigned char 
 14202 ;; Auto vars:     Size  Location     Type
 14203 ;;  acao            1    3[BANK0 ] unsigned char 
 14204 ;; Return value:  Size  Location     Type
 14205 ;;                  1    wreg      void 
 14206 ;; Registers used:
 14207 ;;		wreg, status,2, status,0, cstack
 14208 ;; Tracked objects:
 14209 ;;		On entry : 0/0
 14210 ;;		On exit  : 0/0
 14211 ;;		Unchanged: 0/0
 14212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14213 ;;      Params:         0       0       0       0       0       0       0
 14214 ;;      Locals:         0       1       0       0       0       0       0
 14215 ;;      Temps:          0       0       0       0       0       0       0
 14216 ;;      Totals:         0       1       0       0       0       0       0
 14217 ;;Total ram usage:        1 bytes
 14218 ;; Hardware stack levels used:    1
 14219 ;; Hardware stack levels required when called:    7
 14220 ;; This function calls:
 14221 ;;		_delay
 14222 ;; This function is called by:
 14223 ;;		_acaoBombas
 14224 ;;		_acaoTesteBombas
 14225 ;; This function uses a non-reentrant model
 14226 ;;
 14227                           
 14228                           	psect	text44
 14229  003BC4                     __ptext44:
 14230                           	opt stack 0
 14231  003BC4                     _partidaBombaEstacionaria:
 14232                           	opt stack 0
 14233  003BC4  FFFF               	dw	65535	; assembler added errata NOP
 14234                           
 14235                           ;incstack = 0
 14236                           ;partidaBombaEstacionaria@acao stored from wreg
 14237  003BC6  0100               	movlb	0	; () banked
 14238  003BC8  6F83               	movwf	partidaBombaEstacionaria@acao& (0+255),b
 14239                           
 14240                           ;controle.h: 59: if (acao == 1 && !flagEstacionariaLigada) {
 14241  003BCA  0100               	movlb	0	; () banked
 14242  003BCC  0583               	decf	partidaBombaEstacionaria@acao& (0+255),w,b
 14243  003BCE  A4D8               	btfss	status,2,c
 14244  003BD0  D01D               	goto	l8724
 14245                           
 14246                           ; BSR set to: 0
 14247  003BD2  0100               	movlb	0	; () banked
 14248  003BD4  51F1               	movf	_flagEstacionariaLigada& (0+255),w,b
 14249  003BD6  A4D8               	btfss	status,2,c
 14250  003BD8  D019               	goto	l8724
 14251                           
 14252                           ; BSR set to: 0
 14253                           ;controle.h: 60: if (_sec_partida != _sec) {
 14254  003BDA  0100               	movlb	0	; () banked
 14255  003BDC  51EF               	movf	__sec& (0+255),w,b
 14256  003BDE  186B               	xorwf	__sec_partida,w,c
 14257  003BE0  B4D8               	btfsc	status,2,c
 14258  003BE2  D014               	goto	l8724
 14259                           
 14260                           ; BSR set to: 0
 14261                           ;controle.h: 61: _sec_partida = _sec;
 14262  003BE4  C0EF  F06B         	movff	__sec,__sec_partida
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;controle.h: 62: tempo_limite_partida++;
 14266  003BE8  2A67               	incf	_tempo_limite_partida,f,c
 14267                           
 14268                           ;controle.h: 63: tempo_partida++;
 14269  003BEA  2A68               	incf	_tempo_partida,f,c
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;controle.h: 64: if (!PORTAbits.RA5) {
 14273  003BEC  BA80               	btfsc	3968,5,c	;volatile
 14274  003BEE  D00E               	goto	l8724
 14275                           
 14276                           ; BSR set to: 0
 14277                           ;controle.h: 65: delay(700);
 14278  003BF0  0E02               	movlw	2
 14279  003BF2  0100               	movlb	0	; () banked
 14280  003BF4  6F81               	movwf	(delay@x+1)& (0+255),b
 14281  003BF6  0EBC               	movlw	188
 14282  003BF8  6F80               	movwf	delay@x& (0+255),b
 14283  003BFA  EC5B  F033         	call	_delay	;wreg free
 14284                           
 14285                           ;controle.h: 66: flagEstacionariaLigada = 1;
 14286  003BFE  0E01               	movlw	1
 14287  003C00  0100               	movlb	0	; () banked
 14288  003C02  6FF1               	movwf	_flagEstacionariaLigada& (0+255),b
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;controle.h: 67: tempo_partida = 0;
 14292  003C04  0E00               	movlw	0
 14293  003C06  6E68               	movwf	_tempo_partida,c
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;controle.h: 68: shift[4] = 0;
 14297  003C08  0E00               	movlw	0
 14298  003C0A  6E44               	movwf	_shift+4,c
 14299  003C0C                     l8724:
 14300  003C0C  FFFF               	dw	65535	; assembler added errata NOP
 14301                           
 14302                           ; BSR set to: 0
 14303                           ;controle.h: 69: }
 14304                           ;controle.h: 70: }
 14305                           ;controle.h: 71: }
 14306                           ;controle.h: 72: if (!flagEstacionariaLigada && status_estacionaria == 1) {
 14307  003C0E  0100               	movlb	0	; () banked
 14308  003C10  51F1               	movf	_flagEstacionariaLigada& (0+255),w,b
 14309  003C12  A4D8               	btfss	status,2,c
 14310  003C14  D016               	goto	l8740
 14311                           
 14312                           ; BSR set to: 0
 14313  003C16  0100               	movlb	0	; () banked
 14314  003C18  05FB               	decf	_status_estacionaria& (0+255),w,b
 14315  003C1A  A4D8               	btfss	status,2,c
 14316  003C1C  D012               	goto	l8740
 14317                           
 14318                           ; BSR set to: 0
 14319                           ;controle.h: 73: shift[3] = 1;
 14320  003C1E  0E01               	movlw	1
 14321  003C20  6E43               	movwf	_shift+3,c
 14322                           
 14323                           ; BSR set to: 0
 14324                           ;controle.h: 74: if (tempo_partida <= 7) {
 14325  003C22  0E08               	movlw	8
 14326  003C24  6068               	cpfslt	_tempo_partida,c
 14327  003C26  D002               	goto	l8734
 14328                           
 14329                           ; BSR set to: 0
 14330                           ;controle.h: 75: shift[4] = 1;
 14331  003C28  0E01               	movlw	1
 14332  003C2A  D005               	goto	L33
 14333  003C2C                     l8734:
 14334  003C2C  FFFF               	dw	65535	; assembler added errata NOP
 14335                           
 14336                           ; BSR set to: 0
 14337  003C2E  0E10               	movlw	16
 14338  003C30  6068               	cpfslt	_tempo_partida,c
 14339  003C32  D004               	goto	l8738
 14340                           
 14341                           ; BSR set to: 0
 14342                           ;controle.h: 77: shift[4] = 0;
 14343  003C34  0E00               	movlw	0
 14344  003C36                     L33:
 14345  003C36  FFFF               	dw	65535	; assembler added errata NOP
 14346  003C38  6E44               	movwf	_shift+4,c
 14347                           
 14348                           ;controle.h: 78: } else {
 14349  003C3A  D003               	goto	l8740
 14350  003C3C                     l8738:
 14351  003C3C  FFFF               	dw	65535	; assembler added errata NOP
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;controle.h: 79: tempo_partida = 0;
 14355  003C3E  0E00               	movlw	0
 14356  003C40  6E68               	movwf	_tempo_partida,c
 14357  003C42                     l8740:
 14358  003C42  FFFF               	dw	65535	; assembler added errata NOP
 14359                           
 14360                           ; BSR set to: 0
 14361                           ;controle.h: 80: }
 14362                           ;controle.h: 81: }
 14363                           ;controle.h: 82: if (tempo_limite_partida > tempo_limite_estacionaria) {
 14364  003C44  5067               	movf	_tempo_limite_partida,w,c
 14365  003C46  0100               	movlb	0	; () banked
 14366  003C48  5DE6               	subwf	_tempo_limite_estacionaria& (0+255),w,b
 14367  003C4A  B0D8               	btfsc	status,0,c
 14368  003C4C  D00C               	goto	l493
 14369                           
 14370                           ; BSR set to: 0
 14371                           ;controle.h: 83: tempo_limite_partida = 0;
 14372  003C4E  0E00               	movlw	0
 14373  003C50  6E67               	movwf	_tempo_limite_partida,c
 14374                           
 14375                           ;controle.h: 84: status_estacionaria = 0;
 14376  003C52  0E00               	movlw	0
 14377  003C54  0100               	movlb	0	; () banked
 14378  003C56  6FFB               	movwf	_status_estacionaria& (0+255),b
 14379                           
 14380                           ;controle.h: 85: flagEstacionariaLigada = 0;
 14381  003C58  0E00               	movlw	0
 14382  003C5A  0100               	movlb	0	; () banked
 14383  003C5C  6FF1               	movwf	_flagEstacionariaLigada& (0+255),b
 14384                           
 14385                           ;controle.h: 86: shift[3] = 0;
 14386  003C5E  0E00               	movlw	0
 14387  003C60  6E43               	movwf	_shift+3,c
 14388                           
 14389                           ;controle.h: 87: shift[4] = 0;
 14390  003C62  0E00               	movlw	0
 14391  003C64  6E44               	movwf	_shift+4,c
 14392  003C66                     l493:
 14393  003C66  FFFF               	dw	65535	; assembler added errata NOP
 14394                           
 14395                           ; BSR set to: 0
 14396                           ;controle.h: 88: }
 14397                           ;controle.h: 91: if (acao == 0) {
 14398  003C68  0100               	movlb	0	; () banked
 14399  003C6A  5183               	movf	partidaBombaEstacionaria@acao& (0+255),w,b
 14400  003C6C  0100               	movlb	0	; () banked
 14401  003C6E  A4D8               	btfss	status,2,c
 14402  003C70  D00B               	goto	l494
 14403                           
 14404                           ; BSR set to: 0
 14405                           ;controle.h: 92: flagEstacionariaLigada = 0;
 14406  003C72  0E00               	movlw	0
 14407  003C74  0100               	movlb	0	; () banked
 14408  003C76  6FF1               	movwf	_flagEstacionariaLigada& (0+255),b
 14409                           
 14410                           ;controle.h: 93: shift[4] = 0;
 14411  003C78  0E00               	movlw	0
 14412  003C7A  6E44               	movwf	_shift+4,c
 14413                           
 14414                           ;controle.h: 94: shift[3] = 0;
 14415  003C7C  0E00               	movlw	0
 14416  003C7E  6E43               	movwf	_shift+3,c
 14417                           
 14418                           ;controle.h: 95: tempo_partida = 0;
 14419  003C80  0E00               	movlw	0
 14420  003C82  6E68               	movwf	_tempo_partida,c
 14421                           
 14422                           ;controle.h: 96: tempo_limite_partida = 0;
 14423  003C84  0E00               	movlw	0
 14424  003C86  6E67               	movwf	_tempo_limite_partida,c
 14425  003C88                     l494:
 14426  003C88  FFFF               	dw	65535	; assembler added errata NOP
 14427                           
 14428                           ; BSR set to: 0
 14429                           ;controle.h: 97: }
 14430                           ;controle.h: 99: if (status_estacionaria == 0) {
 14431  003C8A  0100               	movlb	0	; () banked
 14432  003C8C  51FB               	movf	_status_estacionaria& (0+255),w,b
 14433  003C8E  A4D8               	btfss	status,2,c
 14434  003C90  D006               	goto	l495
 14435                           
 14436                           ; BSR set to: 0
 14437                           ;controle.h: 100: shift[3] = 0;
 14438  003C92  0E00               	movlw	0
 14439  003C94  6E43               	movwf	_shift+3,c
 14440                           
 14441                           ;controle.h: 101: shift[4] = 0;
 14442  003C96  0E00               	movlw	0
 14443  003C98  6E44               	movwf	_shift+4,c
 14444                           
 14445                           ;controle.h: 102: tempo_partida = 0;
 14446  003C9A  0E00               	movlw	0
 14447  003C9C  6E68               	movwf	_tempo_partida,c
 14448  003C9E                     l495:
 14449  003C9E  FFFF               	dw	65535	; assembler added errata NOP
 14450                           
 14451                           ; BSR set to: 0
 14452                           ;controle.h: 103: }
 14453                           ;controle.h: 104: if (flagEstacionariaLigada) {
 14454  003CA0  0100               	movlb	0	; () banked
 14455  003CA2  51F1               	movf	_flagEstacionariaLigada& (0+255),w,b
 14456  003CA4  B4D8               	btfsc	status,2,c
 14457  003CA6  D00B               	goto	l499
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;controle.h: 105: if (!PORTAbits.RA5) {
 14461  003CA8  BA80               	btfsc	3968,5,c	;volatile
 14462  003CAA  D005               	goto	l8752
 14463                           
 14464                           ; BSR set to: 0
 14465                           ;controle.h: 106: shift[4] = 0;
 14466  003CAC  0E00               	movlw	0
 14467  003CAE  6E44               	movwf	_shift+4,c
 14468                           
 14469                           ;controle.h: 107: tempo_limite_partida = 0;
 14470  003CB0  0E00               	movlw	0
 14471  003CB2  6E67               	movwf	_tempo_limite_partida,c
 14472                           
 14473                           ;controle.h: 108: } else {
 14474  003CB4  D004               	goto	l499
 14475  003CB6                     l8752:
 14476  003CB6  FFFF               	dw	65535	; assembler added errata NOP
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;controle.h: 109: flagEstacionariaLigada = 0;
 14480  003CB8  0E00               	movlw	0
 14481  003CBA  0100               	movlb	0	; () banked
 14482  003CBC  6FF1               	movwf	_flagEstacionariaLigada& (0+255),b
 14483  003CBE                     l499:
 14484  003CBE  FFFF               	dw	65535	; assembler added errata NOP
 14485                           
 14486                           ; BSR set to: 0
 14487  003CC0  0012               	return		;funcret
 14488  003CC2  FFFF               	dw	65535	; errata NOP
 14489  003CC4                     __end_of_partidaBombaEstacionaria:
 14490                           	opt stack 0
 14491                           tblptru	equ	0xFF8
 14492                           tblptrh	equ	0xFF7
 14493                           tblptrl	equ	0xFF6
 14494                           tablat	equ	0xFF5
 14495                           prodh	equ	0xFF4
 14496                           prodl	equ	0xFF3
 14497                           intcon	equ	0xFF2
 14498                           postinc0	equ	0xFEE
 14499                           wreg	equ	0xFE8
 14500                           postdec1	equ	0xFE5
 14501                           fsr1l	equ	0xFE1
 14502                           indf2	equ	0xFDF
 14503                           postinc2	equ	0xFDE
 14504                           fsr2h	equ	0xFDA
 14505                           fsr2l	equ	0xFD9
 14506                           status	equ	0xFD8
 14507                           
 14508 ;; *************** function _enviaSMS *****************
 14509 ;; Defined at:
 14510 ;;		line 120 in file "comunicacao.h"
 14511 ;; Parameters:    Size  Location     Type
 14512 ;;  tipo            1    wreg     unsigned char 
 14513 ;; Auto vars:     Size  Location     Type
 14514 ;;  tipo            1   71[BANK0 ] unsigned char 
 14515 ;; Return value:  Size  Location     Type
 14516 ;;                  1    wreg      void 
 14517 ;; Registers used:
 14518 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14519 ;; Tracked objects:
 14520 ;;		On entry : 0/0
 14521 ;;		On exit  : 0/0
 14522 ;;		Unchanged: 0/0
 14523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14524 ;;      Params:         0       0       0       0       0       0       0
 14525 ;;      Locals:         0      11       0       0       0       0       0
 14526 ;;      Temps:          0       2       0       0       0       0       0
 14527 ;;      Totals:         0      13       0       0       0       0       0
 14528 ;;Total ram usage:       13 bytes
 14529 ;; Hardware stack levels used:    1
 14530 ;; Hardware stack levels required when called:    9
 14531 ;; This function calls:
 14532 ;;		_aguardaBuffer
 14533 ;;		_delay
 14534 ;;		_limparBuffer
 14535 ;;		_printf
 14536 ;;		_writeChar
 14537 ;; This function is called by:
 14538 ;;		_acaoBombas
 14539 ;;		_acaoTesteBombas
 14540 ;; This function uses a non-reentrant model
 14541 ;;
 14542                           
 14543                           	psect	text45
 14544  0017EC                     __ptext45:
 14545                           	opt stack 0
 14546  0017EC                     _enviaSMS:
 14547                           	opt stack 0
 14548  0017EC  FFFF               	dw	65535	; assembler added errata NOP
 14549                           
 14550                           ; BSR set to: 0
 14551                           ;incstack = 0
 14552                           ;enviaSMS@tipo stored from wreg
 14553  0017EE  0100               	movlb	0	; () banked
 14554  0017F0  6FC7               	movwf	enviaSMS@tipo& (0+255),b
 14555                           
 14556                           ;comunicacao.h: 121: switch (etapaComunicacao) {
 14557  0017F2  D1D8               	goto	l8602
 14558  0017F4                     l8462:
 14559  0017F4  FFFF               	dw	65535	; assembler added errata NOP
 14560                           
 14561                           ;comunicacao.h: 123: limparBuffer();
 14562  0017F6  ECD0  F033         	call	_limparBuffer	;wreg free
 14563                           
 14564                           ;comunicacao.h: 124: printf("AT\r\n");
 14565  0017FA  0EDD               	movlw	low STR_4
 14566  0017FC  0100               	movlb	0	; () banked
 14567  0017FE  6FA1               	movwf	printf@f& (0+255),b
 14568  001800  0E7F               	movlw	high STR_4
 14569  001802  0100               	movlb	0	; () banked
 14570  001804  6FA2               	movwf	(printf@f+1)& (0+255),b
 14571  001806  EC60  F035         	call	_printf	;wreg free
 14572                           
 14573                           ;comunicacao.h: 125: etapaComunicacao++;
 14574  00180A  4A4D               	infsnz	_etapaComunicacao,f,c
 14575  00180C  2A4E               	incf	_etapaComunicacao+1,f,c
 14576                           
 14577                           ;comunicacao.h: 126: timerEtapaComunicacao = 6;
 14578  00180E  0E06               	movlw	6
 14579  001810  0100               	movlb	0	; () banked
 14580  001812  6FF5               	movwf	_timerEtapaComunicacao& (0+255),b
 14581                           
 14582                           ;comunicacao.h: 127: break;
 14583  001814  D1E9               	goto	l376
 14584  001816                     l8470:
 14585  001816  FFFF               	dw	65535	; assembler added errata NOP
 14586                           
 14587                           ; BSR set to: 0
 14588                           ;comunicacao.h: 129: if (aguardaBuffer("OK")) {
 14589  001818  0EF9               	movlw	low STR_5
 14590  00181A  0100               	movlb	0	; () banked
 14591  00181C  6F93               	movwf	aguardaBuffer@str& (0+255),b
 14592  00181E  0E7F               	movlw	high STR_5
 14593  001820  0100               	movlb	0	; () banked
 14594  001822  6F94               	movwf	(aguardaBuffer@str+1)& (0+255),b
 14595  001824  EC6A  F034         	call	_aguardaBuffer	;wreg free
 14596  001828  0900               	iorlw	0
 14597  00182A  B4D8               	btfsc	status,2,c
 14598  00182C  D00F               	goto	l8480
 14599                           
 14600                           ;comunicacao.h: 130: limparBuffer();
 14601  00182E  ECD0  F033         	call	_limparBuffer	;wreg free
 14602                           
 14603                           ;comunicacao.h: 131: printf("AT+CMGF=1\r\n");
 14604  001832  0ED1               	movlw	low STR_10
 14605  001834  0100               	movlb	0	; () banked
 14606  001836  6FA1               	movwf	printf@f& (0+255),b
 14607  001838  0E7E               	movlw	high STR_10
 14608  00183A  0100               	movlb	0	; () banked
 14609  00183C  6FA2               	movwf	(printf@f+1)& (0+255),b
 14610  00183E  EC60  F035         	call	_printf	;wreg free
 14611                           
 14612                           ;comunicacao.h: 132: etapaComunicacao++;
 14613  001842  4A4D               	infsnz	_etapaComunicacao,f,c
 14614  001844  2A4E               	incf	_etapaComunicacao+1,f,c
 14615                           
 14616                           ;comunicacao.h: 133: timerEtapaComunicacao = 2;
 14617  001846  0E02               	movlw	2
 14618  001848  0100               	movlb	0	; () banked
 14619  00184A  6FF5               	movwf	_timerEtapaComunicacao& (0+255),b
 14620  00184C                     l8480:
 14621  00184C  FFFF               	dw	65535	; assembler added errata NOP
 14622                           
 14623                           ;comunicacao.h: 134: }
 14624                           ;comunicacao.h: 135: if (!timerEtapaComunicacao) {
 14625  00184E  0100               	movlb	0	; () banked
 14626  001850  51F5               	movf	_timerEtapaComunicacao& (0+255),w,b
 14627  001852  A4D8               	btfss	status,2,c
 14628  001854  D1C9               	goto	l376
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;comunicacao.h: 136: writeChar(0x1A);
 14632  001856  0E1A               	movlw	26
 14633  001858  0100               	movlb	0	; () banked
 14634  00185A  6F80               	movwf	writeChar@hex& (0+255),b
 14635  00185C  0E00               	movlw	0
 14636  00185E  0100               	movlb	0	; () banked
 14637  001860  6F81               	movwf	(writeChar@hex+1)& (0+255),b
 14638  001862  EC3C  F032         	call	_writeChar	;wreg free
 14639                           
 14640                           ;comunicacao.h: 137: delay(15);
 14641  001866  0E00               	movlw	0
 14642  001868  0100               	movlb	0	; () banked
 14643  00186A  6F81               	movwf	(delay@x+1)& (0+255),b
 14644  00186C  0E0F               	movlw	15
 14645  00186E  6F80               	movwf	delay@x& (0+255),b
 14646  001870  EC5B  F033         	call	_delay	;wreg free
 14647                           
 14648                           ;comunicacao.h: 138: writeChar(0x1A);
 14649  001874  0E1A               	movlw	26
 14650  001876  0100               	movlb	0	; () banked
 14651  001878  6F80               	movwf	writeChar@hex& (0+255),b
 14652  00187A  0E00               	movlw	0
 14653  00187C  0100               	movlb	0	; () banked
 14654  00187E  6F81               	movwf	(writeChar@hex+1)& (0+255),b
 14655  001880  EC3C  F032         	call	_writeChar	;wreg free
 14656                           
 14657                           ;comunicacao.h: 139: printf("ATH0\r\n");
 14658  001884  0EA2               	movlw	low STR_20
 14659  001886  0100               	movlb	0	; () banked
 14660  001888  6FA1               	movwf	printf@f& (0+255),b
 14661  00188A  0E7F               	movlw	high STR_20
 14662  00188C  0100               	movlb	0	; () banked
 14663  00188E  6FA2               	movwf	(printf@f+1)& (0+255),b
 14664  001890  EC60  F035         	call	_printf	;wreg free
 14665  001894  D181               	goto	l8598
 14666  001896                     l8488:
 14667  001896  FFFF               	dw	65535	; assembler added errata NOP
 14668                           
 14669                           ;comunicacao.h: 144: if (!timerEtapaComunicacao) {
 14670  001898  0100               	movlb	0	; () banked
 14671  00189A  51F5               	movf	_timerEtapaComunicacao& (0+255),w,b
 14672  00189C  A4D8               	btfss	status,2,c
 14673  00189E  D1A4               	goto	l376
 14674                           
 14675                           ; BSR set to: 0
 14676                           ;comunicacao.h: 145: limparBuffer();
 14677  0018A0  ECD0  F033         	call	_limparBuffer	;wreg free
 14678                           
 14679                           ;comunicacao.h: 146: printf("AT+CMGS=\"+55%s\"\r\n", telefoneSelecionado == 0 ? tel1 : t
      +                          el2);
 14680  0018A4  0100               	movlb	0	; () banked
 14681  0018A6  51F7               	movf	_telefoneSelecionado& (0+255),w,b
 14682  0018A8  B4D8               	btfsc	status,2,c
 14683  0018AA  D005               	goto	l8496
 14684                           
 14685                           ; BSR set to: 0
 14686  0018AC  0EA4               	movlw	low _tel2
 14687  0018AE  0100               	movlb	0	; () banked
 14688  0018B0  6FBD               	movwf	_enviaSMS$1201& (0+255),b
 14689  0018B2  0E01               	movlw	high _tel2
 14690  0018B4  D005               	goto	L35
 14691  0018B6                     l8496:
 14692  0018B6  FFFF               	dw	65535	; assembler added errata NOP
 14693                           
 14694                           ; BSR set to: 0
 14695  0018B8  0EB0               	movlw	low _tel1
 14696  0018BA  0100               	movlb	0	; () banked
 14697  0018BC  6FBD               	movwf	_enviaSMS$1201& (0+255),b
 14698  0018BE  0E01               	movlw	high _tel1
 14699  0018C0                     L35:
 14700  0018C0  FFFF               	dw	65535	; assembler added errata NOP
 14701  0018C2  0100               	movlb	0	; () banked
 14702  0018C4  6FBE               	movwf	(_enviaSMS$1201+1)& (0+255),b
 14703                           
 14704                           ; BSR set to: 0
 14705                           
 14706                           ; BSR set to: 0
 14707  0018C6  0E76               	movlw	low STR_11
 14708  0018C8  0100               	movlb	0	; () banked
 14709  0018CA  6FA1               	movwf	printf@f& (0+255),b
 14710  0018CC  0E7D               	movlw	high STR_11
 14711  0018CE  0100               	movlb	0	; () banked
 14712  0018D0  6FA2               	movwf	(printf@f+1)& (0+255),b
 14713  0018D2  C0BD  F0A3         	movff	_enviaSMS$1201,?_printf+2
 14714  0018D6  C0BE  F0A4         	movff	_enviaSMS$1201+1,?_printf+3
 14715  0018DA  EC60  F035         	call	_printf	;wreg free
 14716                           
 14717                           ;comunicacao.h: 147: timerEtapaComunicacao = 2;
 14718  0018DE  0E02               	movlw	2
 14719  0018E0  D0BC               	goto	L36
 14720  0018E2                     l8502:
 14721  0018E2  FFFF               	dw	65535	; assembler added errata NOP
 14722                           
 14723                           ; BSR set to: 0
 14724                           ;comunicacao.h: 148: etapaComunicacao++;
 14725  0018E4  4A4D               	infsnz	_etapaComunicacao,f,c
 14726  0018E6  2A4E               	incf	_etapaComunicacao+1,f,c
 14727                           
 14728                           ; BSR set to: 0
 14729                           ;comunicacao.h: 149: }
 14730                           ;comunicacao.h: 150: break;
 14731  0018E8  D17F               	goto	l376
 14732  0018EA                     l8504:
 14733  0018EA  FFFF               	dw	65535	; assembler added errata NOP
 14734                           
 14735                           ; BSR set to: 0
 14736                           ;comunicacao.h: 153: if (!timerEtapaComunicacao) {
 14737  0018EC  0100               	movlb	0	; () banked
 14738  0018EE  51F5               	movf	_timerEtapaComunicacao& (0+255),w,b
 14739  0018F0  A4D8               	btfss	status,2,c
 14740  0018F2  D17A               	goto	l376
 14741                           
 14742                           ; BSR set to: 0
 14743                           ;comunicacao.h: 154: limparBuffer();
 14744  0018F4  ECD0  F033         	call	_limparBuffer	;wreg free
 14745                           
 14746                           ;comunicacao.h: 155: if (tipo == 1) {
 14747  0018F8  0100               	movlb	0	; () banked
 14748  0018FA  05C7               	decf	enviaSMS@tipo& (0+255),w,b
 14749  0018FC  A4D8               	btfss	status,2,c
 14750  0018FE  D020               	goto	l8512
 14751                           
 14752                           ; BSR set to: 0
 14753                           ;comunicacao.h: 156: printf("DISPARO ALARME DE INCENDIO\r\nEM %02d:%02d:%02d %02d/%02d/%
      +                          02d\r\n", _hor, _min, _sec, _dia, _mes, _ano);
 14754  001900  0E14               	movlw	low STR_22
 14755  001902  0100               	movlb	0	; () banked
 14756  001904  6FA1               	movwf	printf@f& (0+255),b
 14757  001906  0E7C               	movlw	high STR_22
 14758  001908  0100               	movlb	0	; () banked
 14759  00190A  6FA2               	movwf	(printf@f+1)& (0+255),b
 14760  00190C  C0ED  F0A3         	movff	__hor,?_printf+2
 14761  001910  0100               	movlb	0	; () banked
 14762  001912  6BA4               	clrf	(?_printf+3)& (0+255),b
 14763  001914  C0EE  F0A5         	movff	__min,?_printf+4
 14764  001918  0100               	movlb	0	; () banked
 14765  00191A  6BA6               	clrf	(?_printf+5)& (0+255),b
 14766  00191C  C0EF  F0A7         	movff	__sec,?_printf+6
 14767  001920  0100               	movlb	0	; () banked
 14768  001922  6BA8               	clrf	(?_printf+7)& (0+255),b
 14769  001924  C0EC  F0A9         	movff	__dia,?_printf+8
 14770  001928  0100               	movlb	0	; () banked
 14771  00192A  6BAA               	clrf	(?_printf+9)& (0+255),b
 14772  00192C  C0EB  F0AB         	movff	__mes,?_printf+10
 14773  001930  0100               	movlb	0	; () banked
 14774  001932  6BAC               	clrf	(?_printf+11)& (0+255),b
 14775  001934  C0EA  F0AD         	movff	__ano,?_printf+12
 14776  001938  0100               	movlb	0	; () banked
 14777  00193A  6BAE               	clrf	(?_printf+13)& (0+255),b
 14778  00193C  EC60  F035         	call	_printf	;wreg free
 14779  001940                     l8512:
 14780  001940  FFFF               	dw	65535	; assembler added errata NOP
 14781                           
 14782                           ;comunicacao.h: 157: }
 14783                           ;comunicacao.h: 158: if (tipo == 2) {
 14784  001942  0E02               	movlw	2
 14785  001944  0100               	movlb	0	; () banked
 14786  001946  19C7               	xorwf	enviaSMS@tipo& (0+255),w,b
 14787  001948  A4D8               	btfss	status,2,c
 14788  00194A  D05F               	goto	l8530
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;comunicacao.h: 159: printf("TESTE DE BOMBAS REALIZADO\r\nEM %02d:%02d:%02d %02d/%02d/%0
      +                          2d\r\nJOCKEY: %s\r\nPRINCIPAL: %s\r\nCOMBUSTAO: %s\r\n",
 14792                           ;comunicacao.h: 160: _hor, _min, _sec, _dia, _mes, _ano, status_jockey == 1 ? "OK" : "FA
      +                          LHA", status_principal == 1 ? "OK" : "FALHA", status_estacionaria == 1 ? "OK" : "FALHA")
      +                          ;
 14793  00194C  0100               	movlb	0	; () banked
 14794  00194E  05FB               	decf	_status_estacionaria& (0+255),w,b
 14795  001950  B4D8               	btfsc	status,2,c
 14796  001952  D005               	goto	l8518
 14797                           
 14798                           ; BSR set to: 0
 14799  001954  0ED1               	movlw	low STR_25
 14800  001956  0100               	movlb	0	; () banked
 14801  001958  6FBF               	movwf	_enviaSMS$1213& (0+255),b
 14802  00195A  0E7F               	movlw	high STR_25
 14803  00195C  D005               	goto	L37
 14804  00195E                     l8518:
 14805  00195E  FFFF               	dw	65535	; assembler added errata NOP
 14806                           
 14807                           ; BSR set to: 0
 14808  001960  0EF9               	movlw	low STR_5
 14809  001962  0100               	movlb	0	; () banked
 14810  001964  6FBF               	movwf	_enviaSMS$1213& (0+255),b
 14811  001966  0E7F               	movlw	high STR_5
 14812  001968                     L37:
 14813  001968  FFFF               	dw	65535	; assembler added errata NOP
 14814  00196A  0100               	movlb	0	; () banked
 14815  00196C  6FC0               	movwf	(_enviaSMS$1213+1)& (0+255),b
 14816                           
 14817                           ; BSR set to: 0
 14818  00196E  0100               	movlb	0	; () banked
 14819  001970  05FC               	decf	_status_principal& (0+255),w,b
 14820  001972  B4D8               	btfsc	status,2,c
 14821  001974  D005               	goto	l8522
 14822                           
 14823                           ; BSR set to: 0
 14824  001976  0ED1               	movlw	low STR_25
 14825  001978  0100               	movlb	0	; () banked
 14826  00197A  6FC1               	movwf	_enviaSMS$1214& (0+255),b
 14827  00197C  0E7F               	movlw	high STR_25
 14828  00197E  D005               	goto	L38
 14829  001980                     l8522:
 14830  001980  FFFF               	dw	65535	; assembler added errata NOP
 14831                           
 14832                           ; BSR set to: 0
 14833  001982  0EF9               	movlw	low STR_5
 14834  001984  0100               	movlb	0	; () banked
 14835  001986  6FC1               	movwf	_enviaSMS$1214& (0+255),b
 14836  001988  0E7F               	movlw	high STR_5
 14837  00198A                     L38:
 14838  00198A  FFFF               	dw	65535	; assembler added errata NOP
 14839  00198C  0100               	movlb	0	; () banked
 14840  00198E  6FC2               	movwf	(_enviaSMS$1214+1)& (0+255),b
 14841                           
 14842                           ; BSR set to: 0
 14843  001990  0100               	movlb	0	; () banked
 14844  001992  05FD               	decf	_status_jockey& (0+255),w,b
 14845  001994  B4D8               	btfsc	status,2,c
 14846  001996  D005               	goto	l8526
 14847                           
 14848                           ; BSR set to: 0
 14849  001998  0ED1               	movlw	low STR_25
 14850  00199A  0100               	movlb	0	; () banked
 14851  00199C  6FC3               	movwf	_enviaSMS$1215& (0+255),b
 14852  00199E  0E7F               	movlw	high STR_25
 14853  0019A0  D005               	goto	L39
 14854  0019A2                     l8526:
 14855  0019A2  FFFF               	dw	65535	; assembler added errata NOP
 14856                           
 14857                           ; BSR set to: 0
 14858  0019A4  0EF9               	movlw	low STR_5
 14859  0019A6  0100               	movlb	0	; () banked
 14860  0019A8  6FC3               	movwf	_enviaSMS$1215& (0+255),b
 14861  0019AA  0E7F               	movlw	high STR_5
 14862  0019AC                     L39:
 14863  0019AC  FFFF               	dw	65535	; assembler added errata NOP
 14864  0019AE  0100               	movlb	0	; () banked
 14865  0019B0  6FC4               	movwf	(_enviaSMS$1215+1)& (0+255),b
 14866                           
 14867                           ; BSR set to: 0
 14868                           
 14869                           ; BSR set to: 0
 14870  0019B2  0EAC               	movlw	low STR_23
 14871  0019B4  0100               	movlb	0	; () banked
 14872  0019B6  6FA1               	movwf	printf@f& (0+255),b
 14873  0019B8  0E7B               	movlw	high STR_23
 14874  0019BA  0100               	movlb	0	; () banked
 14875  0019BC  6FA2               	movwf	(printf@f+1)& (0+255),b
 14876  0019BE  C0ED  F0A3         	movff	__hor,?_printf+2
 14877  0019C2  0100               	movlb	0	; () banked
 14878  0019C4  6BA4               	clrf	(?_printf+3)& (0+255),b
 14879  0019C6  C0EE  F0A5         	movff	__min,?_printf+4
 14880  0019CA  0100               	movlb	0	; () banked
 14881  0019CC  6BA6               	clrf	(?_printf+5)& (0+255),b
 14882  0019CE  C0EF  F0A7         	movff	__sec,?_printf+6
 14883  0019D2  0100               	movlb	0	; () banked
 14884  0019D4  6BA8               	clrf	(?_printf+7)& (0+255),b
 14885  0019D6  C0EC  F0A9         	movff	__dia,?_printf+8
 14886  0019DA  0100               	movlb	0	; () banked
 14887  0019DC  6BAA               	clrf	(?_printf+9)& (0+255),b
 14888  0019DE  C0EB  F0AB         	movff	__mes,?_printf+10
 14889  0019E2  0100               	movlb	0	; () banked
 14890  0019E4  6BAC               	clrf	(?_printf+11)& (0+255),b
 14891  0019E6  C0EA  F0AD         	movff	__ano,?_printf+12
 14892  0019EA  0100               	movlb	0	; () banked
 14893  0019EC  6BAE               	clrf	(?_printf+13)& (0+255),b
 14894  0019EE  C0C3  F0AF         	movff	_enviaSMS$1215,?_printf+14
 14895  0019F2  C0C4  F0B0         	movff	_enviaSMS$1215+1,?_printf+15
 14896  0019F6  C0C1  F0B1         	movff	_enviaSMS$1214,?_printf+16
 14897  0019FA  C0C2  F0B2         	movff	_enviaSMS$1214+1,?_printf+17
 14898  0019FE  C0BF  F0B3         	movff	_enviaSMS$1213,?_printf+18
 14899  001A02  C0C0  F0B4         	movff	_enviaSMS$1213+1,?_printf+19
 14900  001A06  EC60  F035         	call	_printf	;wreg free
 14901  001A0A                     l8530:
 14902  001A0A  FFFF               	dw	65535	; assembler added errata NOP
 14903                           
 14904                           ;comunicacao.h: 161: }
 14905                           ;comunicacao.h: 162: writeChar(0x1A);
 14906  001A0C  0E1A               	movlw	26
 14907  001A0E  0100               	movlb	0	; () banked
 14908  001A10  6F80               	movwf	writeChar@hex& (0+255),b
 14909  001A12  0E00               	movlw	0
 14910  001A14  0100               	movlb	0	; () banked
 14911  001A16  6F81               	movwf	(writeChar@hex+1)& (0+255),b
 14912  001A18  EC3C  F032         	call	_writeChar	;wreg free
 14913                           
 14914                           ;comunicacao.h: 163: delay(100);
 14915  001A1C  0E00               	movlw	0
 14916  001A1E  0100               	movlb	0	; () banked
 14917  001A20  6F81               	movwf	(delay@x+1)& (0+255),b
 14918  001A22  0E64               	movlw	100
 14919  001A24  6F80               	movwf	delay@x& (0+255),b
 14920  001A26  EC5B  F033         	call	_delay	;wreg free
 14921                           
 14922                           ;comunicacao.h: 164: writeChar(0x1A);
 14923  001A2A  0E1A               	movlw	26
 14924  001A2C  0100               	movlb	0	; () banked
 14925  001A2E  6F80               	movwf	writeChar@hex& (0+255),b
 14926  001A30  0E00               	movlw	0
 14927  001A32  0100               	movlb	0	; () banked
 14928  001A34  6F81               	movwf	(writeChar@hex+1)& (0+255),b
 14929  001A36  EC3C  F032         	call	_writeChar	;wreg free
 14930                           
 14931                           ;comunicacao.h: 165: delay(100);
 14932  001A3A  0E00               	movlw	0
 14933  001A3C  0100               	movlb	0	; () banked
 14934  001A3E  6F81               	movwf	(delay@x+1)& (0+255),b
 14935  001A40  0E64               	movlw	100
 14936  001A42  6F80               	movwf	delay@x& (0+255),b
 14937  001A44  EC5B  F033         	call	_delay	;wreg free
 14938                           
 14939                           ;comunicacao.h: 166: writeChar(0x1A);
 14940  001A48  0E1A               	movlw	26
 14941  001A4A  0100               	movlb	0	; () banked
 14942  001A4C  6F80               	movwf	writeChar@hex& (0+255),b
 14943  001A4E  0E00               	movlw	0
 14944  001A50  0100               	movlb	0	; () banked
 14945  001A52  6F81               	movwf	(writeChar@hex+1)& (0+255),b
 14946  001A54  EC3C  F032         	call	_writeChar	;wreg free
 14947  001A58  D068               	goto	l8578
 14948  001A5A                     L36:
 14949  001A5A  FFFF               	dw	65535	; assembler added errata NOP
 14950  001A5C  0100               	movlb	0	; () banked
 14951  001A5E  6FF5               	movwf	_timerEtapaComunicacao& (0+255),b
 14952  001A60  D740               	goto	l8502
 14953  001A62                     l8544:
 14954  001A62  FFFF               	dw	65535	; assembler added errata NOP
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;comunicacao.h: 172: if (aguardaBuffer("OK") || aguardaBuffer("ERROR") || aguardaBuffer(
      +                          "+CMGS:")) {
 14958  001A64  0EF9               	movlw	low STR_5
 14959  001A66  0100               	movlb	0	; () banked
 14960  001A68  6F93               	movwf	aguardaBuffer@str& (0+255),b
 14961  001A6A  0E7F               	movlw	high STR_5
 14962  001A6C  0100               	movlb	0	; () banked
 14963  001A6E  6F94               	movwf	(aguardaBuffer@str+1)& (0+255),b
 14964  001A70  EC6A  F034         	call	_aguardaBuffer	;wreg free
 14965  001A74  0900               	iorlw	0
 14966  001A76  A4D8               	btfss	status,2,c
 14967  001A78  D016               	goto	l8550
 14968  001A7A  0ED7               	movlw	low STR_16
 14969  001A7C  0100               	movlb	0	; () banked
 14970  001A7E  6F93               	movwf	aguardaBuffer@str& (0+255),b
 14971  001A80  0E7F               	movlw	high STR_16
 14972  001A82  0100               	movlb	0	; () banked
 14973  001A84  6F94               	movwf	(aguardaBuffer@str+1)& (0+255),b
 14974  001A86  EC6A  F034         	call	_aguardaBuffer	;wreg free
 14975  001A8A  0900               	iorlw	0
 14976  001A8C  A4D8               	btfss	status,2,c
 14977  001A8E  D00B               	goto	l8550
 14978  001A90  0EB0               	movlw	low STR_15
 14979  001A92  0100               	movlb	0	; () banked
 14980  001A94  6F93               	movwf	aguardaBuffer@str& (0+255),b
 14981  001A96  0E7F               	movlw	high STR_15
 14982  001A98  0100               	movlb	0	; () banked
 14983  001A9A  6F94               	movwf	(aguardaBuffer@str+1)& (0+255),b
 14984  001A9C  EC6A  F034         	call	_aguardaBuffer	;wreg free
 14985  001AA0  0900               	iorlw	0
 14986  001AA2  B4D8               	btfsc	status,2,c
 14987  001AA4  D01C               	goto	l8564
 14988  001AA6                     l8550:
 14989  001AA6  FFFF               	dw	65535	; assembler added errata NOP
 14990                           
 14991                           ;comunicacao.h: 173: if (tipo == 2) {
 14992  001AA8  0E02               	movlw	2
 14993  001AAA  0100               	movlb	0	; () banked
 14994  001AAC  19C7               	xorwf	enviaSMS@tipo& (0+255),w,b
 14995  001AAE  A4D8               	btfss	status,2,c
 14996  001AB0  D013               	goto	l8562
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;comunicacao.h: 174: if (telefoneSelecionado == 0) {
 15000  001AB2  0100               	movlb	0	; () banked
 15001  001AB4  51F7               	movf	_telefoneSelecionado& (0+255),w,b
 15002  001AB6  A4D8               	btfss	status,2,c
 15003  001AB8  D004               	goto	l8560
 15004                           
 15005                           ; BSR set to: 0
 15006                           ;comunicacao.h: 175: telefoneSelecionado = 1;
 15007  001ABA  0E01               	movlw	1
 15008  001ABC  0100               	movlb	0	; () banked
 15009  001ABE  6FF7               	movwf	_telefoneSelecionado& (0+255),b
 15010  001AC0  D06B               	goto	l8598
 15011  001AC2                     l8560:
 15012  001AC2  FFFF               	dw	65535	; assembler added errata NOP
 15013                           
 15014                           ; BSR set to: 0
 15015                           ;comunicacao.h: 179: telefoneSelecionado = 0;
 15016  001AC4  0E00               	movlw	0
 15017  001AC6  0100               	movlb	0	; () banked
 15018  001AC8  6FF7               	movwf	_telefoneSelecionado& (0+255),b
 15019                           
 15020                           ;comunicacao.h: 180: gsmOcupado = 0;
 15021  001ACA  0E00               	movlw	0
 15022  001ACC  0100               	movlb	0	; () banked
 15023  001ACE  6FF4               	movwf	_gsmOcupado& (0+255),b
 15024                           
 15025                           ;comunicacao.h: 181: menu_posi = 0;
 15026  001AD0  0E00               	movlw	0
 15027  001AD2  0100               	movlb	0	; () banked
 15028  001AD4  6FDF               	movwf	_menu_posi& (0+255),b
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;comunicacao.h: 182: }
 15032                           ;comunicacao.h: 183: } else {
 15033  001AD6  D003               	goto	l8564
 15034  001AD8                     l8562:
 15035  001AD8  FFFF               	dw	65535	; assembler added errata NOP
 15036                           
 15037                           ; BSR set to: 0
 15038                           ;comunicacao.h: 184: etapaComunicacao++;
 15039  001ADA  4A4D               	infsnz	_etapaComunicacao,f,c
 15040  001ADC  2A4E               	incf	_etapaComunicacao+1,f,c
 15041  001ADE                     l8564:
 15042  001ADE  FFFF               	dw	65535	; assembler added errata NOP
 15043                           
 15044                           ;comunicacao.h: 185: }
 15045                           ;comunicacao.h: 186: }
 15046                           ;comunicacao.h: 187: if (!timerEtapaComunicacao) {
 15047  001AE0  0100               	movlb	0	; () banked
 15048  001AE2  51F5               	movf	_timerEtapaComunicacao& (0+255),w,b
 15049  001AE4  A4D8               	btfss	status,2,c
 15050  001AE6  D080               	goto	l376
 15051  001AE8  D057               	goto	l8598
 15052  001AEA                     l8568:
 15053  001AEA  FFFF               	dw	65535	; assembler added errata NOP
 15054                           
 15055                           ; BSR set to: 0
 15056                           ;comunicacao.h: 192: limparBuffer();
 15057  001AEC  ECD0  F033         	call	_limparBuffer	;wreg free
 15058                           
 15059                           ;comunicacao.h: 193: printf("ATD 0%s;\r\n", telefoneSelecionado == 0 ? tel1 : tel2);
 15060  001AF0  0100               	movlb	0	; () banked
 15061  001AF2  51F7               	movf	_telefoneSelecionado& (0+255),w,b
 15062  001AF4  B4D8               	btfsc	status,2,c
 15063  001AF6  D005               	goto	l8574
 15064                           
 15065                           ; BSR set to: 0
 15066  001AF8  0EA4               	movlw	low _tel2
 15067  001AFA  0100               	movlb	0	; () banked
 15068  001AFC  6FC5               	movwf	_enviaSMS$1221& (0+255),b
 15069  001AFE  0E01               	movlw	high _tel2
 15070  001B00  D005               	goto	L40
 15071  001B02                     l8574:
 15072  001B02  FFFF               	dw	65535	; assembler added errata NOP
 15073                           
 15074                           ; BSR set to: 0
 15075  001B04  0EB0               	movlw	low _tel1
 15076  001B06  0100               	movlb	0	; () banked
 15077  001B08  6FC5               	movwf	_enviaSMS$1221& (0+255),b
 15078  001B0A  0E01               	movlw	high _tel1
 15079  001B0C                     L40:
 15080  001B0C  FFFF               	dw	65535	; assembler added errata NOP
 15081  001B0E  0100               	movlb	0	; () banked
 15082  001B10  6FC6               	movwf	(_enviaSMS$1221+1)& (0+255),b
 15083                           
 15084                           ; BSR set to: 0
 15085                           
 15086                           ; BSR set to: 0
 15087  001B12  0E0D               	movlw	low STR_33
 15088  001B14  0100               	movlb	0	; () banked
 15089  001B16  6FA1               	movwf	printf@f& (0+255),b
 15090  001B18  0E7F               	movlw	high STR_33
 15091  001B1A  0100               	movlb	0	; () banked
 15092  001B1C  6FA2               	movwf	(printf@f+1)& (0+255),b
 15093  001B1E  C0C5  F0A3         	movff	_enviaSMS$1221,?_printf+2
 15094  001B22  C0C6  F0A4         	movff	_enviaSMS$1221+1,?_printf+3
 15095  001B26  EC60  F035         	call	_printf	;wreg free
 15096  001B2A                     l8578:
 15097  001B2A  FFFF               	dw	65535	; assembler added errata NOP
 15098                           
 15099                           ;comunicacao.h: 194: timerEtapaComunicacao = 30;
 15100  001B2C  0E1E               	movlw	30
 15101  001B2E  D795               	goto	L36
 15102  001B30                     l8582:
 15103  001B30  FFFF               	dw	65535	; assembler added errata NOP
 15104                           
 15105                           ; BSR set to: 0
 15106                           ;comunicacao.h: 198: if (!timerEtapaComunicacao || aguardaBuffer("NO")) {
 15107  001B32  0100               	movlb	0	; () banked
 15108  001B34  51F5               	movf	_timerEtapaComunicacao& (0+255),w,b
 15109  001B36  B4D8               	btfsc	status,2,c
 15110  001B38  D00B               	goto	l8586
 15111                           
 15112                           ; BSR set to: 0
 15113  001B3A  0EFC               	movlw	low STR_34
 15114  001B3C  0100               	movlb	0	; () banked
 15115  001B3E  6F93               	movwf	aguardaBuffer@str& (0+255),b
 15116  001B40  0E7F               	movlw	high STR_34
 15117  001B42  0100               	movlb	0	; () banked
 15118  001B44  6F94               	movwf	(aguardaBuffer@str+1)& (0+255),b
 15119  001B46  EC6A  F034         	call	_aguardaBuffer	;wreg free
 15120  001B4A  0900               	iorlw	0
 15121  001B4C  B4D8               	btfsc	status,2,c
 15122  001B4E  D04C               	goto	l376
 15123  001B50                     l8586:
 15124  001B50  FFFF               	dw	65535	; assembler added errata NOP
 15125                           
 15126                           ;comunicacao.h: 199: limparBuffer();
 15127  001B52  ECD0  F033         	call	_limparBuffer	;wreg free
 15128                           
 15129                           ;comunicacao.h: 200: printf("ATH0\r\n");
 15130  001B56  0EA2               	movlw	low STR_20
 15131  001B58  0100               	movlb	0	; () banked
 15132  001B5A  6FA1               	movwf	printf@f& (0+255),b
 15133  001B5C  0E7F               	movlw	high STR_20
 15134  001B5E  0100               	movlb	0	; () banked
 15135  001B60  6FA2               	movwf	(printf@f+1)& (0+255),b
 15136  001B62  EC60  F035         	call	_printf	;wreg free
 15137                           
 15138                           ;comunicacao.h: 201: delay(550);
 15139  001B66  0E02               	movlw	2
 15140  001B68  0100               	movlb	0	; () banked
 15141  001B6A  6F81               	movwf	(delay@x+1)& (0+255),b
 15142  001B6C  0E26               	movlw	38
 15143  001B6E  6F80               	movwf	delay@x& (0+255),b
 15144  001B70  EC5B  F033         	call	_delay	;wreg free
 15145                           
 15146                           ;comunicacao.h: 202: if (telefoneSelecionado == 0) {
 15147  001B74  0100               	movlb	0	; () banked
 15148  001B76  51F7               	movf	_telefoneSelecionado& (0+255),w,b
 15149  001B78  A4D8               	btfss	status,2,c
 15150  001B7A  D004               	goto	l8596
 15151                           
 15152                           ; BSR set to: 0
 15153                           ;comunicacao.h: 203: telefoneSelecionado = 1;
 15154  001B7C  0E01               	movlw	1
 15155  001B7E  0100               	movlb	0	; () banked
 15156  001B80  6FF7               	movwf	_telefoneSelecionado& (0+255),b
 15157                           
 15158                           ;comunicacao.h: 204: } else {
 15159  001B82  D00A               	goto	l8598
 15160  001B84                     l8596:
 15161  001B84  FFFF               	dw	65535	; assembler added errata NOP
 15162                           
 15163                           ; BSR set to: 0
 15164                           ;comunicacao.h: 205: telefoneSelecionado = 0;
 15165  001B86  0E00               	movlw	0
 15166  001B88  0100               	movlb	0	; () banked
 15167  001B8A  6FF7               	movwf	_telefoneSelecionado& (0+255),b
 15168                           
 15169                           ;comunicacao.h: 206: gsmOcupado = 0;
 15170  001B8C  0E00               	movlw	0
 15171  001B8E  0100               	movlb	0	; () banked
 15172  001B90  6FF4               	movwf	_gsmOcupado& (0+255),b
 15173                           
 15174                           ;comunicacao.h: 207: timerReenvioSMS = 120;
 15175  001B92  0E78               	movlw	120
 15176  001B94  0100               	movlb	0	; () banked
 15177  001B96  6FF6               	movwf	_timerReenvioSMS& (0+255),b
 15178  001B98                     l8598:
 15179  001B98  FFFF               	dw	65535	; assembler added errata NOP
 15180                           
 15181                           ; BSR set to: 0
 15182  001B9A  0E00               	movlw	0
 15183  001B9C  6E4E               	movwf	_etapaComunicacao+1,c
 15184  001B9E  0E00               	movlw	0
 15185  001BA0  6E4D               	movwf	_etapaComunicacao,c
 15186                           
 15187                           ; BSR set to: 0
 15188                           ;comunicacao.h: 215: }
 15189                           
 15190                           ;comunicacao.h: 214: break;
 15191  001BA2  D022               	goto	l376
 15192  001BA4                     l8602:
 15193  001BA4  FFFF               	dw	65535	; assembler added errata NOP
 15194  001BA6  C04D  F0BB         	movff	_etapaComunicacao,??_enviaSMS
 15195  001BAA  C04E  F0BC         	movff	_etapaComunicacao+1,??_enviaSMS+1
 15196                           
 15197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15198                           ; Switch size 1, requested type "space"
 15199                           ; Number of cases is 1, Range of values is 0 to 0
 15200                           ; switch strategies available:
 15201                           ; Name         Instructions Cycles
 15202                           ; simple_byte            4     3 (average)
 15203                           ;	Chosen strategy is simple_byte
 15204  001BAE  0100               	movlb	0	; () banked
 15205  001BB0  51BC               	movf	(??_enviaSMS+1)& (0+255),w,b
 15206  001BB2  0A00               	xorlw	0	; case 0
 15207  001BB4  A4D8               	btfss	status,2,c
 15208  001BB6  D7F0               	goto	l8598
 15209                           
 15210                           ; BSR set to: 0
 15211                           ; Switch size 1, requested type "space"
 15212                           ; Number of cases is 7, Range of values is 0 to 6
 15213                           ; switch strategies available:
 15214                           ; Name         Instructions Cycles
 15215                           ; simple_byte           22    12 (average)
 15216                           ;	Chosen strategy is simple_byte
 15217  001BB8  0100               	movlb	0	; () banked
 15218  001BBA  51BB               	movf	??_enviaSMS& (0+255),w,b
 15219  001BBC  0A00               	xorlw	0	; case 0
 15220  001BBE  B4D8               	btfsc	status,2,c
 15221  001BC0  D619               	goto	l8462
 15222  001BC2  0A01               	xorlw	1	; case 1
 15223  001BC4  B4D8               	btfsc	status,2,c
 15224  001BC6  D627               	goto	l8470
 15225  001BC8  0A03               	xorlw	3	; case 2
 15226  001BCA  B4D8               	btfsc	status,2,c
 15227  001BCC  D664               	goto	l8488
 15228  001BCE  0A01               	xorlw	1	; case 3
 15229  001BD0  B4D8               	btfsc	status,2,c
 15230  001BD2  D68B               	goto	l8504
 15231  001BD4  0A07               	xorlw	7	; case 4
 15232  001BD6  B4D8               	btfsc	status,2,c
 15233  001BD8  D744               	goto	l8544
 15234  001BDA  0A01               	xorlw	1	; case 5
 15235  001BDC  B4D8               	btfsc	status,2,c
 15236  001BDE  D785               	goto	l8568
 15237  001BE0  0A03               	xorlw	3	; case 6
 15238  001BE2  B4D8               	btfsc	status,2,c
 15239  001BE4  D7A5               	goto	l8582
 15240  001BE6  D7D8               	goto	l8598
 15241  001BE8                     l376:
 15242  001BE8  FFFF               	dw	65535	; assembler added errata NOP
 15243  001BEA  0012               	return		;funcret
 15244  001BEC  FFFF               	dw	65535	; errata NOP
 15245  001BEE                     __end_of_enviaSMS:
 15246                           	opt stack 0
 15247                           tblptru	equ	0xFF8
 15248                           tblptrh	equ	0xFF7
 15249                           tblptrl	equ	0xFF6
 15250                           tablat	equ	0xFF5
 15251                           prodh	equ	0xFF4
 15252                           prodl	equ	0xFF3
 15253                           intcon	equ	0xFF2
 15254                           postinc0	equ	0xFEE
 15255                           wreg	equ	0xFE8
 15256                           postdec1	equ	0xFE5
 15257                           fsr1l	equ	0xFE1
 15258                           indf2	equ	0xFDF
 15259                           postinc2	equ	0xFDE
 15260                           fsr2h	equ	0xFDA
 15261                           fsr2l	equ	0xFD9
 15262                           status	equ	0xFD8
 15263                           
 15264 ;; *************** function _writeChar *****************
 15265 ;; Defined at:
 15266 ;;		line 21 in file "serial.h"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;  hex             2    0[BANK0 ] PTR unsigned char 
 15269 ;;		 -> RAM(1535), 
 15270 ;; Auto vars:     Size  Location     Type
 15271 ;;		None
 15272 ;; Return value:  Size  Location     Type
 15273 ;;                  1    wreg      void 
 15274 ;; Registers used:
 15275 ;;		None
 15276 ;; Tracked objects:
 15277 ;;		On entry : 0/0
 15278 ;;		On exit  : 0/0
 15279 ;;		Unchanged: 0/0
 15280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15281 ;;      Params:         0       2       0       0       0       0       0
 15282 ;;      Locals:         0       0       0       0       0       0       0
 15283 ;;      Temps:          0       0       0       0       0       0       0
 15284 ;;      Totals:         0       2       0       0       0       0       0
 15285 ;;Total ram usage:        2 bytes
 15286 ;; Hardware stack levels used:    1
 15287 ;; Hardware stack levels required when called:    6
 15288 ;; This function calls:
 15289 ;;		Nothing
 15290 ;; This function is called by:
 15291 ;;		_getSinalSIM800L
 15292 ;;		_comunicarTeste
 15293 ;;		_enviaSMS
 15294 ;; This function uses a non-reentrant model
 15295 ;;
 15296                           
 15297                           	psect	text46
 15298  006478                     __ptext46:
 15299                           	opt stack 0
 15300  006478                     _writeChar:
 15301                           	opt stack 0
 15302  006478  FFFF               	dw	65535	; assembler added errata NOP
 15303  00647A                     l247:
 15304  00647A  FFFF               	dw	65535	; assembler added errata NOP
 15305  00647C  A2AC               	btfss	4012,1,c	;volatile
 15306  00647E  D7FD               	goto	l247
 15307                           
 15308                           ;serial.h: 23: TXREG = hex;
 15309  006480  C080  FFAD         	movff	writeChar@hex,4013	;volatile
 15310  006484  0012               	return		;funcret
 15311  006486  FFFF               	dw	65535	; errata NOP
 15312  006488                     __end_of_writeChar:
 15313                           	opt stack 0
 15314                           tblptru	equ	0xFF8
 15315                           tblptrh	equ	0xFF7
 15316                           tblptrl	equ	0xFF6
 15317                           tablat	equ	0xFF5
 15318                           prodh	equ	0xFF4
 15319                           prodl	equ	0xFF3
 15320                           intcon	equ	0xFF2
 15321                           postinc0	equ	0xFEE
 15322                           wreg	equ	0xFE8
 15323                           postdec1	equ	0xFE5
 15324                           fsr1l	equ	0xFE1
 15325                           indf2	equ	0xFDF
 15326                           postinc2	equ	0xFDE
 15327                           fsr2h	equ	0xFDA
 15328                           fsr2l	equ	0xFD9
 15329                           status	equ	0xFD8
 15330                           
 15331 ;; *************** function _printf *****************
 15332 ;; Defined at:
 15333 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\printf.c"
 15334 ;; Parameters:    Size  Location     Type
 15335 ;;  f               2   33[BANK0 ] PTR const unsigned char 
 15336 ;;		 -> STR_35(7), STR_33(11), STR_23(104), STR_22(63), 
 15337 ;;		 -> STR_21(18), STR_20(7), STR_19(12), STR_17(5), 
 15338 ;;		 -> STR_12(123), STR_11(18), STR_10(12), STR_8(5), 
 15339 ;;		 -> STR_4(5), STR_3(9), 
 15340 ;; Auto vars:     Size  Location     Type
 15341 ;;  pb              4   55[BANK0 ] struct __prbuf
 15342 ;;  ap              2   53[BANK0 ] PTR void [1]
 15343 ;;		 -> ?_sprintf(2), ?_printf(2), 
 15344 ;; Return value:  Size  Location     Type
 15345 ;;                  2   33[BANK0 ] int 
 15346 ;; Registers used:
 15347 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15348 ;; Tracked objects:
 15349 ;;		On entry : 0/0
 15350 ;;		On exit  : 0/0
 15351 ;;		Unchanged: 0/0
 15352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15353 ;;      Params:         0      20       0       0       0       0       0
 15354 ;;      Locals:         0       6       0       0       0       0       0
 15355 ;;      Temps:          0       0       0       0       0       0       0
 15356 ;;      Totals:         0      26       0       0       0       0       0
 15357 ;;Total ram usage:       26 bytes
 15358 ;; Hardware stack levels used:    1
 15359 ;; Hardware stack levels required when called:    8
 15360 ;; This function calls:
 15361 ;;		__doprnt
 15362 ;; This function is called by:
 15363 ;;		_getSinalSIM800L
 15364 ;;		_comunicarTeste
 15365 ;;		_enviaSMS
 15366 ;; This function uses a non-reentrant model
 15367 ;;
 15368                           
 15369                           	psect	text47
 15370  006AC0                     __ptext47:
 15371                           	opt stack 0
 15372  006AC0                     _printf:
 15373                           	opt stack 0
 15374  006AC0  FFFF               	dw	65535	; assembler added errata NOP
 15375                           
 15376                           ;incstack = 0
 15377  006AC2  0E00               	movlw	0
 15378  006AC4  0100               	movlb	0	; () banked
 15379  006AC6  6FB7               	movwf	printf@pb& (0+255),b
 15380  006AC8  0E00               	movlw	0
 15381  006ACA  0100               	movlb	0	; () banked
 15382  006ACC  6FB8               	movwf	(printf@pb+1)& (0+255),b
 15383  006ACE  0E9A               	movlw	low _putch
 15384  006AD0  0100               	movlb	0	; () banked
 15385  006AD2  6FB9               	movwf	(printf@pb+2)& (0+255),b
 15386  006AD4  0E64               	movlw	high _putch
 15387  006AD6  0100               	movlb	0	; () banked
 15388  006AD8  6FBA               	movwf	(printf@pb+3)& (0+255),b
 15389  006ADA  0EA3               	movlw	low (?_printf+2)
 15390  006ADC  0100               	movlb	0	; () banked
 15391  006ADE  6FB5               	movwf	printf@ap& (0+255),b
 15392  006AE0  0E00               	movlw	high (?_printf+2)
 15393  006AE2  0100               	movlb	0	; () banked
 15394  006AE4  6FB6               	movwf	(printf@ap+1)& (0+255),b
 15395                           
 15396                           ; BSR set to: 0
 15397                           ;	Return value of _printf is never used
 15398  006AE6  0EB7               	movlw	low printf@pb
 15399  006AE8  0100               	movlb	0	; () banked
 15400  006AEA  6F8C               	movwf	__doprnt@pb& (0+255),b
 15401  006AEC  0E00               	movlw	high printf@pb
 15402  006AEE  0100               	movlb	0	; () banked
 15403  006AF0  6F8D               	movwf	(__doprnt@pb+1)& (0+255),b
 15404  006AF2  C0A1  F08E         	movff	printf@f,__doprnt@f
 15405  006AF6  C0A2  F08F         	movff	printf@f+1,__doprnt@f+1
 15406  006AFA  0EB5               	movlw	low printf@ap
 15407  006AFC  0100               	movlb	0	; () banked
 15408  006AFE  6F90               	movwf	__doprnt@ap& (0+255),b
 15409  006B00  0E00               	movlw	high printf@ap
 15410  006B02  0100               	movlb	0	; () banked
 15411  006B04  6F91               	movwf	(__doprnt@ap+1)& (0+255),b
 15412  006B06  EC82  F000         	call	__doprnt	;wreg free
 15413  006B0A  0012               	return		;funcret
 15414  006B0C  FFFF               	dw	65535	; errata NOP
 15415  006B0E                     __end_of_printf:
 15416                           	opt stack 0
 15417                           tblptru	equ	0xFF8
 15418                           tblptrh	equ	0xFF7
 15419                           tblptrl	equ	0xFF6
 15420                           tablat	equ	0xFF5
 15421                           prodh	equ	0xFF4
 15422                           prodl	equ	0xFF3
 15423                           intcon	equ	0xFF2
 15424                           postinc0	equ	0xFEE
 15425                           wreg	equ	0xFE8
 15426                           postdec1	equ	0xFE5
 15427                           fsr1l	equ	0xFE1
 15428                           indf2	equ	0xFDF
 15429                           postinc2	equ	0xFDE
 15430                           fsr2h	equ	0xFDA
 15431                           fsr2l	equ	0xFD9
 15432                           status	equ	0xFD8
 15433                           
 15434 ;; *************** function __doprnt *****************
 15435 ;; Defined at:
 15436 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
 15437 ;; Parameters:    Size  Location     Type
 15438 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 15439 ;;		 -> sprintf@pb(4), printf@pb(4), 
 15440 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 15441 ;;		 -> intToFloatStr@conv(4), STR_113(15), STR_112(12), STR_111(10), 
 15442 ;;		 -> STR_110(18), STR_109(10), STR_108(18), STR_107(16), 
 15443 ;;		 -> STR_106(10), STR_105(10), STR_104(11), STR_103(9), 
 15444 ;;		 -> STR_102(3), STR_101(15), STR_100(15), STR_99(11), 
 15445 ;;		 -> STR_98(11), STR_97(19), STR_96(5), STR_95(12), 
 15446 ;;		 -> STR_94(5), STR_93(14), STR_92(19), STR_89(3), 
 15447 ;;		 -> STR_88(7), STR_87(7), STR_85(12), STR_84(17), 
 15448 ;;		 -> STR_83(20), STR_82(8), STR_79(14), STR_76(14), 
 15449 ;;		 -> STR_75(11), STR_72(10), STR_71(31), STR_68(11), 
 15450 ;;		 -> STR_67(20), STR_66(20), STR_65(21), STR_64(15), 
 15451 ;;		 -> STR_63(6), STR_62(15), STR_61(6), STR_60(19), 
 15452 ;;		 -> STR_59(15), STR_58(19), STR_57(15), STR_56(19), 
 15453 ;;		 -> STR_55(18), STR_54(26), STR_53(16), STR_50(15), 
 15454 ;;		 -> STR_47(15), STR_44(11), STR_43(17), STR_42(16), 
 15455 ;;		 -> STR_41(19), STR_40(19), STR_39(16), STR_38(15), 
 15456 ;;		 -> STR_37(15), STR_36(20), STR_35(7), STR_33(11), 
 15457 ;;		 -> STR_23(104), STR_22(63), STR_21(18), STR_20(7), 
 15458 ;;		 -> STR_19(12), STR_17(5), STR_12(123), STR_11(18), 
 15459 ;;		 -> STR_10(12), STR_8(5), STR_4(5), STR_3(9), 
 15460 ;;		 -> STR_2(5), STR_1(5), 
 15461 ;;  ap              2   16[BANK0 ] PTR PTR void 
 15462 ;;		 -> sprintf@ap(2), printf@ap(2), 
 15463 ;; Auto vars:     Size  Location     Type
 15464 ;;  tmpval          4    0        struct .
 15465 ;;  width           2   30[BANK0 ] int 
 15466 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
 15467 ;;		 -> ?_sprintf(2), ?_printf(2), STR_114(7), _doprnt@c(1), 
 15468 ;;		 -> intToFloatStr@end(4), STR_91(17), STR_90(13), STR_86(12), 
 15469 ;;		 -> STR_81(5), STR_80(3), STR_78(5), STR_77(3), 
 15470 ;;		 -> STR_74(5), STR_73(3), STR_70(4), STR_69(4), 
 15471 ;;		 -> STR_52(5), STR_51(3), STR_49(5), STR_48(3), 
 15472 ;;		 -> line3(21), STR_46(5), STR_45(3), line2(21), 
 15473 ;;		 -> line1(21), line4(21), STR_29(6), STR_28(3), 
 15474 ;;		 -> STR_27(6), STR_26(3), STR_25(6), STR_24(3), 
 15475 ;;		 -> STR_13(12), tel2(12), tel1(12), bufferAUX(20), 
 15476 ;;		 -> NULL(0), bufferSerial(60), 
 15477 ;;  len             2   25[BANK0 ] unsigned int 
 15478 ;;  val             2   23[BANK0 ] unsigned int 
 15479 ;;  c               1   32[BANK0 ] char 
 15480 ;;  flag            1   27[BANK0 ] unsigned char 
 15481 ;;  prec            1   22[BANK0 ] char 
 15482 ;; Return value:  Size  Location     Type
 15483 ;;                  2   12[BANK0 ] int 
 15484 ;; Registers used:
 15485 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15486 ;; Tracked objects:
 15487 ;;		On entry : 0/0
 15488 ;;		On exit  : 0/0
 15489 ;;		Unchanged: 0/0
 15490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15491 ;;      Params:         0       6       0       0       0       0       0
 15492 ;;      Locals:         0      11       0       0       0       0       0
 15493 ;;      Temps:          0       4       0       0       0       0       0
 15494 ;;      Totals:         0      21       0       0       0       0       0
 15495 ;;Total ram usage:       21 bytes
 15496 ;; Hardware stack levels used:    1
 15497 ;; Hardware stack levels required when called:    7
 15498 ;; This function calls:
 15499 ;;		Absolute function
 15500 ;;		___lwdiv
 15501 ;;		___lwmod
 15502 ;;		___wmul
 15503 ;;		_isdigit
 15504 ;;		_putch
 15505 ;; This function is called by:
 15506 ;;		_printf
 15507 ;;		_sprintf
 15508 ;; This function uses a non-reentrant model
 15509 ;;
 15510                           
 15511                           	psect	text48
 15512  000104                     __ptext48:
 15513                           	opt stack 0
 15514  000104                     __doprnt:
 15515                           	opt stack 0
 15516  000104  FFFF               	dw	65535	; assembler added errata NOP
 15517                           
 15518                           ;doprnt.c: 499: signed char c;
 15519                           ;doprnt.c: 501: int width;
 15520                           ;doprnt.c: 506: signed char prec;
 15521                           ;doprnt.c: 508: unsigned char flag;
 15522                           ;doprnt.c: 523: union {
 15523                           ;doprnt.c: 524: unsigned long vd;
 15524                           ;doprnt.c: 525: double integ;
 15525                           ;doprnt.c: 526: } tmpval;
 15526                           ;doprnt.c: 528: unsigned int val;
 15527                           ;doprnt.c: 529: unsigned len;
 15528                           ;doprnt.c: 530: const char * cp;
 15529                           ;doprnt.c: 536: while(c = *f++) {
 15530                           
 15531                           ;incstack = 0
 15532  000106  EFBC  F004         	goto	l8092
 15533  00010A                     l7916:
 15534  00010A  FFFF               	dw	65535	; assembler added errata NOP
 15535                           
 15536                           ;doprnt.c: 538: if(c != '%')
 15537  00010C  0E25               	movlw	37
 15538  00010E  0100               	movlb	0	; () banked
 15539  000110  19A0               	xorwf	__doprnt@c& (0+255),w,b
 15540  000112  B4D8               	btfsc	status,2,c
 15541  000114  D03C               	goto	l7926
 15542                           
 15543                           ; BSR set to: 0
 15544                           ;doprnt.c: 540: {
 15545                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 15546  000116  0100               	movlb	0	; () banked
 15547  000118  EE20 F002          	lfsr	2,2
 15548  00011C  518C               	movf	__doprnt@pb& (0+255),w,b
 15549  00011E  26D9               	addwf	fsr2l,f,c
 15550  000120  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 15551  000122  22DA               	addwfc	fsr2h,f,c
 15552  000124  50DE               	movf	postinc2,w,c
 15553  000126  10DE               	iorwf	postinc2,w,c
 15554  000128  B4D8               	btfsc	status,2,c
 15555  00012A  D01A               	goto	l7922
 15556                           
 15557                           ; BSR set to: 0
 15558  00012C  0100               	movlb	0	; () banked
 15559  00012E  EE20 F002          	lfsr	2,2
 15560  000132  518C               	movf	__doprnt@pb& (0+255),w,b
 15561  000134  26D9               	addwf	fsr2l,f,c
 15562  000136  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 15563  000138  22DA               	addwfc	fsr2h,f,c
 15564  00013A  D802               	call	u9048
 15565  00013C  EFBC  F004         	goto	l8092
 15566  000140                     u9048:
 15567  000140  FFFF               	dw	65535	; assembler added errata NOP
 15568  000142  0005               	push	
 15569  000144  6EFA               	movwf	pclath,c
 15570  000146  50DE               	movf	postinc2,w,c
 15571  000148  6EFD               	movwf	tosl,c
 15572  00014A  50DE               	movf	postinc2,w,c
 15573  00014C  6EFE               	movwf	tosh,c
 15574  00014E  50F8               	movf	tblptru,w,c
 15575  000150  6EFF               	movwf	tosu,c
 15576  000152  50FA               	movf	pclath,w,c
 15577  000154  0100               	movlb	0	; () banked
 15578  000156  51A0               	movf	__doprnt@c& (0+255),w,b
 15579  000158  0012               	return		;indir
 15580  00015A  FFFF               	dw	65535	; errata NOP
 15581  00015C  EFBC  F004         	goto	l8092
 15582  000160                     l7922:
 15583  000160  FFFF               	dw	65535	; assembler added errata NOP
 15584  000162  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 15585  000166  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 15586  00016A  CFDE F092          	movff	postinc2,??__doprnt
 15587  00016E  CFDD F093          	movff	postdec2,??__doprnt+1
 15588  000172  C092  FFD9         	movff	??__doprnt,fsr2l
 15589  000176  C093  FFDA         	movff	??__doprnt+1,fsr2h
 15590  00017A  C0A0  FFDF         	movff	__doprnt@c,indf2
 15591  00017E  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 15592  000182  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 15593  000186  2ADE               	incf	postinc2,f,c
 15594  000188  0E00               	movlw	0
 15595  00018A  22DD               	addwfc	postdec2,f,c
 15596                           
 15597                           ;doprnt.c: 542: continue;
 15598  00018C  D3F5               	goto	l8092
 15599  00018E                     l7926:
 15600  00018E  FFFF               	dw	65535	; assembler added errata NOP
 15601                           
 15602                           ;doprnt.c: 543: }
 15603                           ;doprnt.c: 546: width = 0;
 15604  000190  0E00               	movlw	0
 15605  000192  0100               	movlb	0	; () banked
 15606  000194  6F9F               	movwf	(__doprnt@width+1)& (0+255),b
 15607  000196  0E00               	movlw	0
 15608  000198  6F9E               	movwf	__doprnt@width& (0+255),b
 15609                           
 15610                           ;doprnt.c: 548: flag = 0;
 15611  00019A  0E00               	movlw	0
 15612  00019C  0100               	movlb	0	; () banked
 15613  00019E  6F9B               	movwf	__doprnt@flag& (0+255),b
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;doprnt.c: 551: switch(*f) {
 15617                           
 15618                           ;doprnt.c: 550: for(;;) {
 15619  0001A0  D006               	goto	l7932
 15620  0001A2                     l7928:
 15621  0001A2  FFFF               	dw	65535	; assembler added errata NOP
 15622                           
 15623                           ;doprnt.c: 580: flag |= 0x04;
 15624  0001A4  0100               	movlb	0	; () banked
 15625  0001A6  859B               	bsf	__doprnt@flag& (0+255),2,b
 15626                           
 15627                           ;doprnt.c: 581: f++;
 15628  0001A8  0100               	movlb	0	; () banked
 15629  0001AA  4B8E               	infsnz	__doprnt@f& (0+255),f,b
 15630  0001AC  2B8F               	incf	(__doprnt@f+1)& (0+255),f,b
 15631  0001AE                     l7932:
 15632  0001AE  FFFF               	dw	65535	; assembler added errata NOP
 15633  0001B0  C08E  FFF6         	movff	__doprnt@f,tblptrl
 15634  0001B4  C08F  FFF7         	movff	__doprnt@f+1,tblptrh
 15635  0001B8  6AF8               	clrf	tblptru,c
 15636  0001BA  0E05               	movlw	(high __ramtop+-1)
 15637  0001BC  64F7               	cpfsgt	tblptrh,c
 15638  0001BE  D004               	bra	u9057
 15639  0001C0  0008               	tblrd		*
 15640  0001C2  FFFF               	dw	65535	; errata NOP
 15641  0001C4  50F5               	movf	tablat,w,c
 15642  0001C6  D005               	bra	u9050
 15643  0001C8                     u9057:
 15644  0001C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 15645  0001CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 15646  0001D0  50EF               	movf	indf0,w,c
 15647  0001D2                     u9050:
 15648                           
 15649                           ; Switch size 1, requested type "space"
 15650                           ; Number of cases is 1, Range of values is 48 to 48
 15651                           ; switch strategies available:
 15652                           ; Name         Instructions Cycles
 15653                           ; simple_byte            4     3 (average)
 15654                           ;	Chosen strategy is simple_byte
 15655  0001D2  0A30               	xorlw	48	; case 48
 15656  0001D4  B4D8               	btfsc	status,2,c
 15657  0001D6  D7E5               	goto	l7928
 15658                           
 15659                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 15660                           
 15661                           ;doprnt.c: 586: }
 15662                           
 15663                           ;doprnt.c: 585: break;
 15664  0001D8  C08E  FFF6         	movff	__doprnt@f,tblptrl
 15665  0001DC  C08F  FFF7         	movff	__doprnt@f+1,tblptrh
 15666  0001E0  6AF8               	clrf	tblptru,c
 15667  0001E2  0E05               	movlw	(high __ramtop+-1)
 15668  0001E4  64F7               	cpfsgt	tblptrh,c
 15669  0001E6  D004               	bra	u9067
 15670  0001E8  0008               	tblrd		*
 15671  0001EA  FFFF               	dw	65535	; errata NOP
 15672  0001EC  50F5               	movf	tablat,w,c
 15673  0001EE  D005               	bra	u9060
 15674  0001F0                     u9067:
 15675  0001F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 15676  0001F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 15677  0001F8  50EF               	movf	indf0,w,c
 15678  0001FA                     u9060:
 15679  0001FA  ECDA  F032         	call	_isdigit
 15680  0001FE  A0D8               	btfss	status,0,c
 15681  000200  D194               	goto	l7996
 15682                           
 15683                           ;doprnt.c: 598: width = 0;
 15684  000202  0E00               	movlw	0
 15685  000204  0100               	movlb	0	; () banked
 15686  000206  6F9F               	movwf	(__doprnt@width+1)& (0+255),b
 15687  000208  0E00               	movlw	0
 15688  00020A  6F9E               	movwf	__doprnt@width& (0+255),b
 15689  00020C                     l7938:
 15690  00020C  FFFF               	dw	65535	; assembler added errata NOP
 15691                           
 15692                           ;doprnt.c: 600: width *= 10;
 15693  00020E  C09E  F080         	movff	__doprnt@width,___wmul@multiplier
 15694  000212  C09F  F081         	movff	__doprnt@width+1,___wmul@multiplier+1
 15695  000216  0E00               	movlw	0
 15696  000218  0100               	movlb	0	; () banked
 15697  00021A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15698  00021C  0E0A               	movlw	10
 15699  00021E  6F82               	movwf	___wmul@multiplicand& (0+255),b
 15700  000220  EC78  F033         	call	___wmul	;wreg free
 15701  000224  C080  F09E         	movff	?___wmul,__doprnt@width
 15702  000228  C081  F09F         	movff	?___wmul+1,__doprnt@width+1
 15703                           
 15704                           ;doprnt.c: 601: width += *f++ - '0';
 15705  00022C  0ED0               	movlw	208
 15706  00022E  0100               	movlb	0	; () banked
 15707  000230  6F92               	movwf	??__doprnt& (0+255),b
 15708  000232  0EFF               	movlw	255
 15709  000234  0100               	movlb	0	; () banked
 15710  000236  6F93               	movwf	(??__doprnt+1)& (0+255),b
 15711  000238  C08E  FFF6         	movff	__doprnt@f,tblptrl
 15712  00023C  C08F  FFF7         	movff	__doprnt@f+1,tblptrh
 15713  000240  6AF8               	clrf	tblptru,c
 15714  000242  0E05               	movlw	(high __ramtop+-1)
 15715  000244  64F7               	cpfsgt	tblptrh,c
 15716  000246  D004               	bra	u9087
 15717  000248  0008               	tblrd		*
 15718  00024A  FFFF               	dw	65535	; errata NOP
 15719  00024C  50F5               	movf	tablat,w,c
 15720  00024E  D005               	bra	u9080
 15721  000250                     u9087:
 15722  000250  CFF6 FFE9          	movff	tblptrl,fsr0l
 15723  000254  CFF7 FFEA          	movff	tblptrh,fsr0h
 15724  000258  50EF               	movf	indf0,w,c
 15725  00025A                     u9080:
 15726  00025A  0100               	movlb	0	; () banked
 15727  00025C  6F94               	movwf	(??__doprnt+2)& (0+255),b
 15728  00025E  6B95               	clrf	(??__doprnt+3)& (0+255),b
 15729  000260  0100               	movlb	0	; () banked
 15730  000262  5192               	movf	??__doprnt& (0+255),w,b
 15731  000264  0100               	movlb	0	; () banked
 15732  000266  2794               	addwf	(??__doprnt+2)& (0+255),f,b
 15733  000268  0100               	movlb	0	; () banked
 15734  00026A  5193               	movf	(??__doprnt+1)& (0+255),w,b
 15735  00026C  0100               	movlb	0	; () banked
 15736  00026E  2395               	addwfc	(??__doprnt+3)& (0+255),f,b
 15737  000270  0100               	movlb	0	; () banked
 15738  000272  5194               	movf	(??__doprnt+2)& (0+255),w,b
 15739  000274  0100               	movlb	0	; () banked
 15740  000276  279E               	addwf	__doprnt@width& (0+255),f,b
 15741  000278  0100               	movlb	0	; () banked
 15742  00027A  5195               	movf	(??__doprnt+3)& (0+255),w,b
 15743  00027C  0100               	movlb	0	; () banked
 15744  00027E  239F               	addwfc	(__doprnt@width+1)& (0+255),f,b
 15745                           
 15746                           ; BSR set to: 0
 15747  000280  0100               	movlb	0	; () banked
 15748  000282  4B8E               	infsnz	__doprnt@f& (0+255),f,b
 15749  000284  2B8F               	incf	(__doprnt@f+1)& (0+255),f,b
 15750                           
 15751                           ; BSR set to: 0
 15752                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 15753  000286  C08E  FFF6         	movff	__doprnt@f,tblptrl
 15754  00028A  C08F  FFF7         	movff	__doprnt@f+1,tblptrh
 15755  00028E  6AF8               	clrf	tblptru,c
 15756  000290  0E05               	movlw	(high __ramtop+-1)
 15757  000292  64F7               	cpfsgt	tblptrh,c
 15758  000294  D004               	bra	u9097
 15759  000296  0008               	tblrd		*
 15760  000298  FFFF               	dw	65535	; errata NOP
 15761  00029A  50F5               	movf	tablat,w,c
 15762  00029C  D005               	bra	u9090
 15763  00029E                     u9097:
 15764  00029E  CFF6 FFE9          	movff	tblptrl,fsr0l
 15765  0002A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15766  0002A6  50EF               	movf	indf0,w,c
 15767  0002A8                     u9090:
 15768  0002A8  ECDA  F032         	call	_isdigit
 15769  0002AC  A0D8               	btfss	status,0,c
 15770  0002AE  D13D               	goto	l7996
 15771  0002B0  D7AD               	goto	l7938
 15772  0002B2                     l7946:
 15773  0002B2  FFFF               	dw	65535	; assembler added errata NOP
 15774                           
 15775                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 15776  0002B4  C090  FFD9         	movff	__doprnt@ap,fsr2l
 15777  0002B8  C091  FFDA         	movff	__doprnt@ap+1,fsr2h
 15778  0002BC  CFDF F092          	movff	indf2,??__doprnt
 15779  0002C0  0E02               	movlw	2
 15780  0002C2  26DE               	addwf	postinc2,f,c
 15781  0002C4  CFDF F093          	movff	indf2,??__doprnt+1
 15782  0002C8  0E00               	movlw	0
 15783  0002CA  22DD               	addwfc	postdec2,f,c
 15784  0002CC  C092  FFD9         	movff	??__doprnt,fsr2l
 15785  0002D0  C093  FFDA         	movff	??__doprnt+1,fsr2h
 15786  0002D4  CFDE F09C          	movff	postinc2,__doprnt@cp
 15787  0002D8  CFDD F09D          	movff	postdec2,__doprnt@cp+1
 15788                           
 15789                           ;doprnt.c: 740: if(!cp)
 15790  0002DC  0100               	movlb	0	; () banked
 15791  0002DE  519C               	movf	__doprnt@cp& (0+255),w,b
 15792  0002E0  0100               	movlb	0	; () banked
 15793  0002E2  119D               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 15794  0002E4  A4D8               	btfss	status,2,c
 15795  0002E6  D006               	goto	l7952
 15796                           
 15797                           ; BSR set to: 0
 15798                           ;doprnt.c: 741: cp = "(null)";
 15799  0002E8  0E9B               	movlw	low STR_114
 15800  0002EA  0100               	movlb	0	; () banked
 15801  0002EC  6F9C               	movwf	__doprnt@cp& (0+255),b
 15802  0002EE  0E7F               	movlw	high STR_114
 15803  0002F0  0100               	movlb	0	; () banked
 15804  0002F2  6F9D               	movwf	(__doprnt@cp+1)& (0+255),b
 15805  0002F4                     l7952:
 15806  0002F4  FFFF               	dw	65535	; assembler added errata NOP
 15807                           
 15808                           ; BSR set to: 0
 15809                           ;doprnt.c: 745: len = 0;
 15810  0002F6  0E00               	movlw	0
 15811  0002F8  0100               	movlb	0	; () banked
 15812  0002FA  6F9A               	movwf	(__doprnt@len+1)& (0+255),b
 15813  0002FC  0E00               	movlw	0
 15814  0002FE  6F99               	movwf	__doprnt@len& (0+255),b
 15815                           
 15816                           ;doprnt.c: 746: while(cp[len])
 15817  000300  D004               	goto	l7956
 15818  000302                     l7954:
 15819  000302  FFFF               	dw	65535	; assembler added errata NOP
 15820                           
 15821                           ;doprnt.c: 747: len++;
 15822  000304  0100               	movlb	0	; () banked
 15823  000306  4B99               	infsnz	__doprnt@len& (0+255),f,b
 15824  000308  2B9A               	incf	(__doprnt@len+1)& (0+255),f,b
 15825  00030A                     l7956:
 15826  00030A  FFFF               	dw	65535	; assembler added errata NOP
 15827                           
 15828                           ; BSR set to: 0
 15829  00030C  0100               	movlb	0	; () banked
 15830  00030E  5199               	movf	__doprnt@len& (0+255),w,b
 15831  000310  0100               	movlb	0	; () banked
 15832  000312  259C               	addwf	__doprnt@cp& (0+255),w,b
 15833  000314  0100               	movlb	0	; () banked
 15834  000316  6F92               	movwf	??__doprnt& (0+255),b
 15835  000318  0100               	movlb	0	; () banked
 15836  00031A  519A               	movf	(__doprnt@len+1)& (0+255),w,b
 15837  00031C  0100               	movlb	0	; () banked
 15838  00031E  219D               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 15839  000320  0100               	movlb	0	; () banked
 15840  000322  6F93               	movwf	(??__doprnt+1)& (0+255),b
 15841  000324  C092  FFF6         	movff	??__doprnt,tblptrl
 15842  000328  C093  FFF7         	movff	??__doprnt+1,tblptrh
 15843  00032C  6AF8               	clrf	tblptru,c
 15844  00032E  0E05               	movlw	(high __ramtop+-1)
 15845  000330  64F7               	cpfsgt	tblptrh,c
 15846  000332  D004               	bra	u9127
 15847  000334  0008               	tblrd		*
 15848  000336  FFFF               	dw	65535	; errata NOP
 15849  000338  50F5               	movf	tablat,w,c
 15850  00033A  D005               	bra	u9120
 15851  00033C                     u9127:
 15852  00033C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15853  000340  CFF7 FFEA          	movff	tblptrh,fsr0h
 15854  000344  50EF               	movf	indf0,w,c
 15855  000346                     u9120:
 15856  000346  0900               	iorlw	0
 15857  000348  A4D8               	btfss	status,2,c
 15858  00034A  D7DB               	goto	l7954
 15859  00034C                     l7958:
 15860  00034C  FFFF               	dw	65535	; assembler added errata NOP
 15861                           
 15862                           ;doprnt.c: 757: if(width > len)
 15863  00034E  0100               	movlb	0	; () banked
 15864  000350  519E               	movf	__doprnt@width& (0+255),w,b
 15865  000352  0100               	movlb	0	; () banked
 15866  000354  5D99               	subwf	__doprnt@len& (0+255),w,b
 15867  000356  0100               	movlb	0	; () banked
 15868  000358  519F               	movf	(__doprnt@width+1)& (0+255),w,b
 15869  00035A  0100               	movlb	0	; () banked
 15870  00035C  599A               	subwfb	(__doprnt@len+1)& (0+255),w,b
 15871  00035E  B0D8               	btfsc	status,0,c
 15872  000360  D009               	goto	l7962
 15873                           
 15874                           ; BSR set to: 0
 15875                           ;doprnt.c: 758: width -= len;
 15876  000362  0100               	movlb	0	; () banked
 15877  000364  5199               	movf	__doprnt@len& (0+255),w,b
 15878  000366  0100               	movlb	0	; () banked
 15879  000368  5F9E               	subwf	__doprnt@width& (0+255),f,b
 15880  00036A  0100               	movlb	0	; () banked
 15881  00036C  519A               	movf	(__doprnt@len+1)& (0+255),w,b
 15882  00036E  0100               	movlb	0	; () banked
 15883  000370  5B9F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 15884  000372  D040               	goto	l7972
 15885  000374                     l7962:
 15886  000374  FFFF               	dw	65535	; assembler added errata NOP
 15887                           
 15888                           ; BSR set to: 0
 15889                           ;doprnt.c: 759: else
 15890                           ;doprnt.c: 760: width = 0;
 15891  000376  0E00               	movlw	0
 15892  000378  0100               	movlb	0	; () banked
 15893  00037A  6F9F               	movwf	(__doprnt@width+1)& (0+255),b
 15894  00037C  0E00               	movlw	0
 15895  00037E  6F9E               	movwf	__doprnt@width& (0+255),b
 15896                           
 15897                           ; BSR set to: 0
 15898                           ;doprnt.c: 764: while(width--)
 15899  000380  D039               	goto	l7972
 15900  000382                     l7964:
 15901  000382  FFFF               	dw	65535	; assembler added errata NOP
 15902                           
 15903                           ; BSR set to: 0
 15904                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 15905  000384  0100               	movlb	0	; () banked
 15906  000386  EE20 F002          	lfsr	2,2
 15907  00038A  518C               	movf	__doprnt@pb& (0+255),w,b
 15908  00038C  26D9               	addwf	fsr2l,f,c
 15909  00038E  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 15910  000390  22DA               	addwfc	fsr2h,f,c
 15911  000392  50DE               	movf	postinc2,w,c
 15912  000394  10DE               	iorwf	postinc2,w,c
 15913  000396  B4D8               	btfsc	status,2,c
 15914  000398  D017               	goto	l7968
 15915                           
 15916                           ; BSR set to: 0
 15917  00039A  0100               	movlb	0	; () banked
 15918  00039C  EE20 F002          	lfsr	2,2
 15919  0003A0  518C               	movf	__doprnt@pb& (0+255),w,b
 15920  0003A2  26D9               	addwf	fsr2l,f,c
 15921  0003A4  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 15922  0003A6  22DA               	addwfc	fsr2h,f,c
 15923  0003A8  D801               	call	u9168
 15924  0003AA  D024               	goto	l7972
 15925  0003AC                     u9168:
 15926  0003AC  FFFF               	dw	65535	; assembler added errata NOP
 15927  0003AE  0005               	push	
 15928  0003B0  6EFA               	movwf	pclath,c
 15929  0003B2  50DE               	movf	postinc2,w,c
 15930  0003B4  6EFD               	movwf	tosl,c
 15931  0003B6  50DE               	movf	postinc2,w,c
 15932  0003B8  6EFE               	movwf	tosh,c
 15933  0003BA  50F8               	movf	tblptru,w,c
 15934  0003BC  6EFF               	movwf	tosu,c
 15935  0003BE  50FA               	movf	pclath,w,c
 15936  0003C0  0E20               	movlw	32
 15937  0003C2  0012               	return		;indir
 15938  0003C4  FFFF               	dw	65535	; errata NOP
 15939  0003C6  D016               	goto	l7972
 15940  0003C8                     l7968:
 15941  0003C8  FFFF               	dw	65535	; assembler added errata NOP
 15942  0003CA  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 15943  0003CE  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 15944  0003D2  CFDE F092          	movff	postinc2,??__doprnt
 15945  0003D6  CFDD F093          	movff	postdec2,??__doprnt+1
 15946  0003DA  C092  FFD9         	movff	??__doprnt,fsr2l
 15947  0003DE  C093  FFDA         	movff	??__doprnt+1,fsr2h
 15948  0003E2  0E20               	movlw	32
 15949  0003E4  6EDF               	movwf	indf2,c
 15950  0003E6  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 15951  0003EA  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 15952  0003EE  2ADE               	incf	postinc2,f,c
 15953  0003F0  0E00               	movlw	0
 15954  0003F2  22DD               	addwfc	postdec2,f,c
 15955  0003F4                     l7972:
 15956  0003F4  FFFF               	dw	65535	; assembler added errata NOP
 15957  0003F6  0100               	movlb	0	; () banked
 15958  0003F8  079E               	decf	__doprnt@width& (0+255),f,b
 15959  0003FA  A0D8               	btfss	status,0,c
 15960  0003FC  079F               	decf	(__doprnt@width+1)& (0+255),f,b
 15961  0003FE  0100               	movlb	0	; () banked
 15962  000400  299E               	incf	__doprnt@width& (0+255),w,b
 15963  000402  E1BF               	bnz	l7964
 15964  000404  0100               	movlb	0	; () banked
 15965  000406  299F               	incf	(__doprnt@width+1)& (0+255),w,b
 15966  000408  B4D8               	btfsc	status,2,c
 15967  00040A  D061               	goto	l7986
 15968  00040C  D7BA               	goto	l7964
 15969  00040E                     l7974:
 15970  00040E  FFFF               	dw	65535	; assembler added errata NOP
 15971                           
 15972                           ; BSR set to: 0
 15973                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 15974  000410  0100               	movlb	0	; () banked
 15975  000412  EE20 F002          	lfsr	2,2
 15976  000416  518C               	movf	__doprnt@pb& (0+255),w,b
 15977  000418  26D9               	addwf	fsr2l,f,c
 15978  00041A  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 15979  00041C  22DA               	addwfc	fsr2h,f,c
 15980  00041E  50DE               	movf	postinc2,w,c
 15981  000420  10DE               	iorwf	postinc2,w,c
 15982  000422  B4D8               	btfsc	status,2,c
 15983  000424  D02B               	goto	l7980
 15984                           
 15985                           ; BSR set to: 0
 15986  000426  0100               	movlb	0	; () banked
 15987  000428  EE20 F002          	lfsr	2,2
 15988  00042C  518C               	movf	__doprnt@pb& (0+255),w,b
 15989  00042E  26D9               	addwf	fsr2l,f,c
 15990  000430  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 15991  000432  22DA               	addwfc	fsr2h,f,c
 15992  000434  D801               	call	u9198
 15993  000436  D01D               	goto	l7978
 15994  000438                     u9198:
 15995  000438  FFFF               	dw	65535	; assembler added errata NOP
 15996  00043A  0005               	push	
 15997  00043C  6EFA               	movwf	pclath,c
 15998  00043E  50DE               	movf	postinc2,w,c
 15999  000440  6EFD               	movwf	tosl,c
 16000  000442  50DE               	movf	postinc2,w,c
 16001  000444  6EFE               	movwf	tosh,c
 16002  000446  50F8               	movf	tblptru,w,c
 16003  000448  6EFF               	movwf	tosu,c
 16004  00044A  50FA               	movf	pclath,w,c
 16005  00044C  C09C  FFF6         	movff	__doprnt@cp,tblptrl
 16006  000450  C09D  FFF7         	movff	__doprnt@cp+1,tblptrh
 16007  000454  6AF8               	clrf	tblptru,c
 16008  000456  0E05               	movlw	(high __ramtop+-1)
 16009  000458  64F7               	cpfsgt	tblptrh,c
 16010  00045A  D004               	bra	u9207
 16011  00045C  0008               	tblrd		*
 16012  00045E  FFFF               	dw	65535	; errata NOP
 16013  000460  50F5               	movf	tablat,w,c
 16014  000462  D005               	bra	u9200
 16015  000464                     u9207:
 16016  000464  CFF6 FFE9          	movff	tblptrl,fsr0l
 16017  000468  CFF7 FFEA          	movff	tblptrh,fsr0h
 16018  00046C  50EF               	movf	indf0,w,c
 16019  00046E                     u9200:
 16020  00046E  0012               	return		;indir
 16021  000470  FFFF               	dw	65535	; errata NOP
 16022  000472                     l7978:
 16023  000472  FFFF               	dw	65535	; assembler added errata NOP
 16024  000474  0100               	movlb	0	; () banked
 16025  000476  4B9C               	infsnz	__doprnt@cp& (0+255),f,b
 16026  000478  2B9D               	incf	(__doprnt@cp+1)& (0+255),f,b
 16027  00047A  D029               	goto	l7986
 16028  00047C                     l7980:
 16029  00047C  FFFF               	dw	65535	; assembler added errata NOP
 16030                           
 16031                           ; BSR set to: 0
 16032  00047E  C09C  FFF6         	movff	__doprnt@cp,tblptrl
 16033  000482  C09D  FFF7         	movff	__doprnt@cp+1,tblptrh
 16034  000486  6AF8               	clrf	tblptru,c
 16035  000488  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16036  00048C  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16037  000490  CFDE F092          	movff	postinc2,??__doprnt
 16038  000494  CFDD F093          	movff	postdec2,??__doprnt+1
 16039  000498  C092  FFD9         	movff	??__doprnt,fsr2l
 16040  00049C  C093  FFDA         	movff	??__doprnt+1,fsr2h
 16041  0004A0  0E05               	movlw	(high __ramtop+-1)
 16042  0004A2  64F7               	cpfsgt	tblptrh,c
 16043  0004A4  D004               	bra	u9217
 16044  0004A6  0008               	tblrd		*
 16045  0004A8  FFFF               	dw	65535	; errata NOP
 16046  0004AA  50F5               	movf	tablat,w,c
 16047  0004AC  D005               	bra	u9210
 16048  0004AE                     u9217:
 16049  0004AE  CFF6 FFE9          	movff	tblptrl,fsr0l
 16050  0004B2  CFF7 FFEA          	movff	tblptrh,fsr0h
 16051  0004B6  50EF               	movf	indf0,w,c
 16052  0004B8                     u9210:
 16053  0004B8  6EDF               	movwf	indf2,c
 16054  0004BA  0100               	movlb	0	; () banked
 16055  0004BC  4B9C               	infsnz	__doprnt@cp& (0+255),f,b
 16056  0004BE  2B9D               	incf	(__doprnt@cp+1)& (0+255),f,b
 16057                           
 16058                           ; BSR set to: 0
 16059  0004C0  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16060  0004C4  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16061  0004C8  2ADE               	incf	postinc2,f,c
 16062  0004CA  0E00               	movlw	0
 16063  0004CC  22DD               	addwfc	postdec2,f,c
 16064  0004CE                     l7986:
 16065  0004CE  FFFF               	dw	65535	; assembler added errata NOP
 16066                           
 16067                           ; BSR set to: 0
 16068  0004D0  0100               	movlb	0	; () banked
 16069  0004D2  0799               	decf	__doprnt@len& (0+255),f,b
 16070  0004D4  A0D8               	btfss	status,0,c
 16071  0004D6  079A               	decf	(__doprnt@len+1)& (0+255),f,b
 16072  0004D8  0100               	movlb	0	; () banked
 16073  0004DA  2999               	incf	__doprnt@len& (0+255),w,b
 16074  0004DC  E198               	bnz	l7974
 16075  0004DE  0100               	movlb	0	; () banked
 16076  0004E0  299A               	incf	(__doprnt@len+1)& (0+255),w,b
 16077  0004E2  B4D8               	btfsc	status,2,c
 16078  0004E4  D249               	goto	l8092
 16079  0004E6  D793               	goto	l7974
 16080  0004E8                     l7988:
 16081  0004E8  FFFF               	dw	65535	; assembler added errata NOP
 16082                           
 16083                           ; BSR set to: 0
 16084                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 16085  0004EA  C090  FFD9         	movff	__doprnt@ap,fsr2l
 16086  0004EE  C091  FFDA         	movff	__doprnt@ap+1,fsr2h
 16087  0004F2  CFDF F092          	movff	indf2,??__doprnt
 16088  0004F6  0E02               	movlw	2
 16089  0004F8  26DE               	addwf	postinc2,f,c
 16090  0004FA  CFDF F093          	movff	indf2,??__doprnt+1
 16091  0004FE  0E00               	movlw	0
 16092  000500  22DD               	addwfc	postdec2,f,c
 16093  000502  C092  FFD9         	movff	??__doprnt,fsr2l
 16094  000506  C093  FFDA         	movff	??__doprnt+1,fsr2h
 16095  00050A  50DF               	movf	indf2,w,c
 16096  00050C  0100               	movlb	0	; () banked
 16097  00050E  6FA0               	movwf	__doprnt@c& (0+255),b
 16098  000510                     l7990:
 16099  000510  FFFF               	dw	65535	; assembler added errata NOP
 16100                           
 16101                           ; BSR set to: 0
 16102                           ;doprnt.c: 805: cp = (char *)&c;
 16103  000512  0EA0               	movlw	low __doprnt@c
 16104  000514  0100               	movlb	0	; () banked
 16105  000516  6F9C               	movwf	__doprnt@cp& (0+255),b
 16106  000518  0E00               	movlw	high __doprnt@c
 16107  00051A  0100               	movlb	0	; () banked
 16108  00051C  6F9D               	movwf	(__doprnt@cp+1)& (0+255),b
 16109                           
 16110                           ; BSR set to: 0
 16111                           ;doprnt.c: 806: len = 1;
 16112  00051E  0E00               	movlw	0
 16113  000520  0100               	movlb	0	; () banked
 16114  000522  6F9A               	movwf	(__doprnt@len+1)& (0+255),b
 16115  000524  0E01               	movlw	1
 16116  000526  6F99               	movwf	__doprnt@len& (0+255),b
 16117                           
 16118                           ;doprnt.c: 807: goto dostring;
 16119  000528  D711               	goto	l7958
 16120  00052A                     l7996:
 16121  00052A  FFFF               	dw	65535	; assembler added errata NOP
 16122  00052C  0100               	movlb	0	; () banked
 16123  00052E  518E               	movf	__doprnt@f& (0+255),w,b
 16124  000530  0100               	movlb	0	; () banked
 16125  000532  6F92               	movwf	??__doprnt& (0+255),b
 16126  000534  0100               	movlb	0	; () banked
 16127  000536  518F               	movf	(__doprnt@f+1)& (0+255),w,b
 16128  000538  0100               	movlb	0	; () banked
 16129  00053A  6F93               	movwf	(??__doprnt+1)& (0+255),b
 16130  00053C  0100               	movlb	0	; () banked
 16131  00053E  4B8E               	infsnz	__doprnt@f& (0+255),f,b
 16132  000540  2B8F               	incf	(__doprnt@f+1)& (0+255),f,b
 16133  000542  C092  FFF6         	movff	??__doprnt,tblptrl
 16134  000546  C093  FFF7         	movff	??__doprnt+1,tblptrh
 16135  00054A  6AF8               	clrf	tblptru,c
 16136  00054C  0E05               	movlw	(high __ramtop+-1)
 16137  00054E  64F7               	cpfsgt	tblptrh,c
 16138  000550  D004               	bra	u9237
 16139  000552  0008               	tblrd		*
 16140  000554  FFFF               	dw	65535	; errata NOP
 16141  000556  50F5               	movf	tablat,w,c
 16142  000558  D005               	bra	u9230
 16143  00055A                     u9237:
 16144  00055A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16145  00055E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16146  000562  50EF               	movf	indf0,w,c
 16147  000564                     u9230:
 16148  000564  0100               	movlb	0	; () banked
 16149  000566  6FA0               	movwf	__doprnt@c& (0+255),b
 16150  000568  0100               	movlb	0	; () banked
 16151  00056A  51A0               	movf	__doprnt@c& (0+255),w,b
 16152                           
 16153                           ; Switch size 1, requested type "space"
 16154                           ; Number of cases is 5, Range of values is 0 to 115
 16155                           ; switch strategies available:
 16156                           ; Name         Instructions Cycles
 16157                           ; simple_byte           16     9 (average)
 16158                           ;	Chosen strategy is simple_byte
 16159  00056C  0A00               	xorlw	0	; case 0
 16160  00056E  B4D8               	btfsc	status,2,c
 16161  000570  D227               	goto	l8094
 16162  000572  0A63               	xorlw	99	; case 99
 16163  000574  B4D8               	btfsc	status,2,c
 16164  000576  D7B8               	goto	l7988
 16165  000578  0A07               	xorlw	7	; case 100
 16166  00057A  B4D8               	btfsc	status,2,c
 16167  00057C  D007               	goto	l7998
 16168  00057E  0A0D               	xorlw	13	; case 105
 16169  000580  B4D8               	btfsc	status,2,c
 16170  000582  D004               	goto	l7998
 16171  000584  0A1A               	xorlw	26	; case 115
 16172  000586  B4D8               	btfsc	status,2,c
 16173  000588  D694               	goto	l7946
 16174  00058A  D7C2               	goto	l7990
 16175  00058C                     l7998:
 16176  00058C  FFFF               	dw	65535	; assembler added errata NOP
 16177                           
 16178                           ;doprnt.c: 1253: {
 16179                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 16180  00058E  C090  FFD9         	movff	__doprnt@ap,fsr2l
 16181  000592  C091  FFDA         	movff	__doprnt@ap+1,fsr2h
 16182  000596  CFDF F092          	movff	indf2,??__doprnt
 16183  00059A  0E02               	movlw	2
 16184  00059C  26DE               	addwf	postinc2,f,c
 16185  00059E  CFDF F093          	movff	indf2,??__doprnt+1
 16186  0005A2  0E00               	movlw	0
 16187  0005A4  22DD               	addwfc	postdec2,f,c
 16188  0005A6  C092  FFD9         	movff	??__doprnt,fsr2l
 16189  0005AA  C093  FFDA         	movff	??__doprnt+1,fsr2h
 16190  0005AE  CFDE F097          	movff	postinc2,__doprnt@val
 16191  0005B2  CFDD F098          	movff	postdec2,__doprnt@val+1
 16192                           
 16193                           ;doprnt.c: 1261: if((int)val < 0) {
 16194  0005B6  0100               	movlb	0	; () banked
 16195  0005B8  AF98               	btfss	(__doprnt@val+1)& (0+255),7,b
 16196  0005BA  D008               	goto	l8006
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;doprnt.c: 1262: flag |= 0x03;
 16200  0005BC  0E03               	movlw	3
 16201  0005BE  0100               	movlb	0	; () banked
 16202  0005C0  139B               	iorwf	__doprnt@flag& (0+255),f,b
 16203                           
 16204                           ; BSR set to: 0
 16205                           ;doprnt.c: 1263: val = -val;
 16206  0005C2  0100               	movlb	0	; () banked
 16207  0005C4  6D97               	negf	__doprnt@val& (0+255),b
 16208  0005C6  1F98               	comf	(__doprnt@val+1)& (0+255),f,b
 16209  0005C8  B0D8               	btfsc	status,0,c
 16210  0005CA  2B98               	incf	(__doprnt@val+1)& (0+255),f,b
 16211  0005CC                     l8006:
 16212  0005CC  FFFF               	dw	65535	; assembler added errata NOP
 16213                           
 16214                           ; BSR set to: 0
 16215                           ;doprnt.c: 1264: }
 16216                           ;doprnt.c: 1266: }
 16217                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16218  0005CE  0E01               	movlw	1
 16219  0005D0  0100               	movlb	0	; () banked
 16220  0005D2  6FA0               	movwf	__doprnt@c& (0+255),b
 16221  0005D4                     l8008:
 16222  0005D4  FFFF               	dw	65535	; assembler added errata NOP
 16223                           
 16224                           ; BSR set to: 0
 16225  0005D6  0E05               	movlw	5
 16226  0005D8  0100               	movlb	0	; () banked
 16227  0005DA  19A0               	xorwf	__doprnt@c& (0+255),w,b
 16228  0005DC  B4D8               	btfsc	status,2,c
 16229  0005DE  D018               	goto	l8020
 16230                           
 16231                           ; BSR set to: 0
 16232                           ;doprnt.c: 1306: if(val < dpowers[c])
 16233                           
 16234                           ; BSR set to: 0
 16235                           
 16236                           ; BSR set to: 0
 16237  0005E0  0100               	movlb	0	; () banked
 16238  0005E2  51A0               	movf	__doprnt@c& (0+255),w,b
 16239  0005E4  0D02               	mullw	2
 16240  0005E6  0E27               	movlw	low _dpowers
 16241  0005E8  24F3               	addwf	prodl,w,c
 16242  0005EA  6EF6               	movwf	tblptrl,c
 16243  0005EC  0E7B               	movlw	high _dpowers
 16244  0005EE  20F4               	addwfc	prodh,w,c
 16245  0005F0  6EF7               	movwf	tblptrh,c
 16246  0005F2                     	if	0	;There are less than 3 active tblptr bytes
 16247  0005F2                     	endif
 16248  0005F2  0009               	tblrd		*+
 16249  0005F4  FFFF               	dw	65535	; errata NOP
 16250  0005F6  50F5               	movf	tablat,w,c
 16251  0005F8  0100               	movlb	0	; () banked
 16252  0005FA  5D97               	subwf	__doprnt@val& (0+255),w,b
 16253  0005FC  0009               	tblrd		*+
 16254  0005FE  FFFF               	dw	65535	; errata NOP
 16255  000600  50F5               	movf	tablat,w,c
 16256  000602  0100               	movlb	0	; () banked
 16257  000604  5998               	subwfb	(__doprnt@val+1)& (0+255),w,b
 16258  000606  A0D8               	btfss	status,0,c
 16259  000608  D003               	goto	l8020
 16260                           
 16261                           ; BSR set to: 0
 16262                           
 16263                           ; BSR set to: 0
 16264                           
 16265                           ; BSR set to: 0
 16266                           ;doprnt.c: 1307: break;
 16267  00060A  0100               	movlb	0	; () banked
 16268  00060C  2BA0               	incf	__doprnt@c& (0+255),f,b
 16269  00060E  D7E2               	goto	l8008
 16270  000610                     l8020:
 16271  000610  FFFF               	dw	65535	; assembler added errata NOP
 16272                           
 16273                           ; BSR set to: 0
 16274                           ;doprnt.c: 1345: if(width && flag & 0x03)
 16275  000612  0100               	movlb	0	; () banked
 16276  000614  519E               	movf	__doprnt@width& (0+255),w,b
 16277  000616  0100               	movlb	0	; () banked
 16278  000618  119F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 16279  00061A  B4D8               	btfsc	status,2,c
 16280  00061C  D00B               	goto	l8026
 16281                           
 16282                           ; BSR set to: 0
 16283  00061E  C09B  F092         	movff	__doprnt@flag,??__doprnt
 16284  000622  0E03               	movlw	3
 16285  000624  0100               	movlb	0	; () banked
 16286  000626  1792               	andwf	??__doprnt& (0+255),f,b
 16287  000628  B4D8               	btfsc	status,2,c
 16288  00062A  D004               	goto	l8026
 16289                           
 16290                           ; BSR set to: 0
 16291                           ;doprnt.c: 1346: width--;
 16292  00062C  0100               	movlb	0	; () banked
 16293  00062E  079E               	decf	__doprnt@width& (0+255),f,b
 16294  000630  A0D8               	btfss	status,0,c
 16295  000632  079F               	decf	(__doprnt@width+1)& (0+255),f,b
 16296  000634                     l8026:
 16297  000634  FFFF               	dw	65535	; assembler added errata NOP
 16298                           
 16299                           ; BSR set to: 0
 16300                           ;doprnt.c: 1381: if(width > c)
 16301  000636  0E80               	movlw	128
 16302  000638  0100               	movlb	0	; () banked
 16303  00063A  BFA0               	btfsc	__doprnt@c& (0+255),7,b
 16304  00063C  0E7F               	movlw	127
 16305  00063E  0100               	movlb	0	; () banked
 16306  000640  6F92               	movwf	??__doprnt& (0+255),b
 16307  000642  0100               	movlb	0	; () banked
 16308  000644  519E               	movf	__doprnt@width& (0+255),w,b
 16309  000646  0100               	movlb	0	; () banked
 16310  000648  5DA0               	subwf	__doprnt@c& (0+255),w,b
 16311  00064A  0100               	movlb	0	; () banked
 16312  00064C  519F               	movf	(__doprnt@width+1)& (0+255),w,b
 16313  00064E  0A80               	xorlw	128
 16314  000650  0100               	movlb	0	; () banked
 16315  000652  5992               	subwfb	??__doprnt& (0+255),w,b
 16316  000654  B0D8               	btfsc	status,0,c
 16317  000656  D00B               	goto	l8030
 16318                           
 16319                           ; BSR set to: 0
 16320                           ;doprnt.c: 1382: width -= c;
 16321  000658  0100               	movlb	0	; () banked
 16322  00065A  51A0               	movf	__doprnt@c& (0+255),w,b
 16323  00065C  0100               	movlb	0	; () banked
 16324  00065E  5F9E               	subwf	__doprnt@width& (0+255),f,b
 16325  000660  0E00               	movlw	0
 16326  000662  0100               	movlb	0	; () banked
 16327  000664  BFA0               	btfsc	__doprnt@c& (0+255),7,b
 16328  000666  0EFF               	movlw	255
 16329  000668  0100               	movlb	0	; () banked
 16330  00066A  5B9F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 16331  00066C  D006               	goto	l8032
 16332  00066E                     l8030:
 16333  00066E  FFFF               	dw	65535	; assembler added errata NOP
 16334                           
 16335                           ; BSR set to: 0
 16336                           ;doprnt.c: 1383: else
 16337                           ;doprnt.c: 1384: width = 0;
 16338  000670  0E00               	movlw	0
 16339  000672  0100               	movlb	0	; () banked
 16340  000674  6F9F               	movwf	(__doprnt@width+1)& (0+255),b
 16341  000676  0E00               	movlw	0
 16342  000678  6F9E               	movwf	__doprnt@width& (0+255),b
 16343  00067A                     l8032:
 16344  00067A  FFFF               	dw	65535	; assembler added errata NOP
 16345                           
 16346                           ; BSR set to: 0
 16347                           ;doprnt.c: 1387: if(flag & 0x04) {
 16348  00067C  0100               	movlb	0	; () banked
 16349  00067E  A59B               	btfss	__doprnt@flag& (0+255),2,b
 16350  000680  D084               	goto	l8056
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;doprnt.c: 1392: if(flag & 0x03)
 16354  000682  C09B  F092         	movff	__doprnt@flag,??__doprnt
 16355  000686  0E03               	movlw	3
 16356  000688  0100               	movlb	0	; () banked
 16357  00068A  1792               	andwf	??__doprnt& (0+255),f,b
 16358  00068C  B4D8               	btfsc	status,2,c
 16359  00068E  D038               	goto	l8044
 16360                           
 16361                           ; BSR set to: 0
 16362                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 16363  000690  0100               	movlb	0	; () banked
 16364  000692  EE20 F002          	lfsr	2,2
 16365  000696  518C               	movf	__doprnt@pb& (0+255),w,b
 16366  000698  26D9               	addwf	fsr2l,f,c
 16367  00069A  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 16368  00069C  22DA               	addwfc	fsr2h,f,c
 16369  00069E  50DE               	movf	postinc2,w,c
 16370  0006A0  10DE               	iorwf	postinc2,w,c
 16371  0006A2  B4D8               	btfsc	status,2,c
 16372  0006A4  D017               	goto	l8040
 16373                           
 16374                           ; BSR set to: 0
 16375  0006A6  0100               	movlb	0	; () banked
 16376  0006A8  EE20 F002          	lfsr	2,2
 16377  0006AC  518C               	movf	__doprnt@pb& (0+255),w,b
 16378  0006AE  26D9               	addwf	fsr2l,f,c
 16379  0006B0  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 16380  0006B2  22DA               	addwfc	fsr2h,f,c
 16381  0006B4  D801               	call	u9348
 16382  0006B6  D024               	goto	l8044
 16383  0006B8                     u9348:
 16384  0006B8  FFFF               	dw	65535	; assembler added errata NOP
 16385  0006BA  0005               	push	
 16386  0006BC  6EFA               	movwf	pclath,c
 16387  0006BE  50DE               	movf	postinc2,w,c
 16388  0006C0  6EFD               	movwf	tosl,c
 16389  0006C2  50DE               	movf	postinc2,w,c
 16390  0006C4  6EFE               	movwf	tosh,c
 16391  0006C6  50F8               	movf	tblptru,w,c
 16392  0006C8  6EFF               	movwf	tosu,c
 16393  0006CA  50FA               	movf	pclath,w,c
 16394  0006CC  0E2D               	movlw	45
 16395  0006CE  0012               	return		;indir
 16396  0006D0  FFFF               	dw	65535	; errata NOP
 16397  0006D2  D016               	goto	l8044
 16398  0006D4                     l8040:
 16399  0006D4  FFFF               	dw	65535	; assembler added errata NOP
 16400  0006D6  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16401  0006DA  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16402  0006DE  CFDE F092          	movff	postinc2,??__doprnt
 16403  0006E2  CFDD F093          	movff	postdec2,??__doprnt+1
 16404  0006E6  C092  FFD9         	movff	??__doprnt,fsr2l
 16405  0006EA  C093  FFDA         	movff	??__doprnt+1,fsr2h
 16406  0006EE  0E2D               	movlw	45
 16407  0006F0  6EDF               	movwf	indf2,c
 16408  0006F2  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16409  0006F6  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16410  0006FA  2ADE               	incf	postinc2,f,c
 16411  0006FC  0E00               	movlw	0
 16412  0006FE  22DD               	addwfc	postdec2,f,c
 16413  000700                     l8044:
 16414  000700  FFFF               	dw	65535	; assembler added errata NOP
 16415                           
 16416                           ;doprnt.c: 1415: if(width)
 16417  000702  0100               	movlb	0	; () banked
 16418  000704  519E               	movf	__doprnt@width& (0+255),w,b
 16419  000706  0100               	movlb	0	; () banked
 16420  000708  119F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 16421  00070A  B4D8               	btfsc	status,2,c
 16422  00070C  D0C9               	goto	l8078
 16423                           
 16424                           ; BSR set to: 0
 16425                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 16426                           
 16427                           ; BSR set to: 0
 16428                           
 16429                           ;doprnt.c: 1416: do
 16430  00070E  0100               	movlb	0	; () banked
 16431  000710  EE20 F002          	lfsr	2,2
 16432  000714  518C               	movf	__doprnt@pb& (0+255),w,b
 16433  000716  26D9               	addwf	fsr2l,f,c
 16434  000718  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 16435  00071A  22DA               	addwfc	fsr2h,f,c
 16436  00071C  50DE               	movf	postinc2,w,c
 16437  00071E  10DE               	iorwf	postinc2,w,c
 16438  000720  B4D8               	btfsc	status,2,c
 16439  000722  D017               	goto	l8050
 16440                           
 16441                           ; BSR set to: 0
 16442  000724  0100               	movlb	0	; () banked
 16443  000726  EE20 F002          	lfsr	2,2
 16444  00072A  518C               	movf	__doprnt@pb& (0+255),w,b
 16445  00072C  26D9               	addwf	fsr2l,f,c
 16446  00072E  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 16447  000730  22DA               	addwfc	fsr2h,f,c
 16448  000732  D801               	call	u9378
 16449  000734  D024               	goto	l8054
 16450  000736                     u9378:
 16451  000736  FFFF               	dw	65535	; assembler added errata NOP
 16452  000738  0005               	push	
 16453  00073A  6EFA               	movwf	pclath,c
 16454  00073C  50DE               	movf	postinc2,w,c
 16455  00073E  6EFD               	movwf	tosl,c
 16456  000740  50DE               	movf	postinc2,w,c
 16457  000742  6EFE               	movwf	tosh,c
 16458  000744  50F8               	movf	tblptru,w,c
 16459  000746  6EFF               	movwf	tosu,c
 16460  000748  50FA               	movf	pclath,w,c
 16461  00074A  0E30               	movlw	48
 16462  00074C  0012               	return		;indir
 16463  00074E  FFFF               	dw	65535	; errata NOP
 16464  000750  D016               	goto	l8054
 16465  000752                     l8050:
 16466  000752  FFFF               	dw	65535	; assembler added errata NOP
 16467  000754  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16468  000758  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16469  00075C  CFDE F092          	movff	postinc2,??__doprnt
 16470  000760  CFDD F093          	movff	postdec2,??__doprnt+1
 16471  000764  C092  FFD9         	movff	??__doprnt,fsr2l
 16472  000768  C093  FFDA         	movff	??__doprnt+1,fsr2h
 16473  00076C  0E30               	movlw	48
 16474  00076E  6EDF               	movwf	indf2,c
 16475  000770  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16476  000774  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16477  000778  2ADE               	incf	postinc2,f,c
 16478  00077A  0E00               	movlw	0
 16479  00077C  22DD               	addwfc	postdec2,f,c
 16480  00077E                     l8054:
 16481  00077E  FFFF               	dw	65535	; assembler added errata NOP
 16482                           
 16483                           ;doprnt.c: 1418: while(--width);
 16484  000780  0100               	movlb	0	; () banked
 16485  000782  079E               	decf	__doprnt@width& (0+255),f,b
 16486  000784  A0D8               	btfss	status,0,c
 16487  000786  079F               	decf	(__doprnt@width+1)& (0+255),f,b
 16488  000788  D7BB               	goto	l8044
 16489  00078A                     l8056:
 16490  00078A  FFFF               	dw	65535	; assembler added errata NOP
 16491                           
 16492                           ; BSR set to: 0
 16493                           ;doprnt.c: 1422: {
 16494                           ;doprnt.c: 1424: if(width
 16495                           ;doprnt.c: 1428: )
 16496  00078C  0100               	movlb	0	; () banked
 16497  00078E  519E               	movf	__doprnt@width& (0+255),w,b
 16498  000790  0100               	movlb	0	; () banked
 16499  000792  119F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 16500  000794  B4D8               	btfsc	status,2,c
 16501  000796  D044               	goto	l8068
 16502  000798                     l8058:
 16503  000798  FFFF               	dw	65535	; assembler added errata NOP
 16504                           
 16505                           ; BSR set to: 0
 16506                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 16507  00079A  0100               	movlb	0	; () banked
 16508  00079C  EE20 F002          	lfsr	2,2
 16509  0007A0  518C               	movf	__doprnt@pb& (0+255),w,b
 16510  0007A2  26D9               	addwf	fsr2l,f,c
 16511  0007A4  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 16512  0007A6  22DA               	addwfc	fsr2h,f,c
 16513  0007A8  50DE               	movf	postinc2,w,c
 16514  0007AA  10DE               	iorwf	postinc2,w,c
 16515  0007AC  B4D8               	btfsc	status,2,c
 16516  0007AE  D017               	goto	l8062
 16517                           
 16518                           ; BSR set to: 0
 16519  0007B0  0100               	movlb	0	; () banked
 16520  0007B2  EE20 F002          	lfsr	2,2
 16521  0007B6  518C               	movf	__doprnt@pb& (0+255),w,b
 16522  0007B8  26D9               	addwf	fsr2l,f,c
 16523  0007BA  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 16524  0007BC  22DA               	addwfc	fsr2h,f,c
 16525  0007BE  D801               	call	u9418
 16526  0007C0  D024               	goto	l8066
 16527  0007C2                     u9418:
 16528  0007C2  FFFF               	dw	65535	; assembler added errata NOP
 16529  0007C4  0005               	push	
 16530  0007C6  6EFA               	movwf	pclath,c
 16531  0007C8  50DE               	movf	postinc2,w,c
 16532  0007CA  6EFD               	movwf	tosl,c
 16533  0007CC  50DE               	movf	postinc2,w,c
 16534  0007CE  6EFE               	movwf	tosh,c
 16535  0007D0  50F8               	movf	tblptru,w,c
 16536  0007D2  6EFF               	movwf	tosu,c
 16537  0007D4  50FA               	movf	pclath,w,c
 16538  0007D6  0E20               	movlw	32
 16539  0007D8  0012               	return		;indir
 16540  0007DA  FFFF               	dw	65535	; errata NOP
 16541  0007DC  D016               	goto	l8066
 16542  0007DE                     l8062:
 16543  0007DE  FFFF               	dw	65535	; assembler added errata NOP
 16544  0007E0  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16545  0007E4  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16546  0007E8  CFDE F092          	movff	postinc2,??__doprnt
 16547  0007EC  CFDD F093          	movff	postdec2,??__doprnt+1
 16548  0007F0  C092  FFD9         	movff	??__doprnt,fsr2l
 16549  0007F4  C093  FFDA         	movff	??__doprnt+1,fsr2h
 16550  0007F8  0E20               	movlw	32
 16551  0007FA  6EDF               	movwf	indf2,c
 16552  0007FC  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16553  000800  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16554  000804  2ADE               	incf	postinc2,f,c
 16555  000806  0E00               	movlw	0
 16556  000808  22DD               	addwfc	postdec2,f,c
 16557  00080A                     l8066:
 16558  00080A  FFFF               	dw	65535	; assembler added errata NOP
 16559                           
 16560                           ;doprnt.c: 1431: while(--width);
 16561  00080C  0100               	movlb	0	; () banked
 16562  00080E  079E               	decf	__doprnt@width& (0+255),f,b
 16563  000810  A0D8               	btfss	status,0,c
 16564  000812  079F               	decf	(__doprnt@width+1)& (0+255),f,b
 16565  000814  0100               	movlb	0	; () banked
 16566  000816  519E               	movf	__doprnt@width& (0+255),w,b
 16567  000818  0100               	movlb	0	; () banked
 16568  00081A  119F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 16569  00081C  A4D8               	btfss	status,2,c
 16570  00081E  D7BC               	goto	l8058
 16571  000820                     l8068:
 16572  000820  FFFF               	dw	65535	; assembler added errata NOP
 16573                           
 16574                           ; BSR set to: 0
 16575                           ;doprnt.c: 1438: if(flag & 0x03)
 16576  000822  C09B  F092         	movff	__doprnt@flag,??__doprnt
 16577  000826  0E03               	movlw	3
 16578  000828  0100               	movlb	0	; () banked
 16579  00082A  1792               	andwf	??__doprnt& (0+255),f,b
 16580  00082C  B4D8               	btfsc	status,2,c
 16581  00082E  D038               	goto	l8078
 16582                           
 16583                           ; BSR set to: 0
 16584                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 16585  000830  0100               	movlb	0	; () banked
 16586  000832  EE20 F002          	lfsr	2,2
 16587  000836  518C               	movf	__doprnt@pb& (0+255),w,b
 16588  000838  26D9               	addwf	fsr2l,f,c
 16589  00083A  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 16590  00083C  22DA               	addwfc	fsr2h,f,c
 16591  00083E  50DE               	movf	postinc2,w,c
 16592  000840  10DE               	iorwf	postinc2,w,c
 16593  000842  B4D8               	btfsc	status,2,c
 16594  000844  D017               	goto	l8074
 16595                           
 16596                           ; BSR set to: 0
 16597  000846  0100               	movlb	0	; () banked
 16598  000848  EE20 F002          	lfsr	2,2
 16599  00084C  518C               	movf	__doprnt@pb& (0+255),w,b
 16600  00084E  26D9               	addwf	fsr2l,f,c
 16601  000850  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 16602  000852  22DA               	addwfc	fsr2h,f,c
 16603  000854  D801               	call	u9458
 16604  000856  D024               	goto	l8078
 16605  000858                     u9458:
 16606  000858  FFFF               	dw	65535	; assembler added errata NOP
 16607  00085A  0005               	push	
 16608  00085C  6EFA               	movwf	pclath,c
 16609  00085E  50DE               	movf	postinc2,w,c
 16610  000860  6EFD               	movwf	tosl,c
 16611  000862  50DE               	movf	postinc2,w,c
 16612  000864  6EFE               	movwf	tosh,c
 16613  000866  50F8               	movf	tblptru,w,c
 16614  000868  6EFF               	movwf	tosu,c
 16615  00086A  50FA               	movf	pclath,w,c
 16616  00086C  0E2D               	movlw	45
 16617  00086E  0012               	return		;indir
 16618  000870  FFFF               	dw	65535	; errata NOP
 16619  000872  D016               	goto	l8078
 16620  000874                     l8074:
 16621  000874  FFFF               	dw	65535	; assembler added errata NOP
 16622  000876  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16623  00087A  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16624  00087E  CFDE F092          	movff	postinc2,??__doprnt
 16625  000882  CFDD F093          	movff	postdec2,??__doprnt+1
 16626  000886  C092  FFD9         	movff	??__doprnt,fsr2l
 16627  00088A  C093  FFDA         	movff	??__doprnt+1,fsr2h
 16628  00088E  0E2D               	movlw	45
 16629  000890  6EDF               	movwf	indf2,c
 16630  000892  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16631  000896  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16632  00089A  2ADE               	incf	postinc2,f,c
 16633  00089C  0E00               	movlw	0
 16634  00089E  22DD               	addwfc	postdec2,f,c
 16635  0008A0                     l8078:
 16636  0008A0  FFFF               	dw	65535	; assembler added errata NOP
 16637                           
 16638                           ;doprnt.c: 1469: }
 16639                           ;doprnt.c: 1472: prec = c;
 16640  0008A2  C0A0  F096         	movff	__doprnt@c,__doprnt@prec
 16641                           
 16642                           ;doprnt.c: 1474: while(prec--) {
 16643  0008A6  D061               	goto	l8090
 16644  0008A8                     l8080:
 16645  0008A8  FFFF               	dw	65535	; assembler added errata NOP
 16646                           
 16647                           ;doprnt.c: 1478: {
 16648                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 16649  0008AA  0100               	movlb	0	; () banked
 16650  0008AC  5196               	movf	__doprnt@prec& (0+255),w,b
 16651  0008AE  0D02               	mullw	2
 16652  0008B0  0E27               	movlw	low _dpowers
 16653  0008B2  24F3               	addwf	prodl,w,c
 16654  0008B4  6EF6               	movwf	tblptrl,c
 16655  0008B6  0E7B               	movlw	high _dpowers
 16656  0008B8  20F4               	addwfc	prodh,w,c
 16657  0008BA  6EF7               	movwf	tblptrh,c
 16658  0008BC                     	if	0	;There are less than 3 active tblptr bytes
 16659  0008BC                     	endif
 16660  0008BC  0009               	tblrd		*+
 16661  0008BE  FFFF               	dw	65535	; errata NOP
 16662  0008C0  CFF5 F082          	movff	tablat,___lwdiv@divisor
 16663  0008C4  000A               	tblrd		*-
 16664  0008C6  FFFF               	dw	65535	; errata NOP
 16665  0008C8  CFF5 F083          	movff	tablat,___lwdiv@divisor+1
 16666  0008CC  C097  F080         	movff	__doprnt@val,___lwdiv@dividend
 16667  0008D0  C098  F081         	movff	__doprnt@val+1,___lwdiv@dividend+1
 16668  0008D4  ECFD  F037         	call	___lwdiv
 16669  0008D8  C080  F087         	movff	?___lwdiv,___lwmod@dividend
 16670  0008DC  C081  F088         	movff	?___lwdiv+1,___lwmod@dividend+1
 16671  0008E0  0E00               	movlw	0
 16672  0008E2  0100               	movlb	0	; () banked
 16673  0008E4  6F8A               	movwf	(___lwmod@divisor+1)& (0+255),b
 16674  0008E6  0E0A               	movlw	10
 16675  0008E8  6F89               	movwf	___lwmod@divisor& (0+255),b
 16676  0008EA  EC11  F037         	call	___lwmod	;wreg free
 16677  0008EE  0100               	movlb	0	; () banked
 16678  0008F0  5187               	movf	?___lwmod& (0+255),w,b
 16679  0008F2  0F30               	addlw	48
 16680  0008F4  0100               	movlb	0	; () banked
 16681  0008F6  6FA0               	movwf	__doprnt@c& (0+255),b
 16682                           
 16683                           ; BSR set to: 0
 16684                           ;doprnt.c: 1523: }
 16685                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 16686  0008F8  0100               	movlb	0	; () banked
 16687  0008FA  EE20 F002          	lfsr	2,2
 16688  0008FE  518C               	movf	__doprnt@pb& (0+255),w,b
 16689  000900  26D9               	addwf	fsr2l,f,c
 16690  000902  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 16691  000904  22DA               	addwfc	fsr2h,f,c
 16692  000906  50DE               	movf	postinc2,w,c
 16693  000908  10DE               	iorwf	postinc2,w,c
 16694  00090A  B4D8               	btfsc	status,2,c
 16695  00090C  D018               	goto	l8086
 16696                           
 16697                           ; BSR set to: 0
 16698  00090E  0100               	movlb	0	; () banked
 16699  000910  EE20 F002          	lfsr	2,2
 16700  000914  518C               	movf	__doprnt@pb& (0+255),w,b
 16701  000916  26D9               	addwf	fsr2l,f,c
 16702  000918  518D               	movf	(__doprnt@pb+1)& (0+255),w,b
 16703  00091A  22DA               	addwfc	fsr2h,f,c
 16704  00091C  D801               	call	u9478
 16705  00091E  D025               	goto	l8090
 16706  000920                     u9478:
 16707  000920  FFFF               	dw	65535	; assembler added errata NOP
 16708  000922  0005               	push	
 16709  000924  6EFA               	movwf	pclath,c
 16710  000926  50DE               	movf	postinc2,w,c
 16711  000928  6EFD               	movwf	tosl,c
 16712  00092A  50DE               	movf	postinc2,w,c
 16713  00092C  6EFE               	movwf	tosh,c
 16714  00092E  50F8               	movf	tblptru,w,c
 16715  000930  6EFF               	movwf	tosu,c
 16716  000932  50FA               	movf	pclath,w,c
 16717  000934  0100               	movlb	0	; () banked
 16718  000936  51A0               	movf	__doprnt@c& (0+255),w,b
 16719  000938  0012               	return		;indir
 16720  00093A  FFFF               	dw	65535	; errata NOP
 16721  00093C  D016               	goto	l8090
 16722  00093E                     l8086:
 16723  00093E  FFFF               	dw	65535	; assembler added errata NOP
 16724  000940  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16725  000944  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16726  000948  CFDE F092          	movff	postinc2,??__doprnt
 16727  00094C  CFDD F093          	movff	postdec2,??__doprnt+1
 16728  000950  C092  FFD9         	movff	??__doprnt,fsr2l
 16729  000954  C093  FFDA         	movff	??__doprnt+1,fsr2h
 16730  000958  C0A0  FFDF         	movff	__doprnt@c,indf2
 16731  00095C  C08C  FFD9         	movff	__doprnt@pb,fsr2l
 16732  000960  C08D  FFDA         	movff	__doprnt@pb+1,fsr2h
 16733  000964  2ADE               	incf	postinc2,f,c
 16734  000966  0E00               	movlw	0
 16735  000968  22DD               	addwfc	postdec2,f,c
 16736  00096A                     l8090:
 16737  00096A  FFFF               	dw	65535	; assembler added errata NOP
 16738  00096C  0100               	movlb	0	; () banked
 16739  00096E  0796               	decf	__doprnt@prec& (0+255),f,b
 16740  000970  0100               	movlb	0	; () banked
 16741  000972  2996               	incf	__doprnt@prec& (0+255),w,b
 16742  000974  A4D8               	btfss	status,2,c
 16743  000976  D798               	goto	l8080
 16744  000978                     l8092:
 16745  000978  FFFF               	dw	65535	; assembler added errata NOP
 16746  00097A  0100               	movlb	0	; () banked
 16747  00097C  518E               	movf	__doprnt@f& (0+255),w,b
 16748  00097E  0100               	movlb	0	; () banked
 16749  000980  6F92               	movwf	??__doprnt& (0+255),b
 16750  000982  0100               	movlb	0	; () banked
 16751  000984  518F               	movf	(__doprnt@f+1)& (0+255),w,b
 16752  000986  0100               	movlb	0	; () banked
 16753  000988  6F93               	movwf	(??__doprnt+1)& (0+255),b
 16754  00098A  0100               	movlb	0	; () banked
 16755  00098C  4B8E               	infsnz	__doprnt@f& (0+255),f,b
 16756  00098E  2B8F               	incf	(__doprnt@f+1)& (0+255),f,b
 16757  000990  C092  FFF6         	movff	??__doprnt,tblptrl
 16758  000994  C093  FFF7         	movff	??__doprnt+1,tblptrh
 16759  000998  6AF8               	clrf	tblptru,c
 16760  00099A  0E05               	movlw	(high __ramtop+-1)
 16761  00099C  64F7               	cpfsgt	tblptrh,c
 16762  00099E  D004               	bra	u9497
 16763  0009A0  0008               	tblrd		*
 16764  0009A2  FFFF               	dw	65535	; errata NOP
 16765  0009A4  50F5               	movf	tablat,w,c
 16766  0009A6  D005               	bra	u9490
 16767  0009A8                     u9497:
 16768  0009A8  CFF6 FFE9          	movff	tblptrl,fsr0l
 16769  0009AC  CFF7 FFEA          	movff	tblptrh,fsr0h
 16770  0009B0  50EF               	movf	indf0,w,c
 16771  0009B2                     u9490:
 16772  0009B2  0100               	movlb	0	; () banked
 16773  0009B4  6FA0               	movwf	__doprnt@c& (0+255),b
 16774  0009B6  0100               	movlb	0	; () banked
 16775  0009B8  51A0               	movf	__doprnt@c& (0+255),w,b
 16776  0009BA  A4D8               	btfss	status,2,c
 16777  0009BC  EF85  F000         	goto	l7916
 16778  0009C0                     l8094:
 16779  0009C0  FFFF               	dw	65535	; assembler added errata NOP
 16780                           
 16781                           ;doprnt.c: 1540: return 0;
 16782  0009C2  0E00               	movlw	0
 16783  0009C4  0100               	movlb	0	; () banked
 16784  0009C6  6F8D               	movwf	(?__doprnt+1)& (0+255),b
 16785  0009C8  0E00               	movlw	0
 16786  0009CA  6F8C               	movwf	?__doprnt& (0+255),b
 16787                           
 16788                           ; BSR set to: 0
 16789                           
 16790                           ; BSR set to: 0
 16791  0009CC  0012               	return		;funcret
 16792  0009CE  FFFF               	dw	65535	; errata NOP
 16793  0009D0                     __end_of__doprnt:
 16794                           	opt stack 0
 16795                           tosu	equ	0xFFF
 16796                           tosh	equ	0xFFE
 16797                           tosl	equ	0xFFD
 16798                           pclath	equ	0xFFA
 16799                           tblptru	equ	0xFF8
 16800                           tblptrh	equ	0xFF7
 16801                           tblptrl	equ	0xFF6
 16802                           tablat	equ	0xFF5
 16803                           prodh	equ	0xFF4
 16804                           prodl	equ	0xFF3
 16805                           intcon	equ	0xFF2
 16806                           indf0	equ	0xFEF
 16807                           postinc0	equ	0xFEE
 16808                           fsr0h	equ	0xFEA
 16809                           fsr0l	equ	0xFE9
 16810                           wreg	equ	0xFE8
 16811                           postdec1	equ	0xFE5
 16812                           fsr1l	equ	0xFE1
 16813                           indf2	equ	0xFDF
 16814                           postinc2	equ	0xFDE
 16815                           postdec2	equ	0xFDD
 16816                           fsr2h	equ	0xFDA
 16817                           fsr2l	equ	0xFD9
 16818                           status	equ	0xFD8
 16819                           
 16820 ;; *************** function _putch *****************
 16821 ;; Defined at:
 16822 ;;		line 16 in file "serial.h"
 16823 ;; Parameters:    Size  Location     Type
 16824 ;;  c               1    wreg     unsigned char 
 16825 ;; Auto vars:     Size  Location     Type
 16826 ;;  c               1    0[BANK0 ] unsigned char 
 16827 ;; Return value:  Size  Location     Type
 16828 ;;                  1    wreg      void 
 16829 ;; Registers used:
 16830 ;;		wreg
 16831 ;; Tracked objects:
 16832 ;;		On entry : 0/0
 16833 ;;		On exit  : 0/0
 16834 ;;		Unchanged: 0/0
 16835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16836 ;;      Params:         0       0       0       0       0       0       0
 16837 ;;      Locals:         0       1       0       0       0       0       0
 16838 ;;      Temps:          0       0       0       0       0       0       0
 16839 ;;      Totals:         0       1       0       0       0       0       0
 16840 ;;Total ram usage:        1 bytes
 16841 ;; Hardware stack levels used:    1
 16842 ;; Hardware stack levels required when called:    6
 16843 ;; This function calls:
 16844 ;;		Nothing
 16845 ;; This function is called by:
 16846 ;;		_printf
 16847 ;;		__doprnt
 16848 ;; This function uses a non-reentrant model
 16849 ;;
 16850                           
 16851                           	psect	text49
 16852  00649A                     __ptext49:
 16853                           	opt stack 0
 16854  00649A                     _putch:
 16855                           	opt stack 0
 16856  00649A  FFFF               	dw	65535	; assembler added errata NOP
 16857                           
 16858                           ; BSR set to: 0
 16859                           ;incstack = 0
 16860                           ;putch@c stored from wreg
 16861  00649C  0100               	movlb	0	; () banked
 16862  00649E  6F80               	movwf	putch@c& (0+255),b
 16863  0064A0                     l241:
 16864  0064A0  FFFF               	dw	65535	; assembler added errata NOP
 16865  0064A2  A2AC               	btfss	4012,1,c	;volatile
 16866  0064A4  D7FD               	goto	l241
 16867                           
 16868                           ;serial.h: 18: TXREG = c;
 16869  0064A6  C080  FFAD         	movff	putch@c,4013	;volatile
 16870  0064AA  0012               	return		;funcret
 16871  0064AC  FFFF               	dw	65535	; errata NOP
 16872  0064AE                     __end_of_putch:
 16873                           	opt stack 0
 16874                           tosu	equ	0xFFF
 16875                           tosh	equ	0xFFE
 16876                           tosl	equ	0xFFD
 16877                           pclath	equ	0xFFA
 16878                           tblptru	equ	0xFF8
 16879                           tblptrh	equ	0xFF7
 16880                           tblptrl	equ	0xFF6
 16881                           tablat	equ	0xFF5
 16882                           prodh	equ	0xFF4
 16883                           prodl	equ	0xFF3
 16884                           intcon	equ	0xFF2
 16885                           indf0	equ	0xFEF
 16886                           postinc0	equ	0xFEE
 16887                           fsr0h	equ	0xFEA
 16888                           fsr0l	equ	0xFE9
 16889                           wreg	equ	0xFE8
 16890                           postdec1	equ	0xFE5
 16891                           fsr1l	equ	0xFE1
 16892                           indf2	equ	0xFDF
 16893                           postinc2	equ	0xFDE
 16894                           postdec2	equ	0xFDD
 16895                           fsr2h	equ	0xFDA
 16896                           fsr2l	equ	0xFD9
 16897                           status	equ	0xFD8
 16898                           
 16899 ;; *************** function _isdigit *****************
 16900 ;; Defined at:
 16901 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
 16902 ;; Parameters:    Size  Location     Type
 16903 ;;  c               1    wreg     unsigned char 
 16904 ;; Auto vars:     Size  Location     Type
 16905 ;;  c               1    2[BANK0 ] unsigned char 
 16906 ;; Return value:  Size  Location     Type
 16907 ;;		None               void
 16908 ;; Registers used:
 16909 ;;		wreg, status,2, status,0
 16910 ;; Tracked objects:
 16911 ;;		On entry : 0/0
 16912 ;;		On exit  : 0/0
 16913 ;;		Unchanged: 0/0
 16914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16915 ;;      Params:         0       0       0       0       0       0       0
 16916 ;;      Locals:         0       2       0       0       0       0       0
 16917 ;;      Temps:          0       1       0       0       0       0       0
 16918 ;;      Totals:         0       3       0       0       0       0       0
 16919 ;;Total ram usage:        3 bytes
 16920 ;; Hardware stack levels used:    1
 16921 ;; Hardware stack levels required when called:    6
 16922 ;; This function calls:
 16923 ;;		Nothing
 16924 ;; This function is called by:
 16925 ;;		__doprnt
 16926 ;;		_atoi
 16927 ;; This function uses a non-reentrant model
 16928 ;;
 16929                           
 16930                           	psect	text50
 16931  0065B4                     __ptext50:
 16932                           	opt stack 0
 16933  0065B4                     _isdigit:
 16934                           	opt stack 0
 16935  0065B4  FFFF               	dw	65535	; assembler added errata NOP
 16936                           
 16937                           ;incstack = 0
 16938                           ;isdigit@c stored from wreg
 16939  0065B6  0100               	movlb	0	; () banked
 16940  0065B8  6F82               	movwf	isdigit@c& (0+255),b
 16941  0065BA  0E00               	movlw	0
 16942  0065BC  0100               	movlb	0	; () banked
 16943  0065BE  6F81               	movwf	_isdigit$1844& (0+255),b
 16944                           
 16945                           ; BSR set to: 0
 16946  0065C0  0E3A               	movlw	58
 16947  0065C2  0100               	movlb	0	; () banked
 16948  0065C4  6182               	cpfslt	isdigit@c& (0+255),b
 16949  0065C6  D007               	goto	l4808
 16950                           
 16951                           ; BSR set to: 0
 16952  0065C8  0E2F               	movlw	47
 16953  0065CA  0100               	movlb	0	; () banked
 16954  0065CC  6582               	cpfsgt	isdigit@c& (0+255),b
 16955  0065CE  D003               	goto	l4808
 16956                           
 16957                           ; BSR set to: 0
 16958  0065D0  0E01               	movlw	1
 16959  0065D2  0100               	movlb	0	; () banked
 16960  0065D4  6F81               	movwf	_isdigit$1844& (0+255),b
 16961  0065D6                     l4808:
 16962  0065D6  FFFF               	dw	65535	; assembler added errata NOP
 16963                           
 16964                           ; BSR set to: 0
 16965  0065D8  C081  F080         	movff	_isdigit$1844,??_isdigit
 16966  0065DC  0100               	movlb	0	; () banked
 16967  0065DE  3180               	rrcf	??_isdigit& (0+255),w,b
 16968                           
 16969                           ; BSR set to: 0
 16970                           
 16971                           ; BSR set to: 0
 16972  0065E0  0012               	return		;funcret
 16973  0065E2  FFFF               	dw	65535	; errata NOP
 16974  0065E4                     __end_of_isdigit:
 16975                           	opt stack 0
 16976                           tosu	equ	0xFFF
 16977                           tosh	equ	0xFFE
 16978                           tosl	equ	0xFFD
 16979                           pclath	equ	0xFFA
 16980                           tblptru	equ	0xFF8
 16981                           tblptrh	equ	0xFF7
 16982                           tblptrl	equ	0xFF6
 16983                           tablat	equ	0xFF5
 16984                           prodh	equ	0xFF4
 16985                           prodl	equ	0xFF3
 16986                           intcon	equ	0xFF2
 16987                           indf0	equ	0xFEF
 16988                           postinc0	equ	0xFEE
 16989                           fsr0h	equ	0xFEA
 16990                           fsr0l	equ	0xFE9
 16991                           wreg	equ	0xFE8
 16992                           postdec1	equ	0xFE5
 16993                           fsr1l	equ	0xFE1
 16994                           indf2	equ	0xFDF
 16995                           postinc2	equ	0xFDE
 16996                           postdec2	equ	0xFDD
 16997                           fsr2h	equ	0xFDA
 16998                           fsr2l	equ	0xFD9
 16999                           status	equ	0xFD8
 17000                           
 17001 ;; *************** function ___wmul *****************
 17002 ;; Defined at:
 17003 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 17004 ;; Parameters:    Size  Location     Type
 17005 ;;  multiplier      2    0[BANK0 ] unsigned int 
 17006 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 17007 ;; Auto vars:     Size  Location     Type
 17008 ;;  product         2    4[BANK0 ] unsigned int 
 17009 ;; Return value:  Size  Location     Type
 17010 ;;                  2    0[BANK0 ] unsigned int 
 17011 ;; Registers used:
 17012 ;;		wreg, status,2, status,0, prodl, prodh
 17013 ;; Tracked objects:
 17014 ;;		On entry : 0/0
 17015 ;;		On exit  : 0/0
 17016 ;;		Unchanged: 0/0
 17017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17018 ;;      Params:         0       4       0       0       0       0       0
 17019 ;;      Locals:         0       2       0       0       0       0       0
 17020 ;;      Temps:          0       0       0       0       0       0       0
 17021 ;;      Totals:         0       6       0       0       0       0       0
 17022 ;;Total ram usage:        6 bytes
 17023 ;; Hardware stack levels used:    1
 17024 ;; Hardware stack levels required when called:    6
 17025 ;; This function calls:
 17026 ;;		Nothing
 17027 ;; This function is called by:
 17028 ;;		__doprnt
 17029 ;;		_atoi
 17030 ;; This function uses a non-reentrant model
 17031 ;;
 17032                           
 17033                           	psect	text51
 17034  0066F0                     __ptext51:
 17035                           	opt stack 0
 17036  0066F0                     ___wmul:
 17037                           	opt stack 0
 17038  0066F0  FFFF               	dw	65535	; assembler added errata NOP
 17039                           
 17040                           ; BSR set to: 0
 17041                           ;incstack = 0
 17042  0066F2  0100               	movlb	0	; () banked
 17043  0066F4  5180               	movf	___wmul@multiplier& (0+255),w,b
 17044  0066F6  0100               	movlb	0	; () banked
 17045  0066F8  0382               	mulwf	___wmul@multiplicand& (0+255),b
 17046  0066FA  CFF3 F084          	movff	prodl,___wmul@product
 17047  0066FE  CFF4 F085          	movff	prodh,___wmul@product+1
 17048  006702  0100               	movlb	0	; () banked
 17049  006704  5180               	movf	___wmul@multiplier& (0+255),w,b
 17050  006706  0100               	movlb	0	; () banked
 17051  006708  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 17052  00670A  50F3               	movf	prodl,w,c
 17053  00670C  0100               	movlb	0	; () banked
 17054  00670E  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 17055  006710  0100               	movlb	0	; () banked
 17056  006712  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 17057  006714  0100               	movlb	0	; () banked
 17058  006716  0382               	mulwf	___wmul@multiplicand& (0+255),b
 17059  006718  50F3               	movf	prodl,w,c
 17060  00671A  0100               	movlb	0	; () banked
 17061  00671C  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 17062                           
 17063                           ; BSR set to: 0
 17064  00671E  C084  F080         	movff	___wmul@product,?___wmul
 17065  006722  C085  F081         	movff	___wmul@product+1,?___wmul+1
 17066                           
 17067                           ; BSR set to: 0
 17068                           
 17069                           ; BSR set to: 0
 17070  006726  0012               	return		;funcret
 17071  006728  FFFF               	dw	65535	; errata NOP
 17072  00672A                     __end_of___wmul:
 17073                           	opt stack 0
 17074                           tosu	equ	0xFFF
 17075                           tosh	equ	0xFFE
 17076                           tosl	equ	0xFFD
 17077                           pclath	equ	0xFFA
 17078                           tblptru	equ	0xFF8
 17079                           tblptrh	equ	0xFF7
 17080                           tblptrl	equ	0xFF6
 17081                           tablat	equ	0xFF5
 17082                           prodh	equ	0xFF4
 17083                           prodl	equ	0xFF3
 17084                           intcon	equ	0xFF2
 17085                           indf0	equ	0xFEF
 17086                           postinc0	equ	0xFEE
 17087                           fsr0h	equ	0xFEA
 17088                           fsr0l	equ	0xFE9
 17089                           wreg	equ	0xFE8
 17090                           postdec1	equ	0xFE5
 17091                           fsr1l	equ	0xFE1
 17092                           indf2	equ	0xFDF
 17093                           postinc2	equ	0xFDE
 17094                           postdec2	equ	0xFDD
 17095                           fsr2h	equ	0xFDA
 17096                           fsr2l	equ	0xFD9
 17097                           status	equ	0xFD8
 17098                           
 17099 ;; *************** function ___lwmod *****************
 17100 ;; Defined at:
 17101 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
 17102 ;; Parameters:    Size  Location     Type
 17103 ;;  dividend        2    7[BANK0 ] unsigned int 
 17104 ;;  divisor         2    9[BANK0 ] unsigned int 
 17105 ;; Auto vars:     Size  Location     Type
 17106 ;;  counter         1   11[BANK0 ] unsigned char 
 17107 ;; Return value:  Size  Location     Type
 17108 ;;                  2    7[BANK0 ] unsigned int 
 17109 ;; Registers used:
 17110 ;;		wreg, status,2, status,0
 17111 ;; Tracked objects:
 17112 ;;		On entry : 0/0
 17113 ;;		On exit  : 0/0
 17114 ;;		Unchanged: 0/0
 17115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17116 ;;      Params:         0       4       0       0       0       0       0
 17117 ;;      Locals:         0       1       0       0       0       0       0
 17118 ;;      Temps:          0       0       0       0       0       0       0
 17119 ;;      Totals:         0       5       0       0       0       0       0
 17120 ;;Total ram usage:        5 bytes
 17121 ;; Hardware stack levels used:    1
 17122 ;; Hardware stack levels required when called:    6
 17123 ;; This function calls:
 17124 ;;		Nothing
 17125 ;; This function is called by:
 17126 ;;		__doprnt
 17127 ;; This function uses a non-reentrant model
 17128 ;;
 17129                           
 17130                           	psect	text52
 17131  006E22                     __ptext52:
 17132                           	opt stack 0
 17133  006E22                     ___lwmod:
 17134                           	opt stack 0
 17135  006E22  FFFF               	dw	65535	; assembler added errata NOP
 17136                           
 17137                           ; BSR set to: 0
 17138                           ;incstack = 0
 17139  006E24  0100               	movlb	0	; () banked
 17140  006E26  5189               	movf	___lwmod@divisor& (0+255),w,b
 17141  006E28  0100               	movlb	0	; () banked
 17142  006E2A  118A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17143  006E2C  B4D8               	btfsc	status,2,c
 17144  006E2E  D02A               	goto	l1519
 17145                           
 17146                           ; BSR set to: 0
 17147  006E30  0E01               	movlw	1
 17148  006E32  0100               	movlb	0	; () banked
 17149  006E34  6F8B               	movwf	___lwmod@counter& (0+255),b
 17150  006E36  D007               	goto	l7832
 17151  006E38                     l7830:
 17152  006E38  FFFF               	dw	65535	; assembler added errata NOP
 17153                           
 17154                           ; BSR set to: 0
 17155  006E3A  0100               	movlb	0	; () banked
 17156  006E3C  90D8               	bcf	status,0,c
 17157  006E3E  3789               	rlcf	___lwmod@divisor& (0+255),f,b
 17158  006E40  378A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17159  006E42  0100               	movlb	0	; () banked
 17160  006E44  2B8B               	incf	___lwmod@counter& (0+255),f,b
 17161  006E46                     l7832:
 17162  006E46  FFFF               	dw	65535	; assembler added errata NOP
 17163                           
 17164                           ; BSR set to: 0
 17165  006E48  0100               	movlb	0	; () banked
 17166  006E4A  AF8A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17167  006E4C  D7F5               	goto	l7830
 17168  006E4E                     l7834:
 17169  006E4E  FFFF               	dw	65535	; assembler added errata NOP
 17170                           
 17171                           ; BSR set to: 0
 17172  006E50  0100               	movlb	0	; () banked
 17173  006E52  5189               	movf	___lwmod@divisor& (0+255),w,b
 17174  006E54  0100               	movlb	0	; () banked
 17175  006E56  5D87               	subwf	___lwmod@dividend& (0+255),w,b
 17176  006E58  0100               	movlb	0	; () banked
 17177  006E5A  518A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17178  006E5C  0100               	movlb	0	; () banked
 17179  006E5E  5988               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17180  006E60  A0D8               	btfss	status,0,c
 17181  006E62  D008               	goto	l7838
 17182                           
 17183                           ; BSR set to: 0
 17184  006E64  0100               	movlb	0	; () banked
 17185  006E66  5189               	movf	___lwmod@divisor& (0+255),w,b
 17186  006E68  0100               	movlb	0	; () banked
 17187  006E6A  5F87               	subwf	___lwmod@dividend& (0+255),f,b
 17188  006E6C  0100               	movlb	0	; () banked
 17189  006E6E  518A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17190  006E70  0100               	movlb	0	; () banked
 17191  006E72  5B88               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17192  006E74                     l7838:
 17193  006E74  FFFF               	dw	65535	; assembler added errata NOP
 17194                           
 17195                           ; BSR set to: 0
 17196  006E76  0100               	movlb	0	; () banked
 17197  006E78  90D8               	bcf	status,0,c
 17198  006E7A  338A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17199  006E7C  3389               	rrcf	___lwmod@divisor& (0+255),f,b
 17200                           
 17201                           ; BSR set to: 0
 17202  006E7E  0100               	movlb	0	; () banked
 17203  006E80  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
 17204  006E82  D7E5               	goto	l7834
 17205  006E84                     l1519:
 17206  006E84  FFFF               	dw	65535	; assembler added errata NOP
 17207                           
 17208                           ; BSR set to: 0
 17209  006E86  C087  F087         	movff	___lwmod@dividend,?___lwmod
 17210  006E8A  C088  F088         	movff	___lwmod@dividend+1,?___lwmod+1
 17211                           
 17212                           ; BSR set to: 0
 17213  006E8E  0012               	return		;funcret
 17214  006E90  FFFF               	dw	65535	; errata NOP
 17215  006E92                     __end_of___lwmod:
 17216                           	opt stack 0
 17217                           tosu	equ	0xFFF
 17218                           tosh	equ	0xFFE
 17219                           tosl	equ	0xFFD
 17220                           pclath	equ	0xFFA
 17221                           tblptru	equ	0xFF8
 17222                           tblptrh	equ	0xFF7
 17223                           tblptrl	equ	0xFF6
 17224                           tablat	equ	0xFF5
 17225                           prodh	equ	0xFF4
 17226                           prodl	equ	0xFF3
 17227                           intcon	equ	0xFF2
 17228                           indf0	equ	0xFEF
 17229                           postinc0	equ	0xFEE
 17230                           fsr0h	equ	0xFEA
 17231                           fsr0l	equ	0xFE9
 17232                           wreg	equ	0xFE8
 17233                           postdec1	equ	0xFE5
 17234                           fsr1l	equ	0xFE1
 17235                           indf2	equ	0xFDF
 17236                           postinc2	equ	0xFDE
 17237                           postdec2	equ	0xFDD
 17238                           fsr2h	equ	0xFDA
 17239                           fsr2l	equ	0xFD9
 17240                           status	equ	0xFD8
 17241                           
 17242 ;; *************** function ___lwdiv *****************
 17243 ;; Defined at:
 17244 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
 17245 ;; Parameters:    Size  Location     Type
 17246 ;;  dividend        2    0[BANK0 ] unsigned int 
 17247 ;;  divisor         2    2[BANK0 ] unsigned int 
 17248 ;; Auto vars:     Size  Location     Type
 17249 ;;  quotient        2    5[BANK0 ] unsigned int 
 17250 ;;  counter         1    4[BANK0 ] unsigned char 
 17251 ;; Return value:  Size  Location     Type
 17252 ;;                  2    0[BANK0 ] unsigned int 
 17253 ;; Registers used:
 17254 ;;		wreg, status,2, status,0
 17255 ;; Tracked objects:
 17256 ;;		On entry : 0/0
 17257 ;;		On exit  : 0/0
 17258 ;;		Unchanged: 0/0
 17259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17260 ;;      Params:         0       4       0       0       0       0       0
 17261 ;;      Locals:         0       3       0       0       0       0       0
 17262 ;;      Temps:          0       0       0       0       0       0       0
 17263 ;;      Totals:         0       7       0       0       0       0       0
 17264 ;;Total ram usage:        7 bytes
 17265 ;; Hardware stack levels used:    1
 17266 ;; Hardware stack levels required when called:    6
 17267 ;; This function calls:
 17268 ;;		Nothing
 17269 ;; This function is called by:
 17270 ;;		__doprnt
 17271 ;; This function uses a non-reentrant model
 17272 ;;
 17273                           
 17274                           	psect	text53
 17275  006FFA                     __ptext53:
 17276                           	opt stack 0
 17277  006FFA                     ___lwdiv:
 17278                           	opt stack 0
 17279  006FFA  FFFF               	dw	65535	; assembler added errata NOP
 17280                           
 17281                           ; BSR set to: 0
 17282                           ;incstack = 0
 17283  006FFC  0E00               	movlw	0
 17284  006FFE  0100               	movlb	0	; () banked
 17285  007000  6F86               	movwf	(___lwdiv@quotient+1)& (0+255),b
 17286  007002  0E00               	movlw	0
 17287  007004  6F85               	movwf	___lwdiv@quotient& (0+255),b
 17288                           
 17289                           ; BSR set to: 0
 17290  007006  0100               	movlb	0	; () banked
 17291  007008  5182               	movf	___lwdiv@divisor& (0+255),w,b
 17292  00700A  0100               	movlb	0	; () banked
 17293  00700C  1183               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 17294  00700E  B4D8               	btfsc	status,2,c
 17295  007010  D030               	goto	l1509
 17296                           
 17297                           ; BSR set to: 0
 17298  007012  0E01               	movlw	1
 17299  007014  0100               	movlb	0	; () banked
 17300  007016  6F84               	movwf	___lwdiv@counter& (0+255),b
 17301  007018  D007               	goto	l7812
 17302  00701A                     l7810:
 17303  00701A  FFFF               	dw	65535	; assembler added errata NOP
 17304                           
 17305                           ; BSR set to: 0
 17306  00701C  0100               	movlb	0	; () banked
 17307  00701E  90D8               	bcf	status,0,c
 17308  007020  3782               	rlcf	___lwdiv@divisor& (0+255),f,b
 17309  007022  3783               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 17310  007024  0100               	movlb	0	; () banked
 17311  007026  2B84               	incf	___lwdiv@counter& (0+255),f,b
 17312  007028                     l7812:
 17313  007028  FFFF               	dw	65535	; assembler added errata NOP
 17314                           
 17315                           ; BSR set to: 0
 17316  00702A  0100               	movlb	0	; () banked
 17317  00702C  AF83               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 17318  00702E  D7F5               	goto	l7810
 17319  007030                     l7814:
 17320  007030  FFFF               	dw	65535	; assembler added errata NOP
 17321                           
 17322                           ; BSR set to: 0
 17323  007032  0100               	movlb	0	; () banked
 17324  007034  90D8               	bcf	status,0,c
 17325  007036  3785               	rlcf	___lwdiv@quotient& (0+255),f,b
 17326  007038  3786               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 17327                           
 17328                           ; BSR set to: 0
 17329  00703A  0100               	movlb	0	; () banked
 17330  00703C  5182               	movf	___lwdiv@divisor& (0+255),w,b
 17331  00703E  0100               	movlb	0	; () banked
 17332  007040  5D80               	subwf	___lwdiv@dividend& (0+255),w,b
 17333  007042  0100               	movlb	0	; () banked
 17334  007044  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17335  007046  0100               	movlb	0	; () banked
 17336  007048  5981               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 17337  00704A  A0D8               	btfss	status,0,c
 17338  00704C  D00A               	goto	l7822
 17339                           
 17340                           ; BSR set to: 0
 17341  00704E  0100               	movlb	0	; () banked
 17342  007050  5182               	movf	___lwdiv@divisor& (0+255),w,b
 17343  007052  0100               	movlb	0	; () banked
 17344  007054  5F80               	subwf	___lwdiv@dividend& (0+255),f,b
 17345  007056  0100               	movlb	0	; () banked
 17346  007058  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17347  00705A  0100               	movlb	0	; () banked
 17348  00705C  5B81               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 17349                           
 17350                           ; BSR set to: 0
 17351  00705E  0100               	movlb	0	; () banked
 17352  007060  8185               	bsf	___lwdiv@quotient& (0+255),0,b
 17353  007062                     l7822:
 17354  007062  FFFF               	dw	65535	; assembler added errata NOP
 17355                           
 17356                           ; BSR set to: 0
 17357  007064  0100               	movlb	0	; () banked
 17358  007066  90D8               	bcf	status,0,c
 17359  007068  3383               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 17360  00706A  3382               	rrcf	___lwdiv@divisor& (0+255),f,b
 17361                           
 17362                           ; BSR set to: 0
 17363  00706C  0100               	movlb	0	; () banked
 17364  00706E  2F84               	decfsz	___lwdiv@counter& (0+255),f,b
 17365  007070  D7DF               	goto	l7814
 17366  007072                     l1509:
 17367  007072  FFFF               	dw	65535	; assembler added errata NOP
 17368                           
 17369                           ; BSR set to: 0
 17370  007074  C085  F080         	movff	___lwdiv@quotient,?___lwdiv
 17371  007078  C086  F081         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17372                           
 17373                           ; BSR set to: 0
 17374  00707C  0012               	return		;funcret
 17375  00707E  FFFF               	dw	65535	; errata NOP
 17376  007080                     __end_of___lwdiv:
 17377                           	opt stack 0
 17378                           tosu	equ	0xFFF
 17379                           tosh	equ	0xFFE
 17380                           tosl	equ	0xFFD
 17381                           pclath	equ	0xFFA
 17382                           tblptru	equ	0xFF8
 17383                           tblptrh	equ	0xFF7
 17384                           tblptrl	equ	0xFF6
 17385                           tablat	equ	0xFF5
 17386                           prodh	equ	0xFF4
 17387                           prodl	equ	0xFF3
 17388                           intcon	equ	0xFF2
 17389                           indf0	equ	0xFEF
 17390                           postinc0	equ	0xFEE
 17391                           fsr0h	equ	0xFEA
 17392                           fsr0l	equ	0xFE9
 17393                           wreg	equ	0xFE8
 17394                           postdec1	equ	0xFE5
 17395                           fsr1l	equ	0xFE1
 17396                           indf2	equ	0xFDF
 17397                           postinc2	equ	0xFDE
 17398                           postdec2	equ	0xFDD
 17399                           fsr2h	equ	0xFDA
 17400                           fsr2l	equ	0xFD9
 17401                           status	equ	0xFD8
 17402                           
 17403 ;; *************** function _limparBuffer *****************
 17404 ;; Defined at:
 17405 ;;		line 34 in file "serial.h"
 17406 ;; Parameters:    Size  Location     Type
 17407 ;;		None
 17408 ;; Auto vars:     Size  Location     Type
 17409 ;;		None
 17410 ;; Return value:  Size  Location     Type
 17411 ;;                  1    wreg      void 
 17412 ;; Registers used:
 17413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17414 ;; Tracked objects:
 17415 ;;		On entry : 0/0
 17416 ;;		On exit  : 0/0
 17417 ;;		Unchanged: 0/0
 17418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17419 ;;      Params:         0       0       0       0       0       0       0
 17420 ;;      Locals:         0       0       0       0       0       0       0
 17421 ;;      Temps:          0       0       0       0       0       0       0
 17422 ;;      Totals:         0       0       0       0       0       0       0
 17423 ;;Total ram usage:        0 bytes
 17424 ;; Hardware stack levels used:    1
 17425 ;; Hardware stack levels required when called:    7
 17426 ;; This function calls:
 17427 ;;		_delay
 17428 ;;		_memset
 17429 ;; This function is called by:
 17430 ;;		_getSinalSIM800L
 17431 ;;		_comunicarTeste
 17432 ;;		_enviaSMS
 17433 ;; This function uses a non-reentrant model
 17434 ;;
 17435                           
 17436                           	psect	text54
 17437  0067A0                     __ptext54:
 17438                           	opt stack 0
 17439  0067A0                     _limparBuffer:
 17440                           	opt stack 0
 17441  0067A0  FFFF               	dw	65535	; assembler added errata NOP
 17442                           
 17443                           ;serial.h: 35: cbf = 0;
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;incstack = 0
 17447  0067A2  0E00               	movlw	0
 17448  0067A4  6E62               	movwf	_cbf,c
 17449                           
 17450                           ;serial.h: 36: memset(bufferSerial, 0, sizeof (bufferSerial));
 17451  0067A6  0E00               	movlw	low _bufferSerial
 17452  0067A8  0100               	movlb	0	; () banked
 17453  0067AA  6F80               	movwf	memset@p1& (0+255),b
 17454  0067AC  0E01               	movlw	high _bufferSerial
 17455  0067AE  0100               	movlb	0	; () banked
 17456  0067B0  6F81               	movwf	(memset@p1+1)& (0+255),b
 17457  0067B2  0E00               	movlw	0
 17458  0067B4  0100               	movlb	0	; () banked
 17459  0067B6  6F83               	movwf	(memset@c+1)& (0+255),b
 17460  0067B8  0E00               	movlw	0
 17461  0067BA  6F82               	movwf	memset@c& (0+255),b
 17462  0067BC  0E00               	movlw	0
 17463  0067BE  0100               	movlb	0	; () banked
 17464  0067C0  6F85               	movwf	(memset@n+1)& (0+255),b
 17465  0067C2  0E3C               	movlw	60
 17466  0067C4  6F84               	movwf	memset@n& (0+255),b
 17467  0067C6  EC0C  F034         	call	_memset
 17468                           
 17469                           ;serial.h: 37: delay(150);
 17470  0067CA  0E00               	movlw	0
 17471  0067CC  0100               	movlb	0	; () banked
 17472  0067CE  6F81               	movwf	(delay@x+1)& (0+255),b
 17473  0067D0  0E96               	movlw	150
 17474  0067D2  6F80               	movwf	delay@x& (0+255),b
 17475  0067D4  EC5B  F033         	call	_delay	;wreg free
 17476  0067D8  0012               	return		;funcret
 17477  0067DA  FFFF               	dw	65535	; errata NOP
 17478  0067DC                     __end_of_limparBuffer:
 17479                           	opt stack 0
 17480                           tosu	equ	0xFFF
 17481                           tosh	equ	0xFFE
 17482                           tosl	equ	0xFFD
 17483                           pclath	equ	0xFFA
 17484                           tblptru	equ	0xFF8
 17485                           tblptrh	equ	0xFF7
 17486                           tblptrl	equ	0xFF6
 17487                           tablat	equ	0xFF5
 17488                           prodh	equ	0xFF4
 17489                           prodl	equ	0xFF3
 17490                           intcon	equ	0xFF2
 17491                           indf0	equ	0xFEF
 17492                           postinc0	equ	0xFEE
 17493                           fsr0h	equ	0xFEA
 17494                           fsr0l	equ	0xFE9
 17495                           wreg	equ	0xFE8
 17496                           postdec1	equ	0xFE5
 17497                           fsr1l	equ	0xFE1
 17498                           indf2	equ	0xFDF
 17499                           postinc2	equ	0xFDE
 17500                           postdec2	equ	0xFDD
 17501                           fsr2h	equ	0xFDA
 17502                           fsr2l	equ	0xFD9
 17503                           status	equ	0xFD8
 17504                           
 17505 ;; *************** function _memset *****************
 17506 ;; Defined at:
 17507 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 17508 ;; Parameters:    Size  Location     Type
 17509 ;;  p1              2    0[BANK0 ] PTR void 
 17510 ;;		 -> bufferAUX(20), bufferSerial(60), 
 17511 ;;  c               2    2[BANK0 ] int 
 17512 ;;  n               2    4[BANK0 ] unsigned int 
 17513 ;; Auto vars:     Size  Location     Type
 17514 ;;  p               2    6[BANK0 ] PTR unsigned char 
 17515 ;;		 -> bufferAUX(20), bufferSerial(60), 
 17516 ;; Return value:  Size  Location     Type
 17517 ;;                  2    0[BANK0 ] PTR void 
 17518 ;; Registers used:
 17519 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17520 ;; Tracked objects:
 17521 ;;		On entry : 0/0
 17522 ;;		On exit  : 0/0
 17523 ;;		Unchanged: 0/0
 17524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17525 ;;      Params:         0       6       0       0       0       0       0
 17526 ;;      Locals:         0       2       0       0       0       0       0
 17527 ;;      Temps:          0       0       0       0       0       0       0
 17528 ;;      Totals:         0       8       0       0       0       0       0
 17529 ;;Total ram usage:        8 bytes
 17530 ;; Hardware stack levels used:    1
 17531 ;; Hardware stack levels required when called:    6
 17532 ;; This function calls:
 17533 ;;		Nothing
 17534 ;; This function is called by:
 17535 ;;		_limparBuffer
 17536 ;;		_getSerial
 17537 ;; This function uses a non-reentrant model
 17538 ;;
 17539                           
 17540                           	psect	text55
 17541  006818                     __ptext55:
 17542                           	opt stack 0
 17543  006818                     _memset:
 17544                           	opt stack 0
 17545  006818  FFFF               	dw	65535	; assembler added errata NOP
 17546                           
 17547                           ;incstack = 0
 17548  00681A  C080  F086         	movff	memset@p1,memset@p
 17549  00681E  C081  F087         	movff	memset@p1+1,memset@p+1
 17550  006822  D00A               	goto	l7866
 17551  006824                     l7862:
 17552  006824  FFFF               	dw	65535	; assembler added errata NOP
 17553  006826  C086  FFD9         	movff	memset@p,fsr2l
 17554  00682A  C087  FFDA         	movff	memset@p+1,fsr2h
 17555  00682E  C082  FFDF         	movff	memset@c,indf2
 17556  006832  0100               	movlb	0	; () banked
 17557  006834  4B86               	infsnz	memset@p& (0+255),f,b
 17558  006836  2B87               	incf	(memset@p+1)& (0+255),f,b
 17559  006838                     l7866:
 17560  006838  FFFF               	dw	65535	; assembler added errata NOP
 17561  00683A  0100               	movlb	0	; () banked
 17562  00683C  0784               	decf	memset@n& (0+255),f,b
 17563  00683E  A0D8               	btfss	status,0,c
 17564  006840  0785               	decf	(memset@n+1)& (0+255),f,b
 17565  006842  0100               	movlb	0	; () banked
 17566  006844  2984               	incf	memset@n& (0+255),w,b
 17567  006846  E1EE               	bnz	l7862
 17568  006848  0100               	movlb	0	; () banked
 17569  00684A  2985               	incf	(memset@n+1)& (0+255),w,b
 17570  00684C  B4D8               	btfsc	status,2,c
 17571                           
 17572                           ; BSR set to: 0
 17573                           
 17574                           ; BSR set to: 0
 17575                           ;	Return value of _memset is never used
 17576  00684E  0012               	return		;funcret
 17577  006850  FFFF               	dw	65535	; assembler added errata NOP
 17578  006852  D7E8               	goto	l7862
 17579  006854  FFFF               	dw	65535	; errata NOP
 17580  006856                     __end_of_memset:
 17581                           	opt stack 0
 17582                           tosu	equ	0xFFF
 17583                           tosh	equ	0xFFE
 17584                           tosl	equ	0xFFD
 17585                           pclath	equ	0xFFA
 17586                           tblptru	equ	0xFF8
 17587                           tblptrh	equ	0xFF7
 17588                           tblptrl	equ	0xFF6
 17589                           tablat	equ	0xFF5
 17590                           prodh	equ	0xFF4
 17591                           prodl	equ	0xFF3
 17592                           intcon	equ	0xFF2
 17593                           indf0	equ	0xFEF
 17594                           postinc0	equ	0xFEE
 17595                           fsr0h	equ	0xFEA
 17596                           fsr0l	equ	0xFE9
 17597                           wreg	equ	0xFE8
 17598                           postdec1	equ	0xFE5
 17599                           fsr1l	equ	0xFE1
 17600                           indf2	equ	0xFDF
 17601                           postinc2	equ	0xFDE
 17602                           postdec2	equ	0xFDD
 17603                           fsr2h	equ	0xFDA
 17604                           fsr2l	equ	0xFD9
 17605                           status	equ	0xFD8
 17606                           
 17607 ;; *************** function _aguardaBuffer *****************
 17608 ;; Defined at:
 17609 ;;		line 26 in file "serial.h"
 17610 ;; Parameters:    Size  Location     Type
 17611 ;;  str             2   19[BANK0 ] PTR unsigned char 
 17612 ;;		 -> STR_34(3), STR_32(7), STR_31(6), STR_30(3), 
 17613 ;;		 -> STR_18(3), STR_16(6), STR_15(7), STR_14(3), 
 17614 ;;		 -> STR_9(3), STR_6(7), STR_5(3), 
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;		None
 17617 ;; Return value:  Size  Location     Type
 17618 ;;                  1    wreg      unsigned char 
 17619 ;; Registers used:
 17620 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17621 ;; Tracked objects:
 17622 ;;		On entry : 0/0
 17623 ;;		On exit  : 0/0
 17624 ;;		Unchanged: 0/0
 17625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17626 ;;      Params:         0       2       0       0       0       0       0
 17627 ;;      Locals:         0       0       0       0       0       0       0
 17628 ;;      Temps:          0       0       0       0       0       0       0
 17629 ;;      Totals:         0       2       0       0       0       0       0
 17630 ;;Total ram usage:        2 bytes
 17631 ;; Hardware stack levels used:    1
 17632 ;; Hardware stack levels required when called:    8
 17633 ;; This function calls:
 17634 ;;		_delay
 17635 ;;		_strstr
 17636 ;; This function is called by:
 17637 ;;		_getSinalSIM800L
 17638 ;;		_comunicarTeste
 17639 ;;		_enviaSMS
 17640 ;; This function uses a non-reentrant model
 17641 ;;
 17642                           
 17643                           	psect	text56
 17644  0068D4                     __ptext56:
 17645                           	opt stack 0
 17646  0068D4                     _aguardaBuffer:
 17647                           	opt stack 0
 17648  0068D4  FFFF               	dw	65535	; assembler added errata NOP
 17649                           
 17650                           ;serial.h: 27: if (strstr(bufferSerial, str) != (0)) {
 17651                           
 17652                           ; BSR set to: 0
 17653                           ;incstack = 0
 17654  0068D6  0E00               	movlw	low _bufferSerial
 17655  0068D8  0100               	movlb	0	; () banked
 17656  0068DA  6F8F               	movwf	strstr@s1& (0+255),b
 17657  0068DC  0E01               	movlw	high _bufferSerial
 17658  0068DE  0100               	movlb	0	; () banked
 17659  0068E0  6F90               	movwf	(strstr@s1+1)& (0+255),b
 17660  0068E2  C093  F091         	movff	aguardaBuffer@str,strstr@s2
 17661  0068E6  C094  F092         	movff	aguardaBuffer@str+1,strstr@s2+1
 17662  0068EA  EC1A  F039         	call	_strstr	;wreg free
 17663  0068EE  0100               	movlb	0	; () banked
 17664  0068F0  518F               	movf	?_strstr& (0+255),w,b
 17665  0068F2  0100               	movlb	0	; () banked
 17666  0068F4  1190               	iorwf	(?_strstr+1)& (0+255),w,b
 17667  0068F6  B4D8               	btfsc	status,2,c
 17668  0068F8  D009               	goto	l8188
 17669                           
 17670                           ; BSR set to: 0
 17671                           ;serial.h: 28: delay(150);
 17672  0068FA  0E00               	movlw	0
 17673  0068FC  0100               	movlb	0	; () banked
 17674  0068FE  6F81               	movwf	(delay@x+1)& (0+255),b
 17675  006900  0E96               	movlw	150
 17676  006902  6F80               	movwf	delay@x& (0+255),b
 17677  006904  EC5B  F033         	call	_delay	;wreg free
 17678                           
 17679                           ;serial.h: 29: return 1;
 17680  006908  0E01               	movlw	1
 17681  00690A  D002               	goto	l254
 17682  00690C                     l8188:
 17683  00690C  FFFF               	dw	65535	; assembler added errata NOP
 17684                           
 17685                           ;serial.h: 30: }
 17686                           ;serial.h: 31: return 0;
 17687  00690E  0E00               	movlw	0
 17688  006910                     l254:
 17689  006910  FFFF               	dw	65535	; assembler added errata NOP
 17690  006912  0012               	return		;funcret
 17691  006914  FFFF               	dw	65535	; errata NOP
 17692  006916                     __end_of_aguardaBuffer:
 17693                           	opt stack 0
 17694                           tosu	equ	0xFFF
 17695                           tosh	equ	0xFFE
 17696                           tosl	equ	0xFFD
 17697                           pclath	equ	0xFFA
 17698                           tblptru	equ	0xFF8
 17699                           tblptrh	equ	0xFF7
 17700                           tblptrl	equ	0xFF6
 17701                           tablat	equ	0xFF5
 17702                           prodh	equ	0xFF4
 17703                           prodl	equ	0xFF3
 17704                           intcon	equ	0xFF2
 17705                           indf0	equ	0xFEF
 17706                           postinc0	equ	0xFEE
 17707                           fsr0h	equ	0xFEA
 17708                           fsr0l	equ	0xFE9
 17709                           wreg	equ	0xFE8
 17710                           postdec1	equ	0xFE5
 17711                           fsr1l	equ	0xFE1
 17712                           indf2	equ	0xFDF
 17713                           postinc2	equ	0xFDE
 17714                           postdec2	equ	0xFDD
 17715                           fsr2h	equ	0xFDA
 17716                           fsr2l	equ	0xFD9
 17717                           status	equ	0xFD8
 17718                           
 17719 ;; *************** function _strstr *****************
 17720 ;; Defined at:
 17721 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strstr.c"
 17722 ;; Parameters:    Size  Location     Type
 17723 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 17724 ;;		 -> NULL(0), bufferSerial(60), 
 17725 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 17726 ;;		 -> STR_34(3), STR_32(7), STR_31(6), STR_30(3), 
 17727 ;;		 -> STR_18(3), STR_16(6), STR_15(7), STR_14(3), 
 17728 ;;		 -> STR_9(3), STR_7(7), STR_6(7), STR_5(3), 
 17729 ;; Auto vars:     Size  Location     Type
 17730 ;;		None
 17731 ;; Return value:  Size  Location     Type
 17732 ;;                  2   15[BANK0 ] PTR unsigned char 
 17733 ;; Registers used:
 17734 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17735 ;; Tracked objects:
 17736 ;;		On entry : 0/0
 17737 ;;		On exit  : 0/0
 17738 ;;		Unchanged: 0/0
 17739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17740 ;;      Params:         0       4       0       0       0       0       0
 17741 ;;      Locals:         0       0       0       0       0       0       0
 17742 ;;      Temps:          0       0       0       0       0       0       0
 17743 ;;      Totals:         0       4       0       0       0       0       0
 17744 ;;Total ram usage:        4 bytes
 17745 ;; Hardware stack levels used:    1
 17746 ;; Hardware stack levels required when called:    7
 17747 ;; This function calls:
 17748 ;;		_strchr
 17749 ;;		_strlen
 17750 ;;		_strncmp
 17751 ;; This function is called by:
 17752 ;;		_aguardaBuffer
 17753 ;;		_getSerial
 17754 ;; This function uses a non-reentrant model
 17755 ;;
 17756                           
 17757                           	psect	text57
 17758  007234                     __ptext57:
 17759                           	opt stack 0
 17760  007234                     _strstr:
 17761                           	opt stack 0
 17762  007234  FFFF               	dw	65535	; assembler added errata NOP
 17763                           
 17764                           ;incstack = 0
 17765  007236  D03B               	goto	l7852
 17766  007238                     l7844:
 17767  007238  FFFF               	dw	65535	; assembler added errata NOP
 17768  00723A  C08F  F086         	movff	strstr@s1,strncmp@s1
 17769  00723E  C090  F087         	movff	strstr@s1+1,strncmp@s1+1
 17770  007242  C091  F088         	movff	strstr@s2,strncmp@s2
 17771  007246  C092  F089         	movff	strstr@s2+1,strncmp@s2+1
 17772  00724A  C091  F080         	movff	strstr@s2,strlen@s
 17773  00724E  C092  F081         	movff	strstr@s2+1,strlen@s+1
 17774  007252  ECDB  F036         	call	_strlen	;wreg free
 17775  007256  C080  F08A         	movff	?_strlen,strncmp@len
 17776  00725A  C081  F08B         	movff	?_strlen+1,strncmp@len+1
 17777  00725E  ECC6  F039         	call	_strncmp	;wreg free
 17778  007262  0100               	movlb	0	; () banked
 17779  007264  5186               	movf	?_strncmp& (0+255),w,b
 17780  007266  0100               	movlb	0	; () banked
 17781  007268  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
 17782  00726A  A4D8               	btfss	status,2,c
 17783  00726C  D005               	goto	l7850
 17784                           
 17785                           ; BSR set to: 0
 17786  00726E  C08F  F08F         	movff	strstr@s1,?_strstr
 17787  007272  C090  F090         	movff	strstr@s1+1,?_strstr+1
 17788                           
 17789                           ; BSR set to: 0
 17790  007276  D030               	goto	l1691
 17791  007278                     l7850:
 17792  007278  FFFF               	dw	65535	; assembler added errata NOP
 17793                           
 17794                           ; BSR set to: 0
 17795  00727A  0E01               	movlw	1
 17796  00727C  0100               	movlb	0	; () banked
 17797  00727E  258F               	addwf	strstr@s1& (0+255),w,b
 17798  007280  0100               	movlb	0	; () banked
 17799  007282  6F80               	movwf	strchr@ptr& (0+255),b
 17800  007284  0E00               	movlw	0
 17801  007286  0100               	movlb	0	; () banked
 17802  007288  2190               	addwfc	(strstr@s1+1)& (0+255),w,b
 17803  00728A  0100               	movlb	0	; () banked
 17804  00728C  6F81               	movwf	(strchr@ptr+1)& (0+255),b
 17805  00728E  C091  FFF6         	movff	strstr@s2,tblptrl
 17806  007292  C092  FFF7         	movff	strstr@s2+1,tblptrh
 17807  007296                     	if	0	;tblptru may be non-zero
 17808  007296                     	endif
 17809  007296                     	if	0	;tblptru may be non-zero
 17810  007296                     	endif
 17811  007296  0008               	tblrd		*
 17812  007298  FFFF               	dw	65535	; errata NOP
 17813  00729A  50F5               	movf	tablat,w,c
 17814  00729C  0100               	movlb	0	; () banked
 17815  00729E  6F82               	movwf	strchr@chr& (0+255),b
 17816  0072A0  6B83               	clrf	(strchr@chr+1)& (0+255),b
 17817  0072A2  ECF2  F034         	call	_strchr	;wreg free
 17818  0072A6  C080  F08F         	movff	?_strchr,strstr@s1
 17819  0072AA  C081  F090         	movff	?_strchr+1,strstr@s1+1
 17820  0072AE                     l7852:
 17821  0072AE  FFFF               	dw	65535	; assembler added errata NOP
 17822  0072B0  0100               	movlb	0	; () banked
 17823  0072B2  518F               	movf	strstr@s1& (0+255),w,b
 17824  0072B4  0100               	movlb	0	; () banked
 17825  0072B6  1190               	iorwf	(strstr@s1+1)& (0+255),w,b
 17826  0072B8  B4D8               	btfsc	status,2,c
 17827  0072BA  D007               	goto	l7856
 17828                           
 17829                           ; BSR set to: 0
 17830  0072BC  C08F  FFD9         	movff	strstr@s1,fsr2l
 17831  0072C0  C090  FFDA         	movff	strstr@s1+1,fsr2h
 17832  0072C4  50DF               	movf	indf2,w,c
 17833  0072C6  A4D8               	btfss	status,2,c
 17834  0072C8  D7B7               	goto	l7844
 17835  0072CA                     l7856:
 17836  0072CA  FFFF               	dw	65535	; assembler added errata NOP
 17837                           
 17838                           ; BSR set to: 0
 17839  0072CC  0E00               	movlw	0
 17840  0072CE  0100               	movlb	0	; () banked
 17841  0072D0  6F8F               	movwf	?_strstr& (0+255),b
 17842  0072D2  0E00               	movlw	0
 17843  0072D4  0100               	movlb	0	; () banked
 17844  0072D6  6F90               	movwf	(?_strstr+1)& (0+255),b
 17845  0072D8                     l1691:
 17846  0072D8  FFFF               	dw	65535	; assembler added errata NOP
 17847                           
 17848                           ; BSR set to: 0
 17849  0072DA  0012               	return		;funcret
 17850  0072DC  FFFF               	dw	65535	; errata NOP
 17851  0072DE                     __end_of_strstr:
 17852                           	opt stack 0
 17853                           tosu	equ	0xFFF
 17854                           tosh	equ	0xFFE
 17855                           tosl	equ	0xFFD
 17856                           pclath	equ	0xFFA
 17857                           tblptru	equ	0xFF8
 17858                           tblptrh	equ	0xFF7
 17859                           tblptrl	equ	0xFF6
 17860                           tablat	equ	0xFF5
 17861                           prodh	equ	0xFF4
 17862                           prodl	equ	0xFF3
 17863                           intcon	equ	0xFF2
 17864                           indf0	equ	0xFEF
 17865                           postinc0	equ	0xFEE
 17866                           fsr0h	equ	0xFEA
 17867                           fsr0l	equ	0xFE9
 17868                           wreg	equ	0xFE8
 17869                           postdec1	equ	0xFE5
 17870                           fsr1l	equ	0xFE1
 17871                           indf2	equ	0xFDF
 17872                           postinc2	equ	0xFDE
 17873                           postdec2	equ	0xFDD
 17874                           fsr2h	equ	0xFDA
 17875                           fsr2l	equ	0xFD9
 17876                           status	equ	0xFD8
 17877                           
 17878 ;; *************** function _strncmp *****************
 17879 ;; Defined at:
 17880 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strncmp.c"
 17881 ;; Parameters:    Size  Location     Type
 17882 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 17883 ;;		 -> NULL(0), bufferSerial(60), 
 17884 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 17885 ;;		 -> STR_34(3), STR_32(7), STR_31(6), STR_30(3), 
 17886 ;;		 -> STR_18(3), STR_16(6), STR_15(7), STR_14(3), 
 17887 ;;		 -> STR_9(3), STR_7(7), STR_6(7), STR_5(3), 
 17888 ;;  len             2   10[BANK0 ] unsigned int 
 17889 ;; Auto vars:     Size  Location     Type
 17890 ;;		None
 17891 ;; Return value:  Size  Location     Type
 17892 ;;                  2    6[BANK0 ] int 
 17893 ;; Registers used:
 17894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17895 ;; Tracked objects:
 17896 ;;		On entry : 0/0
 17897 ;;		On exit  : 0/0
 17898 ;;		Unchanged: 0/0
 17899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17900 ;;      Params:         0       6       0       0       0       0       0
 17901 ;;      Locals:         0       0       0       0       0       0       0
 17902 ;;      Temps:          0       3       0       0       0       0       0
 17903 ;;      Totals:         0       9       0       0       0       0       0
 17904 ;;Total ram usage:        9 bytes
 17905 ;; Hardware stack levels used:    1
 17906 ;; Hardware stack levels required when called:    6
 17907 ;; This function calls:
 17908 ;;		Nothing
 17909 ;; This function is called by:
 17910 ;;		_strstr
 17911 ;; This function uses a non-reentrant model
 17912 ;;
 17913                           
 17914                           	psect	text58
 17915  00738C                     __ptext58:
 17916                           	opt stack 0
 17917  00738C                     _strncmp:
 17918                           	opt stack 0
 17919  00738C  FFFF               	dw	65535	; assembler added errata NOP
 17920                           
 17921                           ; BSR set to: 0
 17922                           ;incstack = 0
 17923  00738E  D044               	goto	l4868
 17924  007390                     l4858:
 17925  007390  FFFF               	dw	65535	; assembler added errata NOP
 17926  007392  C086  FFD9         	movff	strncmp@s1,fsr2l
 17927  007396  C087  FFDA         	movff	strncmp@s1+1,fsr2h
 17928  00739A  50DF               	movf	indf2,w,c
 17929  00739C  B4D8               	btfsc	status,2,c
 17930  00739E  D012               	goto	l4862
 17931  0073A0  C086  FFD9         	movff	strncmp@s1,fsr2l
 17932  0073A4  C087  FFDA         	movff	strncmp@s1+1,fsr2h
 17933  0073A8  50DF               	movf	indf2,w,c
 17934  0073AA  0100               	movlb	0	; () banked
 17935  0073AC  6F8C               	movwf	??_strncmp& (0+255),b
 17936  0073AE  C088  FFF6         	movff	strncmp@s2,tblptrl
 17937  0073B2  C089  FFF7         	movff	strncmp@s2+1,tblptrh
 17938  0073B6                     	if	0	;tblptru may be non-zero
 17939  0073B6                     	endif
 17940  0073B6                     	if	0	;tblptru may be non-zero
 17941  0073B6                     	endif
 17942  0073B6  0008               	tblrd		*
 17943  0073B8  FFFF               	dw	65535	; errata NOP
 17944  0073BA  50F5               	movf	tablat,w,c
 17945  0073BC  0100               	movlb	0	; () banked
 17946  0073BE  198C               	xorwf	??_strncmp& (0+255),w,b
 17947  0073C0  B4D8               	btfsc	status,2,c
 17948  0073C2  D023               	goto	l4866
 17949  0073C4                     l4862:
 17950  0073C4  FFFF               	dw	65535	; assembler added errata NOP
 17951  0073C6  C088  FFF6         	movff	strncmp@s2,tblptrl
 17952  0073CA  C089  FFF7         	movff	strncmp@s2+1,tblptrh
 17953  0073CE                     	if	0	;tblptru may be non-zero
 17954  0073CE                     	endif
 17955  0073CE                     	if	0	;tblptru may be non-zero
 17956  0073CE                     	endif
 17957  0073CE  0008               	tblrd		*
 17958  0073D0  FFFF               	dw	65535	; errata NOP
 17959  0073D2  50F5               	movf	tablat,w,c
 17960  0073D4  0100               	movlb	0	; () banked
 17961  0073D6  6F8C               	movwf	??_strncmp& (0+255),b
 17962  0073D8  6B8D               	clrf	(??_strncmp+1)& (0+255),b
 17963  0073DA  0100               	movlb	0	; () banked
 17964  0073DC  1F8C               	comf	??_strncmp& (0+255),f,b
 17965  0073DE  1F8D               	comf	(??_strncmp+1)& (0+255),f,b
 17966  0073E0  4B8C               	infsnz	??_strncmp& (0+255),f,b
 17967  0073E2  2B8D               	incf	(??_strncmp+1)& (0+255),f,b
 17968  0073E4  C086  FFD9         	movff	strncmp@s1,fsr2l
 17969  0073E8  C087  FFDA         	movff	strncmp@s1+1,fsr2h
 17970  0073EC  50DF               	movf	indf2,w,c
 17971  0073EE  0100               	movlb	0	; () banked
 17972  0073F0  6F8E               	movwf	(??_strncmp+2)& (0+255),b
 17973  0073F2  0100               	movlb	0	; () banked
 17974  0073F4  518E               	movf	(??_strncmp+2)& (0+255),w,b
 17975  0073F6  0100               	movlb	0	; () banked
 17976  0073F8  258C               	addwf	??_strncmp& (0+255),w,b
 17977  0073FA  0100               	movlb	0	; () banked
 17978  0073FC  6F86               	movwf	?_strncmp& (0+255),b
 17979  0073FE  0E00               	movlw	0
 17980  007400  0100               	movlb	0	; () banked
 17981  007402  218D               	addwfc	(??_strncmp+1)& (0+255),w,b
 17982  007404  0100               	movlb	0	; () banked
 17983  007406  6F87               	movwf	(?_strncmp+1)& (0+255),b
 17984                           
 17985                           ; BSR set to: 0
 17986  007408  D018               	goto	l1727
 17987  00740A                     l4866:
 17988  00740A  FFFF               	dw	65535	; assembler added errata NOP
 17989                           
 17990                           ; BSR set to: 0
 17991  00740C  0100               	movlb	0	; () banked
 17992  00740E  4B86               	infsnz	strncmp@s1& (0+255),f,b
 17993  007410  2B87               	incf	(strncmp@s1+1)& (0+255),f,b
 17994  007412  0100               	movlb	0	; () banked
 17995  007414  4B88               	infsnz	strncmp@s2& (0+255),f,b
 17996  007416  2B89               	incf	(strncmp@s2+1)& (0+255),f,b
 17997  007418                     l4868:
 17998  007418  FFFF               	dw	65535	; assembler added errata NOP
 17999  00741A  0100               	movlb	0	; () banked
 18000  00741C  078A               	decf	strncmp@len& (0+255),f,b
 18001  00741E  A0D8               	btfss	status,0,c
 18002  007420  078B               	decf	(strncmp@len+1)& (0+255),f,b
 18003  007422  0100               	movlb	0	; () banked
 18004  007424  298A               	incf	strncmp@len& (0+255),w,b
 18005  007426  E1B4               	bnz	l4858
 18006  007428  0100               	movlb	0	; () banked
 18007  00742A  298B               	incf	(strncmp@len+1)& (0+255),w,b
 18008  00742C  A4D8               	btfss	status,2,c
 18009  00742E  D7B0               	goto	l4858
 18010                           
 18011                           ; BSR set to: 0
 18012                           
 18013                           ; BSR set to: 0
 18014  007430  0E00               	movlw	0
 18015  007432  0100               	movlb	0	; () banked
 18016  007434  6F87               	movwf	(?_strncmp+1)& (0+255),b
 18017  007436  0E00               	movlw	0
 18018  007438  6F86               	movwf	?_strncmp& (0+255),b
 18019  00743A                     l1727:
 18020  00743A  FFFF               	dw	65535	; assembler added errata NOP
 18021                           
 18022                           ; BSR set to: 0
 18023  00743C  0012               	return		;funcret
 18024  00743E  FFFF               	dw	65535	; errata NOP
 18025  007440                     __end_of_strncmp:
 18026                           	opt stack 0
 18027                           tosu	equ	0xFFF
 18028                           tosh	equ	0xFFE
 18029                           tosl	equ	0xFFD
 18030                           pclath	equ	0xFFA
 18031                           tblptru	equ	0xFF8
 18032                           tblptrh	equ	0xFF7
 18033                           tblptrl	equ	0xFF6
 18034                           tablat	equ	0xFF5
 18035                           prodh	equ	0xFF4
 18036                           prodl	equ	0xFF3
 18037                           intcon	equ	0xFF2
 18038                           indf0	equ	0xFEF
 18039                           postinc0	equ	0xFEE
 18040                           fsr0h	equ	0xFEA
 18041                           fsr0l	equ	0xFE9
 18042                           wreg	equ	0xFE8
 18043                           postdec1	equ	0xFE5
 18044                           fsr1l	equ	0xFE1
 18045                           indf2	equ	0xFDF
 18046                           postinc2	equ	0xFDE
 18047                           postdec2	equ	0xFDD
 18048                           fsr2h	equ	0xFDA
 18049                           fsr2l	equ	0xFD9
 18050                           status	equ	0xFD8
 18051                           
 18052 ;; *************** function _strlen *****************
 18053 ;; Defined at:
 18054 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
 18055 ;; Parameters:    Size  Location     Type
 18056 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 18057 ;;		 -> STR_34(3), STR_32(7), STR_31(6), STR_30(3), 
 18058 ;;		 -> STR_18(3), STR_16(6), STR_15(7), STR_14(3), 
 18059 ;;		 -> STR_9(3), STR_7(7), STR_6(7), STR_5(3), 
 18060 ;;		 -> NULL(0), bufferSerial(60), 
 18061 ;; Auto vars:     Size  Location     Type
 18062 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 18063 ;;		 -> STR_34(3), STR_32(7), STR_31(6), STR_30(3), 
 18064 ;;		 -> STR_18(3), STR_16(6), STR_15(7), STR_14(3), 
 18065 ;;		 -> STR_9(3), STR_7(7), STR_6(7), STR_5(3), 
 18066 ;;		 -> NULL(0), bufferSerial(60), 
 18067 ;; Return value:  Size  Location     Type
 18068 ;;                  2    0[BANK0 ] unsigned int 
 18069 ;; Registers used:
 18070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 18071 ;; Tracked objects:
 18072 ;;		On entry : 0/0
 18073 ;;		On exit  : 0/0
 18074 ;;		Unchanged: 0/0
 18075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18076 ;;      Params:         0       2       0       0       0       0       0
 18077 ;;      Locals:         0       2       0       0       0       0       0
 18078 ;;      Temps:          0       2       0       0       0       0       0
 18079 ;;      Totals:         0       6       0       0       0       0       0
 18080 ;;Total ram usage:        6 bytes
 18081 ;; Hardware stack levels used:    1
 18082 ;; Hardware stack levels required when called:    6
 18083 ;; This function calls:
 18084 ;;		Nothing
 18085 ;; This function is called by:
 18086 ;;		_getSerial
 18087 ;;		_strstr
 18088 ;; This function uses a non-reentrant model
 18089 ;;
 18090                           
 18091                           	psect	text59
 18092  006DB6                     __ptext59:
 18093                           	opt stack 0
 18094  006DB6                     _strlen:
 18095                           	opt stack 0
 18096  006DB6  FFFF               	dw	65535	; assembler added errata NOP
 18097                           
 18098                           ; BSR set to: 0
 18099                           ;incstack = 0
 18100  006DB8  C080  F084         	movff	strlen@s,strlen@cp
 18101  006DBC  C081  F085         	movff	strlen@s+1,strlen@cp+1
 18102  006DC0  D004               	goto	l4790
 18103  006DC2                     l4788:
 18104  006DC2  FFFF               	dw	65535	; assembler added errata NOP
 18105  006DC4  0100               	movlb	0	; () banked
 18106  006DC6  4B84               	infsnz	strlen@cp& (0+255),f,b
 18107  006DC8  2B85               	incf	(strlen@cp+1)& (0+255),f,b
 18108  006DCA                     l4790:
 18109  006DCA  FFFF               	dw	65535	; assembler added errata NOP
 18110  006DCC  C084  FFF6         	movff	strlen@cp,tblptrl
 18111  006DD0  C085  FFF7         	movff	strlen@cp+1,tblptrh
 18112  006DD4  6AF8               	clrf	tblptru,c
 18113  006DD6  0E05               	movlw	(high __ramtop+-1)
 18114  006DD8  64F7               	cpfsgt	tblptrh,c
 18115  006DDA  D004               	bra	u4447
 18116  006DDC  0008               	tblrd		*
 18117  006DDE  FFFF               	dw	65535	; errata NOP
 18118  006DE0  50F5               	movf	tablat,w,c
 18119  006DE2  D005               	bra	u4440
 18120  006DE4                     u4447:
 18121  006DE4  CFF6 FFE9          	movff	tblptrl,fsr0l
 18122  006DE8  CFF7 FFEA          	movff	tblptrh,fsr0h
 18123  006DEC  50EF               	movf	indf0,w,c
 18124  006DEE                     u4440:
 18125  006DEE  0900               	iorlw	0
 18126  006DF0  A4D8               	btfss	status,2,c
 18127  006DF2  D7E7               	goto	l4788
 18128  006DF4  C080  F082         	movff	strlen@s,??_strlen
 18129  006DF8  C081  F083         	movff	strlen@s+1,??_strlen+1
 18130  006DFC  0100               	movlb	0	; () banked
 18131  006DFE  1F82               	comf	??_strlen& (0+255),f,b
 18132  006E00  1F83               	comf	(??_strlen+1)& (0+255),f,b
 18133  006E02  4B82               	infsnz	??_strlen& (0+255),f,b
 18134  006E04  2B83               	incf	(??_strlen+1)& (0+255),f,b
 18135  006E06  0100               	movlb	0	; () banked
 18136  006E08  5184               	movf	strlen@cp& (0+255),w,b
 18137  006E0A  0100               	movlb	0	; () banked
 18138  006E0C  2582               	addwf	??_strlen& (0+255),w,b
 18139  006E0E  0100               	movlb	0	; () banked
 18140  006E10  6F80               	movwf	?_strlen& (0+255),b
 18141  006E12  0100               	movlb	0	; () banked
 18142  006E14  5185               	movf	(strlen@cp+1)& (0+255),w,b
 18143  006E16  0100               	movlb	0	; () banked
 18144  006E18  2183               	addwfc	(??_strlen+1)& (0+255),w,b
 18145  006E1A  0100               	movlb	0	; () banked
 18146  006E1C  6F81               	movwf	(?_strlen+1)& (0+255),b
 18147                           
 18148                           ; BSR set to: 0
 18149                           
 18150                           ; BSR set to: 0
 18151  006E1E  0012               	return		;funcret
 18152  006E20  FFFF               	dw	65535	; errata NOP
 18153  006E22                     __end_of_strlen:
 18154                           	opt stack 0
 18155                           tosu	equ	0xFFF
 18156                           tosh	equ	0xFFE
 18157                           tosl	equ	0xFFD
 18158                           pclath	equ	0xFFA
 18159                           tblptru	equ	0xFF8
 18160                           tblptrh	equ	0xFF7
 18161                           tblptrl	equ	0xFF6
 18162                           tablat	equ	0xFF5
 18163                           prodh	equ	0xFF4
 18164                           prodl	equ	0xFF3
 18165                           intcon	equ	0xFF2
 18166                           indf0	equ	0xFEF
 18167                           postinc0	equ	0xFEE
 18168                           fsr0h	equ	0xFEA
 18169                           fsr0l	equ	0xFE9
 18170                           wreg	equ	0xFE8
 18171                           postdec1	equ	0xFE5
 18172                           fsr1l	equ	0xFE1
 18173                           indf2	equ	0xFDF
 18174                           postinc2	equ	0xFDE
 18175                           postdec2	equ	0xFDD
 18176                           fsr2h	equ	0xFDA
 18177                           fsr2l	equ	0xFD9
 18178                           status	equ	0xFD8
 18179                           
 18180 ;; *************** function _strchr *****************
 18181 ;; Defined at:
 18182 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strchr.c"
 18183 ;; Parameters:    Size  Location     Type
 18184 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 18185 ;;		 -> NULL(0), bufferSerial(60), 
 18186 ;;  chr             2    2[BANK0 ] int 
 18187 ;; Auto vars:     Size  Location     Type
 18188 ;;		None
 18189 ;; Return value:  Size  Location     Type
 18190 ;;                  2    0[BANK0 ] PTR unsigned char 
 18191 ;; Registers used:
 18192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18193 ;; Tracked objects:
 18194 ;;		On entry : 0/0
 18195 ;;		On exit  : 0/0
 18196 ;;		Unchanged: 0/0
 18197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18198 ;;      Params:         0       4       0       0       0       0       0
 18199 ;;      Locals:         0       0       0       0       0       0       0
 18200 ;;      Temps:          0       1       0       0       0       0       0
 18201 ;;      Totals:         0       5       0       0       0       0       0
 18202 ;;Total ram usage:        5 bytes
 18203 ;; Hardware stack levels used:    1
 18204 ;; Hardware stack levels required when called:    6
 18205 ;; This function calls:
 18206 ;;		Nothing
 18207 ;; This function is called by:
 18208 ;;		_strstr
 18209 ;; This function uses a non-reentrant model
 18210 ;;
 18211                           
 18212                           	psect	text60
 18213  0069E4                     __ptext60:
 18214                           	opt stack 0
 18215  0069E4                     _strchr:
 18216                           	opt stack 0
 18217  0069E4  FFFF               	dw	65535	; assembler added errata NOP
 18218  0069E6  FFFF               	dw	65535	; assembler added errata NOP
 18219  0069E8  C080  FFD9         	movff	strchr@ptr,fsr2l
 18220  0069EC  C081  FFDA         	movff	strchr@ptr+1,fsr2h
 18221  0069F0  0100               	movlb	0	; () banked
 18222  0069F2  5182               	movf	strchr@chr& (0+255),w,b
 18223  0069F4  18DE               	xorwf	postinc2,w,c
 18224  0069F6  A4D8               	btfss	status,2,c
 18225  0069F8  D005               	goto	l4880
 18226                           
 18227                           ; BSR set to: 0
 18228  0069FA  C080  F080         	movff	strchr@ptr,?_strchr
 18229  0069FE  C081  F081         	movff	strchr@ptr+1,?_strchr+1
 18230                           
 18231                           ; BSR set to: 0
 18232  006A02  D011               	goto	l1718
 18233  006A04                     l4880:
 18234  006A04  FFFF               	dw	65535	; assembler added errata NOP
 18235                           
 18236                           ; BSR set to: 0
 18237  006A06  C080  FFD9         	movff	strchr@ptr,fsr2l
 18238  006A0A  C081  FFDA         	movff	strchr@ptr+1,fsr2h
 18239  006A0E  0100               	movlb	0	; () banked
 18240  006A10  4B80               	infsnz	strchr@ptr& (0+255),f,b
 18241  006A12  2B81               	incf	(strchr@ptr+1)& (0+255),f,b
 18242  006A14  50DF               	movf	indf2,w,c
 18243  006A16  A4D8               	btfss	status,2,c
 18244  006A18  D7E6               	goto	l4874
 18245                           
 18246                           ; BSR set to: 0
 18247                           
 18248                           ; BSR set to: 0
 18249  006A1A  0E00               	movlw	0
 18250  006A1C  0100               	movlb	0	; () banked
 18251  006A1E  6F80               	movwf	?_strchr& (0+255),b
 18252  006A20  0E00               	movlw	0
 18253  006A22  0100               	movlb	0	; () banked
 18254  006A24  6F81               	movwf	(?_strchr+1)& (0+255),b
 18255  006A26                     l1718:
 18256  006A26  FFFF               	dw	65535	; assembler added errata NOP
 18257                           
 18258                           ; BSR set to: 0
 18259  006A28  0012               	return		;funcret
 18260  006A2A  FFFF               	dw	65535	; errata NOP
 18261  006A2C                     __end_of_strchr:
 18262                           	opt stack 0
 18263                           tosu	equ	0xFFF
 18264                           tosh	equ	0xFFE
 18265                           tosl	equ	0xFFD
 18266                           pclath	equ	0xFFA
 18267                           tblptru	equ	0xFF8
 18268                           tblptrh	equ	0xFF7
 18269                           tblptrl	equ	0xFF6
 18270                           tablat	equ	0xFF5
 18271                           prodh	equ	0xFF4
 18272                           prodl	equ	0xFF3
 18273                           intcon	equ	0xFF2
 18274                           indf0	equ	0xFEF
 18275                           postinc0	equ	0xFEE
 18276                           fsr0h	equ	0xFEA
 18277                           fsr0l	equ	0xFE9
 18278                           wreg	equ	0xFE8
 18279                           postdec1	equ	0xFE5
 18280                           fsr1l	equ	0xFE1
 18281                           indf2	equ	0xFDF
 18282                           postinc2	equ	0xFDE
 18283                           postdec2	equ	0xFDD
 18284                           fsr2h	equ	0xFDA
 18285                           fsr2l	equ	0xFD9
 18286                           status	equ	0xFD8
 18287                           
 18288 ;; *************** function _delay *****************
 18289 ;; Defined at:
 18290 ;;		line 16 in file "function.c"
 18291 ;; Parameters:    Size  Location     Type
 18292 ;;  x               2    0[BANK0 ] int 
 18293 ;; Auto vars:     Size  Location     Type
 18294 ;;		None
 18295 ;; Return value:  Size  Location     Type
 18296 ;;                  1    wreg      void 
 18297 ;; Registers used:
 18298 ;;		wreg, status,2, status,0
 18299 ;; Tracked objects:
 18300 ;;		On entry : 0/0
 18301 ;;		On exit  : 0/0
 18302 ;;		Unchanged: 0/0
 18303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18304 ;;      Params:         0       2       0       0       0       0       0
 18305 ;;      Locals:         0       0       0       0       0       0       0
 18306 ;;      Temps:          0       1       0       0       0       0       0
 18307 ;;      Totals:         0       3       0       0       0       0       0
 18308 ;;Total ram usage:        3 bytes
 18309 ;; Hardware stack levels used:    1
 18310 ;; Hardware stack levels required when called:    6
 18311 ;; This function calls:
 18312 ;;		Nothing
 18313 ;; This function is called by:
 18314 ;;		_aguardaBuffer
 18315 ;;		_limparBuffer
 18316 ;;		_getSinalSIM800L
 18317 ;;		_comunicarTeste
 18318 ;;		_enviaSMS
 18319 ;;		_writeEEPROM_ext
 18320 ;;		_partidaBombaEstacionaria
 18321 ;;		_main
 18322 ;; This function uses a non-reentrant model
 18323 ;;
 18324                           
 18325                           	psect	text61
 18326  0066B6                     __ptext61:
 18327                           	opt stack 0
 18328  0066B6                     _delay:
 18329                           	opt stack 0
 18330  0066B6  FFFF               	dw	65535	; assembler added errata NOP
 18331                           
 18332                           ;function.c: 17: while (x--) {
 18333                           
 18334                           ; BSR set to: 0
 18335                           ;incstack = 0
 18336  0066B8  D00C               	goto	l4912
 18337  0066BA                     l4910:
 18338  0066BA  FFFF               	dw	65535	; assembler added errata NOP
 18339                           
 18340                           ;function.c: 18: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 18341  0066BC  0E02               	movlw	2
 18342  0066BE  0100               	movlb	0	; () banked
 18343  0066C0  6F82               	movwf	??_delay& (0+255),b
 18344  0066C2  0EF2               	movlw	242
 18345  0066C4                     u12207:
 18346  0066C4  FFFF               	dw	65535	; errata NOP
 18347  0066C6  2EE8               	decfsz	wreg,f,c
 18348  0066C8  D7FD               	bra	u12207
 18349  0066CA  2F82               	decfsz	??_delay& (0+255),f,b
 18350  0066CC  D7FB               	bra	u12207
 18351  0066CE  F000               	nop	
 18352  0066D0  0004               	clrwdt		;# 
 18353  0066D2                     l4912:
 18354  0066D2  FFFF               	dw	65535	; assembler added errata NOP
 18355  0066D4  0100               	movlb	0	; () banked
 18356  0066D6  0780               	decf	delay@x& (0+255),f,b
 18357  0066D8  A0D8               	btfss	status,0,c
 18358  0066DA  0781               	decf	(delay@x+1)& (0+255),f,b
 18359  0066DC  0100               	movlb	0	; () banked
 18360  0066DE  2980               	incf	delay@x& (0+255),w,b
 18361  0066E0  E1EC               	bnz	l4910
 18362  0066E2  0100               	movlb	0	; () banked
 18363  0066E4  2981               	incf	(delay@x+1)& (0+255),w,b
 18364  0066E6  B4D8               	btfsc	status,2,c
 18365                           
 18366                           ; BSR set to: 0
 18367                           
 18368                           ; BSR set to: 0
 18369  0066E8  0012               	return		;funcret
 18370  0066EA  FFFF               	dw	65535	; assembler added errata NOP
 18371  0066EC  D7E6               	goto	l4910
 18372  0066EE  FFFF               	dw	65535	; errata NOP
 18373  0066F0                     __end_of_delay:
 18374                           	opt stack 0
 18375                           tosu	equ	0xFFF
 18376                           tosh	equ	0xFFE
 18377                           tosl	equ	0xFFD
 18378                           pclath	equ	0xFFA
 18379                           tblptru	equ	0xFF8
 18380                           tblptrh	equ	0xFF7
 18381                           tblptrl	equ	0xFF6
 18382                           tablat	equ	0xFF5
 18383                           prodh	equ	0xFF4
 18384                           prodl	equ	0xFF3
 18385                           intcon	equ	0xFF2
 18386                           indf0	equ	0xFEF
 18387                           postinc0	equ	0xFEE
 18388                           fsr0h	equ	0xFEA
 18389                           fsr0l	equ	0xFE9
 18390                           wreg	equ	0xFE8
 18391                           postdec1	equ	0xFE5
 18392                           fsr1l	equ	0xFE1
 18393                           indf2	equ	0xFDF
 18394                           postinc2	equ	0xFDE
 18395                           postdec2	equ	0xFDD
 18396                           fsr2h	equ	0xFDA
 18397                           fsr2l	equ	0xFD9
 18398                           status	equ	0xFD8
 18399                           
 18400 ;; *************** function _RTC_Init *****************
 18401 ;; Defined at:
 18402 ;;		line 98 in file "ds1307.h"
 18403 ;; Parameters:    Size  Location     Type
 18404 ;;		None
 18405 ;; Auto vars:     Size  Location     Type
 18406 ;;		None
 18407 ;; Return value:  Size  Location     Type
 18408 ;;                  1    wreg      void 
 18409 ;; Registers used:
 18410 ;;		wreg, status,2, status,0, cstack
 18411 ;; Tracked objects:
 18412 ;;		On entry : 0/0
 18413 ;;		On exit  : 0/0
 18414 ;;		Unchanged: 0/0
 18415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18416 ;;      Params:         0       0       0       0       0       0       0
 18417 ;;      Locals:         0       0       0       0       0       0       0
 18418 ;;      Temps:          0       0       0       0       0       0       0
 18419 ;;      Totals:         0       0       0       0       0       0       0
 18420 ;;Total ram usage:        0 bytes
 18421 ;; Hardware stack levels used:    1
 18422 ;; Hardware stack levels required when called:    8
 18423 ;; This function calls:
 18424 ;;		_I2C_Start
 18425 ;;		_I2C_Stop
 18426 ;;		_I2C_Write
 18427 ;; This function is called by:
 18428 ;;		_main
 18429 ;; This function uses a non-reentrant model
 18430 ;;
 18431                           
 18432                           	psect	text62
 18433  00667E                     __ptext62:
 18434                           	opt stack 0
 18435  00667E                     _RTC_Init:
 18436                           	opt stack 0
 18437  00667E  FFFF               	dw	65535	; assembler added errata NOP
 18438                           
 18439                           ;ds1307.h: 100: I2C_Start();
 18440                           
 18441                           ; BSR set to: 0
 18442                           ;incstack = 0
 18443  006680  EC1C  F032         	call	_I2C_Start	;wreg free
 18444                           
 18445                           ;ds1307.h: 101: I2C_Write(0xD0);
 18446  006684  0E00               	movlw	0
 18447  006686  0100               	movlb	0	; () banked
 18448  006688  6F8B               	movwf	(I2C_Write@d+1)& (0+255),b
 18449  00668A  0ED0               	movlw	208
 18450  00668C  6F8A               	movwf	I2C_Write@d& (0+255),b
 18451  00668E  EC35  F032         	call	_I2C_Write	;wreg free
 18452                           
 18453                           ;ds1307.h: 102: I2C_Write(0x07);
 18454  006692  0E00               	movlw	0
 18455  006694  0100               	movlb	0	; () banked
 18456  006696  6F8B               	movwf	(I2C_Write@d+1)& (0+255),b
 18457  006698  0E07               	movlw	7
 18458  00669A  6F8A               	movwf	I2C_Write@d& (0+255),b
 18459  00669C  EC35  F032         	call	_I2C_Write	;wreg free
 18460                           
 18461                           ;ds1307.h: 103: I2C_Write(0x00);
 18462  0066A0  0E00               	movlw	0
 18463  0066A2  0100               	movlb	0	; () banked
 18464  0066A4  6F8B               	movwf	(I2C_Write@d+1)& (0+255),b
 18465  0066A6  0E00               	movlw	0
 18466  0066A8  6F8A               	movwf	I2C_Write@d& (0+255),b
 18467  0066AA  EC35  F032         	call	_I2C_Write	;wreg free
 18468                           
 18469                           ;ds1307.h: 104: I2C_Stop();
 18470  0066AE  EC22  F032         	call	_I2C_Stop	;wreg free
 18471  0066B2  0012               	return		;funcret
 18472  0066B4  FFFF               	dw	65535	; errata NOP
 18473  0066B6                     __end_of_RTC_Init:
 18474                           	opt stack 0
 18475                           tosu	equ	0xFFF
 18476                           tosh	equ	0xFFE
 18477                           tosl	equ	0xFFD
 18478                           pclath	equ	0xFFA
 18479                           tblptru	equ	0xFF8
 18480                           tblptrh	equ	0xFF7
 18481                           tblptrl	equ	0xFF6
 18482                           tablat	equ	0xFF5
 18483                           prodh	equ	0xFF4
 18484                           prodl	equ	0xFF3
 18485                           intcon	equ	0xFF2
 18486                           indf0	equ	0xFEF
 18487                           postinc0	equ	0xFEE
 18488                           fsr0h	equ	0xFEA
 18489                           fsr0l	equ	0xFE9
 18490                           wreg	equ	0xFE8
 18491                           postdec1	equ	0xFE5
 18492                           fsr1l	equ	0xFE1
 18493                           indf2	equ	0xFDF
 18494                           postinc2	equ	0xFDE
 18495                           postdec2	equ	0xFDD
 18496                           fsr2h	equ	0xFDA
 18497                           fsr2l	equ	0xFD9
 18498                           status	equ	0xFD8
 18499                           
 18500 ;; *************** function _I2C_Write *****************
 18501 ;; Defined at:
 18502 ;;		line 42 in file "I2C.c"
 18503 ;; Parameters:    Size  Location     Type
 18504 ;;  d               2   10[BANK0 ] unsigned int 
 18505 ;; Auto vars:     Size  Location     Type
 18506 ;;		None
 18507 ;; Return value:  Size  Location     Type
 18508 ;;                  1    wreg      void 
 18509 ;; Registers used:
 18510 ;;		wreg, status,2, status,0, cstack
 18511 ;; Tracked objects:
 18512 ;;		On entry : 0/0
 18513 ;;		On exit  : 0/0
 18514 ;;		Unchanged: 0/0
 18515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18516 ;;      Params:         0       2       0       0       0       0       0
 18517 ;;      Locals:         0       0       0       0       0       0       0
 18518 ;;      Temps:          0       0       0       0       0       0       0
 18519 ;;      Totals:         0       2       0       0       0       0       0
 18520 ;;Total ram usage:        2 bytes
 18521 ;; Hardware stack levels used:    1
 18522 ;; Hardware stack levels required when called:    7
 18523 ;; This function calls:
 18524 ;;		_I2C_Wait
 18525 ;; This function is called by:
 18526 ;;		_setDS1307TimeDate
 18527 ;;		_getDS1307TimeDate
 18528 ;;		_RTC_Init
 18529 ;;		_writeEEPROM_ext
 18530 ;;		_readEEPROM_ext
 18531 ;;		_getDS1307Time
 18532 ;;		_setDS1307Time
 18533 ;; This function uses a non-reentrant model
 18534 ;;
 18535                           
 18536                           	psect	text63
 18537  00646A                     __ptext63:
 18538                           	opt stack 0
 18539  00646A                     _I2C_Write:
 18540                           	opt stack 0
 18541  00646A  FFFF               	dw	65535	; assembler added errata NOP
 18542                           
 18543                           ;I2C.c: 43: I2C_Wait();
 18544                           
 18545                           ;incstack = 0
 18546  00646C  EC6F  F032         	call	_I2C_Wait	;wreg free
 18547                           
 18548                           ;I2C.c: 44: SSPBUF = d;
 18549  006470  C08A  FFC9         	movff	I2C_Write@d,4041	;volatile
 18550  006474  0012               	return		;funcret
 18551  006476  FFFF               	dw	65535	; errata NOP
 18552  006478                     __end_of_I2C_Write:
 18553                           	opt stack 0
 18554                           tosu	equ	0xFFF
 18555                           tosh	equ	0xFFE
 18556                           tosl	equ	0xFFD
 18557                           pclath	equ	0xFFA
 18558                           tblptru	equ	0xFF8
 18559                           tblptrh	equ	0xFF7
 18560                           tblptrl	equ	0xFF6
 18561                           tablat	equ	0xFF5
 18562                           prodh	equ	0xFF4
 18563                           prodl	equ	0xFF3
 18564                           intcon	equ	0xFF2
 18565                           indf0	equ	0xFEF
 18566                           postinc0	equ	0xFEE
 18567                           fsr0h	equ	0xFEA
 18568                           fsr0l	equ	0xFE9
 18569                           wreg	equ	0xFE8
 18570                           postdec1	equ	0xFE5
 18571                           fsr1l	equ	0xFE1
 18572                           indf2	equ	0xFDF
 18573                           postinc2	equ	0xFDE
 18574                           postdec2	equ	0xFDD
 18575                           fsr2h	equ	0xFDA
 18576                           fsr2l	equ	0xFD9
 18577                           status	equ	0xFD8
 18578                           
 18579 ;; *************** function _I2C_Stop *****************
 18580 ;; Defined at:
 18581 ;;		line 36 in file "I2C.c"
 18582 ;; Parameters:    Size  Location     Type
 18583 ;;		None
 18584 ;; Auto vars:     Size  Location     Type
 18585 ;;		None
 18586 ;; Return value:  Size  Location     Type
 18587 ;;                  1    wreg      void 
 18588 ;; Registers used:
 18589 ;;		wreg, status,2, status,0, cstack
 18590 ;; Tracked objects:
 18591 ;;		On entry : 0/0
 18592 ;;		On exit  : 0/0
 18593 ;;		Unchanged: 0/0
 18594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18595 ;;      Params:         0       0       0       0       0       0       0
 18596 ;;      Locals:         0       0       0       0       0       0       0
 18597 ;;      Temps:          0       0       0       0       0       0       0
 18598 ;;      Totals:         0       0       0       0       0       0       0
 18599 ;;Total ram usage:        0 bytes
 18600 ;; Hardware stack levels used:    1
 18601 ;; Hardware stack levels required when called:    7
 18602 ;; This function calls:
 18603 ;;		_I2C_Wait
 18604 ;; This function is called by:
 18605 ;;		_setDS1307TimeDate
 18606 ;;		_getDS1307TimeDate
 18607 ;;		_RTC_Init
 18608 ;;		_writeEEPROM_ext
 18609 ;;		_readEEPROM_ext
 18610 ;;		_getDS1307Time
 18611 ;;		_setDS1307Time
 18612 ;; This function uses a non-reentrant model
 18613 ;;
 18614                           
 18615                           	psect	text64
 18616  006444                     __ptext64:
 18617                           	opt stack 0
 18618  006444                     _I2C_Stop:
 18619                           	opt stack 0
 18620  006444  FFFF               	dw	65535	; assembler added errata NOP
 18621                           
 18622                           ;I2C.c: 37: I2C_Wait();
 18623                           
 18624                           ;incstack = 0
 18625  006446  EC6F  F032         	call	_I2C_Wait	;wreg free
 18626                           
 18627                           ;I2C.c: 38: PEN = 1;
 18628  00644A  84C5               	bsf	4037,2,c	;volatile
 18629  00644C  0012               	return		;funcret
 18630  00644E  FFFF               	dw	65535	; errata NOP
 18631  006450                     __end_of_I2C_Stop:
 18632                           	opt stack 0
 18633                           tosu	equ	0xFFF
 18634                           tosh	equ	0xFFE
 18635                           tosl	equ	0xFFD
 18636                           pclath	equ	0xFFA
 18637                           tblptru	equ	0xFF8
 18638                           tblptrh	equ	0xFF7
 18639                           tblptrl	equ	0xFF6
 18640                           tablat	equ	0xFF5
 18641                           prodh	equ	0xFF4
 18642                           prodl	equ	0xFF3
 18643                           intcon	equ	0xFF2
 18644                           indf0	equ	0xFEF
 18645                           postinc0	equ	0xFEE
 18646                           fsr0h	equ	0xFEA
 18647                           fsr0l	equ	0xFE9
 18648                           wreg	equ	0xFE8
 18649                           postdec1	equ	0xFE5
 18650                           fsr1l	equ	0xFE1
 18651                           indf2	equ	0xFDF
 18652                           postinc2	equ	0xFDE
 18653                           postdec2	equ	0xFDD
 18654                           fsr2h	equ	0xFDA
 18655                           fsr2l	equ	0xFD9
 18656                           status	equ	0xFD8
 18657                           
 18658 ;; *************** function _I2C_Start *****************
 18659 ;; Defined at:
 18660 ;;		line 26 in file "I2C.c"
 18661 ;; Parameters:    Size  Location     Type
 18662 ;;		None
 18663 ;; Auto vars:     Size  Location     Type
 18664 ;;		None
 18665 ;; Return value:  Size  Location     Type
 18666 ;;                  1    wreg      void 
 18667 ;; Registers used:
 18668 ;;		wreg, status,2, status,0, cstack
 18669 ;; Tracked objects:
 18670 ;;		On entry : 0/0
 18671 ;;		On exit  : 0/0
 18672 ;;		Unchanged: 0/0
 18673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18674 ;;      Params:         0       0       0       0       0       0       0
 18675 ;;      Locals:         0       0       0       0       0       0       0
 18676 ;;      Temps:          0       0       0       0       0       0       0
 18677 ;;      Totals:         0       0       0       0       0       0       0
 18678 ;;Total ram usage:        0 bytes
 18679 ;; Hardware stack levels used:    1
 18680 ;; Hardware stack levels required when called:    7
 18681 ;; This function calls:
 18682 ;;		_I2C_Wait
 18683 ;; This function is called by:
 18684 ;;		_setDS1307TimeDate
 18685 ;;		_getDS1307TimeDate
 18686 ;;		_RTC_Init
 18687 ;;		_writeEEPROM_ext
 18688 ;;		_readEEPROM_ext
 18689 ;;		_getDS1307Time
 18690 ;;		_setDS1307Time
 18691 ;; This function uses a non-reentrant model
 18692 ;;
 18693                           
 18694                           	psect	text65
 18695  006438                     __ptext65:
 18696                           	opt stack 0
 18697  006438                     _I2C_Start:
 18698                           	opt stack 0
 18699  006438  FFFF               	dw	65535	; assembler added errata NOP
 18700                           
 18701                           ;I2C.c: 27: I2C_Wait();
 18702                           
 18703                           ;incstack = 0
 18704  00643A  EC6F  F032         	call	_I2C_Wait	;wreg free
 18705                           
 18706                           ;I2C.c: 28: SEN = 1;
 18707  00643E  80C5               	bsf	4037,0,c	;volatile
 18708  006440  0012               	return		;funcret
 18709  006442  FFFF               	dw	65535	; errata NOP
 18710  006444                     __end_of_I2C_Start:
 18711                           	opt stack 0
 18712                           tosu	equ	0xFFF
 18713                           tosh	equ	0xFFE
 18714                           tosl	equ	0xFFD
 18715                           pclath	equ	0xFFA
 18716                           tblptru	equ	0xFF8
 18717                           tblptrh	equ	0xFF7
 18718                           tblptrl	equ	0xFF6
 18719                           tablat	equ	0xFF5
 18720                           prodh	equ	0xFF4
 18721                           prodl	equ	0xFF3
 18722                           intcon	equ	0xFF2
 18723                           indf0	equ	0xFEF
 18724                           postinc0	equ	0xFEE
 18725                           fsr0h	equ	0xFEA
 18726                           fsr0l	equ	0xFE9
 18727                           wreg	equ	0xFE8
 18728                           postdec1	equ	0xFE5
 18729                           fsr1l	equ	0xFE1
 18730                           indf2	equ	0xFDF
 18731                           postinc2	equ	0xFDE
 18732                           postdec2	equ	0xFDD
 18733                           fsr2h	equ	0xFDA
 18734                           fsr2l	equ	0xFD9
 18735                           status	equ	0xFD8
 18736                           
 18737 ;; *************** function _I2C_Wait *****************
 18738 ;; Defined at:
 18739 ;;		line 22 in file "I2C.c"
 18740 ;; Parameters:    Size  Location     Type
 18741 ;;		None
 18742 ;; Auto vars:     Size  Location     Type
 18743 ;;		None
 18744 ;; Return value:  Size  Location     Type
 18745 ;;                  1    wreg      void 
 18746 ;; Registers used:
 18747 ;;		wreg, status,2, status,0
 18748 ;; Tracked objects:
 18749 ;;		On entry : 0/0
 18750 ;;		On exit  : 0/0
 18751 ;;		Unchanged: 0/0
 18752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18753 ;;      Params:         0       0       0       0       0       0       0
 18754 ;;      Locals:         0       0       0       0       0       0       0
 18755 ;;      Temps:          0       1       0       0       0       0       0
 18756 ;;      Totals:         0       1       0       0       0       0       0
 18757 ;;Total ram usage:        1 bytes
 18758 ;; Hardware stack levels used:    1
 18759 ;; Hardware stack levels required when called:    6
 18760 ;; This function calls:
 18761 ;;		Nothing
 18762 ;; This function is called by:
 18763 ;;		_I2C_Start
 18764 ;;		_I2C_Restart
 18765 ;;		_I2C_Stop
 18766 ;;		_I2C_Write
 18767 ;;		_I2C_Read
 18768 ;; This function uses a non-reentrant model
 18769 ;;
 18770                           
 18771                           	psect	text66
 18772  0064DE                     __ptext66:
 18773                           	opt stack 0
 18774  0064DE                     _I2C_Wait:
 18775                           	opt stack 0
 18776  0064DE  FFFF               	dw	65535	; assembler added errata NOP
 18777  0064E0                     l957:
 18778  0064E0  FFFF               	dw	65535	; assembler added errata NOP
 18779  0064E2  B4C7               	btfsc	4039,2,c	;volatile
 18780  0064E4  D7FD               	goto	l957
 18781  0064E6  CFC5 F080          	movff	4037,??_I2C_Wait	;volatile
 18782  0064EA  0E1F               	movlw	31
 18783  0064EC  0100               	movlb	0	; () banked
 18784  0064EE  1780               	andwf	??_I2C_Wait& (0+255),f,b
 18785  0064F0  B4D8               	btfsc	status,2,c
 18786                           
 18787                           ; BSR set to: 0
 18788                           
 18789                           ; BSR set to: 0
 18790  0064F2  0012               	return		;funcret
 18791  0064F4  FFFF               	dw	65535	; assembler added errata NOP
 18792  0064F6  D7F4               	goto	l957
 18793  0064F8  FFFF               	dw	65535	; errata NOP
 18794  0064FA                     __end_of_I2C_Wait:
 18795                           	opt stack 0
 18796                           tosu	equ	0xFFF
 18797                           tosh	equ	0xFFE
 18798                           tosl	equ	0xFFD
 18799                           pclath	equ	0xFFA
 18800                           tblptru	equ	0xFF8
 18801                           tblptrh	equ	0xFF7
 18802                           tblptrl	equ	0xFF6
 18803                           tablat	equ	0xFF5
 18804                           prodh	equ	0xFF4
 18805                           prodl	equ	0xFF3
 18806                           intcon	equ	0xFF2
 18807                           indf0	equ	0xFEF
 18808                           postinc0	equ	0xFEE
 18809                           fsr0h	equ	0xFEA
 18810                           fsr0l	equ	0xFE9
 18811                           wreg	equ	0xFE8
 18812                           postdec1	equ	0xFE5
 18813                           fsr1l	equ	0xFE1
 18814                           indf2	equ	0xFDF
 18815                           postinc2	equ	0xFDE
 18816                           postdec2	equ	0xFDD
 18817                           fsr2h	equ	0xFDA
 18818                           fsr2l	equ	0xFD9
 18819                           status	equ	0xFD8
 18820                           
 18821 ;; *************** function _Lcd_Init *****************
 18822 ;; Defined at:
 18823 ;;		line 12 in file "lcd.h"
 18824 ;; Parameters:    Size  Location     Type
 18825 ;;		None
 18826 ;; Auto vars:     Size  Location     Type
 18827 ;;		None
 18828 ;; Return value:  Size  Location     Type
 18829 ;;                  1    wreg      void 
 18830 ;; Registers used:
 18831 ;;		wreg, status,2, cstack
 18832 ;; Tracked objects:
 18833 ;;		On entry : 0/0
 18834 ;;		On exit  : 0/0
 18835 ;;		Unchanged: 0/0
 18836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18837 ;;      Params:         0       0       0       0       0       0       0
 18838 ;;      Locals:         0       0       0       0       0       0       0
 18839 ;;      Temps:          0       1       0       0       0       0       0
 18840 ;;      Totals:         0       1       0       0       0       0       0
 18841 ;;Total ram usage:        1 bytes
 18842 ;; Hardware stack levels used:    1
 18843 ;; Hardware stack levels required when called:    8
 18844 ;; This function calls:
 18845 ;;		_Lcd_Cmd
 18846 ;;		_Lcd_Port
 18847 ;; This function is called by:
 18848 ;;		_main
 18849 ;; This function uses a non-reentrant model
 18850 ;;
 18851                           
 18852                           	psect	text67
 18853  007080                     __ptext67:
 18854                           	opt stack 0
 18855  007080                     _Lcd_Init:
 18856                           	opt stack 0
 18857  007080  FFFF               	dw	65535	; assembler added errata NOP
 18858                           
 18859                           ;lcd.h: 21: Lcd_Port(0x00);
 18860                           
 18861                           ; BSR set to: 0
 18862                           ;incstack = 0
 18863  007082  0E00               	movlw	0
 18864  007084  EC16  F035         	call	_Lcd_Port
 18865                           
 18866                           ;lcd.h: 22: _delay((unsigned long)((30)*(8000000/4000.0)));
 18867  007088  0E3B               	movlw	59
 18868  00708A  0100               	movlb	0	; () banked
 18869  00708C  6F83               	movwf	??_Lcd_Init& (0+255),b
 18870  00708E  0E79               	movlw	121
 18871  007090                     u12217:
 18872  007090  FFFF               	dw	65535	; errata NOP
 18873  007092  2EE8               	decfsz	wreg,f,c
 18874  007094  D7FD               	bra	u12217
 18875  007096  2F83               	decfsz	??_Lcd_Init& (0+255),f,b
 18876  007098  D7FB               	bra	u12217
 18877  00709A  D000               	nop2	
 18878  00709C  F000               	nop	
 18879                           
 18880                           ;lcd.h: 23: Lcd_Cmd(0x03);
 18881  00709E  0E03               	movlw	3
 18882  0070A0  ECC4  F032         	call	_Lcd_Cmd
 18883                           
 18884                           ;lcd.h: 24: _delay((unsigned long)((15)*(8000000/4000.0)));
 18885  0070A4  0E1E               	movlw	30
 18886  0070A6  0100               	movlb	0	; () banked
 18887  0070A8  6F83               	movwf	??_Lcd_Init& (0+255),b
 18888  0070AA  0E3C               	movlw	60
 18889  0070AC                     u12227:
 18890  0070AC  FFFF               	dw	65535	; errata NOP
 18891  0070AE  2EE8               	decfsz	wreg,f,c
 18892  0070B0  D7FD               	bra	u12227
 18893  0070B2  2F83               	decfsz	??_Lcd_Init& (0+255),f,b
 18894  0070B4  D7FB               	bra	u12227
 18895  0070B6  F000               	nop	
 18896                           
 18897                           ;lcd.h: 25: Lcd_Cmd(0x03);
 18898  0070B8  0E03               	movlw	3
 18899  0070BA  ECC4  F032         	call	_Lcd_Cmd
 18900                           
 18901                           ;lcd.h: 26: _delay((unsigned long)((20)*(8000000/4000.0)));
 18902  0070BE  0E27               	movlw	39
 18903  0070C0  0100               	movlb	0	; () banked
 18904  0070C2  6F83               	movwf	??_Lcd_Init& (0+255),b
 18905  0070C4  0EFB               	movlw	251
 18906  0070C6                     u12237:
 18907  0070C6  FFFF               	dw	65535	; errata NOP
 18908  0070C8  2EE8               	decfsz	wreg,f,c
 18909  0070CA  D7FD               	bra	u12237
 18910  0070CC  2F83               	decfsz	??_Lcd_Init& (0+255),f,b
 18911  0070CE  D7FB               	bra	u12237
 18912  0070D0  D000               	nop2	
 18913  0070D2  F000               	nop	
 18914                           
 18915                           ;lcd.h: 27: Lcd_Cmd(0x03);
 18916  0070D4  0E03               	movlw	3
 18917  0070D6  ECC4  F032         	call	_Lcd_Cmd
 18918                           
 18919                           ;lcd.h: 29: Lcd_Cmd(0x02);
 18920  0070DA  0E02               	movlw	2
 18921  0070DC  ECC4  F032         	call	_Lcd_Cmd
 18922                           
 18923                           ;lcd.h: 30: Lcd_Cmd(0x02);
 18924  0070E0  0E02               	movlw	2
 18925  0070E2  ECC4  F032         	call	_Lcd_Cmd
 18926                           
 18927                           ;lcd.h: 31: Lcd_Cmd(0x08);
 18928  0070E6  0E08               	movlw	8
 18929  0070E8  ECC4  F032         	call	_Lcd_Cmd
 18930                           
 18931                           ;lcd.h: 32: Lcd_Cmd(0x00);
 18932  0070EC  0E00               	movlw	0
 18933  0070EE  ECC4  F032         	call	_Lcd_Cmd
 18934                           
 18935                           ;lcd.h: 33: Lcd_Cmd(0x0C);
 18936  0070F2  0E0C               	movlw	12
 18937  0070F4  ECC4  F032         	call	_Lcd_Cmd
 18938                           
 18939                           ;lcd.h: 34: Lcd_Cmd(0x00);
 18940  0070F8  0E00               	movlw	0
 18941  0070FA  ECC4  F032         	call	_Lcd_Cmd
 18942                           
 18943                           ;lcd.h: 35: Lcd_Cmd(0x06);
 18944  0070FE  0E06               	movlw	6
 18945  007100  ECC4  F032         	call	_Lcd_Cmd
 18946  007104  0012               	return		;funcret
 18947  007106  FFFF               	dw	65535	; errata NOP
 18948  007108                     __end_of_Lcd_Init:
 18949                           	opt stack 0
 18950                           tosu	equ	0xFFF
 18951                           tosh	equ	0xFFE
 18952                           tosl	equ	0xFFD
 18953                           pclath	equ	0xFFA
 18954                           tblptru	equ	0xFF8
 18955                           tblptrh	equ	0xFF7
 18956                           tblptrl	equ	0xFF6
 18957                           tablat	equ	0xFF5
 18958                           prodh	equ	0xFF4
 18959                           prodl	equ	0xFF3
 18960                           intcon	equ	0xFF2
 18961                           indf0	equ	0xFEF
 18962                           postinc0	equ	0xFEE
 18963                           fsr0h	equ	0xFEA
 18964                           fsr0l	equ	0xFE9
 18965                           wreg	equ	0xFE8
 18966                           postdec1	equ	0xFE5
 18967                           fsr1l	equ	0xFE1
 18968                           indf2	equ	0xFDF
 18969                           postinc2	equ	0xFDE
 18970                           postdec2	equ	0xFDD
 18971                           fsr2h	equ	0xFDA
 18972                           fsr2l	equ	0xFD9
 18973                           status	equ	0xFD8
 18974                           
 18975 ;; *************** function _Lcd_Clear *****************
 18976 ;; Defined at:
 18977 ;;		line 68 in file "lcd.h"
 18978 ;; Parameters:    Size  Location     Type
 18979 ;;		None
 18980 ;; Auto vars:     Size  Location     Type
 18981 ;;		None
 18982 ;; Return value:  Size  Location     Type
 18983 ;;                  1    wreg      void 
 18984 ;; Registers used:
 18985 ;;		wreg, status,2, cstack
 18986 ;; Tracked objects:
 18987 ;;		On entry : 0/0
 18988 ;;		On exit  : 0/0
 18989 ;;		Unchanged: 0/0
 18990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18991 ;;      Params:         0       0       0       0       0       0       0
 18992 ;;      Locals:         0       0       0       0       0       0       0
 18993 ;;      Temps:          0       0       0       0       0       0       0
 18994 ;;      Totals:         0       0       0       0       0       0       0
 18995 ;;Total ram usage:        0 bytes
 18996 ;; Hardware stack levels used:    1
 18997 ;; Hardware stack levels required when called:    8
 18998 ;; This function calls:
 18999 ;;		_Lcd_Cmd
 19000 ;; This function is called by:
 19001 ;;		_main
 19002 ;; This function uses a non-reentrant model
 19003 ;;
 19004                           
 19005                           	psect	text68
 19006  006488                     __ptext68:
 19007                           	opt stack 0
 19008  006488                     _Lcd_Clear:
 19009                           	opt stack 0
 19010  006488  FFFF               	dw	65535	; assembler added errata NOP
 19011                           
 19012                           ;lcd.h: 69: Lcd_Cmd(0);
 19013                           
 19014                           ;incstack = 0
 19015  00648A  0E00               	movlw	0
 19016  00648C  ECC4  F032         	call	_Lcd_Cmd
 19017                           
 19018                           ;lcd.h: 70: Lcd_Cmd(1);
 19019  006490  0E01               	movlw	1
 19020  006492  ECC4  F032         	call	_Lcd_Cmd
 19021  006496  0012               	return		;funcret
 19022  006498  FFFF               	dw	65535	; errata NOP
 19023  00649A                     __end_of_Lcd_Clear:
 19024                           	opt stack 0
 19025                           tosu	equ	0xFFF
 19026                           tosh	equ	0xFFE
 19027                           tosl	equ	0xFFD
 19028                           pclath	equ	0xFFA
 19029                           tblptru	equ	0xFF8
 19030                           tblptrh	equ	0xFF7
 19031                           tblptrl	equ	0xFF6
 19032                           tablat	equ	0xFF5
 19033                           prodh	equ	0xFF4
 19034                           prodl	equ	0xFF3
 19035                           intcon	equ	0xFF2
 19036                           indf0	equ	0xFEF
 19037                           postinc0	equ	0xFEE
 19038                           fsr0h	equ	0xFEA
 19039                           fsr0l	equ	0xFE9
 19040                           wreg	equ	0xFE8
 19041                           postdec1	equ	0xFE5
 19042                           fsr1l	equ	0xFE1
 19043                           indf2	equ	0xFDF
 19044                           postinc2	equ	0xFDE
 19045                           postdec2	equ	0xFDD
 19046                           fsr2h	equ	0xFDA
 19047                           fsr2l	equ	0xFD9
 19048                           status	equ	0xFD8
 19049                           
 19050 ;; *************** function _Lcd_Cmd *****************
 19051 ;; Defined at:
 19052 ;;		line 60 in file "lcd.h"
 19053 ;; Parameters:    Size  Location     Type
 19054 ;;  a               1    wreg     unsigned char 
 19055 ;; Auto vars:     Size  Location     Type
 19056 ;;  a               1    2[BANK0 ] unsigned char 
 19057 ;; Return value:  Size  Location     Type
 19058 ;;                  1    wreg      void 
 19059 ;; Registers used:
 19060 ;;		wreg, status,2, cstack
 19061 ;; Tracked objects:
 19062 ;;		On entry : 0/0
 19063 ;;		On exit  : 0/0
 19064 ;;		Unchanged: 0/0
 19065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19066 ;;      Params:         0       0       0       0       0       0       0
 19067 ;;      Locals:         0       1       0       0       0       0       0
 19068 ;;      Temps:          0       1       0       0       0       0       0
 19069 ;;      Totals:         0       2       0       0       0       0       0
 19070 ;;Total ram usage:        2 bytes
 19071 ;; Hardware stack levels used:    1
 19072 ;; Hardware stack levels required when called:    7
 19073 ;; This function calls:
 19074 ;;		_Lcd_Port
 19075 ;; This function is called by:
 19076 ;;		_Lcd_Init
 19077 ;;		_Lcd_Clear
 19078 ;;		_Lcd_Set_Cursor
 19079 ;;		_criarCaracteresCGRAM
 19080 ;; This function uses a non-reentrant model
 19081 ;;
 19082                           
 19083                           	psect	text69
 19084  006588                     __ptext69:
 19085                           	opt stack 0
 19086  006588                     _Lcd_Cmd:
 19087                           	opt stack 0
 19088  006588  FFFF               	dw	65535	; assembler added errata NOP
 19089                           
 19090                           ;incstack = 0
 19091                           ;Lcd_Cmd@a stored from wreg
 19092  00658A  0100               	movlb	0	; () banked
 19093  00658C  6F82               	movwf	Lcd_Cmd@a& (0+255),b
 19094                           
 19095                           ;lcd.h: 61: PORTDbits.RD1 = 0;
 19096  00658E  9283               	bcf	3971,1,c	;volatile
 19097                           
 19098                           ;lcd.h: 62: Lcd_Port(a);
 19099  006590  0100               	movlb	0	; () banked
 19100  006592  5182               	movf	Lcd_Cmd@a& (0+255),w,b
 19101  006594  EC16  F035         	call	_Lcd_Port
 19102                           
 19103                           ;lcd.h: 63: PORTDbits.RD0 = 1;
 19104  006598  8083               	bsf	3971,0,c	;volatile
 19105                           
 19106                           ;lcd.h: 64: _delay((unsigned long)((15)*(8000000/4000.0)));
 19107  00659A  0E1E               	movlw	30
 19108  00659C  0100               	movlb	0	; () banked
 19109  00659E  6F81               	movwf	??_Lcd_Cmd& (0+255),b
 19110  0065A0  0E3C               	movlw	60
 19111  0065A2                     u12247:
 19112  0065A2  FFFF               	dw	65535	; errata NOP
 19113  0065A4  2EE8               	decfsz	wreg,f,c
 19114  0065A6  D7FD               	bra	u12247
 19115  0065A8  2F81               	decfsz	??_Lcd_Cmd& (0+255),f,b
 19116  0065AA  D7FB               	bra	u12247
 19117  0065AC  F000               	nop	
 19118                           
 19119                           ;lcd.h: 65: PORTDbits.RD0 = 0;
 19120  0065AE  9083               	bcf	3971,0,c	;volatile
 19121  0065B0  0012               	return		;funcret
 19122  0065B2  FFFF               	dw	65535	; errata NOP
 19123  0065B4                     __end_of_Lcd_Cmd:
 19124                           	opt stack 0
 19125                           tosu	equ	0xFFF
 19126                           tosh	equ	0xFFE
 19127                           tosl	equ	0xFFD
 19128                           pclath	equ	0xFFA
 19129                           tblptru	equ	0xFF8
 19130                           tblptrh	equ	0xFF7
 19131                           tblptrl	equ	0xFF6
 19132                           tablat	equ	0xFF5
 19133                           prodh	equ	0xFF4
 19134                           prodl	equ	0xFF3
 19135                           intcon	equ	0xFF2
 19136                           indf0	equ	0xFEF
 19137                           postinc0	equ	0xFEE
 19138                           fsr0h	equ	0xFEA
 19139                           fsr0l	equ	0xFE9
 19140                           wreg	equ	0xFE8
 19141                           postdec1	equ	0xFE5
 19142                           fsr1l	equ	0xFE1
 19143                           indf2	equ	0xFDF
 19144                           postinc2	equ	0xFDE
 19145                           postdec2	equ	0xFDD
 19146                           fsr2h	equ	0xFDA
 19147                           fsr2l	equ	0xFD9
 19148                           status	equ	0xFD8
 19149                           
 19150 ;; *************** function _Lcd_Port *****************
 19151 ;; Defined at:
 19152 ;;		line 38 in file "lcd.h"
 19153 ;; Parameters:    Size  Location     Type
 19154 ;;  a               1    wreg     unsigned char 
 19155 ;; Auto vars:     Size  Location     Type
 19156 ;;  a               1    0[BANK0 ] unsigned char 
 19157 ;; Return value:  Size  Location     Type
 19158 ;;                  1    wreg      void 
 19159 ;; Registers used:
 19160 ;;		wreg
 19161 ;; Tracked objects:
 19162 ;;		On entry : 0/0
 19163 ;;		On exit  : 0/0
 19164 ;;		Unchanged: 0/0
 19165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19166 ;;      Params:         0       0       0       0       0       0       0
 19167 ;;      Locals:         0       1       0       0       0       0       0
 19168 ;;      Temps:          0       0       0       0       0       0       0
 19169 ;;      Totals:         0       1       0       0       0       0       0
 19170 ;;Total ram usage:        1 bytes
 19171 ;; Hardware stack levels used:    1
 19172 ;; Hardware stack levels required when called:    6
 19173 ;; This function calls:
 19174 ;;		Nothing
 19175 ;; This function is called by:
 19176 ;;		_Lcd_Init
 19177 ;;		_Lcd_Cmd
 19178 ;;		_Lcd_Write_Char
 19179 ;; This function uses a non-reentrant model
 19180 ;;
 19181                           
 19182                           	psect	text70
 19183  006A2C                     __ptext70:
 19184                           	opt stack 0
 19185  006A2C                     _Lcd_Port:
 19186                           	opt stack 0
 19187  006A2C  FFFF               	dw	65535	; assembler added errata NOP
 19188                           
 19189                           ;incstack = 0
 19190                           ;Lcd_Port@a stored from wreg
 19191  006A2E  0100               	movlb	0	; () banked
 19192  006A30  6F80               	movwf	Lcd_Port@a& (0+255),b
 19193                           
 19194                           ;lcd.h: 39: if (a & 1)
 19195  006A32  0100               	movlb	0	; () banked
 19196  006A34  A180               	btfss	Lcd_Port@a& (0+255),0,b
 19197  006A36  D002               	goto	l603
 19198                           
 19199                           ; BSR set to: 0
 19200                           ;lcd.h: 40: PORTDbits.RD2 = 1;
 19201  006A38  8483               	bsf	3971,2,c	;volatile
 19202  006A3A  D002               	goto	l7902
 19203  006A3C                     l603:
 19204  006A3C  FFFF               	dw	65535	; assembler added errata NOP
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;lcd.h: 41: else
 19208                           ;lcd.h: 42: PORTDbits.RD2 = 0;
 19209  006A3E  9483               	bcf	3971,2,c	;volatile
 19210  006A40                     l7902:
 19211  006A40  FFFF               	dw	65535	; assembler added errata NOP
 19212                           
 19213                           ; BSR set to: 0
 19214                           ;lcd.h: 44: if (a & 2)
 19215  006A42  0100               	movlb	0	; () banked
 19216  006A44  A380               	btfss	Lcd_Port@a& (0+255),1,b
 19217  006A46  D002               	goto	l605
 19218                           
 19219                           ; BSR set to: 0
 19220                           ;lcd.h: 45: PORTDbits.RD3 = 1;
 19221  006A48  8683               	bsf	3971,3,c	;volatile
 19222  006A4A  D002               	goto	l7906
 19223  006A4C                     l605:
 19224  006A4C  FFFF               	dw	65535	; assembler added errata NOP
 19225                           
 19226                           ; BSR set to: 0
 19227                           ;lcd.h: 46: else
 19228                           ;lcd.h: 47: PORTDbits.RD3 = 0;
 19229  006A4E  9683               	bcf	3971,3,c	;volatile
 19230  006A50                     l7906:
 19231  006A50  FFFF               	dw	65535	; assembler added errata NOP
 19232                           
 19233                           ; BSR set to: 0
 19234                           ;lcd.h: 49: if (a & 4)
 19235  006A52  0100               	movlb	0	; () banked
 19236  006A54  A580               	btfss	Lcd_Port@a& (0+255),2,b
 19237  006A56  D002               	goto	l607
 19238                           
 19239                           ; BSR set to: 0
 19240                           ;lcd.h: 50: PORTDbits.RD4 = 1;
 19241  006A58  8883               	bsf	3971,4,c	;volatile
 19242  006A5A  D002               	goto	l7910
 19243  006A5C                     l607:
 19244  006A5C  FFFF               	dw	65535	; assembler added errata NOP
 19245                           
 19246                           ; BSR set to: 0
 19247                           ;lcd.h: 51: else
 19248                           ;lcd.h: 52: PORTDbits.RD4 = 0;
 19249  006A5E  9883               	bcf	3971,4,c	;volatile
 19250  006A60                     l7910:
 19251  006A60  FFFF               	dw	65535	; assembler added errata NOP
 19252                           
 19253                           ; BSR set to: 0
 19254                           ;lcd.h: 54: if (a & 8)
 19255  006A62  0100               	movlb	0	; () banked
 19256  006A64  A780               	btfss	Lcd_Port@a& (0+255),3,b
 19257  006A66  D002               	goto	l609
 19258                           
 19259                           ; BSR set to: 0
 19260                           ;lcd.h: 55: PORTDbits.RD5 = 1;
 19261  006A68  8A83               	bsf	3971,5,c	;volatile
 19262  006A6A  D002               	goto	l611
 19263  006A6C                     l609:
 19264  006A6C  FFFF               	dw	65535	; assembler added errata NOP
 19265                           
 19266                           ; BSR set to: 0
 19267                           ;lcd.h: 56: else
 19268                           ;lcd.h: 57: PORTDbits.RD5 = 0;
 19269  006A6E  9A83               	bcf	3971,5,c	;volatile
 19270  006A70                     l611:
 19271  006A70  FFFF               	dw	65535	; assembler added errata NOP
 19272                           
 19273                           ; BSR set to: 0
 19274  006A72  0012               	return		;funcret
 19275  006A74  FFFF               	dw	65535	; errata NOP
 19276  006A76                     __end_of_Lcd_Port:
 19277                           	opt stack 0
 19278                           tosu	equ	0xFFF
 19279                           tosh	equ	0xFFE
 19280                           tosl	equ	0xFFD
 19281                           pclath	equ	0xFFA
 19282                           tblptru	equ	0xFF8
 19283                           tblptrh	equ	0xFF7
 19284                           tblptrl	equ	0xFF6
 19285                           tablat	equ	0xFF5
 19286                           prodh	equ	0xFF4
 19287                           prodl	equ	0xFF3
 19288                           intcon	equ	0xFF2
 19289                           indf0	equ	0xFEF
 19290                           postinc0	equ	0xFEE
 19291                           fsr0h	equ	0xFEA
 19292                           fsr0l	equ	0xFE9
 19293                           wreg	equ	0xFE8
 19294                           postdec1	equ	0xFE5
 19295                           fsr1l	equ	0xFE1
 19296                           indf2	equ	0xFDF
 19297                           postinc2	equ	0xFDE
 19298                           postdec2	equ	0xFDD
 19299                           fsr2h	equ	0xFDA
 19300                           fsr2l	equ	0xFD9
 19301                           status	equ	0xFD8
 19302                           
 19303 ;; *************** function _I2C_Master_Init *****************
 19304 ;; Defined at:
 19305 ;;		line 13 in file "I2C.c"
 19306 ;; Parameters:    Size  Location     Type
 19307 ;;  c               4   13[BANK0 ] const unsigned long 
 19308 ;; Auto vars:     Size  Location     Type
 19309 ;;		None
 19310 ;; Return value:  Size  Location     Type
 19311 ;;                  1    wreg      void 
 19312 ;; Registers used:
 19313 ;;		wreg, status,2, status,0, cstack
 19314 ;; Tracked objects:
 19315 ;;		On entry : 0/0
 19316 ;;		On exit  : 0/0
 19317 ;;		Unchanged: 0/0
 19318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19319 ;;      Params:         0       4       0       0       0       0       0
 19320 ;;      Locals:         0       0       0       0       0       0       0
 19321 ;;      Temps:          0       4       0       0       0       0       0
 19322 ;;      Totals:         0       8       0       0       0       0       0
 19323 ;;Total ram usage:        8 bytes
 19324 ;; Hardware stack levels used:    1
 19325 ;; Hardware stack levels required when called:    7
 19326 ;; This function calls:
 19327 ;;		___lldiv
 19328 ;; This function is called by:
 19329 ;;		_main
 19330 ;; This function uses a non-reentrant model
 19331 ;;
 19332                           
 19333                           	psect	text71
 19334  006D50                     __ptext71:
 19335                           	opt stack 0
 19336  006D50                     _I2C_Master_Init:
 19337                           	opt stack 0
 19338  006D50  FFFF               	dw	65535	; assembler added errata NOP
 19339                           
 19340                           ;I2C.c: 14: SSPCON1 = 0b00101000;
 19341                           
 19342                           ; BSR set to: 0
 19343                           ;incstack = 0
 19344  006D52  0E28               	movlw	40
 19345  006D54  6EC6               	movwf	4038,c	;volatile
 19346                           
 19347                           ;I2C.c: 15: SSPCON2 = 0;
 19348  006D56  0E00               	movlw	0
 19349  006D58  6EC5               	movwf	4037,c	;volatile
 19350                           
 19351                           ;I2C.c: 16: SSPADD = (8000000 / (4 * c)) - 1;
 19352  006D5A  0E00               	movlw	0
 19353  006D5C  0100               	movlb	0	; () banked
 19354  006D5E  6F80               	movwf	___lldiv@dividend& (0+255),b
 19355  006D60  0E12               	movlw	18
 19356  006D62  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 19357  006D64  0E7A               	movlw	122
 19358  006D66  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 19359  006D68  0E00               	movlw	0
 19360  006D6A  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 19361  006D6C  C08D  F091         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 19362  006D70  C08E  F092         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 19363  006D74  C08F  F093         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 19364  006D78  C090  F094         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 19365  006D7C  0E02               	movlw	2
 19366  006D7E                     u11965:
 19367  006D7E  FFFF               	dw	65535	; assembler added errata NOP
 19368  006D80  90D8               	bcf	status,0,c
 19369  006D82  0100               	movlb	0	; () banked
 19370  006D84  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 19371  006D86  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 19372  006D88  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 19373  006D8A  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 19374  006D8C  2EE8               	decfsz	wreg,f,c
 19375  006D8E  D7F7               	goto	u11965
 19376  006D90  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 19377  006D94  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 19378  006D98  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 19379  006D9C  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 19380  006DA0  ECDD  F03A         	call	___lldiv	;wreg free
 19381  006DA4  0100               	movlb	0	; () banked
 19382  006DA6  0580               	decf	?___lldiv& (0+255),w,b
 19383  006DA8  6EC8               	movwf	4040,c	;volatile
 19384                           
 19385                           ; BSR set to: 0
 19386                           ;I2C.c: 17: SSPSTAT = 0;
 19387  006DAA  0E00               	movlw	0
 19388  006DAC  6EC7               	movwf	4039,c	;volatile
 19389                           
 19390                           ; BSR set to: 0
 19391                           ;I2C.c: 18: TRISCbits.RC3 = 1;
 19392  006DAE  8694               	bsf	3988,3,c	;volatile
 19393                           
 19394                           ; BSR set to: 0
 19395                           ;I2C.c: 19: TRISCbits.RC4 = 1;
 19396  006DB0  8894               	bsf	3988,4,c	;volatile
 19397                           
 19398                           ; BSR set to: 0
 19399  006DB2  0012               	return		;funcret
 19400  006DB4  FFFF               	dw	65535	; errata NOP
 19401  006DB6                     __end_of_I2C_Master_Init:
 19402                           	opt stack 0
 19403                           tosu	equ	0xFFF
 19404                           tosh	equ	0xFFE
 19405                           tosl	equ	0xFFD
 19406                           pclath	equ	0xFFA
 19407                           tblptru	equ	0xFF8
 19408                           tblptrh	equ	0xFF7
 19409                           tblptrl	equ	0xFF6
 19410                           tablat	equ	0xFF5
 19411                           prodh	equ	0xFF4
 19412                           prodl	equ	0xFF3
 19413                           intcon	equ	0xFF2
 19414                           indf0	equ	0xFEF
 19415                           postinc0	equ	0xFEE
 19416                           fsr0h	equ	0xFEA
 19417                           fsr0l	equ	0xFE9
 19418                           wreg	equ	0xFE8
 19419                           postdec1	equ	0xFE5
 19420                           fsr1l	equ	0xFE1
 19421                           indf2	equ	0xFDF
 19422                           postinc2	equ	0xFDE
 19423                           postdec2	equ	0xFDD
 19424                           fsr2h	equ	0xFDA
 19425                           fsr2l	equ	0xFD9
 19426                           status	equ	0xFD8
 19427                           
 19428 ;; *************** function ___lldiv *****************
 19429 ;; Defined at:
 19430 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 19431 ;; Parameters:    Size  Location     Type
 19432 ;;  dividend        4    0[BANK0 ] unsigned long 
 19433 ;;  divisor         4    4[BANK0 ] unsigned long 
 19434 ;; Auto vars:     Size  Location     Type
 19435 ;;  quotient        4    8[BANK0 ] unsigned long 
 19436 ;;  counter         1   12[BANK0 ] unsigned char 
 19437 ;; Return value:  Size  Location     Type
 19438 ;;                  4    0[BANK0 ] unsigned long 
 19439 ;; Registers used:
 19440 ;;		wreg, status,2, status,0
 19441 ;; Tracked objects:
 19442 ;;		On entry : 0/0
 19443 ;;		On exit  : 0/0
 19444 ;;		Unchanged: 0/0
 19445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19446 ;;      Params:         0       8       0       0       0       0       0
 19447 ;;      Locals:         0       5       0       0       0       0       0
 19448 ;;      Temps:          0       0       0       0       0       0       0
 19449 ;;      Totals:         0      13       0       0       0       0       0
 19450 ;;Total ram usage:       13 bytes
 19451 ;; Hardware stack levels used:    1
 19452 ;; Hardware stack levels required when called:    6
 19453 ;; This function calls:
 19454 ;;		Nothing
 19455 ;; This function is called by:
 19456 ;;		_I2C_Master_Init
 19457 ;; This function uses a non-reentrant model
 19458 ;;
 19459                           
 19460                           	psect	text72
 19461  0075BA                     __ptext72:
 19462                           	opt stack 0
 19463  0075BA                     ___lldiv:
 19464                           	opt stack 0
 19465  0075BA  FFFF               	dw	65535	; assembler added errata NOP
 19466                           
 19467                           ; BSR set to: 0
 19468                           ;incstack = 0
 19469  0075BC  0E00               	movlw	0
 19470  0075BE  0100               	movlb	0	; () banked
 19471  0075C0  6F88               	movwf	___lldiv@quotient& (0+255),b
 19472  0075C2  0E00               	movlw	0
 19473  0075C4  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 19474  0075C6  0E00               	movlw	0
 19475  0075C8  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 19476  0075CA  0E00               	movlw	0
 19477  0075CC  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 19478                           
 19479                           ; BSR set to: 0
 19480  0075CE  0100               	movlb	0	; () banked
 19481  0075D0  5184               	movf	___lldiv@divisor& (0+255),w,b
 19482  0075D2  0100               	movlb	0	; () banked
 19483  0075D4  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 19484  0075D6  0100               	movlb	0	; () banked
 19485  0075D8  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 19486  0075DA  0100               	movlb	0	; () banked
 19487  0075DC  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 19488  0075DE  B4D8               	btfsc	status,2,c
 19489  0075E0  D046               	goto	l1456
 19490                           
 19491                           ; BSR set to: 0
 19492  0075E2  0E01               	movlw	1
 19493  0075E4  0100               	movlb	0	; () banked
 19494  0075E6  6F8C               	movwf	___lldiv@counter& (0+255),b
 19495  0075E8  D009               	goto	l8846
 19496  0075EA                     l8844:
 19497  0075EA  FFFF               	dw	65535	; assembler added errata NOP
 19498                           
 19499                           ; BSR set to: 0
 19500  0075EC  0100               	movlb	0	; () banked
 19501  0075EE  90D8               	bcf	status,0,c
 19502  0075F0  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 19503  0075F2  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 19504  0075F4  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 19505  0075F6  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 19506  0075F8  0100               	movlb	0	; () banked
 19507  0075FA  2B8C               	incf	___lldiv@counter& (0+255),f,b
 19508  0075FC                     l8846:
 19509  0075FC  FFFF               	dw	65535	; assembler added errata NOP
 19510                           
 19511                           ; BSR set to: 0
 19512  0075FE  0100               	movlb	0	; () banked
 19513  007600  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 19514  007602  D7F3               	goto	l8844
 19515  007604                     l8848:
 19516  007604  FFFF               	dw	65535	; assembler added errata NOP
 19517                           
 19518                           ; BSR set to: 0
 19519  007606  0100               	movlb	0	; () banked
 19520  007608  90D8               	bcf	status,0,c
 19521  00760A  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 19522  00760C  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 19523  00760E  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 19524  007610  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 19525                           
 19526                           ; BSR set to: 0
 19527  007612  0100               	movlb	0	; () banked
 19528  007614  5184               	movf	___lldiv@divisor& (0+255),w,b
 19529  007616  0100               	movlb	0	; () banked
 19530  007618  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 19531  00761A  0100               	movlb	0	; () banked
 19532  00761C  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19533  00761E  0100               	movlb	0	; () banked
 19534  007620  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 19535  007622  0100               	movlb	0	; () banked
 19536  007624  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19537  007626  0100               	movlb	0	; () banked
 19538  007628  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 19539  00762A  0100               	movlb	0	; () banked
 19540  00762C  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19541  00762E  0100               	movlb	0	; () banked
 19542  007630  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 19543  007632  A0D8               	btfss	status,0,c
 19544  007634  D012               	goto	l8856
 19545                           
 19546                           ; BSR set to: 0
 19547  007636  0100               	movlb	0	; () banked
 19548  007638  5184               	movf	___lldiv@divisor& (0+255),w,b
 19549  00763A  0100               	movlb	0	; () banked
 19550  00763C  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 19551  00763E  0100               	movlb	0	; () banked
 19552  007640  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19553  007642  0100               	movlb	0	; () banked
 19554  007644  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 19555  007646  0100               	movlb	0	; () banked
 19556  007648  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19557  00764A  0100               	movlb	0	; () banked
 19558  00764C  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 19559  00764E  0100               	movlb	0	; () banked
 19560  007650  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19561  007652  0100               	movlb	0	; () banked
 19562  007654  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 19563                           
 19564                           ; BSR set to: 0
 19565  007656  0100               	movlb	0	; () banked
 19566  007658  8188               	bsf	___lldiv@quotient& (0+255),0,b
 19567  00765A                     l8856:
 19568  00765A  FFFF               	dw	65535	; assembler added errata NOP
 19569                           
 19570                           ; BSR set to: 0
 19571  00765C  0100               	movlb	0	; () banked
 19572  00765E  90D8               	bcf	status,0,c
 19573  007660  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 19574  007662  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 19575  007664  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 19576  007666  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 19577                           
 19578                           ; BSR set to: 0
 19579  007668  0100               	movlb	0	; () banked
 19580  00766A  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 19581  00766C  D7CB               	goto	l8848
 19582  00766E                     l1456:
 19583  00766E  FFFF               	dw	65535	; assembler added errata NOP
 19584                           
 19585                           ; BSR set to: 0
 19586  007670  C088  F080         	movff	___lldiv@quotient,?___lldiv
 19587  007674  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 19588  007678  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 19589  00767C  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 19590                           
 19591                           ; BSR set to: 0
 19592  007680  0012               	return		;funcret
 19593  007682  FFFF               	dw	65535	; errata NOP
 19594  007684                     __end_of___lldiv:
 19595                           	opt stack 0
 19596                           tosu	equ	0xFFF
 19597                           tosh	equ	0xFFE
 19598                           tosl	equ	0xFFD
 19599                           pclath	equ	0xFFA
 19600                           tblptru	equ	0xFF8
 19601                           tblptrh	equ	0xFF7
 19602                           tblptrl	equ	0xFF6
 19603                           tablat	equ	0xFF5
 19604                           prodh	equ	0xFF4
 19605                           prodl	equ	0xFF3
 19606                           intcon	equ	0xFF2
 19607                           indf0	equ	0xFEF
 19608                           postinc0	equ	0xFEE
 19609                           fsr0h	equ	0xFEA
 19610                           fsr0l	equ	0xFE9
 19611                           wreg	equ	0xFE8
 19612                           postdec1	equ	0xFE5
 19613                           fsr1l	equ	0xFE1
 19614                           indf2	equ	0xFDF
 19615                           postinc2	equ	0xFDE
 19616                           postdec2	equ	0xFDD
 19617                           fsr2h	equ	0xFDA
 19618                           fsr2l	equ	0xFD9
 19619                           status	equ	0xFD8
 19620                           
 19621 ;; *************** function _TIMER *****************
 19622 ;; Defined at:
 19623 ;;		line 32 in file "Main.c"
 19624 ;; Parameters:    Size  Location     Type
 19625 ;;		None
 19626 ;; Auto vars:     Size  Location     Type
 19627 ;;  c               1   62[COMRAM] unsigned char 
 19628 ;; Return value:  Size  Location     Type
 19629 ;;                  1    wreg      void 
 19630 ;; Registers used:
 19631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19632 ;; Tracked objects:
 19633 ;;		On entry : 0/0
 19634 ;;		On exit  : 0/0
 19635 ;;		Unchanged: 0/0
 19636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19637 ;;      Params:         0       0       0       0       0       0       0
 19638 ;;      Locals:         1       0       0       0       0       0       0
 19639 ;;      Temps:         14       0       0       0       0       0       0
 19640 ;;      Totals:        15       0       0       0       0       0       0
 19641 ;;Total ram usage:       15 bytes
 19642 ;; Hardware stack levels used:    1
 19643 ;; Hardware stack levels required when called:    5
 19644 ;; This function calls:
 19645 ;;		_lerTransdutor
 19646 ;;		_readButtons
 19647 ;;		_timer
 19648 ;; This function is called by:
 19649 ;;		Interrupt level 2
 19650 ;; This function uses a non-reentrant model
 19651 ;;
 19652                           
 19653                           	psect	intcode
 19654  000008                     __pintcode:
 19655                           	opt stack 0
 19656  000008                     _TIMER:
 19657                           	opt stack 0
 19658  000008  FFFF               	dw	65535	; assembler added errata NOP
 19659                           
 19660                           ; BSR set to: 0
 19661                           ;incstack = 0
 19662  00000A  827B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19663  00000C  CFFA F031          	movff	pclath,??_TIMER
 19664  000010  CFFB F032          	movff	pclatu,??_TIMER+1
 19665  000014  CFE9 F033          	movff	fsr0l,??_TIMER+2
 19666  000018  CFEA F034          	movff	fsr0h,??_TIMER+3
 19667  00001C  CFE1 F035          	movff	fsr1l,??_TIMER+4
 19668  000020  CFE2 F036          	movff	fsr1h,??_TIMER+5
 19669  000024  CFD9 F037          	movff	fsr2l,??_TIMER+6
 19670  000028  CFDA F038          	movff	fsr2h,??_TIMER+7
 19671  00002C  CFF3 F039          	movff	prodl,??_TIMER+8
 19672  000030  CFF4 F03A          	movff	prodh,??_TIMER+9
 19673  000034  CFF6 F03B          	movff	tblptrl,??_TIMER+10
 19674  000038  CFF7 F03C          	movff	tblptrh,??_TIMER+11
 19675  00003C  CFF8 F03D          	movff	tblptru,??_TIMER+12
 19676  000040  CFF5 F03E          	movff	tablat,??_TIMER+13
 19677                           
 19678                           ;Main.c: 33: if (TMR0IF) {
 19679  000044  A4F2               	btfss	intcon,2,c	;volatile
 19680  000046  D01E               	goto	i2l868
 19681                           
 19682                           ;Main.c: 34: TMR0IF = 0x00;
 19683  000048  94F2               	bcf	intcon,2,c	;volatile
 19684                           
 19685                           ;Main.c: 35: TMR0H = 0x3C;
 19686  00004A  0E3C               	movlw	60
 19687  00004C  6ED7               	movwf	4055,c	;volatile
 19688                           
 19689                           ;Main.c: 36: TMR0L = 0xB0;
 19690  00004E  0EB0               	movlw	176
 19691  000050  6ED6               	movwf	4054,c	;volatile
 19692                           
 19693                           ;Main.c: 38: base_sec++;
 19694  000052  2A6C               	incf	_base_sec,f,c
 19695                           
 19696                           ;Main.c: 40: if (base_sec == 5) {
 19697  000054  0E05               	movlw	5
 19698  000056  186C               	xorwf	_base_sec,w,c
 19699  000058  A4D8               	btfss	status,2,c
 19700  00005A  D002               	goto	i2l7516
 19701                           
 19702                           ;Main.c: 41: blinkk = ~blinkk;
 19703  00005C  0100               	movlb	0	; () banked
 19704  00005E  1FDB               	comf	_blinkk& (0+255),f,b
 19705  000060                     i2l7516:
 19706  000060  FFFF               	dw	65535	; assembler added errata NOP
 19707                           
 19708                           ;Main.c: 42: }
 19709                           ;Main.c: 44: lerTransdutor();
 19710  000062  ECF7  F012         	call	_lerTransdutor	;wreg free
 19711                           
 19712                           ;Main.c: 45: readButtons();
 19713  000066  ECBE  F037         	call	_readButtons	;wreg free
 19714                           
 19715                           ;Main.c: 47: if (base_sec > 9) {
 19716  00006A  0E09               	movlw	9
 19717  00006C  646C               	cpfsgt	_base_sec,c
 19718  00006E  D00A               	goto	i2l868
 19719                           
 19720                           ;Main.c: 48: base_sec = 0;
 19721  000070  0E00               	movlw	0
 19722  000072  6E6C               	movwf	_base_sec,c
 19723                           
 19724                           ;Main.c: 49: blinkk = ~blinkk;
 19725  000074  0100               	movlb	0	; () banked
 19726  000076  1FDB               	comf	_blinkk& (0+255),f,b
 19727                           
 19728                           ; BSR set to: 0
 19729                           ;Main.c: 50: timer();
 19730  000078  EC97  F019         	call	_timer	;wreg free
 19731                           
 19732                           ;Main.c: 51: if (RCSTAbits.OERR) {
 19733  00007C  A2AB               	btfss	4011,1,c	;volatile
 19734  00007E  D002               	goto	i2l868
 19735                           
 19736                           ;Main.c: 52: RCSTAbits.CREN = 0;
 19737  000080  98AB               	bcf	4011,4,c	;volatile
 19738                           
 19739                           ;Main.c: 53: RCSTAbits.CREN = 1;
 19740  000082  88AB               	bsf	4011,4,c	;volatile
 19741  000084                     i2l868:
 19742  000084  FFFF               	dw	65535	; assembler added errata NOP
 19743                           
 19744                           ;Main.c: 54: }
 19745                           ;Main.c: 55: }
 19746                           ;Main.c: 56: }
 19747                           ;Main.c: 57: if (RCIF) {
 19748  000086  AA9E               	btfss	3998,5,c	;volatile
 19749  000088  D01B               	goto	i2l875
 19750                           
 19751                           ;Main.c: 58: char c = RCREG;
 19752  00008A  CFAE F03F          	movff	4014,TIMER@c	;volatile
 19753                           
 19754                           ;Main.c: 59: if (c != '\n' && c != '\r') {
 19755  00008E  0E0A               	movlw	10
 19756  000090  183F               	xorwf	TIMER@c,w,c
 19757  000092  B4D8               	btfsc	status,2,c
 19758  000094  D00F               	goto	i2l7542
 19759  000096  0E0D               	movlw	13
 19760  000098  183F               	xorwf	TIMER@c,w,c
 19761  00009A  B4D8               	btfsc	status,2,c
 19762  00009C  D00B               	goto	i2l7542
 19763                           
 19764                           ;Main.c: 60: bufferSerial[cbf++] = c;
 19765  00009E  5062               	movf	_cbf,w,c
 19766  0000A0  0D01               	mullw	1
 19767  0000A2  0E00               	movlw	low _bufferSerial
 19768  0000A4  24F3               	addwf	prodl,w,c
 19769  0000A6  6ED9               	movwf	fsr2l,c
 19770  0000A8  0E01               	movlw	high _bufferSerial
 19771  0000AA  20F4               	addwfc	prodh,w,c
 19772  0000AC  6EDA               	movwf	fsr2h,c
 19773  0000AE  C03F  FFDF         	movff	TIMER@c,indf2
 19774  0000B2  2A62               	incf	_cbf,f,c
 19775  0000B4                     i2l7542:
 19776  0000B4  FFFF               	dw	65535	; assembler added errata NOP
 19777                           
 19778                           ;Main.c: 61: }
 19779                           ;Main.c: 62: if (cbf >= 60) cbf = 0;
 19780  0000B6  0E3B               	movlw	59
 19781  0000B8  6462               	cpfsgt	_cbf,c
 19782  0000BA  D002               	goto	i2l875
 19783  0000BC  0E00               	movlw	0
 19784  0000BE  6E62               	movwf	_cbf,c
 19785  0000C0                     i2l875:
 19786  0000C0  FFFF               	dw	65535	; assembler added errata NOP
 19787  0000C2  C03E  FFF5         	movff	??_TIMER+13,tablat
 19788  0000C6  C03D  FFF8         	movff	??_TIMER+12,tblptru
 19789  0000CA  C03C  FFF7         	movff	??_TIMER+11,tblptrh
 19790  0000CE  C03B  FFF6         	movff	??_TIMER+10,tblptrl
 19791  0000D2  C03A  FFF4         	movff	??_TIMER+9,prodh
 19792  0000D6  C039  FFF3         	movff	??_TIMER+8,prodl
 19793  0000DA  C038  FFDA         	movff	??_TIMER+7,fsr2h
 19794  0000DE  C037  FFD9         	movff	??_TIMER+6,fsr2l
 19795  0000E2  C036  FFE2         	movff	??_TIMER+5,fsr1h
 19796  0000E6  C035  FFE1         	movff	??_TIMER+4,fsr1l
 19797  0000EA  C034  FFEA         	movff	??_TIMER+3,fsr0h
 19798  0000EE  C033  FFE9         	movff	??_TIMER+2,fsr0l
 19799  0000F2  C032  FFFB         	movff	??_TIMER+1,pclatu
 19800  0000F6  C031  FFFA         	movff	??_TIMER,pclath
 19801  0000FA  927B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19802  0000FC  0011               	retfie		f
 19803  0000FE  FFFF               	dw	65535	; errata NOP
 19804  000100                     __end_of_TIMER:
 19805                           	opt stack 0
 19806                           tosu	equ	0xFFF
 19807                           tosh	equ	0xFFE
 19808                           tosl	equ	0xFFD
 19809                           pclatu	equ	0xFFB
 19810                           pclath	equ	0xFFA
 19811                           tblptru	equ	0xFF8
 19812                           tblptrh	equ	0xFF7
 19813                           tblptrl	equ	0xFF6
 19814                           tablat	equ	0xFF5
 19815                           prodh	equ	0xFF4
 19816                           prodl	equ	0xFF3
 19817                           intcon	equ	0xFF2
 19818                           indf0	equ	0xFEF
 19819                           postinc0	equ	0xFEE
 19820                           fsr0h	equ	0xFEA
 19821                           fsr0l	equ	0xFE9
 19822                           wreg	equ	0xFE8
 19823                           postdec1	equ	0xFE5
 19824                           fsr1h	equ	0xFE2
 19825                           fsr1l	equ	0xFE1
 19826                           indf2	equ	0xFDF
 19827                           postinc2	equ	0xFDE
 19828                           postdec2	equ	0xFDD
 19829                           fsr2h	equ	0xFDA
 19830                           fsr2l	equ	0xFD9
 19831                           status	equ	0xFD8
 19832                           
 19833 ;; *************** function _timer *****************
 19834 ;; Defined at:
 19835 ;;		line 9 in file "temporizador.h"
 19836 ;; Parameters:    Size  Location     Type
 19837 ;;		None
 19838 ;; Auto vars:     Size  Location     Type
 19839 ;;		None
 19840 ;; Return value:  Size  Location     Type
 19841 ;;                  1    wreg      void 
 19842 ;; Registers used:
 19843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19844 ;; Tracked objects:
 19845 ;;		On entry : 0/0
 19846 ;;		On exit  : 0/0
 19847 ;;		Unchanged: 0/0
 19848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19849 ;;      Params:         0       0       0       0       0       0       0
 19850 ;;      Locals:         6       0       0       0       0       0       0
 19851 ;;      Temps:          0       0       0       0       0       0       0
 19852 ;;      Totals:         6       0       0       0       0       0       0
 19853 ;;Total ram usage:        6 bytes
 19854 ;; Hardware stack levels used:    1
 19855 ;; Hardware stack levels required when called:    4
 19856 ;; This function calls:
 19857 ;;		_writeEEPROM16_ext
 19858 ;;		i2_RTC_Init
 19859 ;;		i2_getDS1307TimeDate
 19860 ;;		i2_writeEEPROM_ext
 19861 ;; This function is called by:
 19862 ;;		_TIMER
 19863 ;; This function uses a non-reentrant model
 19864 ;;
 19865                           
 19866                           	psect	text74
 19867  00332E                     __ptext74:
 19868                           	opt stack 0
 19869  00332E                     _timer:
 19870                           	opt stack 0
 19871  00332E  FFFF               	dw	65535	; assembler added errata NOP
 19872                           
 19873                           ;temporizador.h: 11: timerVerificarSinal = (timerVerificarSinal <= 0 ? 0 : --timerVerifi
      +                          carSinal);
 19874                           
 19875                           ;incstack = 0
 19876  003330  0100               	movlb	0	; () banked
 19877  003332  51FE               	movf	_timerVerificarSinal& (0+255),w,b
 19878  003334  B4D8               	btfsc	status,2,c
 19879  003336  D006               	goto	i2l6736
 19880                           
 19881                           ; BSR set to: 0
 19882  003338  0100               	movlb	0	; () banked
 19883  00333A  07FE               	decf	_timerVerificarSinal& (0+255),f,b
 19884  00333C  C0FE  F009         	movff	_timerVerificarSinal,_timer$1324
 19885  003340  6A0A               	clrf	_timer$1324+1,c
 19886  003342  D005               	goto	i2l6738
 19887  003344                     i2l6736:
 19888  003344  FFFF               	dw	65535	; assembler added errata NOP
 19889                           
 19890                           ; BSR set to: 0
 19891  003346  0E00               	movlw	0
 19892  003348  6E0A               	movwf	_timer$1324+1,c
 19893  00334A  0E00               	movlw	0
 19894  00334C  6E09               	movwf	_timer$1324,c
 19895  00334E                     i2l6738:
 19896  00334E  FFFF               	dw	65535	; assembler added errata NOP
 19897                           
 19898                           ; BSR set to: 0
 19899  003350  C009  F0FE         	movff	_timer$1324,_timerVerificarSinal
 19900                           
 19901                           ;temporizador.h: 12: timerEtapaComunicacao = (timerEtapaComunicacao <= 0 ? 0 : --timerEt
      +                          apaComunicacao);
 19902  003354  0100               	movlb	0	; () banked
 19903  003356  51F5               	movf	_timerEtapaComunicacao& (0+255),w,b
 19904  003358  B4D8               	btfsc	status,2,c
 19905  00335A  D006               	goto	i2l6742
 19906                           
 19907                           ; BSR set to: 0
 19908  00335C  0100               	movlb	0	; () banked
 19909  00335E  07F5               	decf	_timerEtapaComunicacao& (0+255),f,b
 19910  003360  C0F5  F00B         	movff	_timerEtapaComunicacao,_timer$1325
 19911  003364  6A0C               	clrf	_timer$1325+1,c
 19912  003366  D005               	goto	i2l6744
 19913  003368                     i2l6742:
 19914  003368  FFFF               	dw	65535	; assembler added errata NOP
 19915                           
 19916                           ; BSR set to: 0
 19917  00336A  0E00               	movlw	0
 19918  00336C  6E0C               	movwf	_timer$1325+1,c
 19919  00336E  0E00               	movlw	0
 19920  003370  6E0B               	movwf	_timer$1325,c
 19921  003372                     i2l6744:
 19922  003372  FFFF               	dw	65535	; assembler added errata NOP
 19923                           
 19924                           ; BSR set to: 0
 19925  003374  C00B  F0F5         	movff	_timer$1325,_timerEtapaComunicacao
 19926                           
 19927                           ; BSR set to: 0
 19928                           ;temporizador.h: 13: timerTesteBombas = (timerTesteBombas <= 0 ? 0 : --timerTesteBombas)
      +                          ;
 19929  003378  0100               	movlb	0	; () banked
 19930  00337A  51D9               	movf	_timerTesteBombas& (0+255),w,b
 19931  00337C  0100               	movlb	0	; () banked
 19932  00337E  11DA               	iorwf	(_timerTesteBombas+1)& (0+255),w,b
 19933  003380  B4D8               	btfsc	status,2,c
 19934  003382  D009               	goto	i2l6750
 19935                           
 19936                           ; BSR set to: 0
 19937  003384  0100               	movlb	0	; () banked
 19938  003386  07D9               	decf	_timerTesteBombas& (0+255),f,b
 19939  003388  A0D8               	btfss	status,0,c
 19940  00338A  07DA               	decf	(_timerTesteBombas+1)& (0+255),f,b
 19941  00338C  C0D9  F0D9         	movff	_timerTesteBombas,_timerTesteBombas
 19942  003390  C0DA  F0DA         	movff	_timerTesteBombas+1,_timerTesteBombas+1
 19943  003394  D006               	goto	i2l575
 19944  003396                     i2l6750:
 19945  003396  FFFF               	dw	65535	; assembler added errata NOP
 19946                           
 19947                           ; BSR set to: 0
 19948  003398  0E00               	movlw	0
 19949  00339A  0100               	movlb	0	; () banked
 19950  00339C  6FDA               	movwf	(_timerTesteBombas+1)& (0+255),b
 19951  00339E  0E00               	movlw	0
 19952  0033A0  6FD9               	movwf	_timerTesteBombas& (0+255),b
 19953  0033A2                     i2l575:
 19954  0033A2  FFFF               	dw	65535	; assembler added errata NOP
 19955                           
 19956                           ; BSR set to: 0
 19957                           ;temporizador.h: 14: timerReenvioSMS = (timerReenvioSMS <= 0 ? 0 : --timerReenvioSMS);
 19958  0033A4  0100               	movlb	0	; () banked
 19959  0033A6  51F6               	movf	_timerReenvioSMS& (0+255),w,b
 19960  0033A8  B4D8               	btfsc	status,2,c
 19961  0033AA  D006               	goto	i2l6754
 19962                           
 19963                           ; BSR set to: 0
 19964  0033AC  0100               	movlb	0	; () banked
 19965  0033AE  07F6               	decf	_timerReenvioSMS& (0+255),f,b
 19966  0033B0  C0F6  F00D         	movff	_timerReenvioSMS,_timer$1326
 19967  0033B4  6A0E               	clrf	_timer$1326+1,c
 19968  0033B6  D005               	goto	i2l6756
 19969  0033B8                     i2l6754:
 19970  0033B8  FFFF               	dw	65535	; assembler added errata NOP
 19971                           
 19972                           ; BSR set to: 0
 19973  0033BA  0E00               	movlw	0
 19974  0033BC  6E0E               	movwf	_timer$1326+1,c
 19975  0033BE  0E00               	movlw	0
 19976  0033C0  6E0D               	movwf	_timer$1326,c
 19977  0033C2                     i2l6756:
 19978  0033C2  FFFF               	dw	65535	; assembler added errata NOP
 19979                           
 19980                           ; BSR set to: 0
 19981  0033C4  C00D  F0F6         	movff	_timer$1326,_timerReenvioSMS
 19982                           
 19983                           ;temporizador.h: 16: if (ajst_rtc) {
 19984  0033C8  5063               	movf	_ajst_rtc,w,c
 19985  0033CA  A4D8               	btfss	status,2,c
 19986  0033CC  D061               	goto	i2l581
 19987                           
 19988                           ; BSR set to: 0
 19989                           ;temporizador.h: 18: }
 19990                           ;temporizador.h: 19: _sec++;
 19991                           
 19992                           ; BSR set to: 0
 19993                           
 19994                           ; BSR set to: 0
 19995                           ;temporizador.h: 17: return;
 19996  0033CE  0100               	movlb	0	; () banked
 19997  0033D0  2BEF               	incf	__sec& (0+255),f,b
 19998                           
 19999                           ; BSR set to: 0
 20000                           ;temporizador.h: 20: if (_sec > 59) {
 20001  0033D2  0E3B               	movlw	59
 20002  0033D4  0100               	movlb	0	; () banked
 20003  0033D6  65EF               	cpfsgt	__sec& (0+255),b
 20004  0033D8  D01C               	goto	i2l6782
 20005                           
 20006                           ; BSR set to: 0
 20007                           ;temporizador.h: 21: _sec = 0;
 20008  0033DA  0E00               	movlw	0
 20009  0033DC  0100               	movlb	0	; () banked
 20010  0033DE  6FEF               	movwf	__sec& (0+255),b
 20011                           
 20012                           ; BSR set to: 0
 20013                           ;temporizador.h: 22: _min++;
 20014  0033E0  0100               	movlb	0	; () banked
 20015  0033E2  2BEE               	incf	__min& (0+255),f,b
 20016                           
 20017                           ; BSR set to: 0
 20018                           ;temporizador.h: 23: if (_min > 59) {
 20019  0033E4  0E3B               	movlw	59
 20020  0033E6  0100               	movlb	0	; () banked
 20021  0033E8  65EE               	cpfsgt	__min& (0+255),b
 20022  0033EA  D013               	goto	i2l6782
 20023                           
 20024                           ; BSR set to: 0
 20025                           ;temporizador.h: 24: _min = 0;
 20026  0033EC  0E00               	movlw	0
 20027  0033EE  0100               	movlb	0	; () banked
 20028  0033F0  6FEE               	movwf	__min& (0+255),b
 20029                           
 20030                           ; BSR set to: 0
 20031                           ;temporizador.h: 25: _hor++;
 20032  0033F2  0100               	movlb	0	; () banked
 20033  0033F4  2BED               	incf	__hor& (0+255),f,b
 20034                           
 20035                           ; BSR set to: 0
 20036                           ;temporizador.h: 26: if (_hor > 23) {
 20037  0033F6  0E17               	movlw	23
 20038  0033F8  0100               	movlb	0	; () banked
 20039  0033FA  65ED               	cpfsgt	__hor& (0+255),b
 20040  0033FC  D00A               	goto	i2l6782
 20041                           
 20042                           ; BSR set to: 0
 20043                           ;temporizador.h: 27: _hor = 0;
 20044  0033FE  0E00               	movlw	0
 20045  003400  0100               	movlb	0	; () banked
 20046  003402  6FED               	movwf	__hor& (0+255),b
 20047                           
 20048                           ; BSR set to: 0
 20049                           ;temporizador.h: 28: dias_restante_teste++;
 20050  003404  0100               	movlb	0	; () banked
 20051  003406  2BE8               	incf	_dias_restante_teste& (0+255),f,b
 20052                           
 20053                           ; BSR set to: 0
 20054                           ;temporizador.h: 29: writeEEPROM_ext(10, dias_restante_teste);
 20055  003408  C0E8  F004         	movff	_dias_restante_teste,i2writeEEPROM_ext@data
 20056  00340C  0E0A               	movlw	10
 20057  00340E  ECB2  F033         	call	i2_writeEEPROM_ext
 20058  003412                     i2l6782:
 20059  003412  FFFF               	dw	65535	; assembler added errata NOP
 20060                           
 20061                           ;temporizador.h: 30: }
 20062                           ;temporizador.h: 31: }
 20063                           ;temporizador.h: 32: }
 20064                           ;temporizador.h: 34: if (rtc.min != _min) {
 20065  003414  0100               	movlb	0	; () banked
 20066  003416  51EE               	movf	__min& (0+255),w,b
 20067  003418  1871               	xorwf	_rtc+2,w,c
 20068  00341A  B4D8               	btfsc	status,2,c
 20069  00341C  D039               	goto	i2l581
 20070                           
 20071                           ; BSR set to: 0
 20072                           ;temporizador.h: 36: if (flagEstacionariaLigada) {
 20073  00341E  0100               	movlb	0	; () banked
 20074  003420  51F1               	movf	_flagEstacionariaLigada& (0+255),w,b
 20075  003422  B4D8               	btfsc	status,2,c
 20076  003424  D009               	goto	i2l6790
 20077                           
 20078                           ; BSR set to: 0
 20079                           ;temporizador.h: 37: horimetro++;
 20080  003426  4A4B               	infsnz	_horimetro,f,c
 20081  003428  2A4C               	incf	_horimetro+1,f,c
 20082                           
 20083                           ; BSR set to: 0
 20084                           ;temporizador.h: 38: writeEEPROM16_ext(8, horimetro);
 20085  00342A  C04B  F006         	movff	_horimetro,writeEEPROM16_ext@data
 20086  00342E  C04C  F007         	movff	_horimetro+1,writeEEPROM16_ext@data+1
 20087  003432  0E08               	movlw	8
 20088  003434  EC8B  F032         	call	_writeEEPROM16_ext
 20089  003438                     i2l6790:
 20090  003438  FFFF               	dw	65535	; assembler added errata NOP
 20091                           
 20092                           ;temporizador.h: 39: }
 20093                           ;temporizador.h: 40: getDS1307TimeDate(&rtc);
 20094  00343A  0E6F               	movlw	low _rtc
 20095  00343C  6E06               	movwf	i2getDS1307TimeDate@ptrToUserVal,c
 20096  00343E  0E00               	movlw	high _rtc
 20097  003440  6E07               	movwf	i2getDS1307TimeDate@ptrToUserVal+1,c
 20098  003442  ECD6  F01C         	call	i2_getDS1307TimeDate	;wreg free
 20099                           
 20100                           ;temporizador.h: 41: if ((rtc.sec > 60) && (rtc.min > 60) && (rtc.hour > 24)) {
 20101  003446  0E3C               	movlw	60
 20102  003448  6470               	cpfsgt	_rtc+1,c
 20103  00344A  D015               	goto	i2l587
 20104  00344C  0E3C               	movlw	60
 20105  00344E  6471               	cpfsgt	_rtc+2,c
 20106  003450  D012               	goto	i2l587
 20107  003452  0E18               	movlw	24
 20108  003454  6472               	cpfsgt	_rtc+3,c
 20109  003456  D00F               	goto	i2l587
 20110                           
 20111                           ;temporizador.h: 43: RTC_Init();
 20112  003458  EC0B  F033         	call	i2_RTC_Init	;wreg free
 20113                           
 20114                           ;temporizador.h: 44: rtc.sec = _sec;
 20115  00345C  C0EF  F070         	movff	__sec,_rtc+1
 20116                           
 20117                           ;temporizador.h: 45: rtc.min = _min;
 20118  003460  C0EE  F071         	movff	__min,_rtc+2
 20119                           
 20120                           ;temporizador.h: 46: rtc.hour = _hor;
 20121  003464  C0ED  F072         	movff	__hor,_rtc+3
 20122                           
 20123                           ;temporizador.h: 47: rtc.date = _dia;
 20124  003468  C0EC  F073         	movff	__dia,_rtc+4
 20125                           
 20126                           ;temporizador.h: 48: rtc.month = _mes;
 20127  00346C  C0EB  F074         	movff	__mes,_rtc+5
 20128                           
 20129                           ;temporizador.h: 49: rtc.year = _ano;
 20130  003470  C0EA  F075         	movff	__ano,_rtc+6
 20131                           
 20132                           ;temporizador.h: 50: return;
 20133  003474  D00D               	goto	i2l581
 20134  003476                     i2l587:
 20135  003476  FFFF               	dw	65535	; assembler added errata NOP
 20136                           
 20137                           ;temporizador.h: 51: }
 20138                           ;temporizador.h: 52: _sec = rtc.sec;
 20139  003478  C070  F0EF         	movff	_rtc+1,__sec
 20140                           
 20141                           ;temporizador.h: 53: _min = rtc.min;
 20142  00347C  C071  F0EE         	movff	_rtc+2,__min
 20143                           
 20144                           ;temporizador.h: 54: _hor = rtc.hour;
 20145  003480  C072  F0ED         	movff	_rtc+3,__hor
 20146                           
 20147                           ;temporizador.h: 55: _dia = rtc.date;
 20148  003484  C073  F0EC         	movff	_rtc+4,__dia
 20149                           
 20150                           ;temporizador.h: 56: _mes = rtc.month;
 20151  003488  C074  F0EB         	movff	_rtc+5,__mes
 20152                           
 20153                           ;temporizador.h: 57: _ano = rtc.year;
 20154  00348C  C075  F0EA         	movff	_rtc+6,__ano
 20155  003490                     i2l581:
 20156  003490  FFFF               	dw	65535	; assembler added errata NOP
 20157  003492  0012               	return		;funcret
 20158  003494  FFFF               	dw	65535	; errata NOP
 20159  003496                     __end_of_timer:
 20160                           	opt stack 0
 20161                           tosu	equ	0xFFF
 20162                           tosh	equ	0xFFE
 20163                           tosl	equ	0xFFD
 20164                           pclatu	equ	0xFFB
 20165                           pclath	equ	0xFFA
 20166                           tblptru	equ	0xFF8
 20167                           tblptrh	equ	0xFF7
 20168                           tblptrl	equ	0xFF6
 20169                           tablat	equ	0xFF5
 20170                           prodh	equ	0xFF4
 20171                           prodl	equ	0xFF3
 20172                           intcon	equ	0xFF2
 20173                           indf0	equ	0xFEF
 20174                           postinc0	equ	0xFEE
 20175                           fsr0h	equ	0xFEA
 20176                           fsr0l	equ	0xFE9
 20177                           wreg	equ	0xFE8
 20178                           postdec1	equ	0xFE5
 20179                           fsr1h	equ	0xFE2
 20180                           fsr1l	equ	0xFE1
 20181                           indf2	equ	0xFDF
 20182                           postinc2	equ	0xFDE
 20183                           postdec2	equ	0xFDD
 20184                           fsr2h	equ	0xFDA
 20185                           fsr2l	equ	0xFD9
 20186                           status	equ	0xFD8
 20187                           
 20188 ;; *************** function i2_getDS1307TimeDate *****************
 20189 ;; Defined at:
 20190 ;;		line 52 in file "ds1307.h"
 20191 ;; Parameters:    Size  Location     Type
 20192 ;;  ptrToUserVal    2    5[COMRAM] PTR struct .
 20193 ;;		 -> rtc(7), 
 20194 ;; Auto vars:     Size  Location     Type
 20195 ;;		None
 20196 ;; Return value:  Size  Location     Type
 20197 ;;                  1    wreg      void 
 20198 ;; Registers used:
 20199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20200 ;; Tracked objects:
 20201 ;;		On entry : 0/0
 20202 ;;		On exit  : 0/0
 20203 ;;		Unchanged: 0/0
 20204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20205 ;;      Params:         2       0       0       0       0       0       0
 20206 ;;      Locals:         0       0       0       0       0       0       0
 20207 ;;      Temps:          0       0       0       0       0       0       0
 20208 ;;      Totals:         2       0       0       0       0       0       0
 20209 ;;Total ram usage:        2 bytes
 20210 ;; Hardware stack levels used:    1
 20211 ;; Hardware stack levels required when called:    2
 20212 ;; This function calls:
 20213 ;;		i2_BCDtoDEC
 20214 ;;		i2_I2C_Read
 20215 ;;		i2_I2C_Restart
 20216 ;;		i2_I2C_Start
 20217 ;;		i2_I2C_Stop
 20218 ;;		i2_I2C_Write
 20219 ;; This function is called by:
 20220 ;;		_timer
 20221 ;; This function uses a non-reentrant model
 20222 ;;
 20223                           
 20224                           	psect	text75
 20225  0039AC                     __ptext75:
 20226                           	opt stack 0
 20227  0039AC                     i2_getDS1307TimeDate:
 20228                           	opt stack 0
 20229  0039AC  FFFF               	dw	65535	; assembler added errata NOP
 20230                           
 20231                           ;ds1307.h: 54: I2C_Start();
 20232                           
 20233                           ;incstack = 0
 20234  0039AE  EC0A  F032         	call	i2_I2C_Start	;wreg free
 20235                           
 20236                           ;ds1307.h: 55: I2C_Write(0xD0);
 20237  0039B2  0E00               	movlw	0
 20238  0039B4  6E03               	movwf	i2I2C_Write@d+1,c
 20239  0039B6  0ED0               	movlw	208
 20240  0039B8  6E02               	movwf	i2I2C_Write@d,c
 20241  0039BA  EC2E  F032         	call	i2_I2C_Write	;wreg free
 20242                           
 20243                           ;ds1307.h: 56: I2C_Write(0x00);
 20244  0039BE  0E00               	movlw	0
 20245  0039C0  6E03               	movwf	i2I2C_Write@d+1,c
 20246  0039C2  0E00               	movlw	0
 20247  0039C4  6E02               	movwf	i2I2C_Write@d,c
 20248  0039C6  EC2E  F032         	call	i2_I2C_Write	;wreg free
 20249                           
 20250                           ;ds1307.h: 57: I2C_Restart();
 20251  0039CA  EC16  F032         	call	i2_I2C_Restart	;wreg free
 20252                           
 20253                           ;ds1307.h: 58: I2C_Write(0xD1);
 20254  0039CE  0E00               	movlw	0
 20255  0039D0  6E03               	movwf	i2I2C_Write@d+1,c
 20256  0039D2  0ED1               	movlw	209
 20257  0039D4  6E02               	movwf	i2I2C_Write@d,c
 20258  0039D6  EC2E  F032         	call	i2_I2C_Write	;wreg free
 20259                           
 20260                           ;ds1307.h: 59: ptrToUserVal->sec = BCDtoDEC(I2C_Read(1));
 20261  0039DA  EE20 F001          	lfsr	2,1
 20262  0039DE  5006               	movf	i2getDS1307TimeDate@ptrToUserVal,w,c
 20263  0039E0  26D9               	addwf	fsr2l,f,c
 20264  0039E2  5007               	movf	i2getDS1307TimeDate@ptrToUserVal+1,w,c
 20265  0039E4  22DA               	addwfc	fsr2h,f,c
 20266  0039E6  0E00               	movlw	0
 20267  0039E8  6E03               	movwf	i2I2C_Read@a+1,c
 20268  0039EA  0E01               	movlw	1
 20269  0039EC  6E02               	movwf	i2I2C_Read@a,c
 20270  0039EE  EC24  F033         	call	i2_I2C_Read	;wreg free
 20271  0039F2  5002               	movf	?i2_I2C_Read,w,c
 20272  0039F4  EC57  F032         	call	i2_BCDtoDEC
 20273  0039F8  6EDF               	movwf	indf2,c
 20274                           
 20275                           ;ds1307.h: 60: ptrToUserVal-> min = BCDtoDEC(I2C_Read(1));
 20276  0039FA  EE20 F002          	lfsr	2,2
 20277  0039FE  5006               	movf	i2getDS1307TimeDate@ptrToUserVal,w,c
 20278  003A00  26D9               	addwf	fsr2l,f,c
 20279  003A02  5007               	movf	i2getDS1307TimeDate@ptrToUserVal+1,w,c
 20280  003A04  22DA               	addwfc	fsr2h,f,c
 20281  003A06  0E00               	movlw	0
 20282  003A08  6E03               	movwf	i2I2C_Read@a+1,c
 20283  003A0A  0E01               	movlw	1
 20284  003A0C  6E02               	movwf	i2I2C_Read@a,c
 20285  003A0E  EC24  F033         	call	i2_I2C_Read	;wreg free
 20286  003A12  5002               	movf	?i2_I2C_Read,w,c
 20287  003A14  EC57  F032         	call	i2_BCDtoDEC
 20288  003A18  6EDF               	movwf	indf2,c
 20289                           
 20290                           ;ds1307.h: 61: ptrToUserVal-> hour = BCDtoDEC(I2C_Read(1));
 20291  003A1A  EE20 F003          	lfsr	2,3
 20292  003A1E  5006               	movf	i2getDS1307TimeDate@ptrToUserVal,w,c
 20293  003A20  26D9               	addwf	fsr2l,f,c
 20294  003A22  5007               	movf	i2getDS1307TimeDate@ptrToUserVal+1,w,c
 20295  003A24  22DA               	addwfc	fsr2h,f,c
 20296  003A26  0E00               	movlw	0
 20297  003A28  6E03               	movwf	i2I2C_Read@a+1,c
 20298  003A2A  0E01               	movlw	1
 20299  003A2C  6E02               	movwf	i2I2C_Read@a,c
 20300  003A2E  EC24  F033         	call	i2_I2C_Read	;wreg free
 20301  003A32  5002               	movf	?i2_I2C_Read,w,c
 20302  003A34  EC57  F032         	call	i2_BCDtoDEC
 20303  003A38  6EDF               	movwf	indf2,c
 20304                           
 20305                           ;ds1307.h: 62: ptrToUserVal-> day = BCDtoDEC(I2C_Read(1));
 20306  003A3A  0E00               	movlw	0
 20307  003A3C  6E03               	movwf	i2I2C_Read@a+1,c
 20308  003A3E  0E01               	movlw	1
 20309  003A40  6E02               	movwf	i2I2C_Read@a,c
 20310  003A42  EC24  F033         	call	i2_I2C_Read	;wreg free
 20311  003A46  5002               	movf	?i2_I2C_Read,w,c
 20312  003A48  EC57  F032         	call	i2_BCDtoDEC
 20313  003A4C  C006  FFD9         	movff	i2getDS1307TimeDate@ptrToUserVal,fsr2l
 20314  003A50  C007  FFDA         	movff	i2getDS1307TimeDate@ptrToUserVal+1,fsr2h
 20315  003A54  6EDF               	movwf	indf2,c
 20316                           
 20317                           ;ds1307.h: 63: ptrToUserVal-> date = BCDtoDEC(I2C_Read(1));
 20318  003A56  EE20 F004          	lfsr	2,4
 20319  003A5A  5006               	movf	i2getDS1307TimeDate@ptrToUserVal,w,c
 20320  003A5C  26D9               	addwf	fsr2l,f,c
 20321  003A5E  5007               	movf	i2getDS1307TimeDate@ptrToUserVal+1,w,c
 20322  003A60  22DA               	addwfc	fsr2h,f,c
 20323  003A62  0E00               	movlw	0
 20324  003A64  6E03               	movwf	i2I2C_Read@a+1,c
 20325  003A66  0E01               	movlw	1
 20326  003A68  6E02               	movwf	i2I2C_Read@a,c
 20327  003A6A  EC24  F033         	call	i2_I2C_Read	;wreg free
 20328  003A6E  5002               	movf	?i2_I2C_Read,w,c
 20329  003A70  EC57  F032         	call	i2_BCDtoDEC
 20330  003A74  6EDF               	movwf	indf2,c
 20331                           
 20332                           ;ds1307.h: 64: ptrToUserVal-> month = BCDtoDEC(I2C_Read(1));
 20333  003A76  EE20 F005          	lfsr	2,5
 20334  003A7A  5006               	movf	i2getDS1307TimeDate@ptrToUserVal,w,c
 20335  003A7C  26D9               	addwf	fsr2l,f,c
 20336  003A7E  5007               	movf	i2getDS1307TimeDate@ptrToUserVal+1,w,c
 20337  003A80  22DA               	addwfc	fsr2h,f,c
 20338  003A82  0E00               	movlw	0
 20339  003A84  6E03               	movwf	i2I2C_Read@a+1,c
 20340  003A86  0E01               	movlw	1
 20341  003A88  6E02               	movwf	i2I2C_Read@a,c
 20342  003A8A  EC24  F033         	call	i2_I2C_Read	;wreg free
 20343  003A8E  5002               	movf	?i2_I2C_Read,w,c
 20344  003A90  EC57  F032         	call	i2_BCDtoDEC
 20345  003A94  6EDF               	movwf	indf2,c
 20346                           
 20347                           ;ds1307.h: 65: ptrToUserVal-> year = BCDtoDEC(I2C_Read(0));
 20348  003A96  EE20 F006          	lfsr	2,6
 20349  003A9A  5006               	movf	i2getDS1307TimeDate@ptrToUserVal,w,c
 20350  003A9C  26D9               	addwf	fsr2l,f,c
 20351  003A9E  5007               	movf	i2getDS1307TimeDate@ptrToUserVal+1,w,c
 20352  003AA0  22DA               	addwfc	fsr2h,f,c
 20353  003AA2  0E00               	movlw	0
 20354  003AA4  6E03               	movwf	i2I2C_Read@a+1,c
 20355  003AA6  0E00               	movlw	0
 20356  003AA8  6E02               	movwf	i2I2C_Read@a,c
 20357  003AAA  EC24  F033         	call	i2_I2C_Read	;wreg free
 20358  003AAE  5002               	movf	?i2_I2C_Read,w,c
 20359  003AB0  EC57  F032         	call	i2_BCDtoDEC
 20360  003AB4  6EDF               	movwf	indf2,c
 20361                           
 20362                           ;ds1307.h: 66: I2C_Stop();
 20363  003AB6  EC10  F032         	call	i2_I2C_Stop	;wreg free
 20364  003ABA  0012               	return		;funcret
 20365  003ABC  FFFF               	dw	65535	; errata NOP
 20366  003ABE                     __end_ofi2_getDS1307TimeDate:
 20367                           	opt stack 0
 20368                           tosu	equ	0xFFF
 20369                           tosh	equ	0xFFE
 20370                           tosl	equ	0xFFD
 20371                           pclatu	equ	0xFFB
 20372                           pclath	equ	0xFFA
 20373                           tblptru	equ	0xFF8
 20374                           tblptrh	equ	0xFF7
 20375                           tblptrl	equ	0xFF6
 20376                           tablat	equ	0xFF5
 20377                           prodh	equ	0xFF4
 20378                           prodl	equ	0xFF3
 20379                           intcon	equ	0xFF2
 20380                           indf0	equ	0xFEF
 20381                           postinc0	equ	0xFEE
 20382                           fsr0h	equ	0xFEA
 20383                           fsr0l	equ	0xFE9
 20384                           wreg	equ	0xFE8
 20385                           postdec1	equ	0xFE5
 20386                           fsr1h	equ	0xFE2
 20387                           fsr1l	equ	0xFE1
 20388                           indf2	equ	0xFDF
 20389                           postinc2	equ	0xFDE
 20390                           postdec2	equ	0xFDD
 20391                           fsr2h	equ	0xFDA
 20392                           fsr2l	equ	0xFD9
 20393                           status	equ	0xFD8
 20394                           
 20395 ;; *************** function i2_I2C_Restart *****************
 20396 ;; Defined at:
 20397 ;;		line 31 in file "I2C.c"
 20398 ;; Parameters:    Size  Location     Type
 20399 ;;		None
 20400 ;; Auto vars:     Size  Location     Type
 20401 ;;		None
 20402 ;; Return value:  Size  Location     Type
 20403 ;;                  1    wreg      void 
 20404 ;; Registers used:
 20405 ;;		wreg, status,2, status,0, cstack
 20406 ;; Tracked objects:
 20407 ;;		On entry : 0/0
 20408 ;;		On exit  : 0/0
 20409 ;;		Unchanged: 0/0
 20410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20411 ;;      Params:         0       0       0       0       0       0       0
 20412 ;;      Locals:         0       0       0       0       0       0       0
 20413 ;;      Temps:          0       0       0       0       0       0       0
 20414 ;;      Totals:         0       0       0       0       0       0       0
 20415 ;;Total ram usage:        0 bytes
 20416 ;; Hardware stack levels used:    1
 20417 ;; Hardware stack levels required when called:    1
 20418 ;; This function calls:
 20419 ;;		i2_I2C_Wait
 20420 ;; This function is called by:
 20421 ;;		i2_getDS1307TimeDate
 20422 ;; This function uses a non-reentrant model
 20423 ;;
 20424                           
 20425                           	psect	text76
 20426  00642C                     __ptext76:
 20427                           	opt stack 0
 20428  00642C                     i2_I2C_Restart:
 20429                           	opt stack 0
 20430  00642C  FFFF               	dw	65535	; assembler added errata NOP
 20431                           
 20432                           ;I2C.c: 32: I2C_Wait();
 20433                           
 20434                           ;incstack = 0
 20435  00642E  EC62  F032         	call	i2_I2C_Wait	;wreg free
 20436                           
 20437                           ;I2C.c: 33: RSEN = 1;
 20438  006432  82C5               	bsf	4037,1,c	;volatile
 20439  006434  0012               	return		;funcret
 20440  006436  FFFF               	dw	65535	; errata NOP
 20441  006438                     __end_ofi2_I2C_Restart:
 20442                           	opt stack 0
 20443                           tosu	equ	0xFFF
 20444                           tosh	equ	0xFFE
 20445                           tosl	equ	0xFFD
 20446                           pclatu	equ	0xFFB
 20447                           pclath	equ	0xFFA
 20448                           tblptru	equ	0xFF8
 20449                           tblptrh	equ	0xFF7
 20450                           tblptrl	equ	0xFF6
 20451                           tablat	equ	0xFF5
 20452                           prodh	equ	0xFF4
 20453                           prodl	equ	0xFF3
 20454                           intcon	equ	0xFF2
 20455                           indf0	equ	0xFEF
 20456                           postinc0	equ	0xFEE
 20457                           fsr0h	equ	0xFEA
 20458                           fsr0l	equ	0xFE9
 20459                           wreg	equ	0xFE8
 20460                           postdec1	equ	0xFE5
 20461                           fsr1h	equ	0xFE2
 20462                           fsr1l	equ	0xFE1
 20463                           indf2	equ	0xFDF
 20464                           postinc2	equ	0xFDE
 20465                           postdec2	equ	0xFDD
 20466                           fsr2h	equ	0xFDA
 20467                           fsr2l	equ	0xFD9
 20468                           status	equ	0xFD8
 20469                           
 20470 ;; *************** function i2_I2C_Read *****************
 20471 ;; Defined at:
 20472 ;;		line 47 in file "I2C.c"
 20473 ;; Parameters:    Size  Location     Type
 20474 ;;  a               2    1[COMRAM] unsigned short 
 20475 ;; Auto vars:     Size  Location     Type
 20476 ;;  I2C_Read        2    3[COMRAM] unsigned short 
 20477 ;; Return value:  Size  Location     Type
 20478 ;;                  2    1[COMRAM] unsigned short 
 20479 ;; Registers used:
 20480 ;;		wreg, status,2, status,0, cstack
 20481 ;; Tracked objects:
 20482 ;;		On entry : 0/0
 20483 ;;		On exit  : 0/0
 20484 ;;		Unchanged: 0/0
 20485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20486 ;;      Params:         2       0       0       0       0       0       0
 20487 ;;      Locals:         2       0       0       0       0       0       0
 20488 ;;      Temps:          0       0       0       0       0       0       0
 20489 ;;      Totals:         4       0       0       0       0       0       0
 20490 ;;Total ram usage:        4 bytes
 20491 ;; Hardware stack levels used:    1
 20492 ;; Hardware stack levels required when called:    1
 20493 ;; This function calls:
 20494 ;;		i2_I2C_Wait
 20495 ;; This function is called by:
 20496 ;;		i2_getDS1307TimeDate
 20497 ;; This function uses a non-reentrant model
 20498 ;;
 20499                           
 20500                           	psect	text77
 20501  006648                     __ptext77:
 20502                           	opt stack 0
 20503  006648                     i2_I2C_Read:
 20504                           	opt stack 0
 20505  006648  FFFF               	dw	65535	; assembler added errata NOP
 20506                           
 20507                           ;I2C.c: 48: unsigned short temp;
 20508                           ;I2C.c: 49: I2C_Wait();
 20509                           
 20510                           ;incstack = 0
 20511  00664A  EC62  F032         	call	i2_I2C_Wait	;wreg free
 20512                           
 20513                           ;I2C.c: 50: RCEN = 1;
 20514  00664E  86C5               	bsf	4037,3,c	;volatile
 20515                           
 20516                           ;I2C.c: 51: I2C_Wait();
 20517  006650  EC62  F032         	call	i2_I2C_Wait	;wreg free
 20518                           
 20519                           ;I2C.c: 52: temp = SSPBUF;
 20520  006654  CFC9 F004          	movff	4041,i2I2C_Read@temp	;volatile
 20521  006658  6A05               	clrf	i2I2C_Read@temp+1,c
 20522                           
 20523                           ;I2C.c: 53: I2C_Wait();
 20524  00665A  EC62  F032         	call	i2_I2C_Wait	;wreg free
 20525                           
 20526                           ;I2C.c: 54: ACKDT = (a) ? 0 : 1;
 20527  00665E  5002               	movf	i2I2C_Read@a,w,c
 20528  006660  1003               	iorwf	i2I2C_Read@a+1,w,c
 20529  006662  A4D8               	btfss	status,2,c
 20530  006664  D002               	goto	i2u548_40
 20531  006666  8AC5               	bsf	4037,5,c	;volatile
 20532  006668  D002               	goto	i2l5390
 20533  00666A                     i2u548_40:
 20534  00666A  FFFF               	dw	65535	; assembler added errata NOP
 20535  00666C  9AC5               	bcf	4037,5,c	;volatile
 20536  00666E                     i2l5390:
 20537  00666E  FFFF               	dw	65535	; assembler added errata NOP
 20538                           
 20539                           ;I2C.c: 55: ACKEN = 1;
 20540  006670  88C5               	bsf	4037,4,c	;volatile
 20541                           
 20542                           ;I2C.c: 56: return temp;
 20543  006672  C004  F002         	movff	i2I2C_Read@temp,?i2_I2C_Read
 20544  006676  C005  F003         	movff	i2I2C_Read@temp+1,?i2_I2C_Read+1
 20545  00667A  0012               	return		;funcret
 20546  00667C  FFFF               	dw	65535	; errata NOP
 20547  00667E                     __end_ofi2_I2C_Read:
 20548                           	opt stack 0
 20549                           tosu	equ	0xFFF
 20550                           tosh	equ	0xFFE
 20551                           tosl	equ	0xFFD
 20552                           pclatu	equ	0xFFB
 20553                           pclath	equ	0xFFA
 20554                           tblptru	equ	0xFF8
 20555                           tblptrh	equ	0xFF7
 20556                           tblptrl	equ	0xFF6
 20557                           tablat	equ	0xFF5
 20558                           prodh	equ	0xFF4
 20559                           prodl	equ	0xFF3
 20560                           intcon	equ	0xFF2
 20561                           indf0	equ	0xFEF
 20562                           postinc0	equ	0xFEE
 20563                           fsr0h	equ	0xFEA
 20564                           fsr0l	equ	0xFE9
 20565                           wreg	equ	0xFE8
 20566                           postdec1	equ	0xFE5
 20567                           fsr1h	equ	0xFE2
 20568                           fsr1l	equ	0xFE1
 20569                           indf2	equ	0xFDF
 20570                           postinc2	equ	0xFDE
 20571                           postdec2	equ	0xFDD
 20572                           fsr2h	equ	0xFDA
 20573                           fsr2l	equ	0xFD9
 20574                           status	equ	0xFD8
 20575                           
 20576 ;; *************** function i2_BCDtoDEC *****************
 20577 ;; Defined at:
 20578 ;;		line 34 in file "function.c"
 20579 ;; Parameters:    Size  Location     Type
 20580 ;;  val             1    wreg     unsigned char 
 20581 ;; Auto vars:     Size  Location     Type
 20582 ;;  val             1    0[COMRAM] unsigned char 
 20583 ;; Return value:  Size  Location     Type
 20584 ;;                  1    wreg      unsigned char 
 20585 ;; Registers used:
 20586 ;;		wreg, status,2, status,0, prodl, prodh
 20587 ;; Tracked objects:
 20588 ;;		On entry : 0/0
 20589 ;;		On exit  : 0/0
 20590 ;;		Unchanged: 0/0
 20591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20592 ;;      Params:         0       0       0       0       0       0       0
 20593 ;;      Locals:         1       0       0       0       0       0       0
 20594 ;;      Temps:          0       0       0       0       0       0       0
 20595 ;;      Totals:         1       0       0       0       0       0       0
 20596 ;;Total ram usage:        1 bytes
 20597 ;; Hardware stack levels used:    1
 20598 ;; This function calls:
 20599 ;;		Nothing
 20600 ;; This function is called by:
 20601 ;;		i2_getDS1307TimeDate
 20602 ;; This function uses a non-reentrant model
 20603 ;;
 20604                           
 20605                           	psect	text78
 20606  0064AE                     __ptext78:
 20607                           	opt stack 0
 20608  0064AE                     i2_BCDtoDEC:
 20609                           	opt stack 0
 20610  0064AE  FFFF               	dw	65535	; assembler added errata NOP
 20611                           
 20612                           ;incstack = 0
 20613                           ;i2BCDtoDEC@val stored from wreg
 20614  0064B0  6E01               	movwf	i2BCDtoDEC@val,c
 20615                           
 20616                           ;function.c: 35: return (val & 0x0F) + ((val & 0xF0) >> 4)*10;
 20617  0064B2  3801               	swapf	i2BCDtoDEC@val,w,c
 20618  0064B4  0B0F               	andlw	15
 20619  0064B6  0B0F               	andlw	15
 20620  0064B8  0D0A               	mullw	10
 20621  0064BA  5001               	movf	i2BCDtoDEC@val,w,c
 20622  0064BC  0B0F               	andlw	15
 20623  0064BE  24F3               	addwf	prodl,w,c
 20624  0064C0  0012               	return		;funcret
 20625  0064C2  FFFF               	dw	65535	; errata NOP
 20626  0064C4                     __end_ofi2_BCDtoDEC:
 20627                           	opt stack 0
 20628                           tosu	equ	0xFFF
 20629                           tosh	equ	0xFFE
 20630                           tosl	equ	0xFFD
 20631                           pclatu	equ	0xFFB
 20632                           pclath	equ	0xFFA
 20633                           tblptru	equ	0xFF8
 20634                           tblptrh	equ	0xFF7
 20635                           tblptrl	equ	0xFF6
 20636                           tablat	equ	0xFF5
 20637                           prodh	equ	0xFF4
 20638                           prodl	equ	0xFF3
 20639                           intcon	equ	0xFF2
 20640                           indf0	equ	0xFEF
 20641                           postinc0	equ	0xFEE
 20642                           fsr0h	equ	0xFEA
 20643                           fsr0l	equ	0xFE9
 20644                           wreg	equ	0xFE8
 20645                           postdec1	equ	0xFE5
 20646                           fsr1h	equ	0xFE2
 20647                           fsr1l	equ	0xFE1
 20648                           indf2	equ	0xFDF
 20649                           postinc2	equ	0xFDE
 20650                           postdec2	equ	0xFDD
 20651                           fsr2h	equ	0xFDA
 20652                           fsr2l	equ	0xFD9
 20653                           status	equ	0xFD8
 20654                           
 20655 ;; *************** function i2_RTC_Init *****************
 20656 ;; Defined at:
 20657 ;;		line 98 in file "ds1307.h"
 20658 ;; Parameters:    Size  Location     Type
 20659 ;;		None
 20660 ;; Auto vars:     Size  Location     Type
 20661 ;;		None
 20662 ;; Return value:  Size  Location     Type
 20663 ;;                  1    wreg      void 
 20664 ;; Registers used:
 20665 ;;		wreg, status,2, status,0, cstack
 20666 ;; Tracked objects:
 20667 ;;		On entry : 0/0
 20668 ;;		On exit  : 0/0
 20669 ;;		Unchanged: 0/0
 20670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20671 ;;      Params:         0       0       0       0       0       0       0
 20672 ;;      Locals:         0       0       0       0       0       0       0
 20673 ;;      Temps:          0       0       0       0       0       0       0
 20674 ;;      Totals:         0       0       0       0       0       0       0
 20675 ;;Total ram usage:        0 bytes
 20676 ;; Hardware stack levels used:    1
 20677 ;; Hardware stack levels required when called:    2
 20678 ;; This function calls:
 20679 ;;		i2_I2C_Start
 20680 ;;		i2_I2C_Stop
 20681 ;;		i2_I2C_Write
 20682 ;; This function is called by:
 20683 ;;		_timer
 20684 ;; This function uses a non-reentrant model
 20685 ;;
 20686                           
 20687                           	psect	text79
 20688  006616                     __ptext79:
 20689                           	opt stack 0
 20690  006616                     i2_RTC_Init:
 20691                           	opt stack 0
 20692  006616  FFFF               	dw	65535	; assembler added errata NOP
 20693                           
 20694                           ;ds1307.h: 100: I2C_Start();
 20695                           
 20696                           ;incstack = 0
 20697  006618  EC0A  F032         	call	i2_I2C_Start	;wreg free
 20698                           
 20699                           ;ds1307.h: 101: I2C_Write(0xD0);
 20700  00661C  0E00               	movlw	0
 20701  00661E  6E03               	movwf	i2I2C_Write@d+1,c
 20702  006620  0ED0               	movlw	208
 20703  006622  6E02               	movwf	i2I2C_Write@d,c
 20704  006624  EC2E  F032         	call	i2_I2C_Write	;wreg free
 20705                           
 20706                           ;ds1307.h: 102: I2C_Write(0x07);
 20707  006628  0E00               	movlw	0
 20708  00662A  6E03               	movwf	i2I2C_Write@d+1,c
 20709  00662C  0E07               	movlw	7
 20710  00662E  6E02               	movwf	i2I2C_Write@d,c
 20711  006630  EC2E  F032         	call	i2_I2C_Write	;wreg free
 20712                           
 20713                           ;ds1307.h: 103: I2C_Write(0x00);
 20714  006634  0E00               	movlw	0
 20715  006636  6E03               	movwf	i2I2C_Write@d+1,c
 20716  006638  0E00               	movlw	0
 20717  00663A  6E02               	movwf	i2I2C_Write@d,c
 20718  00663C  EC2E  F032         	call	i2_I2C_Write	;wreg free
 20719                           
 20720                           ;ds1307.h: 104: I2C_Stop();
 20721  006640  EC10  F032         	call	i2_I2C_Stop	;wreg free
 20722  006644  0012               	return		;funcret
 20723  006646  FFFF               	dw	65535	; errata NOP
 20724  006648                     __end_ofi2_RTC_Init:
 20725                           	opt stack 0
 20726                           tosu	equ	0xFFF
 20727                           tosh	equ	0xFFE
 20728                           tosl	equ	0xFFD
 20729                           pclatu	equ	0xFFB
 20730                           pclath	equ	0xFFA
 20731                           tblptru	equ	0xFF8
 20732                           tblptrh	equ	0xFF7
 20733                           tblptrl	equ	0xFF6
 20734                           tablat	equ	0xFF5
 20735                           prodh	equ	0xFF4
 20736                           prodl	equ	0xFF3
 20737                           intcon	equ	0xFF2
 20738                           indf0	equ	0xFEF
 20739                           postinc0	equ	0xFEE
 20740                           fsr0h	equ	0xFEA
 20741                           fsr0l	equ	0xFE9
 20742                           wreg	equ	0xFE8
 20743                           postdec1	equ	0xFE5
 20744                           fsr1h	equ	0xFE2
 20745                           fsr1l	equ	0xFE1
 20746                           indf2	equ	0xFDF
 20747                           postinc2	equ	0xFDE
 20748                           postdec2	equ	0xFDD
 20749                           fsr2h	equ	0xFDA
 20750                           fsr2l	equ	0xFD9
 20751                           status	equ	0xFD8
 20752                           
 20753 ;; *************** function _writeEEPROM16_ext *****************
 20754 ;; Defined at:
 20755 ;;		line 40 in file "eeprom.h"
 20756 ;; Parameters:    Size  Location     Type
 20757 ;;  adress          1    wreg     unsigned char 
 20758 ;;  data            2    5[COMRAM] unsigned int 
 20759 ;; Auto vars:     Size  Location     Type
 20760 ;;  adress          1    7[COMRAM] unsigned char 
 20761 ;; Return value:  Size  Location     Type
 20762 ;;                  1    wreg      void 
 20763 ;; Registers used:
 20764 ;;		wreg, status,2, status,0, cstack
 20765 ;; Tracked objects:
 20766 ;;		On entry : 0/0
 20767 ;;		On exit  : 0/0
 20768 ;;		Unchanged: 0/0
 20769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20770 ;;      Params:         2       0       0       0       0       0       0
 20771 ;;      Locals:         1       0       0       0       0       0       0
 20772 ;;      Temps:          0       0       0       0       0       0       0
 20773 ;;      Totals:         3       0       0       0       0       0       0
 20774 ;;Total ram usage:        3 bytes
 20775 ;; Hardware stack levels used:    1
 20776 ;; Hardware stack levels required when called:    3
 20777 ;; This function calls:
 20778 ;;		i2_writeEEPROM_ext
 20779 ;; This function is called by:
 20780 ;;		_timer
 20781 ;; This function uses a non-reentrant model
 20782 ;;
 20783                           
 20784                           	psect	text80
 20785  006516                     __ptext80:
 20786                           	opt stack 0
 20787  006516                     _writeEEPROM16_ext:
 20788                           	opt stack 0
 20789  006516  FFFF               	dw	65535	; assembler added errata NOP
 20790                           
 20791                           ;incstack = 0
 20792                           ;writeEEPROM16_ext@adress stored from wreg
 20793  006518  6E08               	movwf	writeEEPROM16_ext@adress,c
 20794                           
 20795                           ;eeprom.h: 41: writeEEPROM_ext(adress, data);
 20796  00651A  C006  F004         	movff	writeEEPROM16_ext@data,i2writeEEPROM_ext@data
 20797  00651E  5008               	movf	writeEEPROM16_ext@adress,w,c
 20798  006520  ECB2  F033         	call	i2_writeEEPROM_ext
 20799                           
 20800                           ;eeprom.h: 42: data>> = 8;
 20801  006524  5007               	movf	writeEEPROM16_ext@data+1,w,c
 20802  006526  6E06               	movwf	writeEEPROM16_ext@data,c
 20803  006528  6A07               	clrf	writeEEPROM16_ext@data+1,c
 20804                           
 20805                           ;eeprom.h: 43: writeEEPROM_ext(adress + 1, data);
 20806  00652A  C006  F004         	movff	writeEEPROM16_ext@data,i2writeEEPROM_ext@data
 20807  00652E  2808               	incf	writeEEPROM16_ext@adress,w,c
 20808  006530  ECB2  F033         	call	i2_writeEEPROM_ext
 20809  006534  0012               	return		;funcret
 20810  006536  FFFF               	dw	65535	; errata NOP
 20811  006538                     __end_of_writeEEPROM16_ext:
 20812                           	opt stack 0
 20813                           tosu	equ	0xFFF
 20814                           tosh	equ	0xFFE
 20815                           tosl	equ	0xFFD
 20816                           pclatu	equ	0xFFB
 20817                           pclath	equ	0xFFA
 20818                           tblptru	equ	0xFF8
 20819                           tblptrh	equ	0xFF7
 20820                           tblptrl	equ	0xFF6
 20821                           tablat	equ	0xFF5
 20822                           prodh	equ	0xFF4
 20823                           prodl	equ	0xFF3
 20824                           intcon	equ	0xFF2
 20825                           indf0	equ	0xFEF
 20826                           postinc0	equ	0xFEE
 20827                           fsr0h	equ	0xFEA
 20828                           fsr0l	equ	0xFE9
 20829                           wreg	equ	0xFE8
 20830                           postdec1	equ	0xFE5
 20831                           fsr1h	equ	0xFE2
 20832                           fsr1l	equ	0xFE1
 20833                           indf2	equ	0xFDF
 20834                           postinc2	equ	0xFDE
 20835                           postdec2	equ	0xFDD
 20836                           fsr2h	equ	0xFDA
 20837                           fsr2l	equ	0xFD9
 20838                           status	equ	0xFD8
 20839                           
 20840 ;; *************** function i2_writeEEPROM_ext *****************
 20841 ;; Defined at:
 20842 ;;		line 13 in file "eeprom.h"
 20843 ;; Parameters:    Size  Location     Type
 20844 ;;  adress          1    wreg     unsigned char 
 20845 ;;  data            1    3[COMRAM] unsigned char 
 20846 ;; Auto vars:     Size  Location     Type
 20847 ;;  adress          1    4[COMRAM] unsigned char 
 20848 ;; Return value:  Size  Location     Type
 20849 ;;                  1    wreg      void 
 20850 ;; Registers used:
 20851 ;;		wreg, status,2, status,0, cstack
 20852 ;; Tracked objects:
 20853 ;;		On entry : 0/0
 20854 ;;		On exit  : 0/0
 20855 ;;		Unchanged: 0/0
 20856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20857 ;;      Params:         1       0       0       0       0       0       0
 20858 ;;      Locals:         1       0       0       0       0       0       0
 20859 ;;      Temps:          0       0       0       0       0       0       0
 20860 ;;      Totals:         2       0       0       0       0       0       0
 20861 ;;Total ram usage:        2 bytes
 20862 ;; Hardware stack levels used:    1
 20863 ;; Hardware stack levels required when called:    2
 20864 ;; This function calls:
 20865 ;;		i2_I2C_Start
 20866 ;;		i2_I2C_Stop
 20867 ;;		i2_I2C_Write
 20868 ;;		i2_delay
 20869 ;; This function is called by:
 20870 ;;		_writeEEPROM16_ext
 20871 ;;		_timer
 20872 ;; This function uses a non-reentrant model
 20873 ;;
 20874                           
 20875                           	psect	text81
 20876  006764                     __ptext81:
 20877                           	opt stack 0
 20878  006764                     i2_writeEEPROM_ext:
 20879                           	opt stack 0
 20880  006764  FFFF               	dw	65535	; assembler added errata NOP
 20881                           
 20882                           ;incstack = 0
 20883                           ;i2writeEEPROM_ext@adress stored from wreg
 20884  006766  6E05               	movwf	i2writeEEPROM_ext@adress,c
 20885                           
 20886                           ;eeprom.h: 15: I2C_Start();
 20887  006768  EC0A  F032         	call	i2_I2C_Start	;wreg free
 20888                           
 20889                           ;eeprom.h: 16: I2C_Write(0xA0);
 20890  00676C  0E00               	movlw	0
 20891  00676E  6E03               	movwf	i2I2C_Write@d+1,c
 20892  006770  0EA0               	movlw	160
 20893  006772  6E02               	movwf	i2I2C_Write@d,c
 20894  006774  EC2E  F032         	call	i2_I2C_Write	;wreg free
 20895                           
 20896                           ;eeprom.h: 18: I2C_Write(adress);
 20897  006778  C005  F002         	movff	i2writeEEPROM_ext@adress,i2I2C_Write@d
 20898  00677C  6A03               	clrf	i2I2C_Write@d+1,c
 20899  00677E  EC2E  F032         	call	i2_I2C_Write	;wreg free
 20900                           
 20901                           ;eeprom.h: 19: I2C_Write(data);
 20902  006782  C004  F002         	movff	i2writeEEPROM_ext@data,i2I2C_Write@d
 20903  006786  6A03               	clrf	i2I2C_Write@d+1,c
 20904  006788  EC2E  F032         	call	i2_I2C_Write	;wreg free
 20905                           
 20906                           ;eeprom.h: 20: I2C_Stop();
 20907  00678C  EC10  F032         	call	i2_I2C_Stop	;wreg free
 20908                           
 20909                           ;eeprom.h: 21: delay(15);
 20910  006790  0E00               	movlw	0
 20911  006792  6E02               	movwf	i2delay@x+1,c
 20912  006794  0E0F               	movlw	15
 20913  006796  6E01               	movwf	i2delay@x,c
 20914  006798  ECF2  F032         	call	i2_delay	;wreg free
 20915  00679C  0012               	return		;funcret
 20916  00679E  FFFF               	dw	65535	; errata NOP
 20917  0067A0                     __end_ofi2_writeEEPROM_ext:
 20918                           	opt stack 0
 20919                           tosu	equ	0xFFF
 20920                           tosh	equ	0xFFE
 20921                           tosl	equ	0xFFD
 20922                           pclatu	equ	0xFFB
 20923                           pclath	equ	0xFFA
 20924                           tblptru	equ	0xFF8
 20925                           tblptrh	equ	0xFF7
 20926                           tblptrl	equ	0xFF6
 20927                           tablat	equ	0xFF5
 20928                           prodh	equ	0xFF4
 20929                           prodl	equ	0xFF3
 20930                           intcon	equ	0xFF2
 20931                           indf0	equ	0xFEF
 20932                           postinc0	equ	0xFEE
 20933                           fsr0h	equ	0xFEA
 20934                           fsr0l	equ	0xFE9
 20935                           wreg	equ	0xFE8
 20936                           postdec1	equ	0xFE5
 20937                           fsr1h	equ	0xFE2
 20938                           fsr1l	equ	0xFE1
 20939                           indf2	equ	0xFDF
 20940                           postinc2	equ	0xFDE
 20941                           postdec2	equ	0xFDD
 20942                           fsr2h	equ	0xFDA
 20943                           fsr2l	equ	0xFD9
 20944                           status	equ	0xFD8
 20945                           
 20946 ;; *************** function i2_delay *****************
 20947 ;; Defined at:
 20948 ;;		line 16 in file "function.c"
 20949 ;; Parameters:    Size  Location     Type
 20950 ;;  x               2    0[COMRAM] int 
 20951 ;; Auto vars:     Size  Location     Type
 20952 ;;		None
 20953 ;; Return value:  Size  Location     Type
 20954 ;;                  1    wreg      void 
 20955 ;; Registers used:
 20956 ;;		wreg, status,2, status,0
 20957 ;; Tracked objects:
 20958 ;;		On entry : 0/0
 20959 ;;		On exit  : 0/0
 20960 ;;		Unchanged: 0/0
 20961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20962 ;;      Params:         2       0       0       0       0       0       0
 20963 ;;      Locals:         0       0       0       0       0       0       0
 20964 ;;      Temps:          1       0       0       0       0       0       0
 20965 ;;      Totals:         3       0       0       0       0       0       0
 20966 ;;Total ram usage:        3 bytes
 20967 ;; Hardware stack levels used:    1
 20968 ;; This function calls:
 20969 ;;		Nothing
 20970 ;; This function is called by:
 20971 ;;		i2_writeEEPROM_ext
 20972 ;; This function uses a non-reentrant model
 20973 ;;
 20974                           
 20975                           	psect	text82
 20976  0065E4                     __ptext82:
 20977                           	opt stack 0
 20978  0065E4                     i2_delay:
 20979                           	opt stack 0
 20980  0065E4  FFFF               	dw	65535	; assembler added errata NOP
 20981                           
 20982                           ;function.c: 17: while (x--) {
 20983                           
 20984                           ;incstack = 0
 20985  0065E6  D00B               	goto	i2l5248
 20986  0065E8                     i2l5246:
 20987  0065E8  FFFF               	dw	65535	; assembler added errata NOP
 20988                           
 20989                           ;function.c: 18: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 20990  0065EA  0E02               	movlw	2
 20991  0065EC  6E03               	movwf	??i2_delay& (0+255),c
 20992  0065EE  0EF2               	movlw	242
 20993  0065F0                     i2u1225_47:
 20994  0065F0  FFFF               	dw	65535	; errata NOP
 20995  0065F2  2EE8               	decfsz	wreg,f,c
 20996  0065F4  D7FD               	bra	i2u1225_47
 20997  0065F6  2E03               	decfsz	??i2_delay& (0+255),f,c
 20998  0065F8  D7FB               	bra	i2u1225_47
 20999  0065FA  D000               	nop2	
 21000  0065FC  0004               	clrwdt		;# 
 21001  0065FE                     i2l5248:
 21002  0065FE  FFFF               	dw	65535	; assembler added errata NOP
 21003  006600  0601               	decf	i2delay@x,f,c
 21004  006602  A0D8               	btfss	status,0,c
 21005  006604  0602               	decf	i2delay@x+1,f,c
 21006  006606  2801               	incf	i2delay@x,w,c
 21007  006608  E1EF               	bnz	i2l5246
 21008  00660A  2802               	incf	i2delay@x+1,w,c
 21009  00660C  B4D8               	btfsc	status,2,c
 21010  00660E  0012               	return		;funcret
 21011  006610  FFFF               	dw	65535	; assembler added errata NOP
 21012  006612  D7EA               	goto	i2l5246
 21013  006614  FFFF               	dw	65535	; errata NOP
 21014  006616                     __end_ofi2_delay:
 21015                           	opt stack 0
 21016                           tosu	equ	0xFFF
 21017                           tosh	equ	0xFFE
 21018                           tosl	equ	0xFFD
 21019                           pclatu	equ	0xFFB
 21020                           pclath	equ	0xFFA
 21021                           tblptru	equ	0xFF8
 21022                           tblptrh	equ	0xFF7
 21023                           tblptrl	equ	0xFF6
 21024                           tablat	equ	0xFF5
 21025                           prodh	equ	0xFF4
 21026                           prodl	equ	0xFF3
 21027                           intcon	equ	0xFF2
 21028                           indf0	equ	0xFEF
 21029                           postinc0	equ	0xFEE
 21030                           fsr0h	equ	0xFEA
 21031                           fsr0l	equ	0xFE9
 21032                           wreg	equ	0xFE8
 21033                           postdec1	equ	0xFE5
 21034                           fsr1h	equ	0xFE2
 21035                           fsr1l	equ	0xFE1
 21036                           indf2	equ	0xFDF
 21037                           postinc2	equ	0xFDE
 21038                           postdec2	equ	0xFDD
 21039                           fsr2h	equ	0xFDA
 21040                           fsr2l	equ	0xFD9
 21041                           status	equ	0xFD8
 21042                           
 21043 ;; *************** function i2_I2C_Write *****************
 21044 ;; Defined at:
 21045 ;;		line 42 in file "I2C.c"
 21046 ;; Parameters:    Size  Location     Type
 21047 ;;  d               2    1[COMRAM] unsigned int 
 21048 ;; Auto vars:     Size  Location     Type
 21049 ;;		None
 21050 ;; Return value:  Size  Location     Type
 21051 ;;                  1    wreg      void 
 21052 ;; Registers used:
 21053 ;;		wreg, status,2, status,0, cstack
 21054 ;; Tracked objects:
 21055 ;;		On entry : 0/0
 21056 ;;		On exit  : 0/0
 21057 ;;		Unchanged: 0/0
 21058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21059 ;;      Params:         2       0       0       0       0       0       0
 21060 ;;      Locals:         0       0       0       0       0       0       0
 21061 ;;      Temps:          0       0       0       0       0       0       0
 21062 ;;      Totals:         2       0       0       0       0       0       0
 21063 ;;Total ram usage:        2 bytes
 21064 ;; Hardware stack levels used:    1
 21065 ;; Hardware stack levels required when called:    1
 21066 ;; This function calls:
 21067 ;;		i2_I2C_Wait
 21068 ;; This function is called by:
 21069 ;;		i2_getDS1307TimeDate
 21070 ;;		i2_RTC_Init
 21071 ;;		i2_writeEEPROM_ext
 21072 ;; This function uses a non-reentrant model
 21073 ;;
 21074                           
 21075                           	psect	text83
 21076  00645C                     __ptext83:
 21077                           	opt stack 0
 21078  00645C                     i2_I2C_Write:
 21079                           	opt stack 0
 21080  00645C  FFFF               	dw	65535	; assembler added errata NOP
 21081                           
 21082                           ;I2C.c: 43: I2C_Wait();
 21083                           
 21084                           ;incstack = 0
 21085  00645E  EC62  F032         	call	i2_I2C_Wait	;wreg free
 21086                           
 21087                           ;I2C.c: 44: SSPBUF = d;
 21088  006462  C002  FFC9         	movff	i2I2C_Write@d,4041	;volatile
 21089  006466  0012               	return		;funcret
 21090  006468  FFFF               	dw	65535	; errata NOP
 21091  00646A                     __end_ofi2_I2C_Write:
 21092                           	opt stack 0
 21093                           tosu	equ	0xFFF
 21094                           tosh	equ	0xFFE
 21095                           tosl	equ	0xFFD
 21096                           pclatu	equ	0xFFB
 21097                           pclath	equ	0xFFA
 21098                           tblptru	equ	0xFF8
 21099                           tblptrh	equ	0xFF7
 21100                           tblptrl	equ	0xFF6
 21101                           tablat	equ	0xFF5
 21102                           prodh	equ	0xFF4
 21103                           prodl	equ	0xFF3
 21104                           intcon	equ	0xFF2
 21105                           indf0	equ	0xFEF
 21106                           postinc0	equ	0xFEE
 21107                           fsr0h	equ	0xFEA
 21108                           fsr0l	equ	0xFE9
 21109                           wreg	equ	0xFE8
 21110                           postdec1	equ	0xFE5
 21111                           fsr1h	equ	0xFE2
 21112                           fsr1l	equ	0xFE1
 21113                           indf2	equ	0xFDF
 21114                           postinc2	equ	0xFDE
 21115                           postdec2	equ	0xFDD
 21116                           fsr2h	equ	0xFDA
 21117                           fsr2l	equ	0xFD9
 21118                           status	equ	0xFD8
 21119                           
 21120 ;; *************** function i2_I2C_Stop *****************
 21121 ;; Defined at:
 21122 ;;		line 36 in file "I2C.c"
 21123 ;; Parameters:    Size  Location     Type
 21124 ;;		None
 21125 ;; Auto vars:     Size  Location     Type
 21126 ;;		None
 21127 ;; Return value:  Size  Location     Type
 21128 ;;                  1    wreg      void 
 21129 ;; Registers used:
 21130 ;;		wreg, status,2, status,0, cstack
 21131 ;; Tracked objects:
 21132 ;;		On entry : 0/0
 21133 ;;		On exit  : 0/0
 21134 ;;		Unchanged: 0/0
 21135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21136 ;;      Params:         0       0       0       0       0       0       0
 21137 ;;      Locals:         0       0       0       0       0       0       0
 21138 ;;      Temps:          0       0       0       0       0       0       0
 21139 ;;      Totals:         0       0       0       0       0       0       0
 21140 ;;Total ram usage:        0 bytes
 21141 ;; Hardware stack levels used:    1
 21142 ;; Hardware stack levels required when called:    1
 21143 ;; This function calls:
 21144 ;;		i2_I2C_Wait
 21145 ;; This function is called by:
 21146 ;;		i2_getDS1307TimeDate
 21147 ;;		i2_RTC_Init
 21148 ;;		i2_writeEEPROM_ext
 21149 ;; This function uses a non-reentrant model
 21150 ;;
 21151                           
 21152                           	psect	text84
 21153  006420                     __ptext84:
 21154                           	opt stack 0
 21155  006420                     i2_I2C_Stop:
 21156                           	opt stack 0
 21157  006420  FFFF               	dw	65535	; assembler added errata NOP
 21158                           
 21159                           ;I2C.c: 37: I2C_Wait();
 21160                           
 21161                           ;incstack = 0
 21162  006422  EC62  F032         	call	i2_I2C_Wait	;wreg free
 21163                           
 21164                           ;I2C.c: 38: PEN = 1;
 21165  006426  84C5               	bsf	4037,2,c	;volatile
 21166  006428  0012               	return		;funcret
 21167  00642A  FFFF               	dw	65535	; errata NOP
 21168  00642C                     __end_ofi2_I2C_Stop:
 21169                           	opt stack 0
 21170                           tosu	equ	0xFFF
 21171                           tosh	equ	0xFFE
 21172                           tosl	equ	0xFFD
 21173                           pclatu	equ	0xFFB
 21174                           pclath	equ	0xFFA
 21175                           tblptru	equ	0xFF8
 21176                           tblptrh	equ	0xFF7
 21177                           tblptrl	equ	0xFF6
 21178                           tablat	equ	0xFF5
 21179                           prodh	equ	0xFF4
 21180                           prodl	equ	0xFF3
 21181                           intcon	equ	0xFF2
 21182                           indf0	equ	0xFEF
 21183                           postinc0	equ	0xFEE
 21184                           fsr0h	equ	0xFEA
 21185                           fsr0l	equ	0xFE9
 21186                           wreg	equ	0xFE8
 21187                           postdec1	equ	0xFE5
 21188                           fsr1h	equ	0xFE2
 21189                           fsr1l	equ	0xFE1
 21190                           indf2	equ	0xFDF
 21191                           postinc2	equ	0xFDE
 21192                           postdec2	equ	0xFDD
 21193                           fsr2h	equ	0xFDA
 21194                           fsr2l	equ	0xFD9
 21195                           status	equ	0xFD8
 21196                           
 21197 ;; *************** function i2_I2C_Start *****************
 21198 ;; Defined at:
 21199 ;;		line 26 in file "I2C.c"
 21200 ;; Parameters:    Size  Location     Type
 21201 ;;		None
 21202 ;; Auto vars:     Size  Location     Type
 21203 ;;		None
 21204 ;; Return value:  Size  Location     Type
 21205 ;;                  1    wreg      void 
 21206 ;; Registers used:
 21207 ;;		wreg, status,2, status,0, cstack
 21208 ;; Tracked objects:
 21209 ;;		On entry : 0/0
 21210 ;;		On exit  : 0/0
 21211 ;;		Unchanged: 0/0
 21212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21213 ;;      Params:         0       0       0       0       0       0       0
 21214 ;;      Locals:         0       0       0       0       0       0       0
 21215 ;;      Temps:          0       0       0       0       0       0       0
 21216 ;;      Totals:         0       0       0       0       0       0       0
 21217 ;;Total ram usage:        0 bytes
 21218 ;; Hardware stack levels used:    1
 21219 ;; Hardware stack levels required when called:    1
 21220 ;; This function calls:
 21221 ;;		i2_I2C_Wait
 21222 ;; This function is called by:
 21223 ;;		i2_getDS1307TimeDate
 21224 ;;		i2_RTC_Init
 21225 ;;		i2_writeEEPROM_ext
 21226 ;; This function uses a non-reentrant model
 21227 ;;
 21228                           
 21229                           	psect	text85
 21230  006414                     __ptext85:
 21231                           	opt stack 0
 21232  006414                     i2_I2C_Start:
 21233                           	opt stack 0
 21234  006414  FFFF               	dw	65535	; assembler added errata NOP
 21235                           
 21236                           ;I2C.c: 27: I2C_Wait();
 21237                           
 21238                           ;incstack = 0
 21239  006416  EC62  F032         	call	i2_I2C_Wait	;wreg free
 21240                           
 21241                           ;I2C.c: 28: SEN = 1;
 21242  00641A  80C5               	bsf	4037,0,c	;volatile
 21243  00641C  0012               	return		;funcret
 21244  00641E  FFFF               	dw	65535	; errata NOP
 21245  006420                     __end_ofi2_I2C_Start:
 21246                           	opt stack 0
 21247                           tosu	equ	0xFFF
 21248                           tosh	equ	0xFFE
 21249                           tosl	equ	0xFFD
 21250                           pclatu	equ	0xFFB
 21251                           pclath	equ	0xFFA
 21252                           tblptru	equ	0xFF8
 21253                           tblptrh	equ	0xFF7
 21254                           tblptrl	equ	0xFF6
 21255                           tablat	equ	0xFF5
 21256                           prodh	equ	0xFF4
 21257                           prodl	equ	0xFF3
 21258                           intcon	equ	0xFF2
 21259                           indf0	equ	0xFEF
 21260                           postinc0	equ	0xFEE
 21261                           fsr0h	equ	0xFEA
 21262                           fsr0l	equ	0xFE9
 21263                           wreg	equ	0xFE8
 21264                           postdec1	equ	0xFE5
 21265                           fsr1h	equ	0xFE2
 21266                           fsr1l	equ	0xFE1
 21267                           indf2	equ	0xFDF
 21268                           postinc2	equ	0xFDE
 21269                           postdec2	equ	0xFDD
 21270                           fsr2h	equ	0xFDA
 21271                           fsr2l	equ	0xFD9
 21272                           status	equ	0xFD8
 21273                           
 21274 ;; *************** function i2_I2C_Wait *****************
 21275 ;; Defined at:
 21276 ;;		line 22 in file "I2C.c"
 21277 ;; Parameters:    Size  Location     Type
 21278 ;;		None
 21279 ;; Auto vars:     Size  Location     Type
 21280 ;;		None
 21281 ;; Return value:  Size  Location     Type
 21282 ;;                  1    wreg      void 
 21283 ;; Registers used:
 21284 ;;		wreg, status,2, status,0
 21285 ;; Tracked objects:
 21286 ;;		On entry : 0/0
 21287 ;;		On exit  : 0/0
 21288 ;;		Unchanged: 0/0
 21289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21290 ;;      Params:         0       0       0       0       0       0       0
 21291 ;;      Locals:         0       0       0       0       0       0       0
 21292 ;;      Temps:          1       0       0       0       0       0       0
 21293 ;;      Totals:         1       0       0       0       0       0       0
 21294 ;;Total ram usage:        1 bytes
 21295 ;; Hardware stack levels used:    1
 21296 ;; This function calls:
 21297 ;;		Nothing
 21298 ;; This function is called by:
 21299 ;;		i2_I2C_Start
 21300 ;;		i2_I2C_Restart
 21301 ;;		i2_I2C_Stop
 21302 ;;		i2_I2C_Write
 21303 ;;		i2_I2C_Read
 21304 ;; This function uses a non-reentrant model
 21305 ;;
 21306                           
 21307                           	psect	text86
 21308  0064C4                     __ptext86:
 21309                           	opt stack 0
 21310  0064C4                     i2_I2C_Wait:
 21311                           	opt stack 0
 21312  0064C4  FFFF               	dw	65535	; assembler added errata NOP
 21313  0064C6                     i2l957:
 21314  0064C6  FFFF               	dw	65535	; assembler added errata NOP
 21315  0064C8  B4C7               	btfsc	4039,2,c	;volatile
 21316  0064CA  D7FD               	goto	i2l957
 21317  0064CC  CFC5 F001          	movff	4037,??i2_I2C_Wait	;volatile
 21318  0064D0  0E1F               	movlw	31
 21319  0064D2  1601               	andwf	??i2_I2C_Wait,f,c
 21320  0064D4  B4D8               	btfsc	status,2,c
 21321  0064D6  0012               	return		;funcret
 21322  0064D8  FFFF               	dw	65535	; assembler added errata NOP
 21323  0064DA  D7F5               	goto	i2l957
 21324  0064DC  FFFF               	dw	65535	; errata NOP
 21325  0064DE                     __end_ofi2_I2C_Wait:
 21326                           	opt stack 0
 21327                           tosu	equ	0xFFF
 21328                           tosh	equ	0xFFE
 21329                           tosl	equ	0xFFD
 21330                           pclatu	equ	0xFFB
 21331                           pclath	equ	0xFFA
 21332                           tblptru	equ	0xFF8
 21333                           tblptrh	equ	0xFF7
 21334                           tblptrl	equ	0xFF6
 21335                           tablat	equ	0xFF5
 21336                           prodh	equ	0xFF4
 21337                           prodl	equ	0xFF3
 21338                           intcon	equ	0xFF2
 21339                           indf0	equ	0xFEF
 21340                           postinc0	equ	0xFEE
 21341                           fsr0h	equ	0xFEA
 21342                           fsr0l	equ	0xFE9
 21343                           wreg	equ	0xFE8
 21344                           postdec1	equ	0xFE5
 21345                           fsr1h	equ	0xFE2
 21346                           fsr1l	equ	0xFE1
 21347                           indf2	equ	0xFDF
 21348                           postinc2	equ	0xFDE
 21349                           postdec2	equ	0xFDD
 21350                           fsr2h	equ	0xFDA
 21351                           fsr2l	equ	0xFD9
 21352                           status	equ	0xFD8
 21353                           
 21354 ;; *************** function _readButtons *****************
 21355 ;; Defined at:
 21356 ;;		line 25 in file "teclado.h"
 21357 ;; Parameters:    Size  Location     Type
 21358 ;;		None
 21359 ;; Auto vars:     Size  Location     Type
 21360 ;;		None
 21361 ;; Return value:  Size  Location     Type
 21362 ;;                  1    wreg      void 
 21363 ;; Registers used:
 21364 ;;		wreg, status,2
 21365 ;; Tracked objects:
 21366 ;;		On entry : 0/0
 21367 ;;		On exit  : 0/0
 21368 ;;		Unchanged: 0/0
 21369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21370 ;;      Params:         0       0       0       0       0       0       0
 21371 ;;      Locals:         0       0       0       0       0       0       0
 21372 ;;      Temps:          0       0       0       0       0       0       0
 21373 ;;      Totals:         0       0       0       0       0       0       0
 21374 ;;Total ram usage:        0 bytes
 21375 ;; Hardware stack levels used:    1
 21376 ;; This function calls:
 21377 ;;		Nothing
 21378 ;; This function is called by:
 21379 ;;		_TIMER
 21380 ;; This function uses a non-reentrant model
 21381 ;;
 21382                           
 21383                           	psect	text87
 21384  006F7C                     __ptext87:
 21385                           	opt stack 0
 21386  006F7C                     _readButtons:
 21387                           	opt stack 0
 21388  006F7C  FFFF               	dw	65535	; assembler added errata NOP
 21389                           
 21390                           ;teclado.h: 26: if (!PORTBbits.RB2) {
 21391                           
 21392                           ;incstack = 0
 21393  006F7E  B481               	btfsc	3969,2,c	;volatile
 21394  006F80  D002               	goto	i2l6464
 21395                           
 21396                           ;teclado.h: 27: flag_b_esc = 1;
 21397  006F82  0E01               	movlw	1
 21398  006F84  6E61               	movwf	_flag_b_esc,c
 21399  006F86                     i2l6464:
 21400  006F86  FFFF               	dw	65535	; assembler added errata NOP
 21401                           
 21402                           ;teclado.h: 28: }
 21403                           ;teclado.h: 29: if (PORTBbits.RB2 && flag_b_esc) {
 21404  006F88  A481               	btfss	3969,2,c	;volatile
 21405  006F8A  D007               	goto	i2l6470
 21406  006F8C  5061               	movf	_flag_b_esc,w,c
 21407  006F8E  B4D8               	btfsc	status,2,c
 21408  006F90  D004               	goto	i2l6470
 21409                           
 21410                           ;teclado.h: 30: _b_esc = 1;
 21411  006F92  0E01               	movlw	1
 21412  006F94  6E60               	movwf	__b_esc,c
 21413                           
 21414                           ;teclado.h: 31: flag_b_esc = 0;
 21415  006F96  0E00               	movlw	0
 21416  006F98  6E61               	movwf	_flag_b_esc,c
 21417  006F9A                     i2l6470:
 21418  006F9A  FFFF               	dw	65535	; assembler added errata NOP
 21419                           
 21420                           ;teclado.h: 32: }
 21421                           ;teclado.h: 34: if (!PORTBbits.RB4) {
 21422  006F9C  B881               	btfsc	3969,4,c	;volatile
 21423  006F9E  D002               	goto	i2l6474
 21424                           
 21425                           ;teclado.h: 35: flag_b_menos = 1;
 21426  006FA0  0E01               	movlw	1
 21427  006FA2  6E5F               	movwf	_flag_b_menos,c
 21428  006FA4                     i2l6474:
 21429  006FA4  FFFF               	dw	65535	; assembler added errata NOP
 21430                           
 21431                           ;teclado.h: 36: }
 21432                           ;teclado.h: 37: if (PORTBbits.RB4 && flag_b_menos) {
 21433  006FA6  A881               	btfss	3969,4,c	;volatile
 21434  006FA8  D007               	goto	i2l6480
 21435  006FAA  505F               	movf	_flag_b_menos,w,c
 21436  006FAC  B4D8               	btfsc	status,2,c
 21437  006FAE  D004               	goto	i2l6480
 21438                           
 21439                           ;teclado.h: 38: _b_menos = 1;
 21440  006FB0  0E01               	movlw	1
 21441  006FB2  6E5E               	movwf	__b_menos,c
 21442                           
 21443                           ;teclado.h: 39: flag_b_menos = 0;
 21444  006FB4  0E00               	movlw	0
 21445  006FB6  6E5F               	movwf	_flag_b_menos,c
 21446  006FB8                     i2l6480:
 21447  006FB8  FFFF               	dw	65535	; assembler added errata NOP
 21448                           
 21449                           ;teclado.h: 40: }
 21450                           ;teclado.h: 42: if (!PORTBbits.RB5) {
 21451  006FBA  BA81               	btfsc	3969,5,c	;volatile
 21452  006FBC  D002               	goto	i2l6484
 21453                           
 21454                           ;teclado.h: 43: flag_b_mais = 1;
 21455  006FBE  0E01               	movlw	1
 21456  006FC0  6E5D               	movwf	_flag_b_mais,c
 21457  006FC2                     i2l6484:
 21458  006FC2  FFFF               	dw	65535	; assembler added errata NOP
 21459                           
 21460                           ;teclado.h: 44: }
 21461                           ;teclado.h: 45: if (PORTBbits.RB5 && flag_b_mais) {
 21462  006FC4  AA81               	btfss	3969,5,c	;volatile
 21463  006FC6  D007               	goto	i2l6490
 21464  006FC8  505D               	movf	_flag_b_mais,w,c
 21465  006FCA  B4D8               	btfsc	status,2,c
 21466  006FCC  D004               	goto	i2l6490
 21467                           
 21468                           ;teclado.h: 46: _b_mais = 1;
 21469  006FCE  0E01               	movlw	1
 21470  006FD0  6E5C               	movwf	__b_mais,c
 21471                           
 21472                           ;teclado.h: 47: flag_b_mais = 0;
 21473  006FD2  0E00               	movlw	0
 21474  006FD4  6E5D               	movwf	_flag_b_mais,c
 21475  006FD6                     i2l6490:
 21476  006FD6  FFFF               	dw	65535	; assembler added errata NOP
 21477                           
 21478                           ;teclado.h: 48: }
 21479                           ;teclado.h: 50: if (!PORTBbits.RB3) {
 21480  006FD8  B681               	btfsc	3969,3,c	;volatile
 21481  006FDA  D002               	goto	i2l6494
 21482                           
 21483                           ;teclado.h: 51: flag_b_ok = 1;
 21484  006FDC  0E01               	movlw	1
 21485  006FDE  6E5B               	movwf	_flag_b_ok,c
 21486  006FE0                     i2l6494:
 21487  006FE0  FFFF               	dw	65535	; assembler added errata NOP
 21488                           
 21489                           ;teclado.h: 52: }
 21490                           ;teclado.h: 53: if (PORTBbits.RB3 && flag_b_ok) {
 21491  006FE2  A681               	btfss	3969,3,c	;volatile
 21492  006FE4  D007               	goto	i2l455
 21493  006FE6  505B               	movf	_flag_b_ok,w,c
 21494  006FE8  B4D8               	btfsc	status,2,c
 21495  006FEA  D004               	goto	i2l455
 21496                           
 21497                           ;teclado.h: 54: _b_ok = 1;
 21498  006FEC  0E01               	movlw	1
 21499  006FEE  6E5A               	movwf	__b_ok,c
 21500                           
 21501                           ;teclado.h: 55: flag_b_ok = 0;
 21502  006FF0  0E00               	movlw	0
 21503  006FF2  6E5B               	movwf	_flag_b_ok,c
 21504  006FF4                     i2l455:
 21505  006FF4  FFFF               	dw	65535	; assembler added errata NOP
 21506  006FF6  0012               	return		;funcret
 21507  006FF8  FFFF               	dw	65535	; errata NOP
 21508  006FFA                     __end_of_readButtons:
 21509                           	opt stack 0
 21510                           tosu	equ	0xFFF
 21511                           tosh	equ	0xFFE
 21512                           tosl	equ	0xFFD
 21513                           pclatu	equ	0xFFB
 21514                           pclath	equ	0xFFA
 21515                           tblptru	equ	0xFF8
 21516                           tblptrh	equ	0xFF7
 21517                           tblptrl	equ	0xFF6
 21518                           tablat	equ	0xFF5
 21519                           prodh	equ	0xFF4
 21520                           prodl	equ	0xFF3
 21521                           intcon	equ	0xFF2
 21522                           indf0	equ	0xFEF
 21523                           postinc0	equ	0xFEE
 21524                           fsr0h	equ	0xFEA
 21525                           fsr0l	equ	0xFE9
 21526                           wreg	equ	0xFE8
 21527                           postdec1	equ	0xFE5
 21528                           fsr1h	equ	0xFE2
 21529                           fsr1l	equ	0xFE1
 21530                           indf2	equ	0xFDF
 21531                           postinc2	equ	0xFDE
 21532                           postdec2	equ	0xFDD
 21533                           fsr2h	equ	0xFDA
 21534                           fsr2l	equ	0xFD9
 21535                           status	equ	0xFD8
 21536                           
 21537 ;; *************** function _lerTransdutor *****************
 21538 ;; Defined at:
 21539 ;;		line 7 in file "transdutor.h"
 21540 ;; Parameters:    Size  Location     Type
 21541 ;;		None
 21542 ;; Auto vars:     Size  Location     Type
 21543 ;;  tensao          3   45[COMRAM] float 
 21544 ;;  _pressao        3   42[COMRAM] float 
 21545 ;;  i               1   41[COMRAM] unsigned char 
 21546 ;; Return value:  Size  Location     Type
 21547 ;;                  1    wreg      void 
 21548 ;; Registers used:
 21549 ;;		wreg, status,2, status,0, cstack
 21550 ;; Tracked objects:
 21551 ;;		On entry : 0/0
 21552 ;;		On exit  : 0/0
 21553 ;;		Unchanged: 0/0
 21554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21555 ;;      Params:         0       0       0       0       0       0       0
 21556 ;;      Locals:         7       0       0       0       0       0       0
 21557 ;;      Temps:          0       0       0       0       0       0       0
 21558 ;;      Totals:         7       0       0       0       0       0       0
 21559 ;;Total ram usage:        7 bytes
 21560 ;; Hardware stack levels used:    1
 21561 ;; Hardware stack levels required when called:    2
 21562 ;; This function calls:
 21563 ;;		___ftadd
 21564 ;;		___ftdiv
 21565 ;;		___ftge
 21566 ;;		___ftmul
 21567 ;;		___fttol
 21568 ;;		___lwtoft
 21569 ;;		_readADC
 21570 ;; This function is called by:
 21571 ;;		_TIMER
 21572 ;; This function uses a non-reentrant model
 21573 ;;
 21574                           
 21575                           	psect	text88
 21576  0025EE                     __ptext88:
 21577                           	opt stack 0
 21578  0025EE                     _lerTransdutor:
 21579                           	opt stack 0
 21580  0025EE  FFFF               	dw	65535	; assembler added errata NOP
 21581                           
 21582                           ;transdutor.h: 8: char i = 0;
 21583                           
 21584                           ;incstack = 0
 21585  0025F0  0E00               	movlw	0
 21586  0025F2  6E2A               	movwf	lerTransdutor@i,c
 21587                           
 21588                           ;transdutor.h: 9: float tensao = 0, _pressao = 0;
 21589  0025F4  0E00               	movlw	0
 21590  0025F6  6E2E               	movwf	lerTransdutor@tensao,c
 21591  0025F8  0E00               	movlw	0
 21592  0025FA  6E2F               	movwf	lerTransdutor@tensao+1,c
 21593  0025FC  0E00               	movlw	0
 21594  0025FE  6E30               	movwf	lerTransdutor@tensao+2,c
 21595  002600  0E00               	movlw	0
 21596  002602  6E2B               	movwf	lerTransdutor@_pressao,c
 21597  002604  0E00               	movlw	0
 21598  002606  6E2C               	movwf	lerTransdutor@_pressao+1,c
 21599  002608  0E00               	movlw	0
 21600  00260A  6E2D               	movwf	lerTransdutor@_pressao+2,c
 21601                           
 21602                           ;transdutor.h: 10: for (i = 0; i < 9; i++) {
 21603  00260C  0E00               	movlw	0
 21604  00260E  6E2A               	movwf	lerTransdutor@i,c
 21605  002610                     i2l6322:
 21606  002610  FFFF               	dw	65535	; assembler added errata NOP
 21607  002612  0E08               	movlw	8
 21608  002614  642A               	cpfsgt	lerTransdutor@i,c
 21609  002616  D001               	goto	i2l6326
 21610  002618  D02D               	goto	i2l6332
 21611  00261A                     i2l6326:
 21612  00261A  FFFF               	dw	65535	; assembler added errata NOP
 21613                           
 21614                           ;transdutor.h: 11: tensao += readADC()*0.004887586;
 21615  00261C  C02E  F01B         	movff	lerTransdutor@tensao,___ftadd@f1
 21616  002620  C02F  F01C         	movff	lerTransdutor@tensao+1,___ftadd@f1+1
 21617  002624  C030  F01D         	movff	lerTransdutor@tensao+2,___ftadd@f1+2
 21618  002628  0E28               	movlw	40
 21619  00262A  6E0F               	movwf	___ftmul@f2,c
 21620  00262C  0EA0               	movlw	160
 21621  00262E  6E10               	movwf	___ftmul@f2+1,c
 21622  002630  0E3B               	movlw	59
 21623  002632  6E11               	movwf	___ftmul@f2+2,c
 21624  002634  ECB0  F032         	call	_readADC	;wreg free
 21625  002638  C001  F009         	movff	?_readADC,___lwtoft@c
 21626  00263C  C002  F00A         	movff	?_readADC+1,___lwtoft@c+1
 21627  002640  EC9C  F032         	call	___lwtoft	;wreg free
 21628  002644  C009  F00C         	movff	?___lwtoft,___ftmul@f1
 21629  002648  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
 21630  00264C  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
 21631  002650  ECDE  F01E         	call	___ftmul	;wreg free
 21632  002654  C00C  F01E         	movff	?___ftmul,___ftadd@f2
 21633  002658  C00D  F01F         	movff	?___ftmul+1,___ftadd@f2+1
 21634  00265C  C00E  F020         	movff	?___ftmul+2,___ftadd@f2+2
 21635  002660  EC11  F017         	call	___ftadd	;wreg free
 21636  002664  C01B  F02E         	movff	?___ftadd,lerTransdutor@tensao
 21637  002668  C01C  F02F         	movff	?___ftadd+1,lerTransdutor@tensao+1
 21638  00266C  C01D  F030         	movff	?___ftadd+2,lerTransdutor@tensao+2
 21639  002670  2A2A               	incf	lerTransdutor@i,f,c
 21640  002672  D7CE               	goto	i2l6322
 21641  002674                     i2l6332:
 21642  002674  FFFF               	dw	65535	; assembler added errata NOP
 21643                           
 21644                           ;transdutor.h: 12: }
 21645                           ;transdutor.h: 13: tensao = tensao / 10;
 21646  002676  C02E  F01B         	movff	lerTransdutor@tensao,___ftdiv@f1
 21647  00267A  C02F  F01C         	movff	lerTransdutor@tensao+1,___ftdiv@f1+1
 21648  00267E  C030  F01D         	movff	lerTransdutor@tensao+2,___ftdiv@f1+2
 21649  002682  0E00               	movlw	0
 21650  002684  6E1E               	movwf	___ftdiv@f2,c
 21651  002686  0E20               	movlw	32
 21652  002688  6E1F               	movwf	___ftdiv@f2+1,c
 21653  00268A  0E41               	movlw	65
 21654  00268C  6E20               	movwf	___ftdiv@f2+2,c
 21655  00268E  EC1C  F03C         	call	___ftdiv	;wreg free
 21656  002692  C01B  F02E         	movff	?___ftdiv,lerTransdutor@tensao
 21657  002696  C01C  F02F         	movff	?___ftdiv+1,lerTransdutor@tensao+1
 21658  00269A  C01D  F030         	movff	?___ftdiv+2,lerTransdutor@tensao+2
 21659                           
 21660                           ;transdutor.h: 14: _tensao += (float) tensao;
 21661  00269E  C048  F01B         	movff	__tensao,___ftadd@f1
 21662  0026A2  C049  F01C         	movff	__tensao+1,___ftadd@f1+1
 21663  0026A6  C04A  F01D         	movff	__tensao+2,___ftadd@f1+2
 21664  0026AA  C02E  F01E         	movff	lerTransdutor@tensao,___ftadd@f2
 21665  0026AE  C02F  F01F         	movff	lerTransdutor@tensao+1,___ftadd@f2+1
 21666  0026B2  C030  F020         	movff	lerTransdutor@tensao+2,___ftadd@f2+2
 21667  0026B6  EC11  F017         	call	___ftadd	;wreg free
 21668  0026BA  C01B  F048         	movff	?___ftadd,__tensao
 21669  0026BE  C01C  F049         	movff	?___ftadd+1,__tensao+1
 21670  0026C2  C01D  F04A         	movff	?___ftadd+2,__tensao+2
 21671                           
 21672                           ;transdutor.h: 15: qtd_leitura++;
 21673  0026C6  2A69               	incf	_qtd_leitura,f,c
 21674                           
 21675                           ;transdutor.h: 17: if (tensao < 0.4) {
 21676  0026C8  C02E  F001         	movff	lerTransdutor@tensao,___ftge@ff1
 21677  0026CC  C02F  F002         	movff	lerTransdutor@tensao+1,___ftge@ff1+1
 21678  0026D0  C030  F003         	movff	lerTransdutor@tensao+2,___ftge@ff1+2
 21679  0026D4  0ECD               	movlw	205
 21680  0026D6  6E04               	movwf	___ftge@ff2,c
 21681  0026D8  0ECC               	movlw	204
 21682  0026DA  6E05               	movwf	___ftge@ff2+1,c
 21683  0026DC  0E3E               	movlw	62
 21684  0026DE  6E06               	movwf	___ftge@ff2+2,c
 21685  0026E0  ECCC  F038         	call	___ftge	;wreg free
 21686  0026E4  B0D8               	btfsc	status,0,c
 21687  0026E6  D005               	goto	i2l6340
 21688                           
 21689                           ;transdutor.h: 18: pressao = -10;
 21690  0026E8  0EFF               	movlw	255
 21691  0026EA  0100               	movlb	0	; () banked
 21692  0026EC  6FF9               	movwf	(_pressao+1)& (0+255),b
 21693  0026EE  0EF6               	movlw	246
 21694  0026F0  D015               	goto	L41
 21695  0026F2                     i2l6340:
 21696  0026F2  FFFF               	dw	65535	; assembler added errata NOP
 21697  0026F4  0E00               	movlw	0
 21698  0026F6  6E01               	movwf	___ftge@ff1,c
 21699  0026F8  0E90               	movlw	144
 21700  0026FA  6E02               	movwf	___ftge@ff1+1,c
 21701  0026FC  0E40               	movlw	64
 21702  0026FE  6E03               	movwf	___ftge@ff1+2,c
 21703  002700  C02E  F004         	movff	lerTransdutor@tensao,___ftge@ff2
 21704  002704  C02F  F005         	movff	lerTransdutor@tensao+1,___ftge@ff2+1
 21705  002708  C030  F006         	movff	lerTransdutor@tensao+2,___ftge@ff2+2
 21706  00270C  ECCC  F038         	call	___ftge	;wreg free
 21707  002710  B0D8               	btfsc	status,0,c
 21708  002712  D007               	goto	i2l6344
 21709                           
 21710                           ;transdutor.h: 20: pressao = 99;
 21711  002714  0E00               	movlw	0
 21712  002716  0100               	movlb	0	; () banked
 21713  002718  6FF9               	movwf	(_pressao+1)& (0+255),b
 21714  00271A  0E63               	movlw	99
 21715  00271C                     L41:
 21716  00271C  FFFF               	dw	65535	; assembler added errata NOP
 21717  00271E  6FF8               	movwf	_pressao& (0+255),b
 21718                           
 21719                           ;transdutor.h: 21: } else if (qtd_leitura >= 6) {
 21720  002720  D079               	goto	i2l232
 21721  002722                     i2l6344:
 21722  002722  FFFF               	dw	65535	; assembler added errata NOP
 21723  002724  0E05               	movlw	5
 21724  002726  6469               	cpfsgt	_qtd_leitura,c
 21725  002728  D075               	goto	i2l232
 21726                           
 21727                           ;transdutor.h: 22: qtd_leitura = 0;
 21728  00272A  0E00               	movlw	0
 21729  00272C  6E69               	movwf	_qtd_leitura,c
 21730                           
 21731                           ;transdutor.h: 23: tensao = (float) (_tensao / 6);
 21732  00272E  C048  F01B         	movff	__tensao,___ftdiv@f1
 21733  002732  C049  F01C         	movff	__tensao+1,___ftdiv@f1+1
 21734  002736  C04A  F01D         	movff	__tensao+2,___ftdiv@f1+2
 21735  00273A  0E00               	movlw	0
 21736  00273C  6E1E               	movwf	___ftdiv@f2,c
 21737  00273E  0EC0               	movlw	192
 21738  002740  6E1F               	movwf	___ftdiv@f2+1,c
 21739  002742  0E40               	movlw	64
 21740  002744  6E20               	movwf	___ftdiv@f2+2,c
 21741  002746  EC1C  F03C         	call	___ftdiv	;wreg free
 21742  00274A  C01B  F02E         	movff	?___ftdiv,lerTransdutor@tensao
 21743  00274E  C01C  F02F         	movff	?___ftdiv+1,lerTransdutor@tensao+1
 21744  002752  C01D  F030         	movff	?___ftdiv+2,lerTransdutor@tensao+2
 21745                           
 21746                           ;transdutor.h: 24: _tensao = 0;
 21747  002756  0E00               	movlw	0
 21748  002758  6E48               	movwf	__tensao,c
 21749  00275A  0E00               	movlw	0
 21750  00275C  6E49               	movwf	__tensao+1,c
 21751  00275E  0E00               	movlw	0
 21752  002760  6E4A               	movwf	__tensao+2,c
 21753                           
 21754                           ;transdutor.h: 25: _pressao = tensao - 0.5;
 21755  002762  C02E  F01B         	movff	lerTransdutor@tensao,___ftadd@f1
 21756  002766  C02F  F01C         	movff	lerTransdutor@tensao+1,___ftadd@f1+1
 21757  00276A  C030  F01D         	movff	lerTransdutor@tensao+2,___ftadd@f1+2
 21758  00276E  0E00               	movlw	0
 21759  002770  6E1E               	movwf	___ftadd@f2,c
 21760  002772  0E00               	movlw	0
 21761  002774  6E1F               	movwf	___ftadd@f2+1,c
 21762  002776  0EBF               	movlw	191
 21763  002778  6E20               	movwf	___ftadd@f2+2,c
 21764  00277A  EC11  F017         	call	___ftadd	;wreg free
 21765  00277E  C01B  F02B         	movff	?___ftadd,lerTransdutor@_pressao
 21766  002782  C01C  F02C         	movff	?___ftadd+1,lerTransdutor@_pressao+1
 21767  002786  C01D  F02D         	movff	?___ftadd+2,lerTransdutor@_pressao+2
 21768                           
 21769                           ;transdutor.h: 26: _pressao = _pressao * 10 / 4;
 21770  00278A  0E00               	movlw	0
 21771  00278C  6E0F               	movwf	___ftmul@f2,c
 21772  00278E  0E20               	movlw	32
 21773  002790  6E10               	movwf	___ftmul@f2+1,c
 21774  002792  0E41               	movlw	65
 21775  002794  6E11               	movwf	___ftmul@f2+2,c
 21776  002796  C02B  F00C         	movff	lerTransdutor@_pressao,___ftmul@f1
 21777  00279A  C02C  F00D         	movff	lerTransdutor@_pressao+1,___ftmul@f1+1
 21778  00279E  C02D  F00E         	movff	lerTransdutor@_pressao+2,___ftmul@f1+2
 21779  0027A2  ECDE  F01E         	call	___ftmul	;wreg free
 21780  0027A6  C00C  F01B         	movff	?___ftmul,___ftdiv@f1
 21781  0027AA  C00D  F01C         	movff	?___ftmul+1,___ftdiv@f1+1
 21782  0027AE  C00E  F01D         	movff	?___ftmul+2,___ftdiv@f1+2
 21783  0027B2  0E00               	movlw	0
 21784  0027B4  6E1E               	movwf	___ftdiv@f2,c
 21785  0027B6  0E80               	movlw	128
 21786  0027B8  6E1F               	movwf	___ftdiv@f2+1,c
 21787  0027BA  0E40               	movlw	64
 21788  0027BC  6E20               	movwf	___ftdiv@f2+2,c
 21789  0027BE  EC1C  F03C         	call	___ftdiv	;wreg free
 21790  0027C2  C01B  F02B         	movff	?___ftdiv,lerTransdutor@_pressao
 21791  0027C6  C01C  F02C         	movff	?___ftdiv+1,lerTransdutor@_pressao+1
 21792  0027CA  C01D  F02D         	movff	?___ftdiv+2,lerTransdutor@_pressao+2
 21793                           
 21794                           ;transdutor.h: 27: if (_pressao < 0) {
 21795  0027CE  AE2D               	btfss	lerTransdutor@_pressao+2,7,c
 21796  0027D0  D006               	goto	i2l6356
 21797                           
 21798                           ;transdutor.h: 28: _pressao = 0;
 21799  0027D2  0E00               	movlw	0
 21800  0027D4  6E2B               	movwf	lerTransdutor@_pressao,c
 21801  0027D6  0E00               	movlw	0
 21802  0027D8  6E2C               	movwf	lerTransdutor@_pressao+1,c
 21803  0027DA  0E00               	movlw	0
 21804  0027DC  6E2D               	movwf	lerTransdutor@_pressao+2,c
 21805  0027DE                     i2l6356:
 21806  0027DE  FFFF               	dw	65535	; assembler added errata NOP
 21807                           
 21808                           ;transdutor.h: 29: }
 21809                           ;transdutor.h: 30: pressao = _pressao * 10;
 21810  0027E0  0E00               	movlw	0
 21811  0027E2  6E0F               	movwf	___ftmul@f2,c
 21812  0027E4  0E20               	movlw	32
 21813  0027E6  6E10               	movwf	___ftmul@f2+1,c
 21814  0027E8  0E41               	movlw	65
 21815  0027EA  6E11               	movwf	___ftmul@f2+2,c
 21816  0027EC  C02B  F00C         	movff	lerTransdutor@_pressao,___ftmul@f1
 21817  0027F0  C02C  F00D         	movff	lerTransdutor@_pressao+1,___ftmul@f1+1
 21818  0027F4  C02D  F00E         	movff	lerTransdutor@_pressao+2,___ftmul@f1+2
 21819  0027F8  ECDE  F01E         	call	___ftmul	;wreg free
 21820  0027FC  C00C  F01B         	movff	?___ftmul,___fttol@f1
 21821  002800  C00D  F01C         	movff	?___ftmul+1,___fttol@f1+1
 21822  002804  C00E  F01D         	movff	?___ftmul+2,___fttol@f1+2
 21823  002808  EC8F  F03C         	call	___fttol	;wreg free
 21824  00280C  C01B  F0F8         	movff	?___fttol,_pressao
 21825  002810  C01C  F0F9         	movff	?___fttol+1,_pressao+1
 21826  002814                     i2l232:
 21827  002814  FFFF               	dw	65535	; assembler added errata NOP
 21828  002816  0012               	return		;funcret
 21829  002818  FFFF               	dw	65535	; errata NOP
 21830  00281A                     __end_of_lerTransdutor:
 21831                           	opt stack 0
 21832                           tosu	equ	0xFFF
 21833                           tosh	equ	0xFFE
 21834                           tosl	equ	0xFFD
 21835                           pclatu	equ	0xFFB
 21836                           pclath	equ	0xFFA
 21837                           tblptru	equ	0xFF8
 21838                           tblptrh	equ	0xFF7
 21839                           tblptrl	equ	0xFF6
 21840                           tablat	equ	0xFF5
 21841                           prodh	equ	0xFF4
 21842                           prodl	equ	0xFF3
 21843                           intcon	equ	0xFF2
 21844                           indf0	equ	0xFEF
 21845                           postinc0	equ	0xFEE
 21846                           fsr0h	equ	0xFEA
 21847                           fsr0l	equ	0xFE9
 21848                           wreg	equ	0xFE8
 21849                           postdec1	equ	0xFE5
 21850                           fsr1h	equ	0xFE2
 21851                           fsr1l	equ	0xFE1
 21852                           indf2	equ	0xFDF
 21853                           postinc2	equ	0xFDE
 21854                           postdec2	equ	0xFDD
 21855                           fsr2h	equ	0xFDA
 21856                           fsr2l	equ	0xFD9
 21857                           status	equ	0xFD8
 21858                           
 21859 ;; *************** function _readADC *****************
 21860 ;; Defined at:
 21861 ;;		line 8 in file "adc.h"
 21862 ;; Parameters:    Size  Location     Type
 21863 ;;		None
 21864 ;; Auto vars:     Size  Location     Type
 21865 ;;		None
 21866 ;; Return value:  Size  Location     Type
 21867 ;;                  2    0[COMRAM] unsigned int 
 21868 ;; Registers used:
 21869 ;;		wreg, status,2, status,0
 21870 ;; Tracked objects:
 21871 ;;		On entry : 0/0
 21872 ;;		On exit  : 0/0
 21873 ;;		Unchanged: 0/0
 21874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21875 ;;      Params:         2       0       0       0       0       0       0
 21876 ;;      Locals:         0       0       0       0       0       0       0
 21877 ;;      Temps:          2       0       0       0       0       0       0
 21878 ;;      Totals:         4       0       0       0       0       0       0
 21879 ;;Total ram usage:        4 bytes
 21880 ;; Hardware stack levels used:    1
 21881 ;; This function calls:
 21882 ;;		Nothing
 21883 ;; This function is called by:
 21884 ;;		_lerTransdutor
 21885 ;; This function uses a non-reentrant model
 21886 ;;
 21887                           
 21888                           	psect	text89
 21889  006560                     __ptext89:
 21890                           	opt stack 0
 21891  006560                     _readADC:
 21892                           	opt stack 0
 21893  006560  FFFF               	dw	65535	; assembler added errata NOP
 21894                           
 21895                           ;adc.h: 9: ADCON0bits.GO = 1;
 21896                           
 21897                           ;incstack = 0
 21898  006562  84C2               	bsf	4034,2,c	;volatile
 21899                           
 21900                           ;adc.h: 10: _delay((unsigned long)((50)*(8000000/4000000.0)));
 21901  006564  0E19               	movlw	25
 21902  006566                     i2u1226_47:
 21903  006566  FFFF               	dw	65535	; errata NOP
 21904  006568  2EE8               	decfsz	wreg,f,c
 21905  00656A  D7FD               	bra	i2u1226_47
 21906  00656C                     i2l218:
 21907  00656C  FFFF               	dw	65535	; assembler added errata NOP
 21908  00656E  A4C2               	btfss	4034,2,c	;volatile
 21909  006570  D7FD               	goto	i2l218
 21910                           
 21911                           ;adc.h: 12: }
 21912                           ;adc.h: 13: return((ADRESH<<8)+ ADRESL);
 21913  006572  50C4               	movf	4036,w,c	;volatile
 21914  006574  6E04               	movwf	(??_readADC+1)& (0+255),c
 21915  006576  6A03               	clrf	??_readADC& (0+255),c
 21916  006578  50C3               	movf	4035,w,c	;volatile
 21917  00657A  2403               	addwf	??_readADC,w,c
 21918  00657C  6E01               	movwf	?_readADC,c
 21919  00657E  0E00               	movlw	0
 21920  006580  2004               	addwfc	??_readADC+1,w,c
 21921  006582  6E02               	movwf	?_readADC+1,c
 21922  006584  0012               	return		;funcret
 21923  006586  FFFF               	dw	65535	; errata NOP
 21924  006588                     __end_of_readADC:
 21925                           	opt stack 0
 21926                           tosu	equ	0xFFF
 21927                           tosh	equ	0xFFE
 21928                           tosl	equ	0xFFD
 21929                           pclatu	equ	0xFFB
 21930                           pclath	equ	0xFFA
 21931                           tblptru	equ	0xFF8
 21932                           tblptrh	equ	0xFF7
 21933                           tblptrl	equ	0xFF6
 21934                           tablat	equ	0xFF5
 21935                           prodh	equ	0xFF4
 21936                           prodl	equ	0xFF3
 21937                           intcon	equ	0xFF2
 21938                           indf0	equ	0xFEF
 21939                           postinc0	equ	0xFEE
 21940                           fsr0h	equ	0xFEA
 21941                           fsr0l	equ	0xFE9
 21942                           wreg	equ	0xFE8
 21943                           postdec1	equ	0xFE5
 21944                           fsr1h	equ	0xFE2
 21945                           fsr1l	equ	0xFE1
 21946                           indf2	equ	0xFDF
 21947                           postinc2	equ	0xFDE
 21948                           postdec2	equ	0xFDD
 21949                           fsr2h	equ	0xFDA
 21950                           fsr2l	equ	0xFD9
 21951                           status	equ	0xFD8
 21952                           
 21953 ;; *************** function ___lwtoft *****************
 21954 ;; Defined at:
 21955 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
 21956 ;; Parameters:    Size  Location     Type
 21957 ;;  c               2    8[COMRAM] unsigned int 
 21958 ;; Auto vars:     Size  Location     Type
 21959 ;;		None
 21960 ;; Return value:  Size  Location     Type
 21961 ;;                  3    8[COMRAM] float 
 21962 ;; Registers used:
 21963 ;;		wreg, status,2, status,0, cstack
 21964 ;; Tracked objects:
 21965 ;;		On entry : 0/0
 21966 ;;		On exit  : 0/0
 21967 ;;		Unchanged: 0/0
 21968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21969 ;;      Params:         3       0       0       0       0       0       0
 21970 ;;      Locals:         0       0       0       0       0       0       0
 21971 ;;      Temps:          0       0       0       0       0       0       0
 21972 ;;      Totals:         3       0       0       0       0       0       0
 21973 ;;Total ram usage:        3 bytes
 21974 ;; Hardware stack levels used:    1
 21975 ;; Hardware stack levels required when called:    1
 21976 ;; This function calls:
 21977 ;;		___ftpack
 21978 ;; This function is called by:
 21979 ;;		_lerTransdutor
 21980 ;; This function uses a non-reentrant model
 21981 ;;
 21982                           
 21983                           	psect	text90
 21984  006538                     __ptext90:
 21985                           	opt stack 0
 21986  006538                     ___lwtoft:
 21987                           	opt stack 0
 21988  006538  FFFF               	dw	65535	; assembler added errata NOP
 21989                           
 21990                           ;incstack = 0
 21991  00653A  C009  F001         	movff	___lwtoft@c,___ftpack@arg
 21992  00653E  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
 21993  006542  6A03               	clrf	___ftpack@arg+2,c
 21994  006544  0E8E               	movlw	142
 21995  006546  6E04               	movwf	___ftpack@exp,c
 21996  006548  0E00               	movlw	0
 21997  00654A  6E05               	movwf	___ftpack@sign,c
 21998  00654C  EC7B  F03A         	call	___ftpack	;wreg free
 21999  006550  C001  F009         	movff	?___ftpack,?___lwtoft
 22000  006554  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
 22001  006558  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
 22002  00655C  0012               	return		;funcret
 22003  00655E  FFFF               	dw	65535	; errata NOP
 22004  006560                     __end_of___lwtoft:
 22005                           	opt stack 0
 22006                           tosu	equ	0xFFF
 22007                           tosh	equ	0xFFE
 22008                           tosl	equ	0xFFD
 22009                           pclatu	equ	0xFFB
 22010                           pclath	equ	0xFFA
 22011                           tblptru	equ	0xFF8
 22012                           tblptrh	equ	0xFF7
 22013                           tblptrl	equ	0xFF6
 22014                           tablat	equ	0xFF5
 22015                           prodh	equ	0xFF4
 22016                           prodl	equ	0xFF3
 22017                           intcon	equ	0xFF2
 22018                           indf0	equ	0xFEF
 22019                           postinc0	equ	0xFEE
 22020                           fsr0h	equ	0xFEA
 22021                           fsr0l	equ	0xFE9
 22022                           wreg	equ	0xFE8
 22023                           postdec1	equ	0xFE5
 22024                           fsr1h	equ	0xFE2
 22025                           fsr1l	equ	0xFE1
 22026                           indf2	equ	0xFDF
 22027                           postinc2	equ	0xFDE
 22028                           postdec2	equ	0xFDD
 22029                           fsr2h	equ	0xFDA
 22030                           fsr2l	equ	0xFD9
 22031                           status	equ	0xFD8
 22032                           
 22033 ;; *************** function ___fttol *****************
 22034 ;; Defined at:
 22035 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
 22036 ;; Parameters:    Size  Location     Type
 22037 ;;  f1              3   26[COMRAM] float 
 22038 ;; Auto vars:     Size  Location     Type
 22039 ;;  lval            4   36[COMRAM] unsigned long 
 22040 ;;  exp1            1   40[COMRAM] unsigned char 
 22041 ;;  sign1           1   35[COMRAM] unsigned char 
 22042 ;; Return value:  Size  Location     Type
 22043 ;;                  4   26[COMRAM] long 
 22044 ;; Registers used:
 22045 ;;		wreg, status,2, status,0
 22046 ;; Tracked objects:
 22047 ;;		On entry : 0/0
 22048 ;;		On exit  : 0/0
 22049 ;;		Unchanged: 0/0
 22050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22051 ;;      Params:         4       0       0       0       0       0       0
 22052 ;;      Locals:         6       0       0       0       0       0       0
 22053 ;;      Temps:          5       0       0       0       0       0       0
 22054 ;;      Totals:        15       0       0       0       0       0       0
 22055 ;;Total ram usage:       15 bytes
 22056 ;; Hardware stack levels used:    1
 22057 ;; This function calls:
 22058 ;;		Nothing
 22059 ;; This function is called by:
 22060 ;;		_lerTransdutor
 22061 ;; This function uses a non-reentrant model
 22062 ;;
 22063                           
 22064                           	psect	text91
 22065  00791E                     __ptext91:
 22066                           	opt stack 0
 22067  00791E                     ___fttol:
 22068                           	opt stack 0
 22069  00791E  FFFF               	dw	65535	; assembler added errata NOP
 22070                           
 22071                           ;incstack = 0
 22072  007920  C01D  F01F         	movff	___fttol@f1+2,??___fttol
 22073  007924  6A20               	clrf	(??___fttol+1)& (0+255),c
 22074  007926  6A21               	clrf	(??___fttol+2)& (0+255),c
 22075  007928  341C               	rlcf	___fttol@f1+1,w,c
 22076  00792A  361F               	rlcf	??___fttol& (0+255),f,c
 22077  00792C  E301               	bnc	u656_41
 22078  00792E  8020               	bsf	(??___fttol+1)& (0+255),0,c
 22079  007930                     u656_41:
 22080  007930  501F               	movf	??___fttol,w,c
 22081  007932  6E29               	movwf	___fttol@exp1,c
 22082  007934  5029               	movf	___fttol@exp1,w,c
 22083  007936  B4D8               	btfsc	status,2,c
 22084  007938  D039               	goto	i2l6196
 22085  00793A  0E17               	movlw	23
 22086  00793C  6E1F               	movwf	??___fttol& (0+255),c
 22087  00793E  C01B  F020         	movff	___fttol@f1,??___fttol+1
 22088  007942  C01C  F021         	movff	___fttol@f1+1,??___fttol+2
 22089  007946  C01D  F022         	movff	___fttol@f1+2,??___fttol+3
 22090  00794A  281F               	incf	??___fttol,w,c
 22091  00794C  6E23               	movwf	(??___fttol+4)& (0+255),c
 22092  00794E  D005               	goto	i2u658_40
 22093  007950                     i2u658_45:
 22094  007950  FFFF               	dw	65535	; assembler added errata NOP
 22095  007952  90D8               	bcf	status,0,c
 22096  007954  3222               	rrcf	??___fttol+3,f,c
 22097  007956  3221               	rrcf	??___fttol+2,f,c
 22098  007958  3220               	rrcf	??___fttol+1,f,c
 22099  00795A                     i2u658_40:
 22100  00795A  FFFF               	dw	65535	; assembler added errata NOP
 22101  00795C  2E23               	decfsz	(??___fttol+4)& (0+255),f,c
 22102  00795E  D7F8               	goto	i2u658_45
 22103  007960  5020               	movf	??___fttol+1,w,c
 22104  007962  6E24               	movwf	___fttol@sign1,c
 22105  007964  8E1C               	bsf	___fttol@f1+1,7,c
 22106  007966  0EFF               	movlw	255
 22107  007968  161B               	andwf	___fttol@f1,f,c
 22108  00796A  0EFF               	movlw	255
 22109  00796C  161C               	andwf	___fttol@f1+1,f,c
 22110  00796E  0E00               	movlw	0
 22111  007970  161D               	andwf	___fttol@f1+2,f,c
 22112  007972  501B               	movf	___fttol@f1,w,c
 22113  007974  6E25               	movwf	___fttol@lval,c
 22114  007976  501C               	movf	___fttol@f1+1,w,c
 22115  007978  6E26               	movwf	___fttol@lval+1,c
 22116  00797A  501D               	movf	___fttol@f1+2,w,c
 22117  00797C  6E27               	movwf	___fttol@lval+2,c
 22118  00797E  6A28               	clrf	___fttol@lval+3,c
 22119  007980  0E8E               	movlw	142
 22120  007982  5E29               	subwf	___fttol@exp1,f,c
 22121  007984  AE29               	btfss	___fttol@exp1,7,c
 22122  007986  D00E               	goto	i2l6194
 22123  007988  5029               	movf	___fttol@exp1,w,c
 22124  00798A  0A80               	xorlw	128
 22125  00798C  0F8F               	addlw	143
 22126  00798E  A0D8               	btfss	status,0,c
 22127  007990  D00D               	goto	i2l6196
 22128  007992                     i2l6190:
 22129  007992  FFFF               	dw	65535	; assembler added errata NOP
 22130  007994  90D8               	bcf	status,0,c
 22131  007996  3228               	rrcf	___fttol@lval+3,f,c
 22132  007998  3227               	rrcf	___fttol@lval+2,f,c
 22133  00799A  3226               	rrcf	___fttol@lval+1,f,c
 22134  00799C  3225               	rrcf	___fttol@lval,f,c
 22135  00799E  3E29               	incfsz	___fttol@exp1,f,c
 22136  0079A0  D7F8               	goto	i2l6190
 22137  0079A2  D019               	goto	i2l6204
 22138  0079A4                     i2l6194:
 22139  0079A4  FFFF               	dw	65535	; assembler added errata NOP
 22140  0079A6  0E17               	movlw	23
 22141  0079A8  6429               	cpfsgt	___fttol@exp1,c
 22142  0079AA  D011               	goto	i2l6202
 22143  0079AC                     i2l6196:
 22144  0079AC  FFFF               	dw	65535	; assembler added errata NOP
 22145  0079AE  0E00               	movlw	0
 22146  0079B0  6E1B               	movwf	?___fttol,c
 22147  0079B2  0E00               	movlw	0
 22148  0079B4  6E1C               	movwf	?___fttol+1,c
 22149  0079B6  0E00               	movlw	0
 22150  0079B8  6E1D               	movwf	?___fttol+2,c
 22151  0079BA  0E00               	movlw	0
 22152  0079BC  6E1E               	movwf	?___fttol+3,c
 22153  0079BE  D020               	goto	i2l1417
 22154  0079C0                     i2l6200:
 22155  0079C0  FFFF               	dw	65535	; assembler added errata NOP
 22156  0079C2  90D8               	bcf	status,0,c
 22157  0079C4  3625               	rlcf	___fttol@lval,f,c
 22158  0079C6  3626               	rlcf	___fttol@lval+1,f,c
 22159  0079C8  3627               	rlcf	___fttol@lval+2,f,c
 22160  0079CA  3628               	rlcf	___fttol@lval+3,f,c
 22161  0079CC  0629               	decf	___fttol@exp1,f,c
 22162  0079CE                     i2l6202:
 22163  0079CE  FFFF               	dw	65535	; assembler added errata NOP
 22164  0079D0  5029               	movf	___fttol@exp1,w,c
 22165  0079D2  A4D8               	btfss	status,2,c
 22166  0079D4  D7F5               	goto	i2l6200
 22167  0079D6                     i2l6204:
 22168  0079D6  FFFF               	dw	65535	; assembler added errata NOP
 22169  0079D8  5024               	movf	___fttol@sign1,w,c
 22170  0079DA  B4D8               	btfsc	status,2,c
 22171  0079DC  D008               	goto	i2l6208
 22172  0079DE  1E28               	comf	___fttol@lval+3,f,c
 22173  0079E0  1E27               	comf	___fttol@lval+2,f,c
 22174  0079E2  1E26               	comf	___fttol@lval+1,f,c
 22175  0079E4  6C25               	negf	___fttol@lval,c
 22176  0079E6  0E00               	movlw	0
 22177  0079E8  2226               	addwfc	___fttol@lval+1,f,c
 22178  0079EA  2227               	addwfc	___fttol@lval+2,f,c
 22179  0079EC  2228               	addwfc	___fttol@lval+3,f,c
 22180  0079EE                     i2l6208:
 22181  0079EE  FFFF               	dw	65535	; assembler added errata NOP
 22182  0079F0  C025  F01B         	movff	___fttol@lval,?___fttol
 22183  0079F4  C026  F01C         	movff	___fttol@lval+1,?___fttol+1
 22184  0079F8  C027  F01D         	movff	___fttol@lval+2,?___fttol+2
 22185  0079FC  C028  F01E         	movff	___fttol@lval+3,?___fttol+3
 22186  007A00                     i2l1417:
 22187  007A00  FFFF               	dw	65535	; assembler added errata NOP
 22188  007A02  0012               	return		;funcret
 22189  007A04  FFFF               	dw	65535	; errata NOP
 22190  007A06                     __end_of___fttol:
 22191                           	opt stack 0
 22192                           tosu	equ	0xFFF
 22193                           tosh	equ	0xFFE
 22194                           tosl	equ	0xFFD
 22195                           pclatu	equ	0xFFB
 22196                           pclath	equ	0xFFA
 22197                           tblptru	equ	0xFF8
 22198                           tblptrh	equ	0xFF7
 22199                           tblptrl	equ	0xFF6
 22200                           tablat	equ	0xFF5
 22201                           prodh	equ	0xFF4
 22202                           prodl	equ	0xFF3
 22203                           intcon	equ	0xFF2
 22204                           indf0	equ	0xFEF
 22205                           postinc0	equ	0xFEE
 22206                           fsr0h	equ	0xFEA
 22207                           fsr0l	equ	0xFE9
 22208                           wreg	equ	0xFE8
 22209                           postdec1	equ	0xFE5
 22210                           fsr1h	equ	0xFE2
 22211                           fsr1l	equ	0xFE1
 22212                           indf2	equ	0xFDF
 22213                           postinc2	equ	0xFDE
 22214                           postdec2	equ	0xFDD
 22215                           fsr2h	equ	0xFDA
 22216                           fsr2l	equ	0xFD9
 22217                           status	equ	0xFD8
 22218                           
 22219 ;; *************** function ___ftmul *****************
 22220 ;; Defined at:
 22221 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
 22222 ;; Parameters:    Size  Location     Type
 22223 ;;  f1              3   11[COMRAM] float 
 22224 ;;  f2              3   14[COMRAM] float 
 22225 ;; Auto vars:     Size  Location     Type
 22226 ;;  f3_as_produc    3   21[COMRAM] unsigned um
 22227 ;;  sign            1   25[COMRAM] unsigned char 
 22228 ;;  cntr            1   24[COMRAM] unsigned char 
 22229 ;;  exp             1   20[COMRAM] unsigned char 
 22230 ;; Return value:  Size  Location     Type
 22231 ;;                  3   11[COMRAM] float 
 22232 ;; Registers used:
 22233 ;;		wreg, status,2, status,0, cstack
 22234 ;; Tracked objects:
 22235 ;;		On entry : 0/0
 22236 ;;		On exit  : 0/0
 22237 ;;		Unchanged: 0/0
 22238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22239 ;;      Params:         6       0       0       0       0       0       0
 22240 ;;      Locals:         6       0       0       0       0       0       0
 22241 ;;      Temps:          3       0       0       0       0       0       0
 22242 ;;      Totals:        15       0       0       0       0       0       0
 22243 ;;Total ram usage:       15 bytes
 22244 ;; Hardware stack levels used:    1
 22245 ;; Hardware stack levels required when called:    1
 22246 ;; This function calls:
 22247 ;;		___ftpack
 22248 ;; This function is called by:
 22249 ;;		_lerTransdutor
 22250 ;;		_map
 22251 ;; This function uses a non-reentrant model
 22252 ;;
 22253                           
 22254                           	psect	text92
 22255  003DBC                     __ptext92:
 22256                           	opt stack 0
 22257  003DBC                     ___ftmul:
 22258                           	opt stack 0
 22259  003DBC  FFFF               	dw	65535	; assembler added errata NOP
 22260                           
 22261                           ;incstack = 0
 22262  003DBE  C00E  F012         	movff	___ftmul@f1+2,??___ftmul
 22263  003DC2  6A13               	clrf	(??___ftmul+1)& (0+255),c
 22264  003DC4  6A14               	clrf	(??___ftmul+2)& (0+255),c
 22265  003DC6  340D               	rlcf	___ftmul@f1+1,w,c
 22266  003DC8  3612               	rlcf	??___ftmul& (0+255),f,c
 22267  003DCA  E301               	bnc	u647_41
 22268  003DCC  8013               	bsf	(??___ftmul+1)& (0+255),0,c
 22269  003DCE                     u647_41:
 22270  003DCE  5012               	movf	??___ftmul,w,c
 22271  003DD0  6E15               	movwf	___ftmul@exp,c
 22272  003DD2  5015               	movf	___ftmul@exp,w,c
 22273  003DD4  B4D8               	btfsc	status,2,c
 22274  003DD6  D00D               	goto	i2l6108
 22275  003DD8  C011  F012         	movff	___ftmul@f2+2,??___ftmul
 22276  003DDC  6A13               	clrf	(??___ftmul+1)& (0+255),c
 22277  003DDE  6A14               	clrf	(??___ftmul+2)& (0+255),c
 22278  003DE0  3410               	rlcf	___ftmul@f2+1,w,c
 22279  003DE2  3612               	rlcf	??___ftmul& (0+255),f,c
 22280  003DE4  E301               	bnc	u649_41
 22281  003DE6  8013               	bsf	(??___ftmul+1)& (0+255),0,c
 22282  003DE8                     u649_41:
 22283  003DE8  5012               	movf	??___ftmul,w,c
 22284  003DEA  6E1A               	movwf	___ftmul@sign,c
 22285  003DEC  501A               	movf	___ftmul@sign,w,c
 22286  003DEE  A4D8               	btfss	status,2,c
 22287  003DF0  D008               	goto	i2l6112
 22288  003DF2                     i2l6108:
 22289  003DF2  FFFF               	dw	65535	; assembler added errata NOP
 22290  003DF4  0E00               	movlw	0
 22291  003DF6  6E0C               	movwf	?___ftmul,c
 22292  003DF8  0E00               	movlw	0
 22293  003DFA  6E0D               	movwf	?___ftmul+1,c
 22294  003DFC  0E00               	movlw	0
 22295  003DFE  6E0E               	movwf	?___ftmul+2,c
 22296  003E00  D056               	goto	i2l1396
 22297  003E02                     i2l6112:
 22298  003E02  FFFF               	dw	65535	; assembler added errata NOP
 22299  003E04  501A               	movf	___ftmul@sign,w,c
 22300  003E06  0F7B               	addlw	123
 22301  003E08  2615               	addwf	___ftmul@exp,f,c
 22302  003E0A  C00E  F01A         	movff	___ftmul@f1+2,___ftmul@sign
 22303  003E0E  5011               	movf	___ftmul@f2+2,w,c
 22304  003E10  1A1A               	xorwf	___ftmul@sign,f,c
 22305  003E12  0E80               	movlw	128
 22306  003E14  161A               	andwf	___ftmul@sign,f,c
 22307  003E16  8E0D               	bsf	___ftmul@f1+1,7,c
 22308  003E18  8E10               	bsf	___ftmul@f2+1,7,c
 22309  003E1A  0EFF               	movlw	255
 22310  003E1C  160F               	andwf	___ftmul@f2,f,c
 22311  003E1E  0EFF               	movlw	255
 22312  003E20  1610               	andwf	___ftmul@f2+1,f,c
 22313  003E22  0E00               	movlw	0
 22314  003E24  1611               	andwf	___ftmul@f2+2,f,c
 22315  003E26  0E00               	movlw	0
 22316  003E28  6E16               	movwf	___ftmul@f3_as_product,c
 22317  003E2A  0E00               	movlw	0
 22318  003E2C  6E17               	movwf	___ftmul@f3_as_product+1,c
 22319  003E2E  0E00               	movlw	0
 22320  003E30  6E18               	movwf	___ftmul@f3_as_product+2,c
 22321  003E32  0E07               	movlw	7
 22322  003E34  6E19               	movwf	___ftmul@cntr,c
 22323  003E36                     i2l6126:
 22324  003E36  FFFF               	dw	65535	; assembler added errata NOP
 22325  003E38  A00C               	btfss	___ftmul@f1,0,c
 22326  003E3A  D006               	goto	i2l6130
 22327  003E3C  500F               	movf	___ftmul@f2,w,c
 22328  003E3E  2616               	addwf	___ftmul@f3_as_product,f,c
 22329  003E40  5010               	movf	___ftmul@f2+1,w,c
 22330  003E42  2217               	addwfc	___ftmul@f3_as_product+1,f,c
 22331  003E44  5011               	movf	___ftmul@f2+2,w,c
 22332  003E46  2218               	addwfc	___ftmul@f3_as_product+2,f,c
 22333  003E48                     i2l6130:
 22334  003E48  FFFF               	dw	65535	; assembler added errata NOP
 22335  003E4A  90D8               	bcf	status,0,c
 22336  003E4C  320E               	rrcf	___ftmul@f1+2,f,c
 22337  003E4E  320D               	rrcf	___ftmul@f1+1,f,c
 22338  003E50  320C               	rrcf	___ftmul@f1,f,c
 22339  003E52  90D8               	bcf	status,0,c
 22340  003E54  360F               	rlcf	___ftmul@f2,f,c
 22341  003E56  3610               	rlcf	___ftmul@f2+1,f,c
 22342  003E58  3611               	rlcf	___ftmul@f2+2,f,c
 22343  003E5A  2E19               	decfsz	___ftmul@cntr,f,c
 22344  003E5C  D7EC               	goto	i2l6126
 22345  003E5E  0E09               	movlw	9
 22346  003E60  6E19               	movwf	___ftmul@cntr,c
 22347  003E62                     i2l6136:
 22348  003E62  FFFF               	dw	65535	; assembler added errata NOP
 22349  003E64  A00C               	btfss	___ftmul@f1,0,c
 22350  003E66  D006               	goto	i2l6140
 22351  003E68  500F               	movf	___ftmul@f2,w,c
 22352  003E6A  2616               	addwf	___ftmul@f3_as_product,f,c
 22353  003E6C  5010               	movf	___ftmul@f2+1,w,c
 22354  003E6E  2217               	addwfc	___ftmul@f3_as_product+1,f,c
 22355  003E70  5011               	movf	___ftmul@f2+2,w,c
 22356  003E72  2218               	addwfc	___ftmul@f3_as_product+2,f,c
 22357  003E74                     i2l6140:
 22358  003E74  FFFF               	dw	65535	; assembler added errata NOP
 22359  003E76  90D8               	bcf	status,0,c
 22360  003E78  320E               	rrcf	___ftmul@f1+2,f,c
 22361  003E7A  320D               	rrcf	___ftmul@f1+1,f,c
 22362  003E7C  320C               	rrcf	___ftmul@f1,f,c
 22363  003E7E  90D8               	bcf	status,0,c
 22364  003E80  3218               	rrcf	___ftmul@f3_as_product+2,f,c
 22365  003E82  3217               	rrcf	___ftmul@f3_as_product+1,f,c
 22366  003E84  3216               	rrcf	___ftmul@f3_as_product,f,c
 22367  003E86  2E19               	decfsz	___ftmul@cntr,f,c
 22368  003E88  D7EC               	goto	i2l6136
 22369  003E8A  C016  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
 22370  003E8E  C017  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 22371  003E92  C018  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 22372  003E96  C015  F004         	movff	___ftmul@exp,___ftpack@exp
 22373  003E9A  C01A  F005         	movff	___ftmul@sign,___ftpack@sign
 22374  003E9E  EC7B  F03A         	call	___ftpack	;wreg free
 22375  003EA2  C001  F00C         	movff	?___ftpack,?___ftmul
 22376  003EA6  C002  F00D         	movff	?___ftpack+1,?___ftmul+1
 22377  003EAA  C003  F00E         	movff	?___ftpack+2,?___ftmul+2
 22378  003EAE                     i2l1396:
 22379  003EAE  FFFF               	dw	65535	; assembler added errata NOP
 22380  003EB0  0012               	return		;funcret
 22381  003EB2  FFFF               	dw	65535	; errata NOP
 22382  003EB4                     __end_of___ftmul:
 22383                           	opt stack 0
 22384                           tosu	equ	0xFFF
 22385                           tosh	equ	0xFFE
 22386                           tosl	equ	0xFFD
 22387                           pclatu	equ	0xFFB
 22388                           pclath	equ	0xFFA
 22389                           tblptru	equ	0xFF8
 22390                           tblptrh	equ	0xFF7
 22391                           tblptrl	equ	0xFF6
 22392                           tablat	equ	0xFF5
 22393                           prodh	equ	0xFF4
 22394                           prodl	equ	0xFF3
 22395                           intcon	equ	0xFF2
 22396                           indf0	equ	0xFEF
 22397                           postinc0	equ	0xFEE
 22398                           fsr0h	equ	0xFEA
 22399                           fsr0l	equ	0xFE9
 22400                           wreg	equ	0xFE8
 22401                           postdec1	equ	0xFE5
 22402                           fsr1h	equ	0xFE2
 22403                           fsr1l	equ	0xFE1
 22404                           indf2	equ	0xFDF
 22405                           postinc2	equ	0xFDE
 22406                           postdec2	equ	0xFDD
 22407                           fsr2h	equ	0xFDA
 22408                           fsr2l	equ	0xFD9
 22409                           status	equ	0xFD8
 22410                           
 22411 ;; *************** function ___ftge *****************
 22412 ;; Defined at:
 22413 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 22414 ;; Parameters:    Size  Location     Type
 22415 ;;  ff1             3    0[COMRAM] float 
 22416 ;;  ff2             3    3[COMRAM] float 
 22417 ;; Auto vars:     Size  Location     Type
 22418 ;;		None
 22419 ;; Return value:  Size  Location     Type
 22420 ;;		None               void
 22421 ;; Registers used:
 22422 ;;		wreg, status,2, status,0
 22423 ;; Tracked objects:
 22424 ;;		On entry : 0/0
 22425 ;;		On exit  : 0/0
 22426 ;;		Unchanged: 0/0
 22427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22428 ;;      Params:         6       0       0       0       0       0       0
 22429 ;;      Locals:         0       0       0       0       0       0       0
 22430 ;;      Temps:          3       0       0       0       0       0       0
 22431 ;;      Totals:         9       0       0       0       0       0       0
 22432 ;;Total ram usage:        9 bytes
 22433 ;; Hardware stack levels used:    1
 22434 ;; This function calls:
 22435 ;;		Nothing
 22436 ;; This function is called by:
 22437 ;;		_lerTransdutor
 22438 ;; This function uses a non-reentrant model
 22439 ;;
 22440                           
 22441                           	psect	text93
 22442  007198                     __ptext93:
 22443                           	opt stack 0
 22444  007198                     ___ftge:
 22445                           	opt stack 0
 22446  007198  FFFF               	dw	65535	; assembler added errata NOP
 22447                           
 22448                           ;incstack = 0
 22449  00719A  AE03               	btfss	___ftge@ff1+2,7,c
 22450  00719C  D016               	goto	i2l6152
 22451  00719E  C001  F007         	movff	___ftge@ff1,??___ftge
 22452  0071A2  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
 22453  0071A6  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
 22454  0071AA  1E07               	comf	??___ftge,f,c
 22455  0071AC  1E08               	comf	??___ftge+1,f,c
 22456  0071AE  1E09               	comf	??___ftge+2,f,c
 22457  0071B0  2A07               	incf	??___ftge,f,c
 22458  0071B2  0E00               	movlw	0
 22459  0071B4  2208               	addwfc	??___ftge+1,f,c
 22460  0071B6  2209               	addwfc	??___ftge+2,f,c
 22461  0071B8  0E00               	movlw	0
 22462  0071BA  2407               	addwf	??___ftge,w,c
 22463  0071BC  6E01               	movwf	___ftge@ff1,c
 22464  0071BE  0E00               	movlw	0
 22465  0071C0  2008               	addwfc	??___ftge+1,w,c
 22466  0071C2  6E02               	movwf	___ftge@ff1+1,c
 22467  0071C4  0E80               	movlw	128
 22468  0071C6  2009               	addwfc	??___ftge+2,w,c
 22469  0071C8  6E03               	movwf	___ftge@ff1+2,c
 22470  0071CA                     i2l6152:
 22471  0071CA  FFFF               	dw	65535	; assembler added errata NOP
 22472  0071CC  AE06               	btfss	___ftge@ff2+2,7,c
 22473  0071CE  D016               	goto	i2l6156
 22474  0071D0  C004  F007         	movff	___ftge@ff2,??___ftge
 22475  0071D4  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
 22476  0071D8  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
 22477  0071DC  1E07               	comf	??___ftge,f,c
 22478  0071DE  1E08               	comf	??___ftge+1,f,c
 22479  0071E0  1E09               	comf	??___ftge+2,f,c
 22480  0071E2  2A07               	incf	??___ftge,f,c
 22481  0071E4  0E00               	movlw	0
 22482  0071E6  2208               	addwfc	??___ftge+1,f,c
 22483  0071E8  2209               	addwfc	??___ftge+2,f,c
 22484  0071EA  0E00               	movlw	0
 22485  0071EC  2407               	addwf	??___ftge,w,c
 22486  0071EE  6E04               	movwf	___ftge@ff2,c
 22487  0071F0  0E00               	movlw	0
 22488  0071F2  2008               	addwfc	??___ftge+1,w,c
 22489  0071F4  6E05               	movwf	___ftge@ff2+1,c
 22490  0071F6  0E80               	movlw	128
 22491  0071F8  2009               	addwfc	??___ftge+2,w,c
 22492  0071FA  6E06               	movwf	___ftge@ff2+2,c
 22493  0071FC                     i2l6156:
 22494  0071FC  FFFF               	dw	65535	; assembler added errata NOP
 22495  0071FE  0E00               	movlw	0
 22496  007200  1A01               	xorwf	___ftge@ff1,f,c
 22497  007202  0E00               	movlw	0
 22498  007204  1A02               	xorwf	___ftge@ff1+1,f,c
 22499  007206  0E80               	movlw	128
 22500  007208  1A03               	xorwf	___ftge@ff1+2,f,c
 22501  00720A  0E00               	movlw	0
 22502  00720C  1A04               	xorwf	___ftge@ff2,f,c
 22503  00720E  0E00               	movlw	0
 22504  007210  1A05               	xorwf	___ftge@ff2+1,f,c
 22505  007212  0E80               	movlw	128
 22506  007214  1A06               	xorwf	___ftge@ff2+2,f,c
 22507  007216  5004               	movf	___ftge@ff2,w,c
 22508  007218  5C01               	subwf	___ftge@ff1,w,c
 22509  00721A  5005               	movf	___ftge@ff2+1,w,c
 22510  00721C  5802               	subwfb	___ftge@ff1+1,w,c
 22511  00721E  5006               	movf	___ftge@ff2+2,w,c
 22512  007220  5803               	subwfb	___ftge@ff1+2,w,c
 22513  007222  B0D8               	btfsc	status,0,c
 22514  007224  D002               	goto	i2l6162
 22515  007226  90D8               	bcf	status,0,c
 22516  007228  D002               	goto	i2l1390
 22517  00722A                     i2l6162:
 22518  00722A  FFFF               	dw	65535	; assembler added errata NOP
 22519  00722C  80D8               	bsf	status,0,c
 22520  00722E                     i2l1390:
 22521  00722E  FFFF               	dw	65535	; assembler added errata NOP
 22522  007230  0012               	return		;funcret
 22523  007232  FFFF               	dw	65535	; errata NOP
 22524  007234                     __end_of___ftge:
 22525                           	opt stack 0
 22526                           tosu	equ	0xFFF
 22527                           tosh	equ	0xFFE
 22528                           tosl	equ	0xFFD
 22529                           pclatu	equ	0xFFB
 22530                           pclath	equ	0xFFA
 22531                           tblptru	equ	0xFF8
 22532                           tblptrh	equ	0xFF7
 22533                           tblptrl	equ	0xFF6
 22534                           tablat	equ	0xFF5
 22535                           prodh	equ	0xFF4
 22536                           prodl	equ	0xFF3
 22537                           intcon	equ	0xFF2
 22538                           indf0	equ	0xFEF
 22539                           postinc0	equ	0xFEE
 22540                           fsr0h	equ	0xFEA
 22541                           fsr0l	equ	0xFE9
 22542                           wreg	equ	0xFE8
 22543                           postdec1	equ	0xFE5
 22544                           fsr1h	equ	0xFE2
 22545                           fsr1l	equ	0xFE1
 22546                           indf2	equ	0xFDF
 22547                           postinc2	equ	0xFDE
 22548                           postdec2	equ	0xFDD
 22549                           fsr2h	equ	0xFDA
 22550                           fsr2l	equ	0xFD9
 22551                           status	equ	0xFD8
 22552                           
 22553 ;; *************** function ___ftdiv *****************
 22554 ;; Defined at:
 22555 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
 22556 ;; Parameters:    Size  Location     Type
 22557 ;;  f1              3   26[COMRAM] float 
 22558 ;;  f2              3   29[COMRAM] float 
 22559 ;; Auto vars:     Size  Location     Type
 22560 ;;  f3              3   36[COMRAM] float 
 22561 ;;  sign            1   40[COMRAM] unsigned char 
 22562 ;;  exp             1   39[COMRAM] unsigned char 
 22563 ;;  cntr            1   35[COMRAM] unsigned char 
 22564 ;; Return value:  Size  Location     Type
 22565 ;;                  3   26[COMRAM] float 
 22566 ;; Registers used:
 22567 ;;		wreg, status,2, status,0, cstack
 22568 ;; Tracked objects:
 22569 ;;		On entry : 0/0
 22570 ;;		On exit  : 0/0
 22571 ;;		Unchanged: 0/0
 22572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22573 ;;      Params:         6       0       0       0       0       0       0
 22574 ;;      Locals:         6       0       0       0       0       0       0
 22575 ;;      Temps:          3       0       0       0       0       0       0
 22576 ;;      Totals:        15       0       0       0       0       0       0
 22577 ;;Total ram usage:       15 bytes
 22578 ;; Hardware stack levels used:    1
 22579 ;; Hardware stack levels required when called:    1
 22580 ;; This function calls:
 22581 ;;		___ftpack
 22582 ;; This function is called by:
 22583 ;;		_lerTransdutor
 22584 ;;		_map
 22585 ;; This function uses a non-reentrant model
 22586 ;;
 22587                           
 22588                           	psect	text94
 22589  007838                     __ptext94:
 22590                           	opt stack 0
 22591  007838                     ___ftdiv:
 22592                           	opt stack 0
 22593  007838  FFFF               	dw	65535	; assembler added errata NOP
 22594                           
 22595                           ;incstack = 0
 22596  00783A  C01D  F021         	movff	___ftdiv@f1+2,??___ftdiv
 22597  00783E  6A22               	clrf	(??___ftdiv+1)& (0+255),c
 22598  007840  6A23               	clrf	(??___ftdiv+2)& (0+255),c
 22599  007842  341C               	rlcf	___ftdiv@f1+1,w,c
 22600  007844  3621               	rlcf	??___ftdiv& (0+255),f,c
 22601  007846  E301               	bnc	u642_41
 22602  007848  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
 22603  00784A                     u642_41:
 22604  00784A  5021               	movf	??___ftdiv,w,c
 22605  00784C  6E28               	movwf	___ftdiv@exp,c
 22606  00784E  5028               	movf	___ftdiv@exp,w,c
 22607  007850  B4D8               	btfsc	status,2,c
 22608  007852  D00D               	goto	i2l6062
 22609  007854  C020  F021         	movff	___ftdiv@f2+2,??___ftdiv
 22610  007858  6A22               	clrf	(??___ftdiv+1)& (0+255),c
 22611  00785A  6A23               	clrf	(??___ftdiv+2)& (0+255),c
 22612  00785C  341F               	rlcf	___ftdiv@f2+1,w,c
 22613  00785E  3621               	rlcf	??___ftdiv& (0+255),f,c
 22614  007860  E301               	bnc	u644_41
 22615  007862  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
 22616  007864                     u644_41:
 22617  007864  5021               	movf	??___ftdiv,w,c
 22618  007866  6E29               	movwf	___ftdiv@sign,c
 22619  007868  5029               	movf	___ftdiv@sign,w,c
 22620  00786A  A4D8               	btfss	status,2,c
 22621  00786C  D008               	goto	i2l6066
 22622  00786E                     i2l6062:
 22623  00786E  FFFF               	dw	65535	; assembler added errata NOP
 22624  007870  0E00               	movlw	0
 22625  007872  6E1B               	movwf	?___ftdiv,c
 22626  007874  0E00               	movlw	0
 22627  007876  6E1C               	movwf	?___ftdiv+1,c
 22628  007878  0E00               	movlw	0
 22629  00787A  6E1D               	movwf	?___ftdiv+2,c
 22630  00787C  D04D               	goto	i2l1381
 22631  00787E                     i2l6066:
 22632  00787E  FFFF               	dw	65535	; assembler added errata NOP
 22633  007880  0E00               	movlw	0
 22634  007882  6E25               	movwf	___ftdiv@f3,c
 22635  007884  0E00               	movlw	0
 22636  007886  6E26               	movwf	___ftdiv@f3+1,c
 22637  007888  0E00               	movlw	0
 22638  00788A  6E27               	movwf	___ftdiv@f3+2,c
 22639  00788C  5029               	movf	___ftdiv@sign,w,c
 22640  00788E  0F89               	addlw	137
 22641  007890  5E28               	subwf	___ftdiv@exp,f,c
 22642  007892  C01D  F029         	movff	___ftdiv@f1+2,___ftdiv@sign
 22643  007896  5020               	movf	___ftdiv@f2+2,w,c
 22644  007898  1A29               	xorwf	___ftdiv@sign,f,c
 22645  00789A  0E80               	movlw	128
 22646  00789C  1629               	andwf	___ftdiv@sign,f,c
 22647  00789E  8E1C               	bsf	___ftdiv@f1+1,7,c
 22648  0078A0  0EFF               	movlw	255
 22649  0078A2  161B               	andwf	___ftdiv@f1,f,c
 22650  0078A4  0EFF               	movlw	255
 22651  0078A6  161C               	andwf	___ftdiv@f1+1,f,c
 22652  0078A8  0E00               	movlw	0
 22653  0078AA  161D               	andwf	___ftdiv@f1+2,f,c
 22654  0078AC  8E1F               	bsf	___ftdiv@f2+1,7,c
 22655  0078AE  0EFF               	movlw	255
 22656  0078B0  161E               	andwf	___ftdiv@f2,f,c
 22657  0078B2  0EFF               	movlw	255
 22658  0078B4  161F               	andwf	___ftdiv@f2+1,f,c
 22659  0078B6  0E00               	movlw	0
 22660  0078B8  1620               	andwf	___ftdiv@f2+2,f,c
 22661  0078BA  0E18               	movlw	24
 22662  0078BC  6E24               	movwf	___ftdiv@cntr,c
 22663  0078BE                     i2l6086:
 22664  0078BE  FFFF               	dw	65535	; assembler added errata NOP
 22665  0078C0  90D8               	bcf	status,0,c
 22666  0078C2  3625               	rlcf	___ftdiv@f3,f,c
 22667  0078C4  3626               	rlcf	___ftdiv@f3+1,f,c
 22668  0078C6  3627               	rlcf	___ftdiv@f3+2,f,c
 22669  0078C8  501E               	movf	___ftdiv@f2,w,c
 22670  0078CA  5C1B               	subwf	___ftdiv@f1,w,c
 22671  0078CC  501F               	movf	___ftdiv@f2+1,w,c
 22672  0078CE  581C               	subwfb	___ftdiv@f1+1,w,c
 22673  0078D0  5020               	movf	___ftdiv@f2+2,w,c
 22674  0078D2  581D               	subwfb	___ftdiv@f1+2,w,c
 22675  0078D4  A0D8               	btfss	status,0,c
 22676  0078D6  D007               	goto	i2l1384
 22677  0078D8  501E               	movf	___ftdiv@f2,w,c
 22678  0078DA  5E1B               	subwf	___ftdiv@f1,f,c
 22679  0078DC  501F               	movf	___ftdiv@f2+1,w,c
 22680  0078DE  5A1C               	subwfb	___ftdiv@f1+1,f,c
 22681  0078E0  5020               	movf	___ftdiv@f2+2,w,c
 22682  0078E2  5A1D               	subwfb	___ftdiv@f1+2,f,c
 22683  0078E4  8025               	bsf	___ftdiv@f3,0,c
 22684  0078E6                     i2l1384:
 22685  0078E6  FFFF               	dw	65535	; assembler added errata NOP
 22686  0078E8  90D8               	bcf	status,0,c
 22687  0078EA  361B               	rlcf	___ftdiv@f1,f,c
 22688  0078EC  361C               	rlcf	___ftdiv@f1+1,f,c
 22689  0078EE  361D               	rlcf	___ftdiv@f1+2,f,c
 22690  0078F0  2E24               	decfsz	___ftdiv@cntr,f,c
 22691  0078F2  D7E5               	goto	i2l6086
 22692  0078F4  C025  F001         	movff	___ftdiv@f3,___ftpack@arg
 22693  0078F8  C026  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
 22694  0078FC  C027  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
 22695  007900  C028  F004         	movff	___ftdiv@exp,___ftpack@exp
 22696  007904  C029  F005         	movff	___ftdiv@sign,___ftpack@sign
 22697  007908  EC7B  F03A         	call	___ftpack	;wreg free
 22698  00790C  C001  F01B         	movff	?___ftpack,?___ftdiv
 22699  007910  C002  F01C         	movff	?___ftpack+1,?___ftdiv+1
 22700  007914  C003  F01D         	movff	?___ftpack+2,?___ftdiv+2
 22701  007918                     i2l1381:
 22702  007918  FFFF               	dw	65535	; assembler added errata NOP
 22703  00791A  0012               	return		;funcret
 22704  00791C  FFFF               	dw	65535	; errata NOP
 22705  00791E                     __end_of___ftdiv:
 22706                           	opt stack 0
 22707                           tosu	equ	0xFFF
 22708                           tosh	equ	0xFFE
 22709                           tosl	equ	0xFFD
 22710                           pclatu	equ	0xFFB
 22711                           pclath	equ	0xFFA
 22712                           tblptru	equ	0xFF8
 22713                           tblptrh	equ	0xFF7
 22714                           tblptrl	equ	0xFF6
 22715                           tablat	equ	0xFF5
 22716                           prodh	equ	0xFF4
 22717                           prodl	equ	0xFF3
 22718                           intcon	equ	0xFF2
 22719                           indf0	equ	0xFEF
 22720                           postinc0	equ	0xFEE
 22721                           fsr0h	equ	0xFEA
 22722                           fsr0l	equ	0xFE9
 22723                           wreg	equ	0xFE8
 22724                           postdec1	equ	0xFE5
 22725                           fsr1h	equ	0xFE2
 22726                           fsr1l	equ	0xFE1
 22727                           indf2	equ	0xFDF
 22728                           postinc2	equ	0xFDE
 22729                           postdec2	equ	0xFDD
 22730                           fsr2h	equ	0xFDA
 22731                           fsr2l	equ	0xFD9
 22732                           status	equ	0xFD8
 22733                           
 22734 ;; *************** function ___ftadd *****************
 22735 ;; Defined at:
 22736 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 22737 ;; Parameters:    Size  Location     Type
 22738 ;;  f1              3   26[COMRAM] float 
 22739 ;;  f2              3   29[COMRAM] float 
 22740 ;; Auto vars:     Size  Location     Type
 22741 ;;  exp1            1   37[COMRAM] unsigned char 
 22742 ;;  exp2            1   36[COMRAM] unsigned char 
 22743 ;;  sign            1   35[COMRAM] unsigned char 
 22744 ;; Return value:  Size  Location     Type
 22745 ;;                  3   26[COMRAM] float 
 22746 ;; Registers used:
 22747 ;;		wreg, status,2, status,0, cstack
 22748 ;; Tracked objects:
 22749 ;;		On entry : 0/0
 22750 ;;		On exit  : 0/0
 22751 ;;		Unchanged: 0/0
 22752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22753 ;;      Params:         6       0       0       0       0       0       0
 22754 ;;      Locals:         3       0       0       0       0       0       0
 22755 ;;      Temps:          3       0       0       0       0       0       0
 22756 ;;      Totals:        12       0       0       0       0       0       0
 22757 ;;Total ram usage:       12 bytes
 22758 ;; Hardware stack levels used:    1
 22759 ;; Hardware stack levels required when called:    1
 22760 ;; This function calls:
 22761 ;;		___ftpack
 22762 ;; This function is called by:
 22763 ;;		_lerTransdutor
 22764 ;;		_map
 22765 ;; This function uses a non-reentrant model
 22766 ;;
 22767                           
 22768                           	psect	text95
 22769  002E22                     __ptext95:
 22770                           	opt stack 0
 22771  002E22                     ___ftadd:
 22772                           	opt stack 0
 22773  002E22  FFFF               	dw	65535	; assembler added errata NOP
 22774                           
 22775                           ;incstack = 0
 22776  002E24  C01D  F021         	movff	___ftadd@f1+2,??___ftadd
 22777  002E28  6A22               	clrf	(??___ftadd+1)& (0+255),c
 22778  002E2A  6A23               	clrf	(??___ftadd+2)& (0+255),c
 22779  002E2C  341C               	rlcf	___ftadd@f1+1,w,c
 22780  002E2E  3621               	rlcf	??___ftadd& (0+255),f,c
 22781  002E30  E301               	bnc	u621_41
 22782  002E32  8022               	bsf	(??___ftadd+1)& (0+255),0,c
 22783  002E34                     u621_41:
 22784  002E34  5021               	movf	??___ftadd,w,c
 22785  002E36  6E26               	movwf	___ftadd@exp1,c
 22786  002E38  C020  F021         	movff	___ftadd@f2+2,??___ftadd
 22787  002E3C  6A22               	clrf	(??___ftadd+1)& (0+255),c
 22788  002E3E  6A23               	clrf	(??___ftadd+2)& (0+255),c
 22789  002E40  341F               	rlcf	___ftadd@f2+1,w,c
 22790  002E42  3621               	rlcf	??___ftadd& (0+255),f,c
 22791  002E44  E301               	bnc	u622_41
 22792  002E46  8022               	bsf	(??___ftadd+1)& (0+255),0,c
 22793  002E48                     u622_41:
 22794  002E48  5021               	movf	??___ftadd,w,c
 22795  002E4A  6E25               	movwf	___ftadd@exp2,c
 22796  002E4C  5026               	movf	___ftadd@exp1,w,c
 22797  002E4E  B4D8               	btfsc	status,2,c
 22798  002E50  D00B               	goto	i2l1349
 22799  002E52  5025               	movf	___ftadd@exp2,w,c
 22800  002E54  5C26               	subwf	___ftadd@exp1,w,c
 22801  002E56  B0D8               	btfsc	status,0,c
 22802  002E58  D00F               	goto	i2l5992
 22803  002E5A  5026               	movf	___ftadd@exp1,w,c
 22804  002E5C  0800               	sublw	0
 22805  002E5E  2425               	addwf	___ftadd@exp2,w,c
 22806  002E60  6E21               	movwf	??___ftadd& (0+255),c
 22807  002E62  0E18               	movlw	24
 22808  002E64  6421               	cpfsgt	??___ftadd,c
 22809  002E66  D008               	goto	i2l5992
 22810  002E68                     i2l1349:
 22811  002E68  FFFF               	dw	65535	; assembler added errata NOP
 22812  002E6A  C01E  F01B         	movff	___ftadd@f2,?___ftadd
 22813  002E6E  C01F  F01C         	movff	___ftadd@f2+1,?___ftadd+1
 22814  002E72  C020  F01D         	movff	___ftadd@f2+2,?___ftadd+2
 22815  002E76  D0BA               	goto	i2l1350
 22816  002E78                     i2l5992:
 22817  002E78  FFFF               	dw	65535	; assembler added errata NOP
 22818  002E7A  5025               	movf	___ftadd@exp2,w,c
 22819  002E7C  B4D8               	btfsc	status,2,c
 22820  002E7E  D00B               	goto	i2l1353
 22821  002E80  5026               	movf	___ftadd@exp1,w,c
 22822  002E82  5C25               	subwf	___ftadd@exp2,w,c
 22823  002E84  B0D8               	btfsc	status,0,c
 22824  002E86  D00F               	goto	i2l5998
 22825  002E88  5025               	movf	___ftadd@exp2,w,c
 22826  002E8A  0800               	sublw	0
 22827  002E8C  2426               	addwf	___ftadd@exp1,w,c
 22828  002E8E  6E21               	movwf	??___ftadd& (0+255),c
 22829  002E90  0E18               	movlw	24
 22830  002E92  6421               	cpfsgt	??___ftadd,c
 22831  002E94  D008               	goto	i2l5998
 22832  002E96                     i2l1353:
 22833  002E96  FFFF               	dw	65535	; assembler added errata NOP
 22834  002E98  C01B  F01B         	movff	___ftadd@f1,?___ftadd
 22835  002E9C  C01C  F01C         	movff	___ftadd@f1+1,?___ftadd+1
 22836  002EA0  C01D  F01D         	movff	___ftadd@f1+2,?___ftadd+2
 22837  002EA4  D0A3               	goto	i2l1350
 22838  002EA6                     i2l5998:
 22839  002EA6  FFFF               	dw	65535	; assembler added errata NOP
 22840  002EA8  0E06               	movlw	6
 22841  002EAA  6E24               	movwf	___ftadd@sign,c
 22842  002EAC  BE1D               	btfsc	___ftadd@f1+2,7,c
 22843  002EAE  8E24               	bsf	___ftadd@sign,7,c
 22844  002EB0  BE20               	btfsc	___ftadd@f2+2,7,c
 22845  002EB2  8C24               	bsf	___ftadd@sign,6,c
 22846  002EB4  8E1C               	bsf	___ftadd@f1+1,7,c
 22847  002EB6  0EFF               	movlw	255
 22848  002EB8  161B               	andwf	___ftadd@f1,f,c
 22849  002EBA  0EFF               	movlw	255
 22850  002EBC  161C               	andwf	___ftadd@f1+1,f,c
 22851  002EBE  0E00               	movlw	0
 22852  002EC0  161D               	andwf	___ftadd@f1+2,f,c
 22853  002EC2  8E1F               	bsf	___ftadd@f2+1,7,c
 22854  002EC4  0EFF               	movlw	255
 22855  002EC6  161E               	andwf	___ftadd@f2,f,c
 22856  002EC8  0EFF               	movlw	255
 22857  002ECA  161F               	andwf	___ftadd@f2+1,f,c
 22858  002ECC  0E00               	movlw	0
 22859  002ECE  1620               	andwf	___ftadd@f2+2,f,c
 22860  002ED0  5025               	movf	___ftadd@exp2,w,c
 22861  002ED2  5C26               	subwf	___ftadd@exp1,w,c
 22862  002ED4  B0D8               	btfsc	status,0,c
 22863  002ED6  D01E               	goto	i2l6024
 22864  002ED8                     i2l6014:
 22865  002ED8  FFFF               	dw	65535	; assembler added errata NOP
 22866  002EDA  90D8               	bcf	status,0,c
 22867  002EDC  361E               	rlcf	___ftadd@f2,f,c
 22868  002EDE  361F               	rlcf	___ftadd@f2+1,f,c
 22869  002EE0  3620               	rlcf	___ftadd@f2+2,f,c
 22870  002EE2  0625               	decf	___ftadd@exp2,f,c
 22871  002EE4  5026               	movf	___ftadd@exp1,w,c
 22872  002EE6  1825               	xorwf	___ftadd@exp2,w,c
 22873  002EE8  B4D8               	btfsc	status,2,c
 22874  002EEA  D00E               	goto	i2l6022
 22875  002EEC  0624               	decf	___ftadd@sign,f,c
 22876  002EEE  C024  F021         	movff	___ftadd@sign,??___ftadd
 22877  002EF2  0E07               	movlw	7
 22878  002EF4  1621               	andwf	??___ftadd,f,c
 22879  002EF6  B4D8               	btfsc	status,2,c
 22880  002EF8  D007               	goto	i2l6022
 22881  002EFA  D7EE               	goto	i2l6014
 22882  002EFC                     i2l6020:
 22883  002EFC  FFFF               	dw	65535	; assembler added errata NOP
 22884  002EFE  90D8               	bcf	status,0,c
 22885  002F00  321D               	rrcf	___ftadd@f1+2,f,c
 22886  002F02  321C               	rrcf	___ftadd@f1+1,f,c
 22887  002F04  321B               	rrcf	___ftadd@f1,f,c
 22888  002F06  2A26               	incf	___ftadd@exp1,f,c
 22889  002F08                     i2l6022:
 22890  002F08  FFFF               	dw	65535	; assembler added errata NOP
 22891  002F0A  5025               	movf	___ftadd@exp2,w,c
 22892  002F0C  1826               	xorwf	___ftadd@exp1,w,c
 22893  002F0E  B4D8               	btfsc	status,2,c
 22894  002F10  D023               	goto	i2l1364
 22895  002F12  D7F4               	goto	i2l6020
 22896  002F14                     i2l6024:
 22897  002F14  FFFF               	dw	65535	; assembler added errata NOP
 22898  002F16  5026               	movf	___ftadd@exp1,w,c
 22899  002F18  5C25               	subwf	___ftadd@exp2,w,c
 22900  002F1A  B0D8               	btfsc	status,0,c
 22901  002F1C  D01D               	goto	i2l1364
 22902  002F1E                     i2l6026:
 22903  002F1E  FFFF               	dw	65535	; assembler added errata NOP
 22904  002F20  90D8               	bcf	status,0,c
 22905  002F22  361B               	rlcf	___ftadd@f1,f,c
 22906  002F24  361C               	rlcf	___ftadd@f1+1,f,c
 22907  002F26  361D               	rlcf	___ftadd@f1+2,f,c
 22908  002F28  0626               	decf	___ftadd@exp1,f,c
 22909  002F2A  5026               	movf	___ftadd@exp1,w,c
 22910  002F2C  1825               	xorwf	___ftadd@exp2,w,c
 22911  002F2E  B4D8               	btfsc	status,2,c
 22912  002F30  D00E               	goto	i2l6034
 22913  002F32  0624               	decf	___ftadd@sign,f,c
 22914  002F34  C024  F021         	movff	___ftadd@sign,??___ftadd
 22915  002F38  0E07               	movlw	7
 22916  002F3A  1621               	andwf	??___ftadd,f,c
 22917  002F3C  B4D8               	btfsc	status,2,c
 22918  002F3E  D007               	goto	i2l6034
 22919  002F40  D7EE               	goto	i2l6026
 22920  002F42                     i2l6032:
 22921  002F42  FFFF               	dw	65535	; assembler added errata NOP
 22922  002F44  90D8               	bcf	status,0,c
 22923  002F46  3220               	rrcf	___ftadd@f2+2,f,c
 22924  002F48  321F               	rrcf	___ftadd@f2+1,f,c
 22925  002F4A  321E               	rrcf	___ftadd@f2,f,c
 22926  002F4C  2A25               	incf	___ftadd@exp2,f,c
 22927  002F4E                     i2l6034:
 22928  002F4E  FFFF               	dw	65535	; assembler added errata NOP
 22929  002F50  5025               	movf	___ftadd@exp2,w,c
 22930  002F52  1826               	xorwf	___ftadd@exp1,w,c
 22931  002F54  A4D8               	btfss	status,2,c
 22932  002F56  D7F5               	goto	i2l6032
 22933  002F58                     i2l1364:
 22934  002F58  FFFF               	dw	65535	; assembler added errata NOP
 22935  002F5A  AE24               	btfss	___ftadd@sign,7,c
 22936  002F5C  D00C               	goto	i2l1373
 22937  002F5E  0EFF               	movlw	255
 22938  002F60  1A1B               	xorwf	___ftadd@f1,f,c
 22939  002F62  0EFF               	movlw	255
 22940  002F64  1A1C               	xorwf	___ftadd@f1+1,f,c
 22941  002F66  0EFF               	movlw	255
 22942  002F68  1A1D               	xorwf	___ftadd@f1+2,f,c
 22943  002F6A  0E01               	movlw	1
 22944  002F6C  261B               	addwf	___ftadd@f1,f,c
 22945  002F6E  0E00               	movlw	0
 22946  002F70  221C               	addwfc	___ftadd@f1+1,f,c
 22947  002F72  0E00               	movlw	0
 22948  002F74  221D               	addwfc	___ftadd@f1+2,f,c
 22949  002F76                     i2l1373:
 22950  002F76  FFFF               	dw	65535	; assembler added errata NOP
 22951  002F78  AC24               	btfss	___ftadd@sign,6,c
 22952  002F7A  D00C               	goto	i2l6040
 22953  002F7C  0EFF               	movlw	255
 22954  002F7E  1A1E               	xorwf	___ftadd@f2,f,c
 22955  002F80  0EFF               	movlw	255
 22956  002F82  1A1F               	xorwf	___ftadd@f2+1,f,c
 22957  002F84  0EFF               	movlw	255
 22958  002F86  1A20               	xorwf	___ftadd@f2+2,f,c
 22959  002F88  0E01               	movlw	1
 22960  002F8A  261E               	addwf	___ftadd@f2,f,c
 22961  002F8C  0E00               	movlw	0
 22962  002F8E  221F               	addwfc	___ftadd@f2+1,f,c
 22963  002F90  0E00               	movlw	0
 22964  002F92  2220               	addwfc	___ftadd@f2+2,f,c
 22965  002F94                     i2l6040:
 22966  002F94  FFFF               	dw	65535	; assembler added errata NOP
 22967  002F96  0E00               	movlw	0
 22968  002F98  6E24               	movwf	___ftadd@sign,c
 22969  002F9A  501B               	movf	___ftadd@f1,w,c
 22970  002F9C  261E               	addwf	___ftadd@f2,f,c
 22971  002F9E  501C               	movf	___ftadd@f1+1,w,c
 22972  002FA0  221F               	addwfc	___ftadd@f2+1,f,c
 22973  002FA2  501D               	movf	___ftadd@f1+2,w,c
 22974  002FA4  2220               	addwfc	___ftadd@f2+2,f,c
 22975  002FA6  AE20               	btfss	___ftadd@f2+2,7,c
 22976  002FA8  D00E               	goto	i2l6050
 22977  002FAA  0EFF               	movlw	255
 22978  002FAC  1A1E               	xorwf	___ftadd@f2,f,c
 22979  002FAE  0EFF               	movlw	255
 22980  002FB0  1A1F               	xorwf	___ftadd@f2+1,f,c
 22981  002FB2  0EFF               	movlw	255
 22982  002FB4  1A20               	xorwf	___ftadd@f2+2,f,c
 22983  002FB6  0E01               	movlw	1
 22984  002FB8  261E               	addwf	___ftadd@f2,f,c
 22985  002FBA  0E00               	movlw	0
 22986  002FBC  221F               	addwfc	___ftadd@f2+1,f,c
 22987  002FBE  0E00               	movlw	0
 22988  002FC0  2220               	addwfc	___ftadd@f2+2,f,c
 22989  002FC2  0E01               	movlw	1
 22990  002FC4  6E24               	movwf	___ftadd@sign,c
 22991  002FC6                     i2l6050:
 22992  002FC6  FFFF               	dw	65535	; assembler added errata NOP
 22993  002FC8  C01E  F001         	movff	___ftadd@f2,___ftpack@arg
 22994  002FCC  C01F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
 22995  002FD0  C020  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
 22996  002FD4  C026  F004         	movff	___ftadd@exp1,___ftpack@exp
 22997  002FD8  C024  F005         	movff	___ftadd@sign,___ftpack@sign
 22998  002FDC  EC7B  F03A         	call	___ftpack	;wreg free
 22999  002FE0  C001  F01B         	movff	?___ftpack,?___ftadd
 23000  002FE4  C002  F01C         	movff	?___ftpack+1,?___ftadd+1
 23001  002FE8  C003  F01D         	movff	?___ftpack+2,?___ftadd+2
 23002  002FEC                     i2l1350:
 23003  002FEC  FFFF               	dw	65535	; assembler added errata NOP
 23004  002FEE  0012               	return		;funcret
 23005  002FF0  FFFF               	dw	65535	; errata NOP
 23006  002FF2                     __end_of___ftadd:
 23007                           	opt stack 0
 23008                           tosu	equ	0xFFF
 23009                           tosh	equ	0xFFE
 23010                           tosl	equ	0xFFD
 23011                           pclatu	equ	0xFFB
 23012                           pclath	equ	0xFFA
 23013                           tblptru	equ	0xFF8
 23014                           tblptrh	equ	0xFF7
 23015                           tblptrl	equ	0xFF6
 23016                           tablat	equ	0xFF5
 23017                           prodh	equ	0xFF4
 23018                           prodl	equ	0xFF3
 23019                           intcon	equ	0xFF2
 23020                           indf0	equ	0xFEF
 23021                           postinc0	equ	0xFEE
 23022                           fsr0h	equ	0xFEA
 23023                           fsr0l	equ	0xFE9
 23024                           wreg	equ	0xFE8
 23025                           postdec1	equ	0xFE5
 23026                           fsr1h	equ	0xFE2
 23027                           fsr1l	equ	0xFE1
 23028                           indf2	equ	0xFDF
 23029                           postinc2	equ	0xFDE
 23030                           postdec2	equ	0xFDD
 23031                           fsr2h	equ	0xFDA
 23032                           fsr2l	equ	0xFD9
 23033                           status	equ	0xFD8
 23034                           
 23035 ;; *************** function ___ftpack *****************
 23036 ;; Defined at:
 23037 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 23038 ;; Parameters:    Size  Location     Type
 23039 ;;  arg             3    0[COMRAM] unsigned um
 23040 ;;  exp             1    3[COMRAM] unsigned char 
 23041 ;;  sign            1    4[COMRAM] unsigned char 
 23042 ;; Auto vars:     Size  Location     Type
 23043 ;;		None
 23044 ;; Return value:  Size  Location     Type
 23045 ;;                  3    0[COMRAM] float 
 23046 ;; Registers used:
 23047 ;;		wreg, status,2, status,0
 23048 ;; Tracked objects:
 23049 ;;		On entry : 0/0
 23050 ;;		On exit  : 0/0
 23051 ;;		Unchanged: 0/0
 23052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23053 ;;      Params:         5       0       0       0       0       0       0
 23054 ;;      Locals:         0       0       0       0       0       0       0
 23055 ;;      Temps:          3       0       0       0       0       0       0
 23056 ;;      Totals:         8       0       0       0       0       0       0
 23057 ;;Total ram usage:        8 bytes
 23058 ;; Hardware stack levels used:    1
 23059 ;; This function calls:
 23060 ;;		Nothing
 23061 ;; This function is called by:
 23062 ;;		___ftadd
 23063 ;;		___ftdiv
 23064 ;;		___ftmul
 23065 ;;		___lwtoft
 23066 ;; This function uses a non-reentrant model
 23067 ;;
 23068                           
 23069                           	psect	text96
 23070  0074F6                     __ptext96:
 23071                           	opt stack 0
 23072  0074F6                     ___ftpack:
 23073                           	opt stack 0
 23074  0074F6  FFFF               	dw	65535	; assembler added errata NOP
 23075                           
 23076                           ;incstack = 0
 23077  0074F8  5004               	movf	___ftpack@exp,w,c
 23078  0074FA  B4D8               	btfsc	status,2,c
 23079  0074FC  D005               	goto	i2l5344
 23080  0074FE  5001               	movf	___ftpack@arg,w,c
 23081  007500  1002               	iorwf	___ftpack@arg+1,w,c
 23082  007502  1003               	iorwf	___ftpack@arg+2,w,c
 23083  007504  A4D8               	btfss	status,2,c
 23084  007506  D00E               	goto	i2l5350
 23085  007508                     i2l5344:
 23086  007508  FFFF               	dw	65535	; assembler added errata NOP
 23087  00750A  0E00               	movlw	0
 23088  00750C  6E01               	movwf	?___ftpack,c
 23089  00750E  0E00               	movlw	0
 23090  007510  6E02               	movwf	?___ftpack+1,c
 23091  007512  0E00               	movlw	0
 23092  007514  6E03               	movwf	?___ftpack+2,c
 23093  007516  D04E               	goto	i2l1315
 23094  007518                     i2l5348:
 23095  007518  FFFF               	dw	65535	; assembler added errata NOP
 23096  00751A  2A04               	incf	___ftpack@exp,f,c
 23097  00751C  90D8               	bcf	status,0,c
 23098  00751E  3203               	rrcf	___ftpack@arg+2,f,c
 23099  007520  3202               	rrcf	___ftpack@arg+1,f,c
 23100  007522  3201               	rrcf	___ftpack@arg,f,c
 23101  007524                     i2l5350:
 23102  007524  FFFF               	dw	65535	; assembler added errata NOP
 23103  007526  0E00               	movlw	0
 23104  007528  1401               	andwf	___ftpack@arg,w,c
 23105  00752A  6E06               	movwf	??___ftpack& (0+255),c
 23106  00752C  0E00               	movlw	0
 23107  00752E  1402               	andwf	___ftpack@arg+1,w,c
 23108  007530  6E07               	movwf	(??___ftpack+1)& (0+255),c
 23109  007532  0EFE               	movlw	254
 23110  007534  1403               	andwf	___ftpack@arg+2,w,c
 23111  007536  6E08               	movwf	(??___ftpack+2)& (0+255),c
 23112  007538  5006               	movf	??___ftpack,w,c
 23113  00753A  1007               	iorwf	??___ftpack+1,w,c
 23114  00753C  1008               	iorwf	??___ftpack+2,w,c
 23115  00753E  B4D8               	btfsc	status,2,c
 23116  007540  D00D               	goto	i2l5356
 23117  007542  D7EA               	goto	i2l5348
 23118  007544                     i2l5352:
 23119  007544  FFFF               	dw	65535	; assembler added errata NOP
 23120  007546  2A04               	incf	___ftpack@exp,f,c
 23121  007548  0E01               	movlw	1
 23122  00754A  2601               	addwf	___ftpack@arg,f,c
 23123  00754C  0E00               	movlw	0
 23124  00754E  2202               	addwfc	___ftpack@arg+1,f,c
 23125  007550  0E00               	movlw	0
 23126  007552  2203               	addwfc	___ftpack@arg+2,f,c
 23127  007554  90D8               	bcf	status,0,c
 23128  007556  3203               	rrcf	___ftpack@arg+2,f,c
 23129  007558  3202               	rrcf	___ftpack@arg+1,f,c
 23130  00755A  3201               	rrcf	___ftpack@arg,f,c
 23131  00755C                     i2l5356:
 23132  00755C  FFFF               	dw	65535	; assembler added errata NOP
 23133  00755E  0E00               	movlw	0
 23134  007560  1401               	andwf	___ftpack@arg,w,c
 23135  007562  6E06               	movwf	??___ftpack& (0+255),c
 23136  007564  0E00               	movlw	0
 23137  007566  1402               	andwf	___ftpack@arg+1,w,c
 23138  007568  6E07               	movwf	(??___ftpack+1)& (0+255),c
 23139  00756A  0EFF               	movlw	255
 23140  00756C  1403               	andwf	___ftpack@arg+2,w,c
 23141  00756E  6E08               	movwf	(??___ftpack+2)& (0+255),c
 23142  007570  5006               	movf	??___ftpack,w,c
 23143  007572  1007               	iorwf	??___ftpack+1,w,c
 23144  007574  1008               	iorwf	??___ftpack+2,w,c
 23145  007576  B4D8               	btfsc	status,2,c
 23146  007578  D007               	goto	i2l5360
 23147  00757A  D7E4               	goto	i2l5352
 23148  00757C                     i2l5358:
 23149  00757C  FFFF               	dw	65535	; assembler added errata NOP
 23150  00757E  0604               	decf	___ftpack@exp,f,c
 23151  007580  90D8               	bcf	status,0,c
 23152  007582  3601               	rlcf	___ftpack@arg,f,c
 23153  007584  3602               	rlcf	___ftpack@arg+1,f,c
 23154  007586  3603               	rlcf	___ftpack@arg+2,f,c
 23155  007588                     i2l5360:
 23156  007588  FFFF               	dw	65535	; assembler added errata NOP
 23157  00758A  BE02               	btfsc	___ftpack@arg+1,7,c
 23158  00758C  D003               	goto	i2l1326
 23159  00758E  0E02               	movlw	2
 23160  007590  6004               	cpfslt	___ftpack@exp,c
 23161  007592  D7F4               	goto	i2l5358
 23162  007594                     i2l1326:
 23163  007594  FFFF               	dw	65535	; assembler added errata NOP
 23164  007596  A004               	btfss	___ftpack@exp,0,c
 23165  007598  9E02               	bcf	___ftpack@arg+1,7,c
 23166  00759A  90D8               	bcf	status,0,c
 23167  00759C  3204               	rrcf	___ftpack@exp,f,c
 23168  00759E  5004               	movf	___ftpack@exp,w,c
 23169  0075A0  1203               	iorwf	___ftpack@arg+2,f,c
 23170  0075A2  5005               	movf	___ftpack@sign,w,c
 23171  0075A4  A4D8               	btfss	status,2,c
 23172  0075A6  8E03               	bsf	___ftpack@arg+2,7,c
 23173  0075A8  C001  F001         	movff	___ftpack@arg,?___ftpack
 23174  0075AC  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
 23175  0075B0  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
 23176  0075B4                     i2l1315:
 23177  0075B4  FFFF               	dw	65535	; assembler added errata NOP
 23178  0075B6  0012               	return		;funcret
 23179  0075B8  FFFF               	dw	65535	; errata NOP
 23180  0075BA                     __end_of___ftpack:
 23181                           	opt stack 0
 23182                           tosu	equ	0xFFF
 23183                           tosh	equ	0xFFE
 23184                           tosl	equ	0xFFD
 23185                           pclatu	equ	0xFFB
 23186                           pclath	equ	0xFFA
 23187                           tblptru	equ	0xFF8
 23188                           tblptrh	equ	0xFF7
 23189                           tblptrl	equ	0xFF6
 23190                           tablat	equ	0xFF5
 23191                           prodh	equ	0xFF4
 23192                           prodl	equ	0xFF3
 23193                           intcon	equ	0xFF2
 23194                           indf0	equ	0xFEF
 23195                           postinc0	equ	0xFEE
 23196                           fsr0h	equ	0xFEA
 23197                           fsr0l	equ	0xFE9
 23198                           wreg	equ	0xFE8
 23199                           postdec1	equ	0xFE5
 23200                           fsr1h	equ	0xFE2
 23201                           fsr1l	equ	0xFE1
 23202                           indf2	equ	0xFDF
 23203                           postinc2	equ	0xFDE
 23204                           postdec2	equ	0xFDD
 23205                           fsr2h	equ	0xFDA
 23206                           fsr2l	equ	0xFD9
 23207                           status	equ	0xFD8
 23208                           tosu	equ	0xFFF
 23209                           tosh	equ	0xFFE
 23210                           tosl	equ	0xFFD
 23211                           pclatu	equ	0xFFB
 23212                           pclath	equ	0xFFA
 23213                           tblptru	equ	0xFF8
 23214                           tblptrh	equ	0xFF7
 23215                           tblptrl	equ	0xFF6
 23216                           tablat	equ	0xFF5
 23217                           prodh	equ	0xFF4
 23218                           prodl	equ	0xFF3
 23219                           intcon	equ	0xFF2
 23220                           indf0	equ	0xFEF
 23221                           postinc0	equ	0xFEE
 23222                           fsr0h	equ	0xFEA
 23223                           fsr0l	equ	0xFE9
 23224                           wreg	equ	0xFE8
 23225                           postdec1	equ	0xFE5
 23226                           fsr1h	equ	0xFE2
 23227                           fsr1l	equ	0xFE1
 23228                           indf2	equ	0xFDF
 23229                           postinc2	equ	0xFDE
 23230                           postdec2	equ	0xFDD
 23231                           fsr2h	equ	0xFDA
 23232                           fsr2l	equ	0xFD9
 23233                           status	equ	0xFD8
 23234                           
 23235                           	psect	text97
 23236  000000                     __ptext97:
 23237                           	opt stack 0
 23238                           tosu	equ	0xFFF
 23239                           tosh	equ	0xFFE
 23240                           tosl	equ	0xFFD
 23241                           pclatu	equ	0xFFB
 23242                           pclath	equ	0xFFA
 23243                           tblptru	equ	0xFF8
 23244                           tblptrh	equ	0xFF7
 23245                           tblptrl	equ	0xFF6
 23246                           tablat	equ	0xFF5
 23247                           prodh	equ	0xFF4
 23248                           prodl	equ	0xFF3
 23249                           intcon	equ	0xFF2
 23250                           indf0	equ	0xFEF
 23251                           postinc0	equ	0xFEE
 23252                           fsr0h	equ	0xFEA
 23253                           fsr0l	equ	0xFE9
 23254                           wreg	equ	0xFE8
 23255                           postdec1	equ	0xFE5
 23256                           fsr1h	equ	0xFE2
 23257                           fsr1l	equ	0xFE1
 23258                           indf2	equ	0xFDF
 23259                           postinc2	equ	0xFDE
 23260                           postdec2	equ	0xFDD
 23261                           fsr2h	equ	0xFDA
 23262                           fsr2l	equ	0xFD9
 23263                           status	equ	0xFD8
 23264                           
 23265                           	psect	rparam
 23266  0000                     tosu	equ	0xFFF
 23267                           tosh	equ	0xFFE
 23268                           tosl	equ	0xFFD
 23269                           pclatu	equ	0xFFB
 23270                           pclath	equ	0xFFA
 23271                           tblptru	equ	0xFF8
 23272                           tblptrh	equ	0xFF7
 23273                           tblptrl	equ	0xFF6
 23274                           tablat	equ	0xFF5
 23275                           prodh	equ	0xFF4
 23276                           prodl	equ	0xFF3
 23277                           intcon	equ	0xFF2
 23278                           indf0	equ	0xFEF
 23279                           postinc0	equ	0xFEE
 23280                           fsr0h	equ	0xFEA
 23281                           fsr0l	equ	0xFE9
 23282                           wreg	equ	0xFE8
 23283                           postdec1	equ	0xFE5
 23284                           fsr1h	equ	0xFE2
 23285                           fsr1l	equ	0xFE1
 23286                           indf2	equ	0xFDF
 23287                           postinc2	equ	0xFDE
 23288                           postdec2	equ	0xFDD
 23289                           fsr2h	equ	0xFDA
 23290                           fsr2l	equ	0xFD9
 23291                           status	equ	0xFD8
 23292                           
 23293                           	psect	temp
 23294  00007B                     btemp:
 23295                           	opt stack 0
 23296  00007B                     	ds	1
 23297  0000                     int$flags	set	btemp
 23298                           tosu	equ	0xFFF
 23299                           tosh	equ	0xFFE
 23300                           tosl	equ	0xFFD
 23301                           pclatu	equ	0xFFB
 23302                           pclath	equ	0xFFA
 23303                           tblptru	equ	0xFF8
 23304                           tblptrh	equ	0xFF7
 23305                           tblptrl	equ	0xFF6
 23306                           tablat	equ	0xFF5
 23307                           prodh	equ	0xFF4
 23308                           prodl	equ	0xFF3
 23309                           intcon	equ	0xFF2
 23310                           indf0	equ	0xFEF
 23311                           postinc0	equ	0xFEE
 23312                           fsr0h	equ	0xFEA
 23313                           fsr0l	equ	0xFE9
 23314                           wreg	equ	0xFE8
 23315                           postdec1	equ	0xFE5
 23316                           fsr1h	equ	0xFE2
 23317                           fsr1l	equ	0xFE1
 23318                           indf2	equ	0xFDF
 23319                           postinc2	equ	0xFDE
 23320                           postdec2	equ	0xFDD
 23321                           fsr2h	equ	0xFDA
 23322                           fsr2l	equ	0xFD9
 23323                           status	equ	0xFD8


Data Sizes:
    Strings     1230
    Constant    58
    Data        13
    BSS         273
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     63     122
    BANK0           128     89     128
    BANK1           256      0     188
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ajusteSP_Bombas$2348	PTR const unsigned char  size(2) Largest target is 4
		 -> intToFloatStr@end(BANK0[4]), 

    telaPrincipal$2347	PTR const unsigned char  size(2) Largest target is 4
		 -> intToFloatStr@end(BANK0[4]), 

    acaoTesteBombas$2346	PTR const unsigned char  size(2) Largest target is 4
		 -> intToFloatStr@end(BANK0[4]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_34(CODE[3]), STR_32(CODE[7]), STR_31(CODE[6]), STR_30(CODE[3]), 
		 -> STR_18(CODE[3]), STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[3]), 
		 -> STR_9(CODE[3]), STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 60
		 -> NULL(NULL[0]), bufferSerial(BANK1[60]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 60
		 -> NULL(NULL[0]), bufferSerial(BANK1[60]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 60
		 -> NULL(NULL[0]), bufferSerial(BANK1[60]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_34(CODE[3]), STR_32(CODE[7]), STR_31(CODE[6]), STR_30(CODE[3]), 
		 -> STR_18(CODE[3]), STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[3]), 
		 -> STR_9(CODE[3]), STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[3]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 60
		 -> NULL(NULL[0]), bufferSerial(BANK1[60]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_34(CODE[3]), STR_32(CODE[7]), STR_31(CODE[6]), STR_30(CODE[3]), 
		 -> STR_18(CODE[3]), STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[3]), 
		 -> STR_9(CODE[3]), STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[3]), 
		 -> NULL(NULL[0]), bufferSerial(BANK1[60]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_34(CODE[3]), STR_32(CODE[7]), STR_31(CODE[6]), STR_30(CODE[3]), 
		 -> STR_18(CODE[3]), STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[3]), 
		 -> STR_9(CODE[3]), STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[3]), 
		 -> NULL(NULL[0]), bufferSerial(BANK1[60]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> intToFloatStr@conv(BANK0[4]), STR_113(CODE[15]), STR_112(CODE[12]), STR_111(CODE[10]), 
		 -> STR_110(CODE[18]), STR_109(CODE[10]), STR_108(CODE[18]), STR_107(CODE[16]), 
		 -> STR_106(CODE[10]), STR_105(CODE[10]), STR_104(CODE[11]), STR_103(CODE[9]), 
		 -> STR_102(CODE[3]), STR_101(CODE[15]), STR_100(CODE[15]), STR_99(CODE[11]), 
		 -> STR_98(CODE[11]), STR_97(CODE[19]), STR_96(CODE[5]), STR_95(CODE[12]), 
		 -> STR_94(CODE[5]), STR_93(CODE[14]), STR_92(CODE[19]), STR_89(CODE[3]), 
		 -> STR_88(CODE[7]), STR_87(CODE[7]), STR_85(CODE[12]), STR_84(CODE[17]), 
		 -> STR_83(CODE[20]), STR_82(CODE[8]), STR_79(CODE[14]), STR_76(CODE[14]), 
		 -> STR_75(CODE[11]), STR_72(CODE[10]), STR_71(CODE[31]), STR_68(CODE[11]), 
		 -> STR_67(CODE[20]), STR_66(CODE[20]), STR_65(CODE[21]), STR_64(CODE[15]), 
		 -> STR_63(CODE[6]), STR_62(CODE[15]), STR_61(CODE[6]), STR_60(CODE[19]), 
		 -> STR_59(CODE[15]), STR_58(CODE[19]), STR_57(CODE[15]), STR_56(CODE[19]), 
		 -> STR_55(CODE[18]), STR_54(CODE[26]), STR_53(CODE[16]), STR_50(CODE[15]), 
		 -> STR_47(CODE[15]), STR_44(CODE[11]), STR_43(CODE[17]), STR_42(CODE[16]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[16]), STR_38(CODE[15]), 
		 -> STR_37(CODE[15]), STR_36(CODE[20]), STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 21
		 -> intToFloatStr@end(BANK0[4]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 
		 -> line4(BANK1[21]), bufferAUX(BANK1[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 21
		 -> intToFloatStr@end(BANK0[4]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 
		 -> line4(BANK1[21]), bufferAUX(BANK1[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 123
		 -> STR_35(CODE[7]), STR_33(CODE[11]), STR_23(CODE[104]), STR_22(CODE[63]), 
		 -> STR_21(CODE[18]), STR_20(CODE[7]), STR_19(CODE[12]), STR_17(CODE[5]), 
		 -> STR_12(CODE[123]), STR_11(CODE[18]), STR_10(CODE[12]), STR_8(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 21
		 -> intToFloatStr@end(BANK0[4]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 
		 -> line4(BANK1[21]), bufferAUX(BANK1[20]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 60
		 -> bufferAUX(BANK1[20]), bufferSerial(BANK1[60]), 

    memset@p	PTR unsigned char  size(2) Largest target is 60
		 -> bufferAUX(BANK1[20]), bufferSerial(BANK1[60]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> bufferAUX(BANK1[20]), NULL(NULL[0]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_114(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> intToFloatStr@end(BANK0[4]), STR_91(CODE[17]), STR_90(CODE[13]), STR_86(CODE[12]), 
		 -> STR_81(CODE[5]), STR_80(CODE[3]), STR_78(CODE[5]), STR_77(CODE[3]), 
		 -> STR_74(CODE[5]), STR_73(CODE[3]), STR_70(CODE[4]), STR_69(CODE[4]), 
		 -> STR_52(CODE[5]), STR_51(CODE[3]), STR_49(CODE[5]), STR_48(CODE[3]), 
		 -> line3(BANK1[21]), STR_46(CODE[5]), STR_45(CODE[3]), line2(BANK1[21]), 
		 -> line1(BANK1[21]), line4(BANK1[21]), STR_29(CODE[6]), STR_28(CODE[3]), 
		 -> STR_27(CODE[6]), STR_26(CODE[3]), STR_25(CODE[6]), STR_24(CODE[3]), 
		 -> STR_13(CODE[12]), tel2(BANK1[12]), tel1(BANK1[12]), bufferAUX(BANK1[20]), 
		 -> NULL(NULL[0]), bufferSerial(BANK1[60]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 123
		 -> intToFloatStr@conv(BANK0[4]), STR_113(CODE[15]), STR_112(CODE[12]), STR_111(CODE[10]), 
		 -> STR_110(CODE[18]), STR_109(CODE[10]), STR_108(CODE[18]), STR_107(CODE[16]), 
		 -> STR_106(CODE[10]), STR_105(CODE[10]), STR_104(CODE[11]), STR_103(CODE[9]), 
		 -> STR_102(CODE[3]), STR_101(CODE[15]), STR_100(CODE[15]), STR_99(CODE[11]), 
		 -> STR_98(CODE[11]), STR_97(CODE[19]), STR_96(CODE[5]), STR_95(CODE[12]), 
		 -> STR_94(CODE[5]), STR_93(CODE[14]), STR_92(CODE[19]), STR_89(CODE[3]), 
		 -> STR_88(CODE[7]), STR_87(CODE[7]), STR_85(CODE[12]), STR_84(CODE[17]), 
		 -> STR_83(CODE[20]), STR_82(CODE[8]), STR_79(CODE[14]), STR_76(CODE[14]), 
		 -> STR_75(CODE[11]), STR_72(CODE[10]), STR_71(CODE[31]), STR_68(CODE[11]), 
		 -> STR_67(CODE[20]), STR_66(CODE[20]), STR_65(CODE[21]), STR_64(CODE[15]), 
		 -> STR_63(CODE[6]), STR_62(CODE[15]), STR_61(CODE[6]), STR_60(CODE[19]), 
		 -> STR_59(CODE[15]), STR_58(CODE[19]), STR_57(CODE[15]), STR_56(CODE[19]), 
		 -> STR_55(CODE[18]), STR_54(CODE[26]), STR_53(CODE[16]), STR_50(CODE[15]), 
		 -> STR_47(CODE[15]), STR_44(CODE[11]), STR_43(CODE[17]), STR_42(CODE[16]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[16]), STR_38(CODE[15]), 
		 -> STR_37(CODE[15]), STR_36(CODE[20]), STR_35(CODE[7]), STR_33(CODE[11]), 
		 -> STR_23(CODE[104]), STR_22(CODE[63]), STR_21(CODE[18]), STR_20(CODE[7]), 
		 -> STR_19(CODE[12]), STR_17(CODE[5]), STR_12(CODE[123]), STR_11(CODE[18]), 
		 -> STR_10(CODE[12]), STR_8(CODE[5]), STR_4(CODE[5]), STR_3(CODE[9]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    S1582__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1582__prbuf$ptr	PTR unsigned char  size(2) Largest target is 21
		 -> intToFloatStr@end(BANK0[4]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 
		 -> line4(BANK1[21]), bufferAUX(BANK1[20]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 21
		 -> intToFloatStr@end(BANK0[4]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 
		 -> line4(BANK1[21]), bufferAUX(BANK1[20]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    configuraTelefones$1454	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_91(CODE[17]), STR_90(CODE[13]), 

    dataLoger$1439	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_81(CODE[5]), STR_80(CODE[3]), 

    dataLoger$1434	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_78(CODE[5]), STR_77(CODE[3]), 

    dataLoger$1428	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_74(CODE[5]), STR_73(CODE[3]), 

    tela_testeBombas$1409	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_70(CODE[4]), STR_69(CODE[4]), 

    blink@line	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), line4(BANK1[21]), 

    atualizarLCD@line4	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), 

    atualizarLCD@line3	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), 

    atualizarLCD@line2	PTR unsigned char  size(2) Largest target is 21
		 -> line2(BANK1[21]), 

    atualizarLCD@line1	PTR unsigned char  size(2) Largest target is 21
		 -> line1(BANK1[21]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), line4(BANK1[21]), 

    acaoTesteBombas$1321	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_52(CODE[5]), STR_51(CODE[3]), 

    acaoTesteBombas$1316	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_49(CODE[5]), STR_48(CODE[3]), 

    acaoTesteBombas$1311	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_46(CODE[5]), STR_45(CODE[3]), 

    sp__intToFloatStr	PTR unsigned char  size(2) Largest target is 4
		 -> intToFloatStr@end(BANK0[4]), 

    enviaSMS$1221	PTR unsigned char  size(2) Largest target is 12
		 -> tel2(BANK1[12]), tel1(BANK1[12]), 

    enviaSMS$1215	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_25(CODE[6]), STR_24(CODE[3]), 

    enviaSMS$1214	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_27(CODE[6]), STR_26(CODE[3]), 

    enviaSMS$1213	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_29(CODE[6]), STR_28(CODE[3]), 

    enviaSMS$1201	PTR unsigned char  size(2) Largest target is 12
		 -> tel2(BANK1[12]), tel1(BANK1[12]), 

    comunicarTeste$1187	PTR unsigned char  size(2) Largest target is 12
		 -> tel2(BANK1[12]), tel1(BANK1[12]), 

    getDS1307TimeDate@ptrToUserVal	PTR struct . size(2) Largest target is 7
		 -> rtc(COMRAM[7]), 

    setDS1307TimeDate@ptrToUserVal	PTR struct . size(2) Largest target is 7
		 -> rtc(COMRAM[7]), 

    sp__getSerial	PTR unsigned char  size(2) Largest target is 20
		 -> bufferAUX(BANK1[20]), NULL(NULL[0]), 

    getSerial@ret	PTR unsigned char  size(2) Largest target is 60
		 -> NULL(NULL[0]), bufferSerial(BANK1[60]), 

    getSerial@str	PTR unsigned char  size(2) Largest target is 7
		 -> STR_7(CODE[7]), 

    sp__memset	PTR void  size(2) Largest target is 60
		 -> bufferAUX(BANK1[20]), bufferSerial(BANK1[60]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 60
		 -> NULL(NULL[0]), bufferSerial(BANK1[60]), 

    aguardaBuffer@str	PTR unsigned char  size(2) Largest target is 7
		 -> STR_34(CODE[3]), STR_32(CODE[7]), STR_31(CODE[6]), STR_30(CODE[3]), 
		 -> STR_18(CODE[3]), STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[3]), 
		 -> STR_9(CODE[3]), STR_6(CODE[7]), STR_5(CODE[3]), 

    writeChar@hex	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER in COMRAM

    _TIMER->_lerTransdutor
    _timer->_writeEEPROM16_ext
    i2_getDS1307TimeDate->i2_I2C_Read
    i2_I2C_Restart->i2_I2C_Wait
    i2_I2C_Read->i2_I2C_Wait
    i2_RTC_Init->i2_I2C_Write
    _writeEEPROM16_ext->i2_writeEEPROM_ext
    i2_writeEEPROM_ext->i2_I2C_Write
    i2_writeEEPROM_ext->i2_delay
    i2_I2C_Write->i2_I2C_Wait
    i2_I2C_Stop->i2_I2C_Wait
    i2_I2C_Start->i2_I2C_Wait
    _lerTransdutor->___ftdiv
    _lerTransdutor->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftmul

Critical Paths under _main in BANK0

    _main->_acaoTesteBombas
    _verificarIntervaloTesteBombas->_writeEEPROM_ext
    _tela_testeBombas->_sprintf
    _tela_ajusteRTC->_sprintf
    _setDS1307TimeDate->_I2C_Write
    _DECtoBCD->___awdiv
    _telaPrincipal->_intToFloatStr
    _resetParametros->_clearShiftREG
    _lerParametros->_readEEPROM16_ext
    _readEEPROM16_ext->_readEEPROM_ext
    _informacoes->_sprintf
    _getSinalSIM800L->_atoi
    _getSerial->_sprintf
    _atoi->_getSerial
    _getDS1307TimeDate->_I2C_Write
    _dataLoger->_sprintf
    _criarCaracteresCGRAM->_Lcd_Write_Char
    _configurarEstacionaria->_sprintf
    _configuraTelefones->_comunicarTeste
    _comunicarTeste->_printf
    _atualizarLCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _ajusteSP_Bombas->_intToFloatStr
    _acaoTesteBombas->_enviaSMS
    _salvarLOG->_readEEPROM_ext
    _salvarLOG->_writeEEPROM_ext
    _writeEEPROM_ext->_I2C_Write
    _readEEPROM_ext->_I2C_Write
    _I2C_Restart->_I2C_Wait
    _I2C_Read->_I2C_Wait
    _intToFloatStr->_sprintf
    _drenarPressao->_sprintf
    _sprintf->__doprnt
    _acaoBombas->_enviaSMS
    _partidaBombaEstacionaria->_delay
    _enviaSMS->_printf
    _printf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _limparBuffer->_memset
    _aguardaBuffer->_strstr
    _strstr->_strncmp
    _strncmp->_strlen
    _RTC_Init->_I2C_Write
    _I2C_Write->_DECtoBCD
    _I2C_Stop->_I2C_Wait
    _I2C_Start->_I2C_Wait
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _TIMER in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  391149
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                           _RTC_Init
                         _acaoBombas
                    _acaoTesteBombas
                    _ajusteSP_Bombas
                       _atualizarLCD
                            _btPress
             _configuraRegistradores
                 _configuraTelefones
             _configurarEstacionaria
               _criarCaracteresCGRAM
                          _dataLoger
                              _delay
                  _getDS1307TimeDate
                    _getSinalSIM800L
                        _informacoes
                      _lerParametros
                        _setShiftREG
                            _sprintf
                      _telaPrincipal
                     _tela_ajusteRTC
                   _tela_testeBombas
      _verificarIntervaloTesteBombas
 ---------------------------------------------------------------------------------
 (1) _verificarIntervaloTesteBombas                        0     0      0    5436
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _tela_testeBombas                                     4     4      0   24727
                                             53 BANK0      4     4      0
                              _blink
                            _btPress
                            _sprintf
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _tela_ajusteRTC                                       0     0      0   24052
                              _blink
                            _btPress
                  _setDS1307TimeDate
                            _sprintf
                          _validaRTC
 ---------------------------------------------------------------------------------
 (2) _validaRTC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setDS1307TimeDate                                    3     1      2    4798
                                             12 BANK0      3     1      2
                           _DECtoBCD
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _DECtoBCD                                             2     2      0    2240
                                              8 BANK0      2     2      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _telaPrincipal                                        4     4      0   36798
                                             66 BANK0      2     2      0
                              _blink
                            _btPress
                      _clearShiftREG
                      _intToFloatStr
                    _resetParametros
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _resetParametros                                      0     0      0     102
                      _clearShiftREG
 ---------------------------------------------------------------------------------
 (1) _setShiftREG                                          2     2      0      69
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lerParametros                                        2     2      0   12419
                                             20 BANK0      2     2      0
                   _readEEPROM16_ext
                     _readEEPROM_ext
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _readEEPROM16_ext                                     6     4      2    3343
                                             14 BANK0      6     4      2
                     _readEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _informacoes                                          0     0      0   14701
                            _btPress
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _getSinalSIM800L                                      4     4      0   31106
                                             70 BANK0      4     4      0
                      _aguardaBuffer
                               _atoi
                              _delay
                          _getSerial
                       _limparBuffer
                             _printf
                          _writeChar
 ---------------------------------------------------------------------------------
 (2) _getSerial                                           10     7      3   17444
                                             53 BANK0     10     7      3
                             _memset
                            _sprintf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2    1019
                                             63 BANK0      7     5      2
                             ___wmul
                          _getSerial (ARG)
                            _isdigit
 ---------------------------------------------------------------------------------
 (1) _getDS1307TimeDate                                    2     0      2    3574
                                             12 BANK0      2     0      2
                           _BCDtoDEC
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _BCDtoDEC                                             1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _dataLoger                                           12    12      0   19302
                                             53 BANK0     12    12      0
                            ___awdiv
                            _btPress
                     _readEEPROM_ext
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _criarCaracteresCGRAM                                56    56      0     758
                                              4 BANK0     56    56      0
                            _Lcd_Cmd
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _configurarEstacionaria                               0     0      0   24690
                              _blink
                            _btPress
                            _sprintf
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _configuraTelefones                                   5     5      0   37382
                                             63 BANK0      5     5      0
                              _blink
                            _btPress
                     _comunicarTeste
                            _sprintf
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _comunicarTeste                                       4     4      0   12460
                                             59 BANK0      4     4      0
                      _aguardaBuffer
                              _delay
                       _limparBuffer
                             _printf
                          _writeChar
 ---------------------------------------------------------------------------------
 (1) _configuraRegistradores                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atualizarLCD                                         9     1      8    2596
                                              8 BANK0      9     1      8
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     1      2     695
                                              4 BANK0      3     1      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     254
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    1150
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _ajusteSP_Bombas                                      8     8      0   42438
                                             66 BANK0      2     2      0
                              _blink
                            _btPress
                      _intToFloatStr
                            _sprintf
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _blink                                                5     1      4    4553
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _acaoTesteBombas                                     17    17      0   78472
                                             72 BANK0     17    17      0
                            _btPress
                      _clearShiftREG
                      _drenarPressao
                           _enviaSMS
                      _intToFloatStr
           _partidaBombaEstacionaria
                     _readEEPROM_ext
                          _salvarLOG
                            _sprintf
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _salvarLOG                                            3     3      0    9024
                                             14 BANK0      3     3      0
                     _readEEPROM_ext
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _writeEEPROM_ext                                      2     1      1    5436
                                             12 BANK0      2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _readEEPROM_ext                                       2     2      0    3241
                                             12 BANK0      2     2      0
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             4     2      2     912
                                              1 BANK0      4     2      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _intToFloatStr                                       13    11      2   17204
                                             53 BANK0     13    11      2
                            ___awdiv
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     895
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1215
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _drenarPressao                                        0     0      0   14670
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20     6     14   14670
                                             33 BANK0     20     6     14
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) _clearShiftREG                                        1     1      0     102
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _btPress                                              1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _acaoBombas                                           3     3      0   13745
                                             72 BANK0      3     3      0
                           _enviaSMS
           _partidaBombaEstacionaria
 ---------------------------------------------------------------------------------
 (2) _partidaBombaEstacionaria                             1     1      0    1044
                                              3 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _enviaSMS                                            13    13      0   12701
                                             59 BANK0     13    13      0
                      _aguardaBuffer
                              _delay
                       _limparBuffer
                             _printf
                          _writeChar
 ---------------------------------------------------------------------------------
 (2) _writeChar                                            2     0      2     801
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _printf                                              26     6     20    5816
                                             33 BANK0     26     6     20
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             25    19      6    4464
                                             12 BANK0     21    15      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     540
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _limparBuffer                                         0     0      0    1581
                              _delay
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     599
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _aguardaBuffer                                        2     0      2    3243
                                             19 BANK0      2     0      2
                              _delay
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1383
                                             15 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     326
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     282
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     216
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _delay                                                3     1      2     982
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0    2264
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            2     0      2    2264
                                             10 BANK0      2     0      2
                           _DECtoBCD (ARG)
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Wait                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     279
                                              3 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     155
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     503
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     395
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TIMER                                               15    15      0   15208
                                             48 COMRAM    15    15      0
                      _lerTransdutor
                        _readButtons
                              _timer
 ---------------------------------------------------------------------------------
 (7) _timer                                                6     6      0    2040
                                              8 COMRAM     6     6      0
                  _writeEEPROM16_ext
                         i2_RTC_Init
                i2_getDS1307TimeDate
                  i2_writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (8) i2_getDS1307TimeDate                                  2     0      2     707
                                              5 COMRAM     2     0      2
                         i2_BCDtoDEC
                         i2_I2C_Read
                      i2_I2C_Restart
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_Restart                                        0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (9) i2_I2C_Read                                           4     2      2     227
                                              1 COMRAM     4     2      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (9) i2_BCDtoDEC                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_RTC_Init                                           0     0      0     256
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
 ---------------------------------------------------------------------------------
 (8) _writeEEPROM16_ext                                    3     1      2     579
                                              5 COMRAM     3     1      2
                  i2_writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (8) i2_writeEEPROM_ext                                    2     1      1     426
                                              3 COMRAM     2     1      1
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
                            i2_delay
 ---------------------------------------------------------------------------------
 (9) i2_delay                                              3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (9) i2_I2C_Write                                          2     0      2     256
                                              1 COMRAM     2     0      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (9) i2_I2C_Stop                                           0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (9) i2_I2C_Start                                          0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Wait                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _readButtons                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _lerTransdutor                                        7     7      0   13101
                                             41 COMRAM     7     7      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _readADC
 ---------------------------------------------------------------------------------
 (8) _readADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) ___lwtoft                                             3     0      3    2156
                                              8 COMRAM     3     0      3
                           ___ftpack
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fttol                                             15    11      4     316
                                             26 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftmul                                             15     9      6    3010
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftge                                               9     3      6     392
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) ___ftdiv                                             15     9      6    2964
                                             26 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftadd                                             12     6      6    4010
                                             26 COMRAM    12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (9) ___ftpack                                             8     3      5    2070
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_Init
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _DECtoBCD (ARG)
         ___awdiv
         ___awmod
       _I2C_Wait (ARG)
   _acaoBombas
     _enviaSMS
       _aguardaBuffer
         _delay
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
       _delay
       _limparBuffer
         _delay
         _memset
       _printf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
       _writeChar
     _partidaBombaEstacionaria
       _delay
   _acaoTesteBombas
     _btPress
     _clearShiftREG
     _drenarPressao
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
     _enviaSMS
       _aguardaBuffer
         _delay
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
       _delay
       _limparBuffer
         _delay
         _memset
       _printf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
       _writeChar
     _intToFloatStr
       ___awdiv
       ___awmod
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
     _partidaBombaEstacionaria
       _delay
     _readEEPROM_ext
       _I2C_Read
         _I2C_Wait
       _I2C_Restart
         _I2C_Wait
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _DECtoBCD (ARG)
           ___awdiv
           ___awmod
         _I2C_Wait (ARG)
     _salvarLOG
       _readEEPROM_ext
         _I2C_Read
           _I2C_Wait
         _I2C_Restart
           _I2C_Wait
         _I2C_Start
           _I2C_Wait
         _I2C_Stop
           _I2C_Wait
         _I2C_Write
           _DECtoBCD (ARG)
             ___awdiv
             ___awmod
           _I2C_Wait (ARG)
       _writeEEPROM_ext
         _I2C_Start
           _I2C_Wait
         _I2C_Stop
           _I2C_Wait
         _I2C_Write
           _DECtoBCD (ARG)
             ___awdiv
             ___awmod
           _I2C_Wait (ARG)
         _delay
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _DECtoBCD (ARG)
           ___awdiv
           ___awmod
         _I2C_Wait (ARG)
       _delay
   _ajusteSP_Bombas
     _blink
     _btPress
     _intToFloatStr
       ___awdiv
       ___awmod
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _DECtoBCD (ARG)
           ___awdiv
           ___awmod
         _I2C_Wait (ARG)
       _delay
   _atualizarLCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _btPress
   _configuraRegistradores
   _configuraTelefones
     _blink
     _btPress
     _comunicarTeste
       _aguardaBuffer
         _delay
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
       _delay
       _limparBuffer
         _delay
         _memset
       _printf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
       _writeChar
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _DECtoBCD (ARG)
           ___awdiv
           ___awmod
         _I2C_Wait (ARG)
       _delay
   _configurarEstacionaria
     _blink
     _btPress
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _DECtoBCD (ARG)
           ___awdiv
           ___awmod
         _I2C_Wait (ARG)
       _delay
   _criarCaracteresCGRAM
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _dataLoger
     ___awdiv
     _btPress
     _readEEPROM_ext
       _I2C_Read
         _I2C_Wait
       _I2C_Restart
         _I2C_Wait
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _DECtoBCD (ARG)
           ___awdiv
           ___awmod
         _I2C_Wait (ARG)
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
   _delay
   _getDS1307TimeDate
     _BCDtoDEC
     _I2C_Read
       _I2C_Wait
     _I2C_Restart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _DECtoBCD (ARG)
         ___awdiv
         ___awmod
       _I2C_Wait (ARG)
   _getSinalSIM800L
     _aguardaBuffer
       _delay
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _atoi
       ___wmul
       _getSerial (ARG)
         _memset
         _sprintf
           __doprnt
             Absolute function(Fake) *
             ___lwdiv *
             ___lwmod *
               ___lwdiv (ARG)
             ___wmul *
             _isdigit *
             _putch *
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
       _isdigit (ARG)
     _delay
     _getSerial
       _memset
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
       _strlen
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _limparBuffer
       _delay
       _memset
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _writeChar
   _informacoes
     _btPress
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
   _lerParametros
     _readEEPROM16_ext
       _readEEPROM_ext
         _I2C_Read
           _I2C_Wait
         _I2C_Restart
           _I2C_Wait
         _I2C_Start
           _I2C_Wait
         _I2C_Stop
           _I2C_Wait
         _I2C_Write
           _DECtoBCD (ARG)
             ___awdiv
             ___awmod
           _I2C_Wait (ARG)
     _readEEPROM_ext
       _I2C_Read
         _I2C_Wait
       _I2C_Restart
         _I2C_Wait
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _DECtoBCD (ARG)
           ___awdiv
           ___awmod
         _I2C_Wait (ARG)
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _DECtoBCD (ARG)
           ___awdiv
           ___awmod
         _I2C_Wait (ARG)
       _delay
   _setShiftREG
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
   _telaPrincipal
     _blink
     _btPress
     _clearShiftREG
     _intToFloatStr
       ___awdiv
       ___awmod
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
     _resetParametros
       _clearShiftREG
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
   _tela_ajusteRTC
     _blink
     _btPress
     _setDS1307TimeDate
       _DECtoBCD
         ___awdiv
         ___awmod
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _DECtoBCD (ARG)
           ___awdiv
           ___awmod
         _I2C_Wait (ARG)
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _validaRTC
   _tela_testeBombas
     _blink
     _btPress
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _DECtoBCD (ARG)
           ___awdiv
           ___awmod
         _I2C_Wait (ARG)
       _delay
   _verificarIntervaloTesteBombas
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _DECtoBCD (ARG)
           ___awdiv
           ___awmod
         _I2C_Wait (ARG)
       _delay

 _TIMER (ROOT)
   _lerTransdutor
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
     ___lwtoft
       ___ftpack
       _readADC (ARG)
     _readADC
   _readButtons
   _timer
     _writeEEPROM16_ext
       i2_writeEEPROM_ext
         i2_I2C_Start
           i2_I2C_Wait
         i2_I2C_Stop
           i2_I2C_Wait
         i2_I2C_Write
           i2_I2C_Wait
         i2_delay
     i2_RTC_Init
       i2_I2C_Start
         i2_I2C_Wait
       i2_I2C_Stop
         i2_I2C_Wait
       i2_I2C_Write
         i2_I2C_Wait
     i2_getDS1307TimeDate
       i2_BCDtoDEC
       i2_I2C_Read
         i2_I2C_Wait
       i2_I2C_Restart
         i2_I2C_Wait
       i2_I2C_Start
         i2_I2C_Wait
       i2_I2C_Stop
         i2_I2C_Wait
       i2_I2C_Write
         i2_I2C_Wait
     i2_writeEEPROM_ext
       i2_I2C_Start
         i2_I2C_Wait
       i2_I2C_Stop
         i2_I2C_Wait
       i2_I2C_Write
         i2_I2C_Wait
       i2_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BC       7       73.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80     59      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3F      7A       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B6      15        0.0%
DATA                 0      0     1B6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Aug 31 13:07:30 2019

                                        __size_of_readEEPROM_ext 0058  
                                                    __CFG_CP0$ON 000000  
                                                    __CFG_CP1$ON 000000  
                                                    __CFG_CP2$ON 000000  
                                                    __CFG_CP3$ON 000000  
                                             __size_of_I2C_Start 000C  
                                             __size_of_I2C_Write 000E  
                                       __end_of_readEEPROM16_ext 699E  
                                                    __CFG_CPD$ON 000000  
                                                   ___awdiv@sign 0085  
                                                    __CFG_BOR$ON 000000  
                                            ___wmul@multiplicand 0082  
                                 __end_of_configurarEstacionaria 319A  
                               __end_of_partidaBombaEstacionaria 3CC4  
                                                    __CFG_OSC$HS 000000  
                                                   ___ftadd@exp1 0026  
                                                   ___ftadd@exp2 0025  
                                                   ___ftadd@sign 0024  
                                                    __CFG_WDT$ON 000000  
                                                            l312 2E1C  
                                                            l241 64A0  
                                                            l305 2DD6  
                                                            l421 688E  
                                                            l254 6910  
                                                            l334 257A  
                                                            l247 647A  
                                                            l424 6D12  
                                                            l504 6C44  
                                                            l513 0A0E  
                                                            l425 6D48  
                                                            l611 6A70  
                                                            l603 6A3C  
                                                            l515 0A18  
                                                            l339 25E8  
                                                            l291 6BA4  
                                                            l508 68CE  
                                                            l605 6A4C  
                                                            l461 6F76  
                                                            l607 6A5C  
                                                            l376 1BE8  
                                                            l640 7AF0  
                                                            l609 6A6C  
                                                            l473 3328  
                                                            l561 0F90  
                                                            l802 1590  
                                                            l627 3FA2  
                                                            l635 6954  
                                                            l715 291E  
                                                            l812 1692  
                                                            l732 2A34  
                                                            l493 3C66  
                                                            l661 6B56  
                                                            l494 3C88  
                                                            l806 1634  
                                                            l654 3DB6  
                                                            l590 3652  
                                                            l495 3C9E  
                                                            l647 3D28  
                                                            l816 1736  
                                                            l682 2C32  
                                                            l499 3CBE  
                                                            l773 2008  
                                                            l597 3738  
                                                            l862 1E84  
                                                            l838 3194  
                                                            l776 211E  
                                                            l795 1538  
                                                            l957 64E0  
                                                            l878 100E  
                                                   __CFG_CPB$OFF 000000  
                                                            _PEN 007E2A  
                                                            _SEN 007E28  
                                                            _cbf 0062  
                                                            _rtc 006F  
                                                    ?i2_I2C_Read 0002  
                                                   __CFG_BORV$20 000000  
                                                   ___awmod@sign 0085  
                                                    ?i2_I2C_Wait 0001  
                                                    ?i2_I2C_Stop 0001  
                                                            prod 000FF3  
                                                            tosl 000FFD  
                                                            wreg 000FE8  
                                           __size_of_I2C_Restart 000C  
                                                    ?i2_BCDtoDEC 0001  
                                       __size_of_ajusteSP_Bombas 029C  
                                                   __CFG_LVP$OFF 000000  
                                                   ___ftdiv@cntr 0024  
                                                   ___ftdiv@sign 0029  
                                                           l1260 3BBE  
                                                           l1259 3BB4  
                                                           l1509 7072  
                                                           l1519 6E84  
                                                           l1456 766E  
                                                           l1718 6A26  
                                                           l1727 743A  
                                                           l1691 72D8  
                                                           l8020 0610  
                                                           l4910 66BA  
                                                           l8030 066E  
                                                           l8006 05CC  
                                                           l4912 66D2  
                                                           l4808 65D6  
                                                           l8040 06D4  
                                                           l8032 067A  
                                                           l8008 05D4  
                                                           l8120 76E8  
                                                           l8112 76BA  
                                                           l9000 2DF6  
                                                           l8050 0752  
                                                           l8026 0634  
                                                           l8130 7722  
                                                           l8122 76F0  
                                                           l8106 76A2  
                                                           l8044 0700  
                                                           l9020 31E6  
                                                           l4790 6DCA  
                                                           l4862 73C4  
                                                           l8062 07DE  
                                                           l8054 077E  
                                                           l8118 76DA  
                                                           l8134 7732  
                                                           l8150 745E  
                                                           l9102 0A58  
                                                           l4880 6A04  
                                                           l8080 08A8  
                                                           l8056 078A  
                                                           l9040 3294  
                                                           l9032 3254  
                                                           l8232 6870  
                                                           l8160 7494  
                                                           l9200 0E0A  
                                                           l6448 6D06  
                                                           l4874 69E6  
                                                           l4866 740A  
                                                           l4858 7390  
                                                           l8090 096A  
                                                           l8074 0874  
                                                           l8066 080A  
                                                           l8058 0798  
                                                           l9026 321A  
                                                           l8138 7748  
                                                           l8162 749C  
                                                           l8170 74D2  
                                                           l8154 7470  
                                                           l9122 0B36  
                                                           l9106 0ABA  
                                                           l4788 6DC2  
                                                           l4868 7418  
                                                           l8068 0820  
                                                           l8092 0978  
                                                           l8228 6864  
                                                           l9140 0C12  
                                                           l9132 0BA4  
                                                           l9116 0ADE  
                                                           l8340 6B98  
                                                           l8332 6B80  
                                                           l8324 6B68  
                                                           l8086 093E  
                                                           l8078 08A0  
                                                           l8094 09C0  
                                                           l8502 18E2  
                                                           l9054 330A  
                                                           l8174 74E8  
                                                           l8166 74C2  
                                                           l8158 7486  
                                                           l9150 0C90  
                                                           l9134 0BAE  
                                                           l8414 2478  
                                                           l8406 2444  
                                                           l8512 1940  
                                                           l8504 18EA  
                                                           l9048 32D2  
                                                           l9224 0EE8  
                                                           l9216 0E96  
                                                           l9208 0E50  
                                                           l9160 0CF8  
                                                           l9152 0C9A  
                                                           l9128 0B8C  
                                                           l8280 3508  
                                                           l9400 2AD6  
                                                           l8336 6B8C  
                                                           l8328 6B74  
                                                           l7810 701A  
                                                           l8522 1980  
                                                           l8530 1A0A  
                                                           l8602 1BA4  
                                                           l9234 0F2E  
                                                           l9146 0C68  
                                                           l9330 7A74  
                                                           l8450 25A4  
                                                           l8442 256C  
                                                           l8434 252C  
                                                           l8362 3B26  
                                                           l8346 3AC2  
                                                           l9410 2B44  
                                                           l8188 690C  
                                                           l7812 7028  
                                                           l9172 0D62  
                                                           l9092 0A2E  
                                                           l8444 2584  
                                                           l8364 3B72  
                                                           l8348 3ACA  
                                                           l8292 35BA  
                                                           l9252 362E  
                                                           l9420 2BBE  
                                                           l9412 2B5C  
                                                           l9404 2AF6  
                                                           l7910 6A60  
                                                           l7902 6A40  
                                                           l7822 7062  
                                                           l7814 7030  
                                                           l7830 6E38  
                                                           l8550 1AA6  
                                                           l8526 19A2  
                                                           l8518 195E  
                                                           l8470 1816  
                                                           l8462 17F4  
                                                           l8702 6F56  
                                                           l9238 0F3C  
                                                           l9334 7A80  
                                                           l8438 255A  
                                                           l8382 23CA  
                                                           l8374 23AC  
                                                           l8454 25B0  
                                                           l8366 3B7A  
                                                           l8358 3B12  
                                                           l8294 35E6  
                                                           l9262 36CC  
                                                           l9414 2B64  
                                                           l9406 2B06  
                                                           l7832 6E46  
                                                           l8560 1AC2  
                                                           l8544 1A62  
                                                           l8480 184C  
                                                           l9184 0DB4  
                                                           l9176 0D7C  
                                                           l9168 0D4E  
                                                           l9096 0A3A  
                                                           l8800 3F52  
                                                           l8392 2400  
                                                           l9360 3D18  
                                                           l8288 3566  
                                                           l9272 36FE  
                                                           l9248 3622  
                                                           l9424 2BCE  
                                                           l9520 2372  
                                                           l7906 6A50  
                                                           l7850 7278  
                                                           l7834 6E4E  
                                                           l7922 0160  
                                                           l8562 1AD8  
                                                           l8626 778C  
                                                           l9194 0DDA  
                                                           l9274 3706  
                                                           l9266 36D8  
                                                           l9258 3644  
                                                           l9434 2C1A  
                                                           l9418 2B88  
                                                           l9506 232E  
                                                           l9522 239E  
                                                           l9530 28BC  
                                                           l7844 7238  
                                                           l7852 72AE  
                                                           l7932 01AE  
                                                           l7916 010A  
                                                           l8564 1ADE  
                                                           l8740 3C42  
                                                           l8724 3C0C  
                                                           l8660 6F20  
                                                           l8652 6F1A  
                                                           l8628 7798  
                                                           l8812 6924  
                                                           l9700 15F0  
                                                           l9372 3D54  
                                                           l9380 3DAA  
                                                           l9364 3D30  
                                                           l9356 3D0C  
                                                           l9516 2368  
                                                           l7862 6824  
                                                           l7838 6E74  
                                                           l7926 018E  
                                                           l8582 1B30  
                                                           l8574 1B02  
                                                           l8734 3C2C  
                                                           l8398 2424  
                                                           l9710 1666  
                                                           l9374 3D9A  
                                                           l9622 200E  
                                                           l9606 1F9C  
                                                           l9278 3712  
                                                           l9446 21DA  
                                                           l9542 2932  
                                                           l7856 72CA  
                                                           l7952 02F4  
                                                           l7928 01A2  
                                                           l8568 1AEA  
                                                           l8496 18B6  
                                                           l8488 1896  
                                                           l8752 3CB6  
                                                           l8672 6F34  
                                                           l8648 6F0C  
                                                           l8832 6B48  
                                                           l8808 3F84  
                                                           l8816 6930  
                                                           l9712 1678  
                                                           l9704 1612  
                                                           l9368 3D3C  
                                                           l9632 2060  
                                                           l9616 1FE6  
                                                           l9456 220C  
                                                           l9552 2974  
                                                           l7866 6838  
                                                           l7962 0374  
                                                           l7954 0302  
                                                           l7946 02B2  
                                                           l7938 020C  
                                                           l8586 1B50  
                                                           l8578 1B2A  
                                                           l8738 3C3C  
                                                           l9810 1D12  
                                                           l9650 144A  
                                                           l9466 2246  
                                                           l9562 29B4  
                                                           l8844 75EA  
                                                           l7980 047C  
                                                           l7964 0382  
                                                           l7972 03F4  
                                                           l7956 030A  
                                                           l8596 1B84  
                                                           l8684 6F42  
                                                           l8764 72F6  
                                                           l7892 6808  
                                                           l8828 6B28  
                                                           l9820 1D52  
                                                           l9724 16F2  
                                                           l9660 149A  
                                                           l9396 2AB2  
                                                           l9476 2280  
                                                           l9548 2960  
                                                           l8846 75FC  
                                                           l7990 0510  
                                                           l7974 040E  
                                                           l7958 034C  
                                                           l8598 1B98  
                                                           l8766 7302  
                                                           l9830 1D92  
                                                           l9806 1CFE  
                                                           l8782 3EBC  
                                                           l9734 1768  
                                                           l9750 17C2  
                                                           l9590 1EE0  
                                                           l9486 22BA  
                                                           l9574 29FA  
                                                           l9566 29C0  
                                                           l9558 29A2  
                                                           l9582 2A1A  
                                                           l8856 765A  
                                                           l8848 7604  
                                                           l7968 03C8  
                                                           l8696 6F50  
                                                           l9824 1D64  
                                                           l9816 1D40  
                                                           l9736 1784  
                                                           l9728 1714  
                                                           l9752 17DC  
                                                           l9672 14EC  
                                                           l9664 14AE  
                                                           l9496 22F4  
                                                           l9568 29CA  
                                                           l7978 0472  
                                                           l7986 04CE  
                                                           l9834 1DA4  
                                                           l8794 3F20  
                                                           l9746 17B8  
                                                           l9770 30F2  
                                                           l9762 30C4  
                                                           l9578 2A10  
                                                           l7988 04E8  
                                                           l7996 052A  
                                                           l9852 1E08  
                                                           l9844 1DE4  
                                                           l8788 3EEE  
                                                           l9684 155A  
                                                           l9668 14E0  
                                                           l9780 3134  
                                                           l8980 2D36  
                                                           l8972 2CD8  
                                                           l8956 2C70  
                                                           l8948 2C4C  
                                                           l7998 058C  
                                                           l9862 1E48  
                                                           l9838 1DB6  
                                                           l9870 1E64  
                                                           l9678 153E  
                                                           l9790 3176  
                                                           l9598 1F58  
                                                           l8990 2D98  
                                                           l8966 2CB8  
                                                           STR_1 7FE7  
                                                           l9848 1DF6  
                                                           l9688 1576  
                                                           l9776 3120  
                                                           l8992 2D9E  
                                                           l8984 2D64  
                                                           l9960 1038  
                                                           STR_2 7FE7  
                                                           STR_3 7F81  
                                                           l9866 1E5A  
                                                           l9858 1E36  
                                                           l9786 3162  
                                                           l9794 3180  
                                                           l8986 2D6A  
                                                           l8978 2D30  
                                                           l9970 1054  
                                                           STR_4 7FDD  
                                                           STR_5 7FF9  
                                                           l8996 2DCC  
                                                           l9980 1154  
                                                           l9972 10C8  
                                                           STR_6 7FA9  
                                                           STR_7 7FA9  
                                                           l8998 2DE8  
                                                           l9990 117C  
                                                           l9982 115C  
                                                           l9974 113C  
                                                           l9958 1030  
                                                           STR_8 7FDD  
                                                           STR_9 7FF9  
                                                           l9984 1164  
                                                           l9976 1144  
                                                           l9968 104C  
                                                           l9986 116C  
                                                           l9978 114C  
                                                           l9994 1186  
                                                           l9988 1174  
                                                           l9996 11D0  
                                                           u4440 6DEE  
                                                           u4447 6DE4  
                                                           _RCIF 007CF5  
                                                           _RCEN 007E2B  
                                                           u9200 046E  
                                                           u9120 0346  
                                                           u9210 04B8  
                                                           u9050 01D2  
                                                           u9060 01FA  
                                                           u9230 0564  
                                                           u9207 0464  
                                                           u9127 033C  
                                                           u9080 025A  
                                                           u9048 0140  
                                                           u9217 04AE  
                                                           u9057 01C8  
                                                           u9090 02A8  
                                                           u9067 01F0  
                                                           u9237 055A  
                                                           u9087 0250  
                                                           u9168 03AC  
                                                           u9097 029E  
                                                           u9418 07C2  
                                                           u9348 06B8  
                                                           u9198 0438  
                                                           u9490 09B2  
                                                           u9458 0858  
                                                           u9378 0736  
                                                           u9478 0920  
                                                           u8960 6804  
                                                           u9497 09A8  
                                                           _RSEN 007E29  
                                                   __CFG_WRT0$ON 000000  
                                                  _enviaSMS$1201 00BD  
                                                  _enviaSMS$1221 00C5  
                                                  _enviaSMS$1213 00BF  
                                                  _enviaSMS$1214 00C1  
                                                  _enviaSMS$1215 00C3  
                                                   __CFG_WRT1$ON 000000  
                                                   __CFG_WRT2$ON 000000  
                                                   __CFG_WRT3$ON 000000  
                                          writeEEPROM16_ext@data 0006  
                                                   __CFG_STVR$ON 000000  
                                                           __dia 00EC  
                                                           __ano 00EA  
                                                           __hor 00ED  
                                                           __mes 00EB  
                                                           __min 00EE  
                                              ?_Lcd_Write_String 0084  
                                                           __sec 00EF  
                                                 ?_drenarPressao 0001  
                                                  __CFG_EBTRB$ON 000000  
                                                           _atoi 3ABE  
                                                           _main 0F96  
                                    __end_ofi2_getDS1307TimeDate 3ABE  
                                                           _tel1 01B0  
                                                           _tel2 01A4  
                                                   ___ftpack@arg 0001  
                                                   ___ftpack@exp 0004  
                                               __end_of_I2C_Read 6818  
                                     __end_of_configuraTelefones 17EC  
                                                           fsr0h 000FEA  
                                                           fsr1h 000FE2  
                                                           indf0 000FEF  
                                                           fsr2h 000FDA  
                                                           fsr0l 000FE9  
                                                           indf2 000FDF  
                                                           fsr1l 000FE1  
                                                           fsr2l 000FD9  
                                                           btemp 007B  
                                               __end_of_I2C_Wait 64FA  
                                               __end_of_I2C_Stop 6450  
                                        __size_of_tela_ajusteRTC 0284  
                                               _etapaComunicacao 004D  
                                                   ?i2_I2C_Start 0001  
                                                           prodh 000FF4  
                                                           prodl 000FF3  
                                                   ?i2_I2C_Write 0002  
                                                __end_ofi2_delay 6616  
                                                           start 0100  
                                             ??_Lcd_Write_String 0086  
                                         __size_of_lerTransdutor 022C  
                                   partidaBombaEstacionaria@acao 0083  
                                               __end_of_BCDtoDEC 6516  
                                                __end_of_Lcd_Cmd 65B4  
                                         __size_ofi2_I2C_Restart 000C  
                                                 clearShiftREG@i 0080  
                                                  ?_atualizarLCD 0088  
                                                   ___ftmul@cntr 0019  
                                                   ___param_bank 000000  
                                                   ___ftmul@sign 001A  
                                               __end_of_DECtoBCD 6BFA  
                                      __size_of_tela_testeBombas 0220  
                                            _timerVerificarSinal 00FE  
                                                  _lerParametros 35FA  
                                                   ___fttol@exp1 0029  
                                                _executandoTeste 00F2  
                                                   ___fttol@lval 0025  
                                               ?_I2C_Master_Init 008D  
                                                   ?_readButtons 0001  
                                                  __CFG_OSCS$OFF 000000  
                                        _configuraTelefones$1454 00C1  
                                                    ?i2_RTC_Init 0001  
                                                          l10000 11E6  
                                                          l10040 1290  
                                                          l10032 126E  
                                                          l10024 124C  
                                                          l10016 122A  
                                                          l10008 1208  
                                                          l10070 1356  
                                                          l10064 1310  
                                                          l10056 12DC  
                                                          l10048 12BA  
                                                          l10074 1368  
                                                          l10082 1398  
                                                          l10068 1320  
                                                          l10086 13AE  
                                                          l10078 137A  
                                                          ?_atoi 00BF  
                                                          ?_main 0001  
                                                          _ACKEN 007E2C  
                                                          _ACKDT 007E2D  
                                                __end_of___awdiv 7756  
                                                __end_of___ftadd 2FF2  
                                                          STR_10 7ED1  
                                                          STR_11 7D76  
                                                          STR_20 7FA2  
                                                          STR_12 7B31  
                                                          STR_21 7D76  
                                                          STR_13 7EDD  
                                                          STR_30 7FF9  
                                                          STR_14 7FF9  
                                                          STR_22 7C14  
                                                          STR_31 7FD7  
                                                          STR_15 7FB0  
                                                          STR_23 7BAC  
                                                          STR_32 7FB0  
                                                          STR_24 7FF9  
                                                          STR_16 7FD7  
                                                          STR_40 7CF1  
                                                          STR_17 7FDD  
                                                          STR_25 7FD1  
                                                          STR_33 7F0D  
                                                          STR_41 7D04  
                                                          STR_26 7FF9  
                                                          STR_18 7FF9  
                                                          STR_34 7FFC  
                                                          STR_50 7E6D  
                                                          STR_42 7E01  
                                                          STR_35 7FA2  
                                                          STR_19 7ED1  
                                                          STR_27 7FD1  
                                                          STR_51 7FF9  
                                                          STR_43 7DBE  
                                                          STR_28 7FF9  
                                                          STR_52 7FE2  
                                                          STR_44 7F39  
                                                          STR_60 7D63  
                                                          STR_36 7CA1  
                                                __end_of___awmod 74F6  
                                                          STR_29 7FD1  
                                                          STR_45 7FF9  
                                                          STR_61 7FCB  
                                                          STR_37 7E7C  
                                                          STR_53 7DF1  
                                                          STR_70 7FF1  
                                                          STR_46 7FE2  
                                                          STR_62 7E40  
                                                          STR_38 7E31  
                                                          STR_54 7C72  
                                                          STR_63 7FC5  
                                                          STR_47 7E5E  
                                                          STR_39 7E11  
                                                          STR_55 7DAC  
                                                          STR_71 7C53  
                                                          STR_80 7FF9  
                                                          STR_48 7FF9  
                                                          STR_72 7F77  
                                                          STR_64 7E4F  
                                                          STR_56 7D2A  
                                                          STR_73 7FF9  
                                                          STR_81 7FE2  
                                                          STR_49 7FE2  
                                                          STR_57 7E31  
                                                          STR_65 7C8C  
                                                          STR_74 7FE2  
                                                          STR_82 7F93  
                                                          STR_90 7EC4  
                                                          STR_58 7D50  
                                                          STR_66 7CB5  
                                                          STR_59 7E31  
                                                          STR_75 7F23  
                                                          STR_91 7DE0  
                                                          STR_83 7CDD  
                                                          STR_67 7CC9  
                                                          STR_68 7F44  
                                                          STR_76 7EA8  
                                                          STR_84 7DCF  
                                                          STR_92 7D3D  
                                                          STR_77 7FF9  
                                                          STR_69 7FF5  
                                                          STR_85 7F01  
                                                          STR_93 7E9A  
                                                          STR_86 7EDD  
                                                          STR_78 7FE2  
                                                          STR_94 7FEC  
                                                          STR_87 7FB7  
                                                          STR_95 7EE9  
                                                          STR_79 7EB6  
                                                          STR_96 7FEC  
                                                          STR_88 7FBE  
                                                          STR_89 7F0A  
                                                          STR_97 7D17  
                                                          STR_98 7F2E  
                                                          STR_99 7F39  
                                                __end_of___ftdiv 791E  
                                                   ?_informacoes 0001  
                                                __end_of___lldiv 7684  
                                                          u10120 777C  
                                                          u10500 2DB6  
                                                __end_of___ftmul 3EB4  
                                                          _T0CON 000FD5  
                                                          u10460 2D4E  
                                                ___awdiv@divisor 0082  
                                                          u12207 66C4  
                                                          u11600 15E4  
                                                          u10480 2D82  
                                                          u12217 7090  
                                                          u12227 70AC  
                                                __end_of___fttol 7A06  
                                                          u12237 70C6  
                                                          u12247 65A2  
                                                          u12177 3CEE  
                                                          u12187 6AA0  
                                                          u12197 6AB4  
                                                          u11670 16E6  
                                                          u10990 3CD4  
                                                          u11965 6D7E  
                                                __end_of___lwdiv 7080  
                                                __end_of___lwmod 6E92  
                                                          i2l232 2814  
                                                          i2l218 656C  
                                                          i2l455 6FF4  
                                                          i2l581 3490  
                                                          i2l575 33A2  
                                                          i2l587 3476  
                                                          i2l875 00C0  
                                                          i2l868 0084  
                                                ___awdiv@counter 0084  
                                                          i2l957 64C6  
                                                          _RCREG 000FAE  
                                                          _TMR0H 000FD7  
                                                          _TIMER 0008  
                                                          _TMR0L 000FD6  
                                                          _SPBRG 000FAF  
                                                __end_of__doprnt 09D0  
                                        __size_of_Lcd_Set_Cursor 00F4  
                                                          _TXREG 000FAD  
                                                _writeEEPROM_ext 699E  
                                                  __CFG_PWRT$OFF 000000  
                                                __end_of_btPress 6F7C  
                                                 __CFG_EBTR0$OFF 000000  
                                                 __CFG_EBTR1$OFF 000000  
                                                 __CFG_EBTR2$OFF 000000  
                                                 __CFG_EBTR3$OFF 000000  
                                                  __CFG_WRTB$OFF 000000  
                                                          __b_ok 005A  
                                                  __CFG_WRTC$OFF 000000  
                                                  __CFG_WRTD$OFF 000000  
                                                __end_of_readADC 6588  
                                                          _delay 66B6  
                                                          _blink 6B0E  
                                                __end_of_dpowers 7B31  
                                                          _line1 017B  
                                                          _line2 0166  
                                                          _line3 0151  
                                                          _line4 013C  
                                                __end_of_isdigit 65E4  
                                         ??_criarCaracteresCGRAM 0084  
                                                          _shift 0040  
                                                  ___ftpack@sign 0005  
                                                          _timer 332E  
                                                          atoi@a 00C4  
                                               __end_of_RTC_Init 66B6  
                                                          atoi@s 00BF  
                                                          _putch 649A  
                                              __end_of_I2C_Start 6444  
                                         _flagEstacionariaLigada 00F1  
                                              __end_of_I2C_Write 6478  
                                                          pclath 000FFA  
                                                          tablat 000FF5  
                                         __size_of_intToFloatStr 00AE  
                                                          status 000FD8  
                                          __end_of_telaPrincipal 2C38  
                                                __end_of_sprintf 6CA0  
                                                 _comunicarTeste 23A8  
                                                __end_of_strncmp 7440  
                                          i2writeEEPROM_ext@data 0004  
                                               __end_of_Lcd_Init 7108  
                                                 ??_atualizarLCD 0090  
                                     __size_of_getDS1307TimeDate 0140  
                                     __size_of_setDS1307TimeDate 012E  
                                               __end_of_Lcd_Port 6A76  
                                            __size_ofi2_I2C_Read 0036  
                                            __size_ofi2_I2C_Wait 001A  
                                                __initialization 6E92  
                                                  _dtl_principal 0053  
                                            __size_ofi2_I2C_Stop 000C  
                                                 ?_lerParametros 0001  
                                                   __end_of_atoi 3BC4  
                                                   __end_of_main 13E6  
                                          __end_of_aguardaBuffer 6916  
                                            __size_ofi2_BCDtoDEC 0016  
                                                         ??_atoi 00C1  
                                                         ??_main 00D9  
                                                  ___fttol@sign1 0024  
                                                   i2I2C_Write@d 0002  
                                                  _status_jockey 00FD  
                             lerParametros@verifica_memoria_nova 0094  
                                             __size_of_Lcd_Clear 0012  
                                                  __activetblptr 000002  
                                                         ?_TIMER 0001  
                                                  _lerTransdutor 25EE  
                                          __end_of_clearShiftREG 6894  
                                                  i2_I2C_Restart 642C  
                                           _tempo_limite_partida 0067  
                                                      I2C_Read@a 0081  
                                                         TIMER@c 003F  
                                                   ?_setShiftREG 0001  
                                                __CFG_CCP2MUX$ON 000000  
                                             readEEPROM_ext@data 008D  
                                                         ?_delay 0080  
                                                         ?_blink 0080  
                                                         _ADCON0 000FC2  
                                                         _ADCON1 000FC1  
                                                         STR_100 7E5E  
                                                         STR_101 7E6D  
                                                         STR_110 7D9A  
                                                         STR_103 7F8A  
                                                         STR_111 7F59  
                                                         STR_104 7F18  
                                                         STR_112 7EF5  
                                                         STR_105 7F6D  
                                                         STR_113 7E8B  
                                                         STR_114 7F9B  
                                                         STR_106 7F4F  
                                                         _ADRESH 000FC4  
                                                         STR_107 7E21  
                                                         STR_108 7D88  
                                                         STR_109 7F63  
                                                         _ADRESL 000FC3  
                                               ___awdiv@dividend 0080  
                                                         ?_timer 0001  
                                                         ?_putch 0001  
                                               __end_of___ftpack 75BA  
                                                 lerTransdutor@i 002A  
                                                ??_drenarPressao 00B5  
                                                      ??i2_delay 0003  
                                         __end_of_comunicarTeste 25EE  
                                                         i2l1315 75B4  
                                                         i2l1326 7594  
                                                         i2l1350 2FEC  
                                                         i2l1353 2E96  
                                                         i2l1417 7A00  
                                                         i2l1364 2F58  
                                                         i2l1373 2F76  
                                                         i2l1349 2E68  
                                                         i2l1381 7918  
                                                         i2l1390 722E  
                                                         i2l1384 78E6  
                                                         i2l1396 3EAE  
                                                         i2l6020 2EFC  
                                                         i2l6022 2F08  
                                                         i2l6014 2ED8  
                                                         i2l6040 2F94  
                                                         i2l6032 2F42  
                                                         i2l6024 2F14  
                                                         i2l6112 3E02  
                                                         i2l6200 79C0  
                                                         i2l6050 2FC6  
                                                         i2l6034 2F4E  
                                                         i2l6026 2F1E  
                                                         i2l6130 3E48  
                                                         i2l6202 79CE  
                                                         i2l6140 3E74  
                                                         i2l6108 3DF2  
                                                         i2l6204 79D6  
                                                         i2l5350 7524  
                                                         i2l6062 786E  
                                                         i2l6126 3E36  
                                                         i2l5246 65E8  
                                                         i2l5360 7588  
                                                         i2l5352 7544  
                                                         i2l5344 7508  
                                                         i2l6152 71CA  
                                                         i2l6136 3E62  
                                                         i2l6208 79EE  
                                                         i2l5248 65FE  
                                                         i2l6066 787E  
                                                         i2l6162 722A  
                                                         i2l6322 2610  
                                                         i2l5356 755C  
                                                         i2l5348 7518  
                                                         i2l6156 71FC  
                                                         i2l6340 26F2  
                                                         i2l6332 2674  
                                                         i2l5358 757C  
                                                         i2l6086 78BE  
                                                         i2l6190 7992  
                                                         i2l6326 261A  
                                                         i2l5390 666E  
                                                         i2l6344 2722  
                                                         _INTCON 000FF2  
                                                         i2l6194 79A4  
                                                         i2l6196 79AC  
                                                         i2l6356 27DE  
                                                         i2l6470 6F9A  
                                                         i2l6480 6FB8  
                                                         i2l6464 6F86  
                                                         i2l6490 6FD6  
                                                         i2l6474 6FA4  
                                                         i2l6484 6FC2  
                                                         i2l7516 0060  
                                                         i2l6494 6FE0  
                                                         i2l6750 3396  
                                                         i2l6742 3368  
                                                         i2l7542 00B4  
                                                         i2l6744 3372  
                                                         i2l6736 3344  
                                                         i2l6754 33B8  
                                                         i2l6738 334E  
                                                         i2l6756 33C2  
                                                         i2l6790 3438  
                                                         i2l6782 3412  
                                                         i2l5992 2E78  
                                                         i2l5998 2EA6  
                                               __end_of___lwtoft 6560  
                                                         u621_41 2E34  
                                                         u622_41 2E48  
                                                         u642_41 784A  
                                                         u644_41 7864  
                                                         u647_41 3DCE  
                                                         u656_41 7930  
                                                      ??_Lcd_Cmd 0081  
                                                         u649_41 3DE8  
                                                         _TMR0IF 007F92  
                                                 __CFG_WDTPS$128 000000  
                              __size_of_partidaBombaEstacionaria 0100  
                                        __size_of_Lcd_Write_Char 004A  
                                                         _SSPADD 000FC8  
                                                         _SSPBUF 000FC9  
                                      ?_partidaBombaEstacionaria 0001  
                                            __size_ofi2_RTC_Init 0032  
                                              ??_ajusteSP_Bombas 00C2  
                                        writeEEPROM16_ext@adress 0008  
                                            _dias_restante_teste 00E8  
                                       ??_configuraRegistradores 0080  
                                                         __b_esc 0060  
                                                         ___ftge 7198  
                                                 _readEEPROM_ext 3FA8  
                                                         ___wmul 66F0  
                                               __end_of_enviaSMS 1BEE  
                                                      ??___awdiv 0084  
                                                   enviaSMS@tipo 00C7  
                                                      ??___ftadd 0021  
                                                      ??___awmod 0084  
                                                      ??___ftdiv 0021  
                                                _getSinalSIM800L 2C38  
                                                      ??___lldiv 0088  
                                                      ??___ftmul 0012  
                                                      ??___fttol 001F  
                                                         _blinkk 00DB  
                                                      ??___lwdiv 0084  
                                                      ??___lwmod 008B  
                                        _habilitaTesteAutomatico 00F0  
                          __end_of_verificarIntervaloTesteBombas 6C4A  
                         __size_of_verificarIntervaloTesteBombas 0050  
                                  _verificarIntervaloTesteBombas 6BFA  
                                        __end_of_writeEEPROM_ext 69E4  
                                                  ?_limparBuffer 0001  
                                                      ??__doprnt 0092  
                                                         _memset 6818  
                                                         delay@x 0080  
                                                         clear_0 6ED8  
                                                         clear_1 6EE4  
                                                         clear_2 6EF0  
                                               ___awdiv@quotient 0086  
                                                         blink@i 0084  
                                                ___awmod@divisor 0082  
                                                      ??_btPress 0080  
                                                  _intToFloatStr 72DE  
                                                   __doprnt@flag 009B  
                                                ___awmod@counter 0084  
                                  setDS1307TimeDate@ptrToUserVal 008C  
                                                         _printf 6AC0  
                                                   __doprnt@prec 0096  
                                                         _strchr 69E4  
                                                         _strlen 6DB6  
                                                         _strstr 7234  
                                                 ?_lerTransdutor 0001  
                                          ___ftmul@f3_as_product 0016  
                                                  dataLoger@logs 00BA  
                                                      ??_readADC 0003  
                                                   __pdataCOMRAM 0076  
                                                      ??_isdigit 0080  
                                                 ?i2_I2C_Restart 0001  
                                                      ?_I2C_Read 0081  
                                                      ?_I2C_Wait 0001  
                                                      ?_I2C_Stop 0001  
                                                   __mediumconst 7AF6  
                                                         tblptrh 000FF7  
                                                         tblptrl 000FF6  
                                                         tblptru 000FF8  
                                                         putch@c 0080  
                                                      ?_BCDtoDEC 0001  
                                                      ??_sprintf 00AF  
                                                      ??_strncmp 008C  
                                                      ?_DECtoBCD 0001  
                                                Lcd_Set_Cursor@a 0084  
                                                Lcd_Set_Cursor@b 0083  
                                                Lcd_Set_Cursor@y 0086  
                                                Lcd_Set_Cursor@z 0085  
                                                ?_comunicarTeste 0001  
                                                     __accesstop 0080  
                                        __end_of__initialization 6EF6  
                                                     ___ftadd@f1 001B  
                                                     ___ftadd@f2 001E  
                                                 _tela_ajusteRTC 2124  
                                                     ___ftge@ff1 0001  
                                                     ___ftge@ff2 0004  
                                              __end_of_Lcd_Clear 649A  
                                               _etapaTesteBombas 006D  
                                                  ___rparam_used 000001  
                                                     ___ftdiv@f1 001B  
                                                     ___ftdiv@f2 001E  
                                                     ___ftdiv@f3 0025  
                                                ??_lerParametros 0094  
                                                  __end_of_TIMER 0100  
                                                     _acaoBombas 319A  
                                         __end_of_readEEPROM_ext 4000  
                                            _telefoneSelecionado 00F7  
                                                     ___ftmul@f1 000C  
                                                     ___ftmul@f2 000F  
                                           __size_ofi2_I2C_Start 000C  
                                                     ___fttol@f1 001B  
                                           __size_ofi2_I2C_Write 000E  
                                               _tela_testeBombas 281A  
                                                 __pcstackCOMRAM 0001  
                                               _status_principal 00FC  
                                                   __pidataBANK0 640C  
                                             __size_of_dataLoger 029A  
                                                  __end_of_delay 66F0  
                                                  __end_of_blink 6B5C  
                                                 ??_limparBuffer 0088  
                                       __size_of_acaoTesteBombas 05C6  
                                                  __end_of_timer 3496  
                                                  __end_of_putch 64AE  
                                                 ?_intToFloatStr 00B5  
                                              ?_readEEPROM16_ext 008E  
                                                      ?_RTC_Init 0001  
                                              intToFloatStr@conv 00BB  
                                                     ___lwtoft@c 0009  
                                                 _tela_menu_posi 0064  
                                             ??_readEEPROM16_ext 0090  
                                           __size_of_readButtons 007E  
                                                 _Lcd_Set_Cursor 3EB4  
                                                        ??_TIMER 0031  
                                                   ??i2_I2C_Read 0004  
                                                     ??_I2C_Read 0083  
                                                   ??i2_I2C_Wait 0001  
                                             __size_of_getSerial 0164  
                                                     ??_I2C_Wait 0080  
                                                   ??i2_I2C_Stop 0002  
                                                     ??_I2C_Stop 0081  
                                           __size_of_informacoes 0090  
                                                   __sec_partida 006B  
                                           __end_of_atualizarLCD 7AF6  
                                                   ??i2_BCDtoDEC 0001  
                                                      ?_Lcd_Init 0001  
                                                     ??_BCDtoDEC 0080  
                                                        ??_delay 0082  
                                                      ?_Lcd_Port 0001  
                                                     __doprnt@ap 0090  
                                                        ??_blink 0084  
                                                     __doprnt@cp 009C  
                                                     __doprnt@pb 008C  
                                          writeEEPROM_ext@adress 008D  
                                                     ??_DECtoBCD 0088  
                                                        ??_timer 0009  
                                                        ??_putch 0080  
                                                     __pbssBANK0 00D9  
                                                     __pbssBANK1 0100  
                                         __end_of_tela_ajusteRTC 23A8  
                                                     __menu_posi 00DE  
                                        __end_of_getSinalSIM800L 2E22  
                                            writeEEPROM_ext@data 008C  
                                                ?_readEEPROM_ext 0001  
                                       __size_of_resetParametros 003A  
                                             __end_ofi2_I2C_Read 667E  
                                                   I2C_Read@temp 0083  
                                             __end_ofi2_I2C_Wait 64DE  
                                                        ?___ftge 0001  
                                             __end_ofi2_I2C_Stop 642C  
                                __size_of_configuraRegistradores 0056  
                                                        ?___wmul 0080  
                                              _writeEEPROM16_ext 6516  
                                             __size_of_salvarLOG 00E2  
                                             __end_ofi2_BCDtoDEC 64C4  
                                                     _flag_b_esc 0061  
                                                     _codigoErro 006E  
                                                        ?_memset 0080  
                                             _configuraTelefones 13E6  
                                               ?_writeEEPROM_ext 008C  
                                             __size_of_validaRTC 004E  
                                                   ??i2_RTC_Init 0004  
                                                ??_lerTransdutor 002A  
                                                     ??_RTC_Init 008C  
                                      __size_of_Lcd_Write_String 0044  
                                             ?_writeEEPROM16_ext 0006  
                                                      ?___ftpack 0001  
                                         __end_of_Lcd_Set_Cursor 3FA8  
                                  criarCaracteresCGRAM@character 0087  
                                                     I2C_Write@d 008A  
                                                        ?_printf 00A1  
                                                ??i2_I2C_Restart 0002  
                                                        ?_strchr 0080  
                                                        ?_strlen 0080  
                                                      ?___lwtoft 0009  
                                                        ?_strstr 008F  
                                                  ??_I2C_Restart 0081  
                                 ?_verificarIntervaloTesteBombas 0001  
                                            ?_configuraTelefones 0001  
                                            ??_writeEEPROM16_ext 0008  
                                                     ??_Lcd_Init 0083  
                                                     ??_Lcd_Port 0080  
                                                        _SSPCON1 000FC6  
                                                        _SSPCON2 000FC5  
                                              __end_of_dataLoger 2124  
                                                        _SSPSTAT 000FC7  
                                           __size_of_setShiftREG 005A  
                                                        i2_delay 65E4  
                                                      ?_enviaSMS 0001  
                                                ?_tela_ajusteRTC 0001  
                                                   _flag_b_menos 005F  
                                                 _Lcd_Write_Char 6A76  
                                                        _Lcd_Cmd 6588  
                                                     _dtl_jockey 0054  
                                             __size_of_writeChar 0010  
                                             __end_ofi2_RTC_Init 6648  
                                                      _I2C_Start 6438  
                                                     _gsmOcupado 00F4  
                                                      _I2C_Write 646A  
                                                _timerReenvioSMS 00F6  
                                           ??_configuraTelefones 00BF  
                                                    ?_acaoBombas 0001  
                                              __end_of_getSerial 35FA  
                                                        __Hparam 0000  
                                                        __Lparam 0000  
                                      __end_of_writeEEPROM16_ext 6538  
                                                _sp_estacionaria 00E1  
                                   __size_ofi2_getDS1307TimeDate 0112  
                                                __size_of___ftge 009C  
                                                        __b_mais 005C  
                                                ??_intToFloatStr 00B7  
                                                        ___awdiv 7684  
                                                        ___ftadd 2E22  
                                                        ___awmod 7440  
                                                        ___ftdiv 7838  
                                                        ___lldiv 75BA  
                                                __size_of___wmul 003A  
                                                        ___ftmul 3DBC  
                                                        ___fttol 791E  
                                                        ___lwdiv 6FFA  
                                                        ___lwmod 6E22  
                                                  atualizarLCD@i 0090  
                                                        __doprnt 0104  
                                                        __pcinit 6E92  
                                                     ??___ftpack 0006  
                                                __size_of_memset 003E  
                                                        _btPress 6F04  
                                                        __ramtop 0600  
                                                ?_Lcd_Set_Cursor 0083  
                                                        __tensao 0048  
                                                        __ptext0 0F96  
                                                        __ptext1 6BFA  
                                                        __ptext2 281A  
                                                        __ptext3 2124  
                                                        __ptext4 6B5C  
                                                        __ptext5 387E  
                                                        __ptext6 6BAA  
                                                        __ptext7 2A3A  
                                                        __ptext8 672A  
                                                        __ptext9 6CF6  
                                      criarCaracteresCGRAM@F2950 7AF7  
                                                __size_of_printf 004E  
                                                     ??___lwtoft 000C  
                                                        _dtl_dia 0059  
                                                        _dtl_ano 0057  
                                                __size_of_strchr 0048  
                                                        _readADC 6560  
                                                __size_of_strlen 006C  
                                                        _dtl_mes 0058  
                                                        _dtl_min 0055  
                                                  i2BCDtoDEC@val 0001  
                                                __size_of_strstr 00AA  
                                                        _dpowers 7B27  
                                           readEEPROM16_ext@data 0091  
                                                        _isdigit 65B4  
                                              ??_acaoTesteBombas 00C8  
                                               ___awmod@dividend 0080  
                                                _ajusteSP_Bombas 1BEE  
                                       __size_of_I2C_Master_Init 0066  
                                               _dtl_carregar_log 0051  
                                         _configuraRegistradores 6CA0  
                                                        _pressao 00F8  
                                                        _sprintf 6C4A  
                                                  __doprnt@width 009E  
                                            __end_of_I2C_Restart 645C  
                                         __end_of_Lcd_Write_Char 6AC0  
                                                        _strncmp 738C  
                                           end_of_initialization 6EF6  
                                              __end_of_salvarLOG 7838  
                                                     ??_enviaSMS 00BB  
                                           __end_of_limparBuffer 67DC  
                                  __size_of_criarCaracteresCGRAM 00F8  
                                              __end_of_validaRTC 6BAA  
                                                        memset@c 0082  
                                                        memset@n 0084  
                                                        memset@p 0086  
                                                  __Lmediumconst 7AF6  
                                                     _timer$1324 0009  
                                                     _timer$1325 000B  
                                                     _timer$1326 000D  
                                                     blink@start 0082  
                                                      i2u1225_47 65F0  
                                                      i2u1226_47 6566  
                                                     ?_I2C_Start 0001  
                                                     ?_I2C_Write 008A  
                                                   writeChar@hex 0080  
                                                   _bufferSerial 0100  
                                               ?_getSinalSIM800L 0001  
                                           _acaoTesteBombas$1311 00D1  
                                           _acaoTesteBombas$1321 00D5  
                                           _acaoTesteBombas$1316 00D3  
                                           _acaoTesteBombas$1295 00CF  
                                           _acaoTesteBombas$2346 00CD  
                                                ___lldiv@divisor 0084  
                                                ___lldiv@counter 008C  
                                       ??_configurarEstacionaria 00B5  
                                                      _RCSTAbits 000FAB  
                                                        printf@f 00A1  
                                               I2C_Master_Init@c 008D  
                                                        postdec1 000FE5  
                                                        postdec2 000FDD  
                                                        postinc0 000FEE  
                                                        postinc2 000FDE  
                                                      Lcd_Port@a 0080  
                                                        strlen@s 0080  
                                              ??_resetParametros 0081  
                                                     getSerial@i 00BC  
                                                      _PORTAbits 000F80  
                                                      _PORTBbits 000F81  
                                                      _PORTCbits 000F82  
                                                      _PORTDbits 000F83  
                                          __size_of_atualizarLCD 00F0  
                                                      _PORTEbits 000F84  
                                              __end_of_writeChar 6488  
                                         __size_of_telaPrincipal 01FE  
                                                      _TRISAbits 000F92  
                                                      _TRISBbits 000F93  
                                                      _TRISCbits 000F94  
                                               ??_comunicarTeste 00BB  
                                                      _TRISDbits 000F95  
                                                      _TRISEbits 000F96  
                                        i2writeEEPROM_ext@adress 0005  
                                            __size_of_acaoBombas 0194  
                                       __end_of_tela_testeBombas 2A3A  
                                              __size_of_I2C_Read 003C  
                                              __size_of_I2C_Wait 001C  
                                              __size_of_I2C_Stop 000C  
                                                ?_Lcd_Write_Char 0001  
                                              Lcd_Write_String@a 0084  
                                              Lcd_Write_String@i 0086  
                                         __size_of_aguardaBuffer 0042  
                                              __size_of_BCDtoDEC 001C  
                                          __end_of_drenarPressao 68D4  
                                              __size_of_DECtoBCD 0050  
                                                    ___ftdiv@exp 0028  
                                                      _TXSTAbits 000FAC  
                                     __size_of_writeEEPROM16_ext 0022  
                                         __size_of_clearShiftREG 003E  
                                               _intensidadeSinal 00FF  
                                                    ___ftmul@exp 0015  
                                                getSerial@length 00BA  
                                                   _atualizarLCD 7A06  
                                                      _Lcd_Clear 6488  
                                                 __end_of___ftge 7234  
                                                 i2I2C_Read@temp 0004  
                                                 __end_of___wmul 672A  
                                             intToFloatStr@F2540 0076  
                                               _Lcd_Write_String 6916  
                                                  __pidataCOMRAM 6407  
                                        __end_of_ajusteSP_Bombas 1E8A  
                                                 __end_of_memset 6856  
                                        salvarLOG@ultimoLogSalvo 008F  
                                                 __end_of_printf 6B0E  
                                              __size_of_RTC_Init 0038  
                                                    _I2C_Restart 6450  
                                                 __end_of_strchr 6A2C  
                                                 __end_of_strlen 6E22  
                                                 __end_of_strstr 72DE  
                                            start_initialization 6E92  
                                                    i2I2C_Read@a 0002  
                                       acaoTesteBombas@intervalo 00D7  
                                          _tela_testeBombas$1409 00B7  
                                             intToFloatStr@valor 00BF  
                                       _partidaBombaEstacionaria 3BC4  
                                      __size_of_readEEPROM16_ext 0044  
                                              __size_of_Lcd_Init 0088  
                                              __size_of_Lcd_Port 004A  
                                               ??_readEEPROM_ext 008C  
                                              ??_I2C_Master_Init 0091  
                                              atualizarLCD@line1 0088  
                                              atualizarLCD@line2 008A  
                                              atualizarLCD@line3 008C  
                                              atualizarLCD@line4 008E  
                                                  ??i2_I2C_Start 0002  
                                                    ??_I2C_Start 0081  
                                                  ??i2_I2C_Write 0004  
                                                  _telaPrincipal 2A3A  
                                                    ??_I2C_Write 008C  
                                          __end_of_lerParametros 373E  
                                                     ?_Lcd_Clear 0001  
                                                       ??___ftge 0007  
                                __size_of_configurarEstacionaria 01A8  
                                                       ??___wmul 0084  
                                                    __doprnt@len 0099  
                                                    __doprnt@val 0097  
                                                    __pdataBANK0 00F8  
                                                  _aguardaBuffer 68D4  
                                                  ??_readButtons 0001  
                                                Lcd_Write_Char@a 0083  
                                                       ??_memset 0086  
                                                Lcd_Write_Char@y 0082  
                                                       ??_printf 00B5  
                                                  ??_informacoes 00B5  
                                                       ??_strchr 0084  
                                                       ??_strlen 0082  
                                                       ??_strstr 0093  
                                              __size_of___ftpack 00C4  
                                                    __pbssCOMRAM 0040  
                                              __size_of___lwtoft 0028  
                                                  _clearShiftREG 6856  
                                                  __pcstackBANK0 0080  
                                          __size_of_limparBuffer 003C  
                                               ??_tela_ajusteRTC 00B5  
                                          lerTransdutor@_pressao 002B  
                                            i2_getDS1307TimeDate 39AC  
                                                   _isdigit$1844 0081  
                                               intToFloatStr@end 00B7  
                                                       ?i2_delay 0001  
                                                       ?_Lcd_Cmd 0001  
                                                      __doprnt@c 00A0  
                                                      __doprnt@f 008E  
                                ??_verificarIntervaloTesteBombas 008E  
                                                 ?_telaPrincipal 0001  
                                                      _dataLoger 1E8A  
                                              __size_of_enviaSMS 0402  
                                                   ??_acaoBombas 00C8  
                                               ___lwdiv@dividend 0080  
                                            lerTransdutor@tensao 002E  
                                               ??_Lcd_Set_Cursor 0084  
                                                      __pintcode 0008  
                                           ?i2_getDS1307TimeDate 0006  
                                                  __pmediumconst 7AF6  
                                                _acaoTesteBombas 09D0  
                                                      _flag_b_ok 005B  
                                            configuraTelefones@i 00C3  
                                                       ?___awdiv 0080  
                                                       ?___ftadd 001B  
                                                       ?___awmod 0080  
                                                 ?_aguardaBuffer 0093  
                                                       ?___ftdiv 001B  
                                            __end_ofi2_I2C_Start 6420  
                                                       ?___lldiv 0080  
                                                       ?___ftmul 000C  
                                                       ?___fttol 001B  
                                            __end_ofi2_I2C_Write 646A  
                                                      _getSerial 3496  
                                          _timerEtapaComunicacao 00F5  
                                                       ?___lwdiv 0080  
                                                       ?___lwmod 0087  
                                                       ?__doprnt 008C  
                                                      _bufferAUX 0190  
                                                      _ajust_tel 00DC  
                                                   _limparBuffer 67A0  
                                           readEEPROM_ext@adress 008C  
                                                       ?_btPress 0001  
                                               ?_ajusteSP_Bombas 0001  
                                          __end_of_lerTransdutor 281A  
                                                       ?_readADC 0001  
                                                    _flag_b_mais 005D  
                                        ?_configuraRegistradores 0001  
                                          __end_ofi2_I2C_Restart 6438  
                                                 __size_of_TIMER 00F8  
                                                       ?_isdigit 0001  
                                                       _I2C_Read 67DC  
                                                 ?_clearShiftREG 0001  
                                                       _I2C_Wait 64DE  
                                                       _I2C_Stop 6444  
                                            __end_of_readButtons 6FFA  
                                                  ??_setShiftREG 0080  
                                       __size_of_writeEEPROM_ext 0046  
                                         _configurarEstacionaria 2FF2  
                                         readEEPROM16_ext@adress 0093  
                                                       _BCDtoDEC 64FA  
                                             __end_of_acaoBombas 332E  
                                            __end_of_informacoes 7198  
                                               ___lwdiv@quotient 0085  
                                                 __size_of_delay 003A  
                                                 __size_of_blink 004E  
                                                       ?_sprintf 00A1  
                                                       ?_strncmp 0086  
                                                       _DECtoBCD 6BAA  
                                                 __size_of_timer 0168  
                                                 __size_of_putch 0014  
                                                      _menu_posi 00DF  
                                                      _horimetro 004B  
                              __end_ofcriarCaracteresCGRAM@F2950 7B27  
                                                 ___wmul@product 0084  
                                                      btPress@bt 0080  
                                                     ?_dataLoger 0001  
                                                      _salvarLOG 7756  
                                                       _PIE1bits 000F9D  
                                                      blink@line 0080  
                                                _sp_pressao_rede 00E4  
                                                      _validaRTC 6B5C  
                                                _resetParametros 672A  
                                               _horario_de_teste 00E7  
                                    __size_of_configuraTelefones 0406  
                                                       Lcd_Cmd@a 0082  
                                                       _PIR1bits 000F9E  
                                                       i2u548_40 666A  
                                                       i2u658_40 795A  
                                                       i2u658_45 7950  
                                          ??i2_getDS1307TimeDate 0008  
                                                    ??_Lcd_Clear 0083  
                                                      _sp_jockey 00E3  
                                            _dtl_posi_visualizar 004F  
                                                     ?_getSerial 00B5  
                                                   setShiftREG@i 0081  
                                   __end_of_criarCaracteresCGRAM 3DBC  
                                          __end_of_intToFloatStr 738C  
                                                       _RTC_Init 667E  
                                 __end_of_configuraRegistradores 6CF6  
                                                     _ADCON0bits 000FC2  
                                              ___wmul@multiplier 0080  
                                                      _totalLogs 0050  
                                               _dtl_estacionaria 0052  
                                               ??_Lcd_Write_Char 0081  
                                                       i2delay@x 0001  
                                      _tempo_limite_estacionaria 00E6  
                                                       _Lcd_Init 7080  
                                              i2_writeEEPROM_ext 6764  
                                                      _writeChar 6478  
                                                       _Lcd_Port 6A2C  
                                              ?_tela_testeBombas 0001  
                                                _tel_selecionado 0066  
                                                      copy_data0 6EA6  
                                                      copy_data1 6EC6  
                                               _readEEPROM16_ext 695A  
                                             ?i2_writeEEPROM_ext 0004  
                                                ??_telaPrincipal 00C2  
                                             ??_tela_testeBombas 00B5  
                                       __end_of_Lcd_Write_String 695A  
                                                    _dtl_posicao 00FA  
                                               __size_ofi2_delay 0032  
                                            __end_of_setShiftREG 6D50  
                                        __end_of_acaoTesteBombas 0F96  
                                               __size_of_Lcd_Cmd 002C  
                                                     ?_salvarLOG 0001  
                                                    i2_I2C_Start 6414  
                                                    i2_I2C_Write 645C  
                                            ??i2_writeEEPROM_ext 0005  
                                            _intervalo_teste_dia 00E9  
                                                     ?_validaRTC 0001  
                                                       __Hrparam 0000  
                                                ??_aguardaBuffer 0095  
                                                       __Lrparam 0000  
                                          criarCaracteresCGRAM@i 00BB  
                                          criarCaracteresCGRAM@j 00BA  
                                          criarCaracteresCGRAM@k 00B9  
                                               __size_of___awdiv 00D2  
                                               __size_of___ftadd 01D0  
                                               __size_of___awmod 00B6  
                                               __size_of___ftdiv 00E6  
                                       __size_of_getSinalSIM800L 01EA  
                                               __size_of___lldiv 00CA  
                                               __size_of___ftmul 00F8  
                                               __size_of___fttol 00E8  
                                                       __b_menos 005E  
                                               __size_of___lwdiv 0086  
                                               __size_of___lwmod 0070  
                                                    _readButtons 6F7C  
                                                       ___ftpack 74F6  
                                               __size_of__doprnt 08CC  
                                                    BCDtoDEC@val 0080  
                                            Lcd_Write_Char@tempp 0081  
                                                ??_clearShiftREG 0080  
                                               __size_of_btPress 0078  
                                     ??_partidaBombaEstacionaria 0083  
                                                intToFloatStr@pr 00C0  
                                                       ___lwtoft 6538  
                                                    _informacoes 7108  
                                           _ajusteSP_Bombas$2348 00C2  
                                                   ?_I2C_Restart 0001  
                                                       _base_sec 006C  
                                                _I2C_Master_Init 6D50  
                                               __size_of_readADC 0028  
                                      __end_ofi2_writeEEPROM_ext 67A0  
                                                 lerParametros@i 0095  
                                                       __sec_aux 006A  
                                                  _tempo_partida 0068  
                                               __size_of_isdigit 0030  
                                                ___lwdiv@divisor 0082  
                                                ___lwdiv@counter 0084  
                                                     ?_writeChar 0080  
                                                       __ptext10 35FA  
                                                       __ptext11 695A  
                                                       __ptext20 2FF2  
                                                       __ptext12 7108  
                                                       __ptext21 13E6  
                                                       __ptext13 2C38  
                                                       __ptext30 09D0  
                                                       __ptext22 23A8  
                                                       __ptext14 3496  
                                                       __ptext31 7756  
                                                       __ptext23 6CA0  
                                                       __ptext15 3ABE  
                                                       __ptext40 6C4A  
                                                       __ptext32 699E  
                                                       __ptext24 7A06  
                                                       __ptext16 373E  
                                                       __ptext41 6856  
                                                       __ptext33 3FA8  
                                                       __ptext25 6916  
                                                       __ptext17 64FA  
                                                       __ptext50 65B4  
                                                       __ptext42 6F04  
                                                       __ptext34 6450  
                                                       __ptext26 6A76  
                                                       __ptext18 1E8A  
                                                       __ptext51 66F0  
                                                       __ptext43 319A  
                                                       __ptext35 67DC  
                                                       __ptext27 3EB4  
                                                       __ptext19 3CC4  
                                                       __ptext60 69E4  
                                                       __ptext52 6E22  
                                                       __ptext44 3BC4  
                                                       __ptext36 72DE  
                                                       __ptext28 1BEE  
                                                       __ptext61 66B6  
                                                       __ptext53 6FFA  
                                                       __ptext45 17EC  
                                                       __ptext37 7440  
                                                       __ptext29 6B0E  
                                                       __ptext70 6A2C  
                                                       __ptext62 667E  
                                                       __ptext54 67A0  
                                                       __ptext46 6478  
                                                       __ptext38 7684  
                                                       __ptext71 6D50  
                                                       __ptext63 646A  
                                                       __ptext55 6818  
                                                       __ptext47 6AC0  
                                                       __ptext39 6894  
                                                       __ptext80 6516  
                                                       __ptext72 75BA  
                                                       __ptext64 6444  
                                                       __ptext56 68D4  
                                                       __ptext48 0104  
                                                       __ptext81 6764  
                                                       __ptext65 6438  
                                                       __ptext57 7234  
                                                       __ptext49 649A  
                                                       __ptext90 6538  
                                                       __ptext82 65E4  
                                                       __ptext74 332E  
                                                       __ptext66 64DE  
                                                       __ptext58 738C  
                                                       __ptext91 791E  
                                                       __ptext83 645C  
                                                       __ptext75 39AC  
                                                       __ptext67 7080  
                                                       __ptext59 6DB6  
                                                       __ptext92 3DBC  
                                                       __ptext84 6420  
                                                       __ptext76 642C  
                                                       __ptext68 6488  
                                                       __ptext93 7198  
                                                       __ptext85 6414  
                                                       __ptext77 6648  
                                                       __ptext69 6588  
                                                       __ptext94 7838  
                                                       __ptext86 64C4  
                                                       __ptext78 64AE  
                                                       __ptext95 2E22  
                                                       __ptext87 6F7C  
                                                       __ptext79 6616  
                                                       __ptext96 74F6  
                                                       __ptext88 25EE  
                                                       __ptext97 0000  
                                                       __ptext89 6560  
                                                       _ajst_rtc 0063  
                                                       _bt_press 007A  
                                               __size_of_sprintf 0056  
                                               acaoTesteBombas@i 00D8  
                                           getSinalSIM800L@sinal 00C8  
                                        __end_of_resetParametros 6764  
                                                       _enviaSMS 17EC  
                                                       _dtl_hora 0056  
                                               __size_of_strncmp 00B4  
                                            _comunicarTeste$1187 00BD  
                                              ??_writeEEPROM_ext 008D  
                                                  __size_of_atoi 0106  
                                                  __size_of_main 0450  
                                                    ??_dataLoger 00B5  
                                            _status_estacionaria 00FB  
                                                     strncmp@len 008A  
                                               _timerTesteBombas 00D9  
                                                       blink@end 0083  
                                                       _tel_posi 00DD  
                                      _criarCaracteresCGRAM$1377 00B7  
                                                       int$flags 007B  
                                                       atoi@sign 00C3  
                                                    ??_getSerial 00B8  
                                             _telaPrincipal$2347 00C2  
                                         __size_of_drenarPressao 0040  
                                                     _INTCONbits 000FF2  
                                                     i2_I2C_Read 6648  
                                                     i2_I2C_Wait 64C4  
                                                     i2_I2C_Stop 6420  
                                                    _setShiftREG 6CF6  
                                                       isdigit@c 0082  
                                                       memset@p1 0080  
                                                     i2_BCDtoDEC 64AE  
                                                    DECtoBCD@res 0089  
                                                    DECtoBCD@val 0088  
                                                       intlevel2 0006  
                                                      sprintf@ap 00AF  
                                                      sprintf@pb 00B1  
                                                      sprintf@wh 00A1  
                                              _ocorrendoIncendio 00F3  
                                           _criarCaracteresCGRAM 3CC4  
                                                      strchr@chr 0082  
                                               ___lwmod@dividend 0087  
                                                      strchr@ptr 0080  
                                               ___lldiv@dividend 0080  
                                i2getDS1307TimeDate@ptrToUserVal 0006  
                                  getDS1307TimeDate@ptrToUserVal 008C  
                                                    ??_salvarLOG 008E  
                                               ?_acaoTesteBombas 0001  
                                        __size_of_comunicarTeste 0246  
                                                    ??_validaRTC 0080  
                                                      strncmp@s1 0086  
                                                      strncmp@s2 0088  
                                                 _dataLoger$1434 00BD  
                                                 _dataLoger$1428 00BB  
                                                 _dataLoger$1439 00BF  
                                               aguardaBuffer@str 0093  
                                              _getDS1307TimeDate 373E  
                                              _setDS1307TimeDate 387E  
                                                       printf@ap 00B5  
                                                       printf@pb 00B7  
                                                   getSerial@end 00B7  
                                                   getSerial@ret 00BD  
                                                   getSerial@str 00B5  
                                        __end_of_I2C_Master_Init 6DB6  
                                             ?_getDS1307TimeDate 008C  
                                             ?_setDS1307TimeDate 008C  
                                             Lcd_Set_Cursor@temp 0087  
                                                     i2_RTC_Init 6616  
                                                       sprintf@f 00A3  
                                        ?_configurarEstacionaria 0001  
                                               ___lldiv@quotient 0088  
                                                    _qtd_leitura 0069  
                                                ___lwmod@divisor 0089  
                                     __size_ofi2_writeEEPROM_ext 003C  
                                                       strlen@cp 0084  
                                                ___lwmod@counter 008B  
                                            ??_getDS1307TimeDate 008E  
                                            ??_setDS1307TimeDate 008E  
                                              ??_getSinalSIM800L 00C6  
                                                   _sp_principal 00E2  
                                                       strstr@s1 008F  
                                                       strstr@s2 0091  
                                                    ??_writeChar 0082  
                                         __size_of_lerParametros 0144  
                                          ?_criarCaracteresCGRAM 0001  
                                               ?_resetParametros 0001  
                                                  _sub_menu_posi 0065  
                                                    _option_posi 00E0  
                                                  _drenarPressao 6894  
                                _tempo_limite_teste_estacionaria 00E5  
                                      __end_of_getDS1307TimeDate 387E  
                                      __end_of_setDS1307TimeDate 39AC  
